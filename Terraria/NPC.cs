using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using Terraria.DataStructures;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.Tile_Entities;
using Terraria.GameContent.UI;
using Terraria.ID;

namespace Terraria
{
	public class NPC : Entity
	{
		public const int MaxMoonLordCountdown = 3600;

		public const int maxBuffs = 5;

		public const int breathMax = 200;

		public readonly static int[,,,] MoonLordAttacksArray;

		public readonly static int[,] MoonLordAttacksArray2;

		public static int MoonLordCountdown;

		public int teleportStyle;

		public float teleportTime;

		public static int immuneTime;

		public static int maxAI;

		public int netSpam;

		public static int goldCritterChance;

		public static int[] killCount;

		public static float waveKills;

		public static int waveCount;

		public bool dripping;

		public bool drippingSlime;

		public short catchItem;

		public short releaseOwner = 255;

		public int rarity;

		public static bool taxCollector;

		public bool[] playerInteraction = new bool[255];

		public float takenDamageMultiplier = 1f;

		private static int spawnSpaceX;

		private static int spawnSpaceY;

		public float gfxOffY;

		public float stepSpeed;

		private static float gravity;

		public bool teleporting;

		private static int maxAttack;

		private static int[] attackNPC;

		public bool stairFall;

		public static int fireFlyFriendly;

		public static int fireFlyChance;

		public static int fireFlyMultiple;

		public static int butterflyChance;

		private byte netStream;

		private byte[] streamPlayer = new byte[255];

		private byte npcNameLookup;

		public Vector2[] oldPos = new Vector2[10];

		public float[] oldRot = new float[10];

		public bool setFrameSize;

		public static int golemBoss;

		public static int plantBoss;

		public static int crimsonBoss;

		public int netSkip;

		public bool netAlways;

		public int realLife = -1;

		public static int sWidth;

		public static int sHeight;

		private static int spawnRangeX;

		private static int spawnRangeY;

		public static int safeRangeX;

		public static int safeRangeY;

		private static int activeRangeX;

		private static int activeRangeY;

		private static int townRangeX;

		private static int townRangeY;

		public float npcSlots = 1f;

		private static bool noSpawnCycle;

		private static int activeTime;

		private static int defaultSpawnRate;

		private static int defaultMaxSpawns;

		public bool dontCountMe;

		public int[] buffType = new int[5];

		public int[] buffTime = new int[5];

		public bool[] buffImmune = new bool[191];

		public bool midas;

		public bool ichor;

		public bool onFire;

		public bool onFire2;

		public bool onFrostBurn;

		public bool poisoned;

		public bool venom;

		public bool shadowFlame;

		public bool soulDrain;

		public int lifeRegen;

		public int lifeRegenCount;

		public bool confused;

		public bool loveStruck;

		public bool stinky;

		public bool dryadWard;

		public bool immortal;

		public bool chaseable = true;

		public bool canGhostHeal = true;

		public bool javelined;

		public bool celled;

		public bool dryadBane;

		public bool daybreak;

		public static bool savedTaxCollector;

		public static bool savedGoblin;

		public static bool savedWizard;

		public static bool savedMech;

		public static bool savedAngler;

		public static bool savedStylist;

		public static bool downedBoss1;

		public static bool downedBoss2;

		public static bool downedBoss3;

		public static bool downedQueenBee;

		public static bool downedSlimeKing;

		public static bool downedGoblins;

		public static bool downedFrost;

		public static bool downedPirates;

		public static bool downedClown;

		public static bool downedPlantBoss;

		public static bool downedGolemBoss;

		public static bool downedMartians;

		public static bool downedFishron;

		public static bool downedHalloweenTree;

		public static bool downedHalloweenKing;

		public static bool downedChristmasIceQueen;

		public static bool downedChristmasTree;

		public static bool downedChristmasSantank;

		public static bool downedAncientCultist;

		public static bool downedMoonlord;

		public static bool downedTowerSolar;

		public static bool downedTowerVortex;

		public static bool downedTowerNebula;

		public static bool downedTowerStardust;

		public static int ShieldStrengthTowerSolar;

		public static int ShieldStrengthTowerVortex;

		public static int ShieldStrengthTowerNebula;

		public static int ShieldStrengthTowerStardust;

		public static bool TowerActiveSolar;

		public static bool TowerActiveVortex;

		public static bool TowerActiveNebula;

		public static bool TowerActiveStardust;

		public static bool LunarApocalypseIsUp;

		public static bool downedMechBossAny;

		public static bool downedMechBoss1;

		public static bool downedMechBoss2;

		public static bool downedMechBoss3;

		private static int spawnRate;

		private static int maxSpawns;

		public int soundDelay;

		public int[] immune = new int[256];

		public int directionY = 1;

		public int type;

		public float[] ai = new float[NPC.maxAI];

		public float[] localAI = new float[NPC.maxAI];

		public int aiAction;

		public int aiStyle;

		public bool justHit;

		public int timeLeft;

		public int target = -1;

		public int damage;

		public int defense;

		public int defDamage;

		public int defDefense;

		public bool coldDamage;

		public bool trapImmune;

		public int soundHit;

		public int soundKilled;

		public int life;

		public int lifeMax;

		public Rectangle targetRect;

		public double frameCounter;

		public Rectangle frame;

		public string displayName;

		public Color color;

		public int alpha;

		public bool hide;

		public float scale = 1f;

		public float knockBackResist = 1f;

		public int oldDirectionY;

		public int oldTarget;

		public float rotation;

		public bool noGravity;

		public bool noTileCollide;

		public bool netUpdate;

		public bool netUpdate2;

		public bool collideX;

		public bool collideY;

		public bool boss;

		public int spriteDirection = -1;

		public bool behindTiles;

		public bool lavaImmune;

		public float @value;

		public float extraValue;

		public bool dontTakeDamage;

		public int netID;

		public bool townNPC;

		public static bool travelNPC;

		public bool homeless;

		public int homeTileX = -1;

		public int homeTileY = -1;

		public bool oldHomeless;

		public int oldHomeTileX = -1;

		public int oldHomeTileY = -1;

		public bool friendly;

		public bool closeDoor;

		public int doorX;

		public int doorY;

		public int friendlyRegen;

		public int breath;

		public int breathCounter;

		public bool reflectingProjectiles;

		public int lastPortalColorIndex;

		public static int[,] cavernMonsterType;

		private static int ignorePlayerInteractions;

		public bool CanTalk
		{
			get
			{
				if (!this.townNPC && this.type != 453 || this.aiStyle != 7)
				{
					return false;
				}
				return this.velocity.Y == 0f;
			}
		}

		public static bool downedTowers
		{
			get
			{
				if (NPC.downedTowerSolar && NPC.downedTowerVortex && NPC.downedTowerNebula)
				{
					return NPC.downedTowerStardust;
				}
				return false;
			}
		}

		public bool HasValidTarget
		{
			get
			{
				if (this.target < 0 || this.target >= 255 || !Main.player[this.target].active)
				{
					return false;
				}
				return !Main.player[this.target].dead;
			}
		}

		public float Opacity
		{
			get
			{
				return 1f - (float)this.alpha / 255f;
			}
			set
			{
				this.alpha = (int)MathHelper.Clamp((1f - value) * 255f, 0f, 255f);
			}
		}

		public static int ShieldStrengthTowerMax
		{
			get
			{
				if (!Main.expertMode)
				{
					return 100;
				}
				return 150;
			}
		}

		public static bool TowersDefeated
		{
			get
			{
				if (NPC.TowerActiveSolar && NPC.TowerActiveVortex && NPC.TowerActiveNebula)
				{
					return NPC.TowerActiveStardust;
				}
				return false;
			}
		}

		static NPC()
		{
			NPC.MoonLordAttacksArray = NPC.InitializeMoonLordAttacks();
			NPC.MoonLordAttacksArray2 = NPC.InitializeMoonLordAttacks2();
			NPC.MoonLordCountdown = 0;
			NPC.immuneTime = 20;
			NPC.maxAI = 4;
			NPC.goldCritterChance = 150;
			NPC.killCount = new int[540];
			NPC.waveKills = 0f;
			NPC.waveCount = 0;
			NPC.taxCollector = false;
			NPC.spawnSpaceX = 3;
			NPC.spawnSpaceY = 3;
			NPC.gravity = 0.3f;
			NPC.maxAttack = 20;
			NPC.attackNPC = new int[NPC.maxAttack];
			NPC.fireFlyFriendly = 0;
			NPC.fireFlyChance = 0;
			NPC.fireFlyMultiple = 0;
			NPC.butterflyChance = 0;
			NPC.golemBoss = -1;
			NPC.plantBoss = -1;
			NPC.crimsonBoss = -1;
			NPC.sWidth = 1920;
			NPC.sHeight = 1080;
			NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
			NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
			NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
			NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
			NPC.activeRangeX = (int)((double)NPC.sWidth * 2.1);
			NPC.activeRangeY = (int)((double)NPC.sHeight * 2.1);
			NPC.townRangeX = NPC.sWidth;
			NPC.townRangeY = NPC.sHeight;
			NPC.noSpawnCycle = false;
			NPC.activeTime = 750;
			NPC.defaultSpawnRate = 600;
			NPC.defaultMaxSpawns = 5;
			NPC.savedTaxCollector = false;
			NPC.savedGoblin = false;
			NPC.savedWizard = false;
			NPC.savedMech = false;
			NPC.savedAngler = false;
			NPC.savedStylist = false;
			NPC.downedBoss1 = false;
			NPC.downedBoss2 = false;
			NPC.downedBoss3 = false;
			NPC.downedQueenBee = false;
			NPC.downedSlimeKing = false;
			NPC.downedGoblins = false;
			NPC.downedFrost = false;
			NPC.downedPirates = false;
			NPC.downedClown = false;
			NPC.downedPlantBoss = false;
			NPC.downedGolemBoss = false;
			NPC.downedMartians = false;
			NPC.downedFishron = false;
			NPC.downedHalloweenTree = false;
			NPC.downedHalloweenKing = false;
			NPC.downedChristmasIceQueen = false;
			NPC.downedChristmasTree = false;
			NPC.downedChristmasSantank = false;
			NPC.downedAncientCultist = false;
			NPC.downedMoonlord = false;
			NPC.downedTowerSolar = false;
			NPC.downedTowerVortex = false;
			NPC.downedTowerNebula = false;
			NPC.downedTowerStardust = false;
			NPC.ShieldStrengthTowerSolar = 0;
			NPC.ShieldStrengthTowerVortex = 0;
			NPC.ShieldStrengthTowerNebula = 0;
			NPC.ShieldStrengthTowerStardust = 0;
			NPC.TowerActiveSolar = false;
			NPC.TowerActiveVortex = false;
			NPC.TowerActiveNebula = false;
			NPC.TowerActiveStardust = false;
			NPC.LunarApocalypseIsUp = false;
			NPC.downedMechBossAny = false;
			NPC.downedMechBoss1 = false;
			NPC.downedMechBoss2 = false;
			NPC.downedMechBoss3 = false;
			NPC.spawnRate = NPC.defaultSpawnRate;
			NPC.maxSpawns = NPC.defaultMaxSpawns;
			NPC.travelNPC = false;
			NPC.cavernMonsterType = new int[2, 3];
			NPC.ignorePlayerInteractions = 0;
		}

		public NPC()
		{
		}

		public void AddBuff(int type, int time, bool quiet = false)
		{
			if (this.buffImmune[type])
			{
				return;
			}
			if (!quiet)
			{
				if (Main.netMode == 1)
				{
					NetMessage.SendData(53, -1, -1, "", this.whoAmI, (float)type, (float)time, 0f, 0, 0, 0);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			int num = -1;
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] == type)
				{
					if (this.buffTime[i] < time)
					{
						this.buffTime[i] = time;
					}
					return;
				}
			}
			while (num == -1)
			{
				int num1 = -1;
				int num2 = 0;
				while (num2 < 5)
				{
					if (Main.debuff[this.buffType[num2]])
					{
						num2++;
					}
					else
					{
						num1 = num2;
						break;
					}
				}
				if (num1 == -1)
				{
					return;
				}
				int num3 = num1;
				while (num3 < 5)
				{
					if (this.buffType[num3] != 0)
					{
						num3++;
					}
					else
					{
						num = num3;
						break;
					}
				}
				if (num != -1)
				{
					continue;
				}
				this.DelBuff(num1);
			}
			this.buffType[num] = type;
			this.buffTime[num] = time;
		}

		public void AI()
		{
			Vector2 vector2 = new Vector2();
			Vector2 vector21 = new Vector2();
			Vector2 vector22 = new Vector2();
			int num = 0;
			int num1 = 0;
			int num2 = 0;
			bool flag;
			Vector2 vector23 = new Vector2();
			int x;
			int x1;
			int num3;
			float single;
			Vector2 center;
			Vector2 y;
			int num4;
			int num5;
			bool flag1;
			Color skyBlue;
			int num6;
			int[] numArray;
			float single1;
			Vector2 vector24;
			int num7;
			int num8;
			int num9;
			int num10;
			bool flag2;
			bool flag3;
			bool flag4;
			bool flag5;
			object obj;
			object obj1;
			object obj2;
			object obj3;
			if (this.aiStyle == 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].talkNPC == this.whoAmI)
					{
						if (this.type == 105)
						{
							this.Transform(107);
							return;
						}
						if (this.type == 106)
						{
							this.Transform(108);
							return;
						}
						if (this.type == 123)
						{
							this.Transform(124);
							return;
						}
						if (this.type == 354)
						{
							this.Transform(353);
							return;
						}
						if (this.type == 376)
						{
							this.Transform(369);
							return;
						}
					}
				}
				if (this.type != 376)
				{
					this.TargetClosest(true);
					this.spriteDirection = this.direction;
				}
				if (this.type != 376)
				{
					this.velocity.X = this.velocity.X * 0.93f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
						return;
					}
				}
				else if (this.wet || Main.tile[(int)(base.Center.X / 16f), (int)(this.position.Y - 4f) / 16].liquid > 0)
				{
					this.velocity.Y = -0.4f;
					int num11 = 1;
					if (base.Center.X / 16f > (float)(Main.maxTilesX / 2))
					{
						num11 = -1;
					}
					int num12 = 12;
					int x2 = (int)base.Center.X / 16;
					int y1 = (int)base.Center.Y / 16;
					bool flag6 = false;
					if (num11 <= 0)
					{
						for (int j = x2; j > x2 - num12; j--)
						{
							if (WorldGen.SolidTile(j, y1))
							{
								flag6 = true;
							}
						}
					}
					else
					{
						for (int k = x2; k < x2 + num12; k++)
						{
							if (WorldGen.SolidTile(k, y1))
							{
								flag6 = true;
							}
						}
					}
					if (!flag6)
					{
						this.velocity.X = this.velocity.X + (float)num11 * 0.01f;
						if (this.velocity.X > 0.2f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (this.velocity.X < -0.2f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
							return;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.99f;
						if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
						{
							this.velocity.X = 0f;
							return;
						}
					}
				}
				else
				{
					this.velocity.X = this.velocity.X * 0.93f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
						return;
					}
				}
			}
			else if (this.aiStyle == 1)
			{
				if (this.type == 1 && (this.ai[1] == 1f || this.ai[1] == 2f || this.ai[1] == 3f))
				{
					this.ai[1] = -1f;
				}
				if (this.type == 1 && this.ai[1] == 0f && Main.netMode != 1 && this.@value > 0f)
				{
					this.ai[1] = -1f;
					if (Main.rand.Next(20) == 0)
					{
						int num13 = Main.rand.Next(4);
						if (num13 == 0)
						{
							num13 = Main.rand.Next(7);
							if (num13 == 0)
							{
								num13 = 290;
							}
							else if (num13 == 1)
							{
								num13 = 292;
							}
							else if (num13 == 2)
							{
								num13 = 296;
							}
							else if (num13 != 3)
							{
								num13 = (Main.netMode == 0 || Main.rand.Next(2) != 0 ? 2350 : 2997);
							}
							else
							{
								num13 = 2322;
							}
						}
						else if (num13 == 1)
						{
							num13 = Main.rand.Next(4);
							if (num13 == 0)
							{
								num13 = 8;
							}
							else if (num13 != 1)
							{
								num13 = (num13 != 2 ? 58 : 965);
							}
							else
							{
								num13 = 166;
							}
						}
						else if (num13 != 2)
						{
							num13 = Main.rand.Next(3);
							if (num13 != 0)
							{
								num13 = (num13 != 1 ? 73 : 72);
							}
							else
							{
								num13 = 71;
							}
						}
						else
						{
							num13 = (Main.rand.Next(2) != 0 ? Main.rand.Next(699, 703) : Main.rand.Next(11, 15));
						}
						this.ai[1] = (float)num13;
						this.netUpdate = true;
					}
				}
				if (this.type == 244)
				{
					float discoR = (float)Main.DiscoR / 255f;
					float discoG = (float)Main.DiscoG / 255f;
					float discoB = (float)Main.DiscoB / 255f;
					discoR = discoR * 1f;
					discoG = discoG * 1f;
					discoB = discoB * 1f;
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), discoR, discoG, discoB);
					this.color.R = (byte)Main.DiscoR;
					this.color.G = (byte)Main.DiscoG;
					this.color.B = (byte)Main.DiscoB;
					this.color.A = 100;
					this.alpha = 175;
				}
				bool flag7 = false;
				if (!Main.dayTime || this.life != this.lifeMax || (double)this.position.Y > Main.worldSurface * 16 || Main.slimeRain)
				{
					flag7 = true;
				}
				if (this.type == 81)
				{
					flag7 = true;
					if (Main.rand.Next(30) == 0)
					{
						int num14 = Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						Dust dust = Main.dust[num14];
						dust.velocity = dust.velocity * 0.3f;
					}
				}
				if ((this.type == 377 || this.type == 446) && this.target != 255 && !Main.player[this.target].dead && Vector2.Distance(base.Center, Main.player[this.target].Center) <= 200f)
				{
					flag7 = true;
				}
				if (this.type == 183)
				{
					flag7 = true;
				}
				if (this.type == 304)
				{
					flag7 = true;
				}
				if (this.type == 147 && Main.rand.Next(10) == 0)
				{
					Vector2 vector25 = this.position;
					int num15 = this.width;
					int num16 = this.height;
					skyBlue = new Color();
					int num17 = Dust.NewDust(vector25, num15, num16, 76, 0f, 0f, 0, skyBlue, 1f);
					Main.dust[num17].noGravity = true;
					Dust dust1 = Main.dust[num17];
					dust1.velocity = dust1.velocity * 0.1f;
				}
				if (this.type == 244)
				{
					flag7 = true;
					this.ai[0] = this.ai[0] + 2f;
				}
				if (this.type == 184)
				{
					if (Main.rand.Next(8) == 0)
					{
						Vector2 vector26 = this.position - this.velocity;
						int num18 = this.width;
						int num19 = this.height;
						skyBlue = new Color();
						int num20 = Dust.NewDust(vector26, num18, num19, 76, 0f, 0f, 0, skyBlue, 1f);
						Main.dust[num20].noGravity = true;
						Dust dust2 = Main.dust[num20];
						dust2.velocity = dust2.velocity * 0.15f;
					}
					flag7 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] = this.localAI[0] - 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector27 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float single2 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector27.X;
						float y2 = Main.player[this.target].position.Y - vector27.Y;
						float single3 = (float)Math.Sqrt((double)(single2 * single2 + y2 * y2));
						if (Main.expertMode && single3 < 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int l = 0; l < 5; l++)
								{
									Vector2 vector28 = new Vector2((float)(l - 2), -4f);
									vector28.Normalize();
									vector28 = vector28 * (4f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Projectile.NewProjectile(vector27.X, vector27.Y, vector28.X, vector28.Y, 174, 9, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 30f;
								}
							}
						}
						else if (single3 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								y2 = Main.player[this.target].position.Y - vector27.Y - (float)Main.rand.Next(0, 200);
								single3 = (float)Math.Sqrt((double)(single2 * single2 + y2 * y2));
								single3 = 4.5f / single3;
								single2 = single2 * single3;
								y2 = y2 * single3;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector27.X, vector27.Y, single2, y2, 174, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 535)
				{
					flag7 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] = this.localAI[0] - 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x3 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector29.X;
						float y3 = Main.player[this.target].position.Y - vector29.Y;
						float single4 = (float)Math.Sqrt((double)(x3 * x3 + y3 * y3));
						if (Main.expertMode && single4 < 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int m = 0; m < 5; m++)
								{
									Vector2 vector210 = new Vector2((float)(m - 2), -4f);
									vector210.Normalize();
									vector210 = vector210 * (4f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Projectile.NewProjectile(vector29.X, vector29.Y, vector210.X, vector210.Y, 605, 9, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 30f;
								}
							}
						}
						else if (single4 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								y3 = Main.player[this.target].position.Y - vector29.Y - (float)Main.rand.Next(0, 200);
								single4 = (float)Math.Sqrt((double)(x3 * x3 + y3 * y3));
								single4 = 4.5f / single4;
								x3 = x3 * single4;
								y3 = y3 * single4;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector29.X, vector29.Y, x3, y3, 605, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 204)
				{
					flag7 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] = this.localAI[0] - 1f;
					}
					if (!this.wet && !Main.player[this.target].npcTypeNoAggro[this.type])
					{
						Vector2 vector211 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x4 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector211.X;
						float y4 = Main.player[this.target].position.Y - vector211.Y;
						float single5 = (float)Math.Sqrt((double)(x4 * x4 + y4 * y4));
						if (Main.expertMode && single5 < 200f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								for (int n = 0; n < 5; n++)
								{
									Vector2 vector212 = new Vector2((float)(n - 2), -2f);
									vector212.Normalize();
									vector212 = vector212 * (3f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Projectile.NewProjectile(vector211.X, vector211.Y, vector212.X, vector212.Y, 176, 13, 0f, Main.myPlayer, 0f, 0f);
									this.localAI[0] = 80f;
								}
							}
						}
						if (single5 < 400f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -80f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								y4 = Main.player[this.target].position.Y - vector211.Y - (float)Main.rand.Next(-30, 20);
								y4 = y4 - single5 * 0.05f;
								x4 = Main.player[this.target].position.X - vector211.X - (float)Main.rand.Next(-20, 20);
								single5 = (float)Math.Sqrt((double)(x4 * x4 + y4 * y4));
								single5 = 7f / single5;
								x4 = x4 * single5;
								y4 = y4 * single5;
								this.localAI[0] = 65f;
								Projectile.NewProjectile(vector211.X, vector211.Y, x4, y4, 176, 13, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 377 || this.type == 446)
				{
					if (this.localAI[2] >= 90f)
					{
						this.friendly = false;
					}
					else
					{
						this.localAI[2] = this.localAI[2] + 1f;
					}
				}
				if (this.type == 59)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
					Vector2 vector213 = new Vector2(this.position.X, this.position.Y);
					int num21 = this.width;
					int num22 = this.height;
					skyBlue = new Color();
					int num23 = Dust.NewDust(vector213, num21, num22, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 1.7f);
					Main.dust[num23].noGravity = true;
				}
				if (this.ai[2] > 1f)
				{
					this.ai[2] = this.ai[2] - 1f;
				}
				if (this.wet)
				{
					if (this.collideY)
					{
						this.velocity.Y = -2f;
					}
					if (this.velocity.Y < 0f && this.ai[3] == this.position.X)
					{
						NPC nPC = this;
						nPC.direction = nPC.direction * -1;
						this.ai[2] = 200f;
					}
					if (this.velocity.Y > 0f)
					{
						this.ai[3] = this.position.X;
					}
					if (this.type != 59)
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					else
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						else if (this.directionY < 0)
						{
							this.velocity.Y = this.velocity.Y - 0.8f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
					}
					if (this.ai[2] == 1f && flag7)
					{
						this.TargetClosest(true);
					}
				}
				this.aiAction = 0;
				if (this.ai[2] == 0f)
				{
					this.ai[0] = -100f;
					this.ai[2] = 1f;
					this.TargetClosest(true);
				}
				if (this.velocity.Y == 0f)
				{
					if (this.ai[3] == this.position.X)
					{
						NPC nPC1 = this;
						nPC1.direction = nPC1.direction * -1;
						this.ai[2] = 200f;
					}
					this.ai[3] = 0f;
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (flag7)
					{
						this.ai[0] = this.ai[0] + 1f;
					}
					this.ai[0] = this.ai[0] + 1f;
					if (this.type == 59)
					{
						this.ai[0] = this.ai[0] + 2f;
					}
					if (this.type == 71)
					{
						this.ai[0] = this.ai[0] + 3f;
					}
					if (this.type == 138)
					{
						this.ai[0] = this.ai[0] + 2f;
					}
					if (this.type == 183)
					{
						this.ai[0] = this.ai[0] + 1f;
					}
					if (this.type == 304)
					{
						float single6 = (float)((1 - this.life / this.lifeMax) * 10);
						this.ai[0] = this.ai[0] + single6;
					}
					if (this.type == 377 || this.type == 446)
					{
						this.ai[0] = this.ai[0] + 3f;
					}
					if (this.type == 81)
					{
						if (this.scale < 0f)
						{
							this.ai[0] = this.ai[0] + 1f;
						}
						else
						{
							this.ai[0] = this.ai[0] + 4f;
						}
					}
					int num24 = 0;
					if (this.ai[0] >= 0f)
					{
						num24 = 1;
					}
					if (this.ai[0] >= -1000f && this.ai[0] <= -500f)
					{
						num24 = 2;
					}
					if (this.ai[0] >= -2000f && this.ai[0] <= -1500f)
					{
						num24 = 3;
					}
					if (num24 > 0)
					{
						this.netUpdate = true;
						if (flag7 && this.ai[2] == 1f)
						{
							this.TargetClosest(true);
						}
						if (num24 != 3)
						{
							this.velocity.Y = -6f;
							this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							}
							this.ai[0] = -120f;
							if (num24 != 1)
							{
								this.ai[0] = this.ai[0] - 2000f;
							}
							else
							{
								this.ai[0] = this.ai[0] - 1000f;
							}
						}
						else
						{
							this.velocity.Y = -8f;
							if (this.type == 59)
							{
								this.velocity.Y = this.velocity.Y - 2f;
							}
							this.velocity.X = this.velocity.X + (float)(3 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + 0.5f * (float)this.direction;
							}
							this.ai[0] = -200f;
							this.ai[3] = this.position.X;
						}
						if (this.type == 141)
						{
							this.velocity.Y = this.velocity.Y * 1.3f;
							this.velocity.X = this.velocity.X * 1.2f;
						}
						if (this.type == 377 || this.type == 446)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
							this.velocity.X = this.velocity.X * 0.6f;
							if (flag7)
							{
								this.direction = -this.direction;
								this.velocity.X = this.velocity.X * -1f;
								return;
							}
						}
					}
					else if (this.ai[0] >= -30f)
					{
						this.aiAction = 1;
						return;
					}
				}
				else if (this.target < 255 && (this.direction == 1 && this.velocity.X < 3f || this.direction == -1 && this.velocity.X > -3f))
				{
					if ((this.direction != -1 || (double)this.velocity.X >= 0.1) && (this.direction != 1 || (double)this.velocity.X <= -0.1))
					{
						this.velocity.X = this.velocity.X * 0.93f;
						return;
					}
					this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
					return;
				}
			}
			else if (this.aiStyle == 2)
			{
				if ((this.type == 170 || this.type == 171 || this.type == 180) && Main.rand.Next(1000) == 0)
				{
					Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 9);
				}
				this.noGravity = true;
				if (!this.noTileCollide)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
				}
				if (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16 || this.type != 2 && this.type != 133 && this.type != 190 && this.type != 191 && this.type != 192 && this.type != 193 && this.type != 194 && this.type != 317 && this.type != 318)
				{
					this.TargetClosest(true);
				}
				else
				{
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					this.directionY = -1;
					if (this.velocity.Y > 0f)
					{
						this.direction = 1;
					}
					this.direction = -1;
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
				}
				if (this.type == 170 || this.type == 171 || this.type == 180)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						if (this.ai[1] > 0f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[1] = 0f;
							this.ai[0] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[0] = this.ai[0] + 1f;
					}
					if (this.ai[0] >= 300f)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (this.ai[1] != 0f)
					{
						this.wet = false;
						this.alpha = 200;
						this.noTileCollide = true;
					}
					else
					{
						this.alpha = 0;
						this.noTileCollide = false;
					}
					this.rotation = this.velocity.Y * 0.1f * (float)this.direction;
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -4f && this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
					{
						this.velocity.X = this.velocity.X - 0.08f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.04f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f && this.position.X + (float)this.width < Main.player[this.target].position.X)
					{
						this.velocity.X = this.velocity.X + 0.08f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.04f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5 && this.position.Y > Main.player[this.target].position.Y + (float)Main.player[this.target].height)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5 && this.position.Y + (float)this.height < Main.player[this.target].position.Y)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else if (this.type == 116)
				{
					this.TargetClosest(true);
					Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
					if (this.direction == -1 && this.velocity.X > -6f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 6f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
					if (Main.rand.Next(40) == 0)
					{
						Vector2 vector214 = new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f);
						int num25 = this.width;
						int num26 = (int)((float)this.height * 0.5f);
						float x5 = this.velocity.X;
						skyBlue = new Color();
						int num27 = Dust.NewDust(vector214, num25, num26, 5, x5, 2f, 0, skyBlue, 1f);
						Main.dust[num27].velocity.X = Main.dust[num27].velocity.X * 0.5f;
						Main.dust[num27].velocity.Y = Main.dust[num27].velocity.Y * 0.1f;
					}
				}
				else if (this.type != 133)
				{
					float single7 = 4f;
					float single8 = 1.5f;
					single7 = single7 * (1f + (1f - this.scale));
					single8 = single8 * (1f + (1f - this.scale));
					if (this.direction == -1 && this.velocity.X > -single7)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > single7)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -single7)
						{
							this.velocity.X = -single7;
						}
					}
					else if (this.direction == 1 && this.velocity.X < single7)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -single7)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > single7)
						{
							this.velocity.X = single7;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -single8)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if (this.velocity.Y > single8)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if (this.velocity.Y < -single8)
						{
							this.velocity.Y = -single8;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < single8)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if (this.velocity.Y < -single8)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if (this.velocity.Y > single8)
						{
							this.velocity.Y = single8;
						}
					}
				}
				else if ((double)this.life >= (double)this.lifeMax * 0.5)
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = -1.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = 1.5f;
						}
					}
				}
				else
				{
					if (this.direction == -1 && this.velocity.X > -6f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 6f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -4f)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < 4f)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
						}
					}
				}
				if ((this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194) && Main.rand.Next(40) == 0)
				{
					Vector2 vector215 = new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f);
					int num28 = this.width;
					int num29 = (int)((float)this.height * 0.5f);
					float x6 = this.velocity.X;
					skyBlue = new Color();
					int num30 = Dust.NewDust(vector215, num28, num29, 5, x6, 2f, 0, skyBlue, 1f);
					Main.dust[num30].velocity.X = Main.dust[num30].velocity.X * 0.5f;
					Main.dust[num30].velocity.Y = Main.dust[num30].velocity.Y * 0.1f;
				}
				if (this.wet && this.type != 170 && this.type != 171 && this.type != 172)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				if (this.type == 466)
				{
					int num31 = 200;
					if (this.ai[2] == 0f)
					{
						this.alpha = num31;
						this.TargetClosest(true);
						if (!Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() < 170f)
						{
							this.ai[2] = -16f;
						}
						if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.justHit)
						{
							this.ai[2] = -16f;
						}
						return;
					}
					if (this.ai[2] < 0f)
					{
						if (this.alpha > 0)
						{
							NPC nPC2 = this;
							nPC2.alpha = nPC2.alpha - num31 / 16;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
						}
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] == 0f)
						{
							this.ai[2] = 1f;
							this.velocity.X = (float)(this.direction * 2);
						}
						return;
					}
					this.alpha = 0;
				}
				if (this.type == 166)
				{
					if (Main.netMode != 1 && Main.rand.Next(240) == 0)
					{
						this.ai[2] = (float)Main.rand.Next(-480, -60);
						this.netUpdate = true;
					}
					if (this.ai[2] < 0f)
					{
						this.TargetClosest(true);
						if (this.justHit)
						{
							this.ai[2] = 0f;
						}
						if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = 0f;
						}
					}
					if (this.ai[2] < 0f)
					{
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] == 0f)
						{
							this.velocity.X = (float)this.direction * 0.1f;
						}
						return;
					}
				}
				if (this.type == 461)
				{
					if (this.wet)
					{
						this.knockBackResist = 0f;
						this.ai[3] = -0.10101f;
						this.noGravity = true;
						Vector2 center1 = base.Center;
						this.width = 34;
						this.height = 24;
						this.position.X = center1.X - (float)(this.width / 2);
						this.position.Y = center1.Y - (float)(this.height / 2);
						this.TargetClosest(true);
						if (this.collideX)
						{
							this.velocity.X = -this.oldVelocity.X;
						}
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].Center, 1, 1))
						{
							Vector2 center2 = Main.player[this.target].Center - base.Center;
							center2.Normalize();
							center2 = center2 * 5f;
							this.velocity = ((this.velocity * 19f) + center2) / 20f;
							return;
						}
						float single9 = 5f;
						if (this.velocity.Y > 0f)
						{
							single9 = 3f;
						}
						if (this.velocity.Y < 0f)
						{
							single9 = 8f;
						}
						Vector2 vector216 = new Vector2((float)this.direction, -1f);
						vector216.Normalize();
						vector216 = vector216 * single9;
						if (single9 < 5f)
						{
							this.velocity = ((this.velocity * 24f) + vector216) / 25f;
							return;
						}
						this.velocity = ((this.velocity * 9f) + vector216) / 10f;
						return;
					}
					this.knockBackResist = 0.4f * Main.knockBackMultiplier;
					this.noGravity = false;
					Vector2 center3 = base.Center;
					this.width = 18;
					this.height = 40;
					this.position.X = center3.X - (float)(this.width / 2);
					this.position.Y = center3.Y - (float)(this.height / 2);
					if (this.ai[3] == -0.10101f)
					{
						this.ai[3] = 0f;
						float single10 = this.velocity.Length();
						single10 = single10 * 2f;
						if (single10 > 10f)
						{
							single10 = 10f;
						}
						this.velocity.Normalize();
						NPC nPC3 = this;
						nPC3.velocity = nPC3.velocity * single10;
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						this.spriteDirection = this.direction;
					}
				}
				if (this.type == 379 || this.type == 380)
				{
					if (this.ai[3] < 0f)
					{
						this.damage = 0;
						this.velocity.X = this.velocity.X * 0.93f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						int num32 = (int)(-this.ai[3] - 1f);
						int num33 = Math.Sign(Main.npc[num32].Center.X - base.Center.X);
						if (num33 != this.direction)
						{
							this.velocity.X = 0f;
							this.direction = num33;
							this.netUpdate = true;
						}
						if (this.justHit && Main.netMode != 1 && Main.npc[num32].localAI[0] == 0f)
						{
							Main.npc[num32].localAI[0] = 1f;
						}
						return;
					}
					this.damage = this.defDamage;
				}
				if (this.type == 383 && this.ai[2] == 0f && this.localAI[0] == 0f && Main.netMode != 1)
				{
					int num34 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 384, this.whoAmI, 0f, 0f, 0f, 0f, 255);
					this.ai[2] = (float)(num34 + 1);
					this.localAI[0] = -1f;
					this.netUpdate = true;
					Main.npc[num34].ai[0] = (float)this.whoAmI;
					Main.npc[num34].netUpdate = true;
				}
				if (this.type == 383)
				{
					int num35 = (int)this.ai[2] - 1;
					if (num35 == -1 || !Main.npc[num35].active || Main.npc[num35].type != 384)
					{
						this.dontTakeDamage = false;
						this.ai[2] = 0f;
						if (this.localAI[0] == -1f)
						{
							this.localAI[0] = 180f;
						}
						if (this.localAI[0] > 0f)
						{
							this.localAI[0] = this.localAI[0] - 1f;
						}
					}
					else
					{
						this.dontTakeDamage = true;
					}
				}
				if (this.type == 482)
				{
					int num36 = 300;
					int num37 = 120;
					this.dontTakeDamage = false;
					if (this.ai[2] < 0f)
					{
						this.dontTakeDamage = true;
						this.ai[2] = this.ai[2] + 1f;
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)Math.Abs(this.velocity.X) < 0.001)
						{
							this.velocity.X = 0.001f * (float)this.direction;
						}
						if (Math.Abs(this.velocity.Y) > 1f)
						{
							this.ai[2] = this.ai[2] + 10f;
						}
						if (this.ai[2] >= 0f)
						{
							this.netUpdate = true;
							this.velocity.X = this.velocity.X + (float)this.direction * 0.3f;
						}
						return;
					}
					if (this.ai[2] < (float)num36)
					{
						if (this.justHit)
						{
							this.ai[2] = this.ai[2] + 15f;
						}
						this.ai[2] = this.ai[2] + 1f;
					}
					else if (this.velocity.Y == 0f)
					{
						this.ai[2] = (float)(-num37);
						this.netUpdate = true;
					}
				}
				if (this.type == 480)
				{
					int num38 = 180;
					int num39 = 300;
					int num40 = 180;
					int num41 = 60;
					int num42 = 15;
					if (this.life < this.lifeMax / 3)
					{
						num38 = 120;
						num39 = 240;
						num40 = 240;
						num41 = 90;
					}
					if (this.ai[2] > 0f)
					{
						this.ai[2] = this.ai[2] - 1f;
					}
					else if (this.ai[2] != 0f)
					{
						if (this.ai[2] < 0f && this.ai[2] < (float)(-num40))
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if (this.velocity.Y < -2f || this.velocity.Y > 4f || this.justHit)
							{
								this.ai[2] = (float)num38;
								return;
							}
							this.ai[2] = this.ai[2] + 1f;
							if (this.ai[2] == 0f)
							{
								this.ai[2] = (float)num39;
							}
							return;
						}
						if (this.ai[2] < 0f && this.ai[2] >= (float)(-num40))
						{
							this.velocity.X = this.velocity.X * 0.9f;
							if (this.velocity.Y < -2f || this.velocity.Y > 4f || this.justHit)
							{
								this.ai[2] = (float)num38;
							}
							else
							{
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] == 0f)
								{
									this.ai[2] = (float)num39;
								}
							}
							if (Main.netMode != 2)
							{
								Player player = Main.player[Main.myPlayer];
								int num43 = Main.myPlayer;
								if (!player.dead && player.active && player.HasBuff(156) == -1 && (player.Center - base.Center).Length() < 1000f && (player.Center.X < base.Center.X && this.direction < 0 && player.direction > 0 || player.Center.X > base.Center.X && this.direction > 0 && player.direction < 0) && Collision.CanHit(base.Center, 1, 1, player.Center, 1, 1))
								{
									player.AddBuff(156, num41 + (int)this.ai[2] * -1, true);
								}
							}
							return;
						}
					}
					else if ((Main.player[this.target].Center.X < base.Center.X && this.direction < 0 || Main.player[this.target].Center.X > base.Center.X && this.direction > 0) && this.velocity.Y == 0f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
					{
						this.ai[2] = (float)(-num40 - num42);
						this.netUpdate = true;
					}
				}
				if (this.type == 471)
				{
					if (this.ai[3] >= 0f)
					{
						this.localAI[3] = 0f;
						this.knockBackResist = 0.35f * Main.knockBackMultiplier;
						NPC nPC4 = this;
						nPC4.rotation = nPC4.rotation * 0.9f;
						this.defense = this.defDefense;
						this.noGravity = false;
						this.noTileCollide = false;
					}
					else
					{
						this.knockBackResist = 0f;
						this.defense = (int)((double)this.defDefense * 1.1);
						this.noGravity = true;
						this.noTileCollide = true;
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						else if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						this.rotation = this.velocity.X * 0.1f;
						if (Main.netMode != 1)
						{
							this.localAI[3] = this.localAI[3] + 1f;
							if (this.localAI[3] > (float)Main.rand.Next(20, 180))
							{
								this.localAI[3] = 0f;
								Vector2 center4 = base.Center;
								center4 = center4 + this.velocity;
								NPC.NewNPC((int)center4.X, (int)center4.Y, 30, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
					}
					if (this.ai[3] == 1f)
					{
						this.knockBackResist = 0f;
						NPC nPC5 = this;
						nPC5.defense = nPC5.defense + 10;
					}
					if (this.ai[3] == -1f)
					{
						this.TargetClosest(true);
						float single11 = 8f;
						float single12 = 40f;
						Vector2 center5 = Main.player[this.target].Center - base.Center;
						float single13 = center5.Length();
						single11 = single11 + single13 / 200f;
						center5.Normalize();
						center5 = center5 * single11;
						this.velocity = ((this.velocity * (single12 - 1f)) + center5) / single12;
						if (single13 < 500f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[3] = 0f;
							this.ai[2] = 0f;
						}
						return;
					}
					if (this.ai[3] == -2f)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
						if (Main.player[this.target].Center.Y - base.Center.Y > 200f)
						{
							this.TargetClosest(true);
							this.ai[3] = -3f;
							if (Main.player[this.target].Center.X <= base.Center.X)
							{
								this.ai[2] = -1f;
							}
							else
							{
								this.ai[2] = 1f;
							}
						}
						this.velocity.X = this.velocity.X * 0.99f;
						return;
					}
					if (this.ai[3] == -3f)
					{
						if (this.direction == 0)
						{
							this.TargetClosest(true);
						}
						if (this.ai[2] == 0f)
						{
							this.ai[2] = (float)this.direction;
						}
						this.velocity.Y = this.velocity.Y * 0.9f;
						this.velocity.X = this.velocity.X + this.ai[2] * 0.3f;
						if (this.velocity.X > 10f)
						{
							this.velocity.X = 10f;
						}
						if (this.velocity.X < -10f)
						{
							this.velocity.X = -10f;
						}
						float x7 = Main.player[this.target].Center.X - base.Center.X;
						if (this.ai[2] < 0f && x7 > 300f || this.ai[2] > 0f && x7 < -300f)
						{
							this.ai[3] = -4f;
							this.ai[2] = 0f;
							return;
						}
						if (Math.Abs(x7) > 800f)
						{
							this.ai[3] = -1f;
							this.ai[2] = 0f;
						}
						return;
					}
					if (this.ai[3] != -4f)
					{
						if (this.ai[3] == 1f)
						{
							Vector2 y5 = base.Center;
							y5.Y = y5.Y - 70f;
							this.velocity.X = this.velocity.X * 0.8f;
							this.ai[2] = this.ai[2] + 1f;
							if (this.ai[2] == 60f)
							{
								if (Main.netMode != 1)
								{
									NPC.NewNPC((int)y5.X, (int)y5.Y + 18, 472, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (this.ai[2] >= 90f)
							{
								this.ai[3] = -2f;
								this.ai[2] = 0f;
							}
							for (int o = 0; o < 2; o++)
							{
								Vector2 vector217 = y5;
								Vector2 vector218 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
								vector218.Normalize();
								vector218 = vector218 * ((float)Main.rand.Next(0, 100) * 0.1f);
								vector217 = vector217 + vector218;
								vector218.Normalize();
								vector218 = vector218 * ((float)Main.rand.Next(50, 90) * 0.1f);
								skyBlue = new Color();
								int num44 = Dust.NewDust(vector217, 1, 1, 27, 0f, 0f, 0, skyBlue, 1f);
								Main.dust[num44].velocity = -vector218 * 0.3f;
								Main.dust[num44].alpha = 100;
								if (Main.rand.Next(2) == 0)
								{
									Main.dust[num44].noGravity = true;
									Dust dust3 = Main.dust[num44];
									dust3.scale = dust3.scale + 0.3f;
								}
							}
							return;
						}
						this.ai[2] = this.ai[2] + 1f;
						int num45 = 10;
						if (this.velocity.Y != 0f || NPC.CountNPCS(472) >= num45)
						{
							if (NPC.CountNPCS(472) >= num45)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (this.ai[2] >= 360f)
							{
								this.ai[2] = 0f;
								this.ai[3] = -2f;
								this.velocity.Y = this.velocity.Y - 3f;
							}
						}
						else if (this.ai[2] >= 180f)
						{
							this.ai[2] = 0f;
							this.ai[3] = 1f;
						}
						if (this.target >= 0 && !Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() > 800f)
						{
							this.ai[3] = -1f;
							this.ai[2] = 0f;
						}
					}
					else
					{
						this.ai[2] = this.ai[2] + 1f;
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Length() > 4f)
						{
							NPC nPC6 = this;
							nPC6.velocity = nPC6.velocity * 0.9f;
						}
						int x8 = (int)base.Center.X / 16;
						int y6 = (int)(this.position.Y + (float)this.height + 12f) / 16;
						bool flag8 = false;
						for (int p = x8 - 1; p <= x8 + 1; p++)
						{
							if (Main.tile[p, y6] == null)
							{
								Main.tile[x8, y6] = new Tile();
							}
							if (Main.tile[p, y6].active() && Main.tileSolid[Main.tile[p, y6].type])
							{
								flag8 = true;
							}
						}
						if (flag8 && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[3] = 0f;
							this.ai[2] = 0f;
						}
						else if (this.ai[2] > 300f || base.Center.Y > Main.player[this.target].Center.Y + 200f)
						{
							this.ai[3] = -1f;
							this.ai[2] = 0f;
						}
					}
					if (Main.player[this.target].dead)
					{
						this.TargetClosest(true);
						if (Main.player[this.target].dead && this.timeLeft > 1)
						{
							this.timeLeft = 1;
						}
					}
				}
				if (this.type == 419)
				{
					this.reflectingProjectiles = false;
					this.takenDamageMultiplier = 1f;
					int num46 = 6;
					int num47 = 10;
					float single14 = 16f;
					if (this.ai[2] > 0f)
					{
						this.ai[2] = this.ai[2] - 1f;
					}
					if (this.ai[2] != 0f)
					{
						if (this.ai[2] < 0f && this.ai[2] > (float)(-num46))
						{
							this.ai[2] = this.ai[2] - 1f;
							this.velocity.X = this.velocity.X * 0.9f;
							return;
						}
						if (this.ai[2] == (float)(-num46))
						{
							this.ai[2] = this.ai[2] - 1f;
							this.TargetClosest(true);
							Vector2 vector219 = base.DirectionTo(Main.player[this.target].Top + new Vector2(0f, -30f));
							if (vector219.HasNaNs())
							{
								vector219 = Vector2.Normalize(new Vector2((float)this.spriteDirection, -1f));
							}
							this.velocity = vector219 * single14;
							this.netUpdate = true;
							return;
						}
						if (this.ai[2] < (float)(-num46))
						{
							this.ai[2] = this.ai[2] - 1f;
							if (this.velocity.Y == 0f)
							{
								this.ai[2] = 60f;
							}
							else if (this.ai[2] < (float)(-num46 - num47))
							{
								this.velocity.Y = this.velocity.Y + 0.15f;
								if (this.velocity.Y > 24f)
								{
									this.velocity.Y = 24f;
								}
							}
							this.reflectingProjectiles = true;
							this.takenDamageMultiplier = 3f;
							if (this.justHit)
							{
								this.ai[2] = 60f;
								this.netUpdate = true;
							}
							return;
						}
					}
					else if ((Main.player[this.target].Center.X < base.Center.X && this.direction < 0 || Main.player[this.target].Center.X > base.Center.X && this.direction > 0) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
					{
						this.ai[2] = -1f;
						this.netUpdate = true;
						this.TargetClosest(true);
					}
				}
				if (this.type == 415)
				{
					int num48 = 42;
					int num49 = 18;
					if (this.justHit)
					{
						this.ai[2] = 120f;
						this.netUpdate = true;
					}
					if (this.ai[2] > 0f)
					{
						this.ai[2] = this.ai[2] - 1f;
					}
					if (this.ai[2] == 0f)
					{
						int num50 = 0;
						for (int q = 0; q < 200; q++)
						{
							if (Main.npc[q].active && Main.npc[q].type == 516)
							{
								num50++;
							}
						}
						if (num50 > 6)
						{
							this.ai[2] = 90f;
						}
						else if ((Main.player[this.target].Center.X < base.Center.X && this.direction < 0 || Main.player[this.target].Center.X > base.Center.X && this.direction > 0) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[2] = -1f;
							this.netUpdate = true;
							this.TargetClosest(true);
						}
					}
					else if (this.ai[2] < 0f && this.ai[2] > (float)(-num48))
					{
						this.ai[2] = this.ai[2] - 1f;
						if (this.ai[2] == (float)(-num48))
						{
							this.ai[2] = (float)(180 + 30 * Main.rand.Next(10));
						}
						this.velocity.X = this.velocity.X * 0.8f;
						if (this.ai[2] == (float)(-num49) || this.ai[2] == (float)(-num49 - 8) || this.ai[2] == (float)(-num49 - 16))
						{
							for (int r = 0; r < 20; r++)
							{
								Vector2 center6 = base.Center + ((Vector2.UnitX * (float)this.spriteDirection) * 40f);
								Dust[] dustArray = Main.dust;
								skyBlue = new Color();
								Dust unitX = dustArray[Dust.NewDust(center6, 0, 0, 259, 0f, 0f, 0, skyBlue, 1f)];
								Vector2 vector220 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
								unitX.position = center6 + (vector220 * 4f);
								unitX.velocity = (vector220 * 2f) + (((Vector2.UnitX * Main.rand.NextFloat()) * (float)this.spriteDirection) * 3f);
								unitX.scale = 0.3f + vector220.X * (float)(-this.spriteDirection);
								unitX.fadeIn = 0.7f;
								unitX.noGravity = true;
							}
							if (this.velocity.X > -0.5f && this.velocity.X < 0.5f)
							{
								this.velocity.X = 0f;
							}
							if (Main.netMode != 1)
							{
								NPC.NewNPC((int)base.Center.X + this.spriteDirection * 45, (int)base.Center.Y + 8, 516, 0, 0f, 0f, 0f, 0f, this.target);
							}
						}
						return;
					}
				}
				if (this.type == 428)
				{
					this.localAI[0] = this.localAI[0] + 1f;
					if (this.localAI[0] >= 300f)
					{
						int x9 = (int)base.Center.X / 16 - 1;
						int y7 = (int)base.Center.Y / 16 - 1;
						if (!Collision.SolidTiles(x9, x9 + 2, y7, y7 + 1) && Main.netMode != 1)
						{
							this.Transform(427);
							this.life = this.lifeMax;
							this.localAI[0] = 0f;
							return;
						}
					}
					int num51 = 0;
					if (this.localAI[0] < 60f)
					{
						num51 = 16;
					}
					else if (this.localAI[0] < 120f)
					{
						num51 = 8;
					}
					else if (this.localAI[0] < 180f)
					{
						num51 = 4;
					}
					else if (this.localAI[0] >= 240f)
					{
						num51 = (this.localAI[0] >= 300f ? 1 : 1);
					}
					else
					{
						num51 = 2;
					}
					if (Main.rand.Next(num51) == 0)
					{
						Dust[] dustArray1 = Main.dust;
						Vector2 vector221 = this.position;
						int num52 = this.width;
						int num53 = this.height;
						skyBlue = new Color();
						Dust dust4 = dustArray1[Dust.NewDust(vector221, num52, num53, 229, 0f, 0f, 0, skyBlue, 1f)];
						dust4.noGravity = true;
						dust4.scale = 1f;
						dust4.noLight = true;
						dust4.velocity = base.DirectionFrom(dust4.position) * dust4.velocity.Length();
						Dust dust5 = dust4;
						dust5.position = dust5.position - (dust4.velocity * 5f);
						dust4.position.X = dust4.position.X + (float)(this.direction * 6);
						dust4.position.Y = dust4.position.Y + 4f;
					}
				}
				if (this.type == 427)
				{
					this.localAI[0] = this.localAI[0] + 1f;
					this.localAI[0] = this.localAI[0] + Math.Abs(this.velocity.X) / 2f;
					if (this.localAI[0] >= 1200f && Main.netMode != 1)
					{
						int x10 = (int)base.Center.X / 16 - 2;
						int y8 = (int)base.Center.Y / 16 - 3;
						if (!Collision.SolidTiles(x10, x10 + 4, y8, y8 + 4))
						{
							this.Transform(426);
							this.life = this.lifeMax;
							this.localAI[0] = 0f;
							return;
						}
					}
					int num54 = 0;
					if (this.localAI[0] < 360f)
					{
						num54 = 32;
					}
					else if (this.localAI[0] < 720f)
					{
						num54 = 16;
					}
					else if (this.localAI[0] < 1080f)
					{
						num54 = 6;
					}
					else if (this.localAI[0] >= 1440f)
					{
						num54 = (this.localAI[0] >= 1800f ? 1 : 1);
					}
					else
					{
						num54 = 2;
					}
					if (Main.rand.Next(num54) == 0)
					{
						Dust[] dustArray2 = Main.dust;
						Vector2 vector222 = this.position;
						int num55 = this.width;
						int num56 = this.height;
						skyBlue = new Color();
						Dust dust6 = dustArray2[Dust.NewDust(vector222, num55, num56, 229, 0f, 0f, 0, skyBlue, 1f)];
						dust6.noGravity = true;
						dust6.scale = 1f;
						dust6.noLight = true;
					}
				}
				bool flag9 = false;
				if (this.velocity.X == 0f)
				{
					flag9 = true;
				}
				if (this.justHit)
				{
					flag9 = false;
				}
				if (Main.netMode != 1 && this.type == 198 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(199);
				}
				if (Main.netMode != 1 && this.type == 348 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(349);
				}
				int num57 = 60;
				if (this.type == 120)
				{
					num57 = 180;
					if (this.ai[3] == -120f)
					{
						NPC nPC7 = this;
						nPC7.velocity = nPC7.velocity * 0f;
						this.ai[3] = 0f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
						Vector2 vector223 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x11 = this.oldPos[2].X + (float)this.width * 0.5f - vector223.X;
						float y9 = this.oldPos[2].Y + (float)this.height * 0.5f - vector223.Y;
						float single15 = (float)Math.Sqrt((double)(x11 * x11 + y9 * y9));
						single15 = 2f / single15;
						x11 = x11 * single15;
						y9 = y9 * single15;
						for (int s = 0; s < 20; s++)
						{
							Vector2 vector224 = this.position;
							int num58 = this.width;
							int num59 = this.height;
							skyBlue = new Color();
							int num60 = Dust.NewDust(vector224, num58, num59, 71, x11, y9, 200, skyBlue, 2f);
							Main.dust[num60].noGravity = true;
							Main.dust[num60].velocity.X = Main.dust[num60].velocity.X * 2f;
						}
						for (int t = 0; t < 20; t++)
						{
							int num61 = this.width;
							int num62 = this.height;
							skyBlue = new Color();
							int num63 = Dust.NewDust(this.oldPos[2], num61, num62, 71, -x11, -y9, 200, skyBlue, 2f);
							Main.dust[num63].noGravity = true;
							Main.dust[num63].velocity.X = Main.dust[num63].velocity.X * 2f;
						}
					}
				}
				bool flag10 = false;
				bool flag11 = true;
				if (this.type == 343 || this.type == 47 || this.type == 67 || this.type == 109 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 163 || this.type == 164 || this.type == 239 || this.type == 168 || this.type == 199 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 226 || this.type == 243 || this.type == 251 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 305 || this.type == 306 || this.type == 307 || this.type == 308 || this.type == 309 || this.type == 348 || this.type == 349 || this.type == 350 || this.type == 351 || this.type == 379 || this.type >= 430 && this.type <= 436 || this.type == 380 || this.type == 381 || this.type == 382 || this.type == 383 || this.type == 386 || this.type == 391 || this.type >= 449 && this.type <= 452 || this.type == 466 || this.type == 464 || this.type == 166 || this.type == 469 || this.type == 468 || this.type == 471 || this.type == 470 || this.type == 480 || this.type == 481 || this.type == 482 || this.type == 411 || this.type == 424 || this.type == 409 || this.type >= 494 && this.type <= 506 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 428 || this.type == 508 || this.type == 415 || this.type == 419 || this.type == 520 || this.type >= 524 && this.type <= 527 || this.type == 528 || this.type == 529 || this.type == 530 || this.type == 532)
				{
					flag11 = false;
				}
				bool flag12 = false;
				num6 = this.type;
				if (num6 == 425 || num6 == 471)
				{
					flag12 = true;
				}
				bool flag13 = true;
				num6 = this.type;
				if (num6 <= 350)
				{
					if (num6 > 206)
					{
						switch (num6)
						{
							case 214:
							case 215:
							case 216:
							{
								break;
							}
							default:
							{
								switch (num6)
								{
									case 291:
									case 292:
									case 293:
									{
										break;
									}
									default:
									{
										if (num6 == 350)
										{
											goto Label9;
										}
										goto Label8;
									}
								}
								break;
							}
						}
					}
					else
					{
						switch (num6)
						{
							case 110:
							case 111:
							{
								break;
							}
							default:
							{
								if (num6 == 206)
								{
									break;
								}
								goto Label8;
							}
						}
					}
				}
				else if (num6 <= 426)
				{
					switch (num6)
					{
						case 379:
						case 380:
						case 381:
						case 382:
						{
							break;
						}
						default:
						{
							switch (num6)
							{
								case 409:
								case 411:
								{
									break;
								}
								case 410:
								{
									goto Label8;
								}
								default:
								{
									switch (num6)
									{
										case 424:
										case 426:
										{
											break;
										}
										default:
										{
											goto Label8;
										}
									}
									break;
								}
							}
							break;
						}
					}
				}
				else if (num6 != 466)
				{
					switch (num6)
					{
						case 498:
						case 499:
						case 500:
						case 501:
						case 502:
						case 503:
						case 504:
						case 505:
						case 506:
						{
							break;
						}
						default:
						{
							if (num6 != 520)
							{
								goto Label8;
							}
							else
							{
								break;
							}
						}
					}
				}
			Label9:
				if (this.ai[2] > 0f)
				{
					flag13 = false;
				}
			Label8:
				if (!flag12 && flag13)
				{
					if (this.velocity.Y == 0f && (this.velocity.X > 0f && this.direction < 0 || this.velocity.X < 0f && this.direction > 0))
					{
						flag10 = true;
					}
					if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num57 || flag10)
					{
						this.ai[3] = this.ai[3] + 1f;
					}
					else if ((double)Math.Abs(this.velocity.X) > 0.9 && this.ai[3] > 0f)
					{
						this.ai[3] = this.ai[3] - 1f;
					}
					if (this.ai[3] > (float)(num57 * 10))
					{
						this.ai[3] = 0f;
					}
					if (this.justHit)
					{
						this.ai[3] = 0f;
					}
					if (this.ai[3] == (float)num57)
					{
						this.netUpdate = true;
					}
				}
				if (this.type == 463 && Main.netMode != 1)
				{
					if (this.localAI[3] > 0f)
					{
						this.localAI[3] = this.localAI[3] - 1f;
					}
					if (this.justHit && this.localAI[3] <= 0f && Main.rand.Next(3) == 0)
					{
						this.localAI[3] = 30f;
						int num64 = Main.rand.Next(3, 6);
						int[] numArray1 = new int[num64];
						int num65 = 0;
						for (int u = 0; u < 255; u++)
						{
							if (Main.player[u].active && !Main.player[u].dead && Collision.CanHitLine(this.position, this.width, this.height, Main.player[u].position, Main.player[u].width, Main.player[u].height))
							{
								numArray1[num65] = u;
								num65++;
								if (num65 == num64)
								{
									break;
								}
							}
						}
						if (num65 > 1)
						{
							for (int v = 0; v < 100; v++)
							{
								int num66 = Main.rand.Next(num65);
								int num67 = num66;
								while (num67 == num66)
								{
									num67 = Main.rand.Next(num65);
								}
								int num68 = numArray1[num66];
								numArray1[num66] = numArray1[num67];
								numArray1[num67] = num68;
							}
						}
						Vector2 vector225 = new Vector2(-1f, -1f);
						for (int w = 0; w < num65; w++)
						{
							Vector2 center7 = Main.npc[numArray1[w]].Center - base.Center;
							center7.Normalize();
							vector225 = vector225 + center7;
						}
						vector225.Normalize();
						for (int x12 = 0; x12 < num64; x12++)
						{
							float single16 = (float)Main.rand.Next(8, 13);
							Vector2 center8 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
							center8.Normalize();
							if (num65 > 0)
							{
								center8 = center8 + vector225;
								center8.Normalize();
							}
							center8 = center8 * single16;
							if (num65 > 0)
							{
								num65--;
								center8 = Main.player[numArray1[num65]].Center - base.Center;
								center8.Normalize();
								center8 = center8 * single16;
							}
							Projectile.NewProjectile(base.Center.X, this.position.Y + (float)(this.width / 4), center8.X, center8.Y, 498, (int)((double)this.damage * 0.15), 1f, 255, 0f, 0f);
						}
					}
				}
				if (this.type == 460)
				{
					if (this.velocity.Y < -NPC.gravity || this.velocity.Y > NPC.gravity)
					{
						this.knockBackResist = 0f;
					}
					else
					{
						this.knockBackResist = 0.25f * Main.knockBackMultiplier;
					}
				}
				if (this.type == 469)
				{
					this.knockBackResist = 0.45f * Main.knockBackMultiplier;
					if (this.ai[2] == 1f)
					{
						this.knockBackResist = 0f;
					}
					bool flag14 = false;
					int x13 = (int)base.Center.X / 16;
					int y10 = (int)base.Center.Y / 16;
					for (int y11 = x13 - 1; y11 <= x13 + 1; y11++)
					{
						int num69 = y10 - 1;
						while (num69 <= y10 + 1)
						{
							if (Main.tile[y11, num69] == null || Main.tile[y11, num69].wall <= 0)
							{
								num69++;
							}
							else
							{
								flag14 = true;
								break;
							}
						}
						if (flag14)
						{
							break;
						}
					}
					if (this.ai[2] == 0f && flag14)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.Y = -4.6f;
							this.velocity.X = this.velocity.X * 1.3f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.ai[2] = 1f;
						}
					}
					if (flag14 && this.ai[2] == 1f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
					{
						Vector2 center9 = Main.player[this.target].Center - base.Center;
						float single17 = center9.Length();
						center9.Normalize();
						center9 = center9 * (4.5f + single17 / 300f);
						this.velocity = ((this.velocity * 29f) + center9) / 30f;
						this.noGravity = true;
						this.ai[2] = 1f;
						return;
					}
					this.noGravity = false;
					this.ai[2] = 0f;
				}
				if (this.type == 462 && this.velocity.Y == 0f && (Main.player[this.target].Center - base.Center).Length() < 150f && Math.Abs(this.velocity.X) > 3f && (this.velocity.X < 0f && base.Center.X > Main.player[this.target].Center.X || this.velocity.X > 0f && base.Center.X < Main.player[this.target].Center.X))
				{
					this.velocity.X = this.velocity.X * 1.75f;
					this.velocity.Y = this.velocity.Y - 4.5f;
					if (base.Center.Y - Main.player[this.target].Center.Y > 20f)
					{
						this.velocity.Y = this.velocity.Y - 0.5f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 40f)
					{
						this.velocity.Y = this.velocity.Y - 1f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 80f)
					{
						this.velocity.Y = this.velocity.Y - 1.5f;
					}
					if (base.Center.Y - Main.player[this.target].Center.Y > 100f)
					{
						this.velocity.Y = this.velocity.Y - 1.5f;
					}
					if (Math.Abs(this.velocity.X) > 7f)
					{
						if (this.velocity.X >= 0f)
						{
							this.velocity.X = 7f;
						}
						else
						{
							this.velocity.X = -7f;
						}
					}
				}
				if (this.ai[3] < (float)num57 && (Main.eclipse || !Main.dayTime || (double)this.position.Y > Main.worldSurface * 16 || Main.invasionType == 1 && (this.type == 343 || this.type == 350) || Main.invasionType == 1 && (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 73 || this.type == 111 || this.type == 471) || Main.invasionType == 3 && this.type >= 212 && this.type <= 216 || Main.invasionType == 4 && (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 386 || this.type == 389 || this.type == 391 || this.type == 520) || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 67 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 110 || this.type == 120 || this.type == 168 || this.type == 181 || this.type == 185 || this.type == 198 || this.type == 199 || this.type == 206 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 239 || this.type == 243 || this.type == 254 || this.type == 255 || this.type == 257 || this.type == 258 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 379 || this.type == 380 || this.type == 464 || this.type == 470 || this.type == 424 || this.type == 411 && (this.ai[1] >= 180f || this.ai[1] < 90f) || this.type == 409 || this.type == 425 || this.type == 429 || this.type == 427 || this.type == 428 || this.type == 508 || this.type == 415 || this.type == 419 || this.type >= 524 && this.type <= 527 || this.type == 528 || this.type == 529 || this.type == 530 || this.type == 532))
				{
					if ((this.type == 3 || this.type == 331 || this.type == 332 || this.type == 21 || this.type >= 449 && this.type <= 452 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 77 || this.type == 110 || this.type == 132 || this.type == 167 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 197 || this.type == 200 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 223 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 320 || this.type == 321 || this.type == 319 || this.type == 481) && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					if (this.type == 489 && Main.rand.Next(800) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, this.type);
					}
					if ((this.type == 78 || this.type == 79 || this.type == 80) && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(26, (int)this.position.X, (int)this.position.Y, 1);
					}
					if (this.type == 159 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 7);
					}
					if (this.type == 162 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 6);
					}
					if (this.type == 181 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 8);
					}
					if (this.type >= 269 && this.type <= 280 && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					this.TargetClosest(true);
				}
				else if (this.ai[2] <= 0f || this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350 && this.type != 381 && this.type != 382 && this.type != 383 && this.type != 385 && this.type != 386 && this.type != 389 && this.type != 391 && this.type != 469 && this.type != 166 && this.type != 466 && this.type != 471 && this.type != 411 && this.type != 409 && this.type != 424 && this.type != 425 && this.type != 426 && this.type != 415 && this.type != 419 && this.type != 520)
				{
					if (Main.dayTime && (double)(this.position.Y / 16f) < Main.worldSurface && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (this.velocity.X != 0f)
					{
						this.ai[0] = 0f;
					}
					else if (this.velocity.Y == 0f)
					{
						this.ai[0] = this.ai[0] + 1f;
						if (this.ai[0] >= 2f)
						{
							NPC nPC8 = this;
							nPC8.direction = nPC8.direction * -1;
							this.spriteDirection = this.direction;
							this.ai[0] = 0f;
						}
					}
					if (this.direction == 0)
					{
						this.direction = 1;
					}
				}
				if (this.type == 159 || this.type == 349)
				{
					if (this.type == 159 && (this.velocity.X > 0f && this.direction < 0 || this.velocity.X < 0f && this.direction > 0))
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.velocity.X < -6f || this.velocity.X > 6f)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC9 = this;
							nPC9.velocity = nPC9.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < 6f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					else if (this.velocity.X > -6f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
				}
				else if (this.type == 199)
				{
					if (this.velocity.X < -4f || this.velocity.X > 4f)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC10 = this;
							nPC10.velocity = nPC10.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < 4f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					else if (this.velocity.X > -4f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
				}
				else if (this.type == 120 || this.type == 166 || this.type == 213 || this.type == 258 || this.type == 528 || this.type == 529)
				{
					if (this.velocity.X < -3f || this.velocity.X > 3f)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC11 = this;
							nPC11.velocity = nPC11.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < 3f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					else if (this.velocity.X > -3f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
				}
				else if (this.type == 461 || this.type == 27 || this.type == 77 || this.type == 104 || this.type == 163 || this.type == 162 || this.type == 196 || this.type == 197 || this.type == 212 || this.type == 257 || this.type == 326 || this.type == 343 || this.type == 348 || this.type == 351 || this.type >= 524 && this.type <= 527 || this.type == 530)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC12 = this;
							nPC12.velocity = nPC12.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 109)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC13 = this;
							nPC13.velocity = nPC13.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.04f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.04f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 21 || this.type == 26 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 73 || this.type == 140 || this.type == 164 || this.type == 239 || this.type == 167 || this.type == 168 || this.type == 185 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 226 || this.type == 181 || this.type == 254 || this.type == 338 || this.type == 339 || this.type == 340 || this.type == 342 || this.type == 385 || this.type == 389 || this.type == 462 || this.type == 463 || this.type == 466 || this.type == 464 || this.type == 469 || this.type == 470 || this.type == 480 || this.type == 482 || this.type == 425 || this.type == 429)
				{
					float single18 = 1.5f;
					if (this.type == 294)
					{
						single18 = 2f;
					}
					else if (this.type == 295)
					{
						single18 = 1.75f;
					}
					else if (this.type == 296)
					{
						single18 = 1.25f;
					}
					else if (this.type == 201)
					{
						single18 = 1.1f;
					}
					else if (this.type == 202)
					{
						single18 = 0.9f;
					}
					else if (this.type == 203)
					{
						single18 = 1.2f;
					}
					else if (this.type == 338)
					{
						single18 = 1.75f;
					}
					else if (this.type == 339)
					{
						single18 = 1.25f;
					}
					else if (this.type == 340)
					{
						single18 = 2f;
					}
					else if (this.type == 385)
					{
						single18 = 1.8f;
					}
					else if (this.type == 389)
					{
						single18 = 2.25f;
					}
					else if (this.type == 462)
					{
						single18 = 4f;
					}
					else if (this.type == 463)
					{
						single18 = 0.75f;
					}
					else if (this.type == 466)
					{
						single18 = 3.75f;
					}
					else if (this.type == 469)
					{
						single18 = 3.25f;
					}
					else if (this.type == 480)
					{
						single18 = 1.5f + (1f - (float)this.life / (float)this.lifeMax) * 2f;
					}
					else if (this.type == 425)
					{
						single18 = 6f;
					}
					else if (this.type == 429)
					{
						single18 = 4f;
					}
					if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 342)
					{
						single18 = single18 * (1f + (1f - this.scale));
					}
					if (this.velocity.X < -single18 || this.velocity.X > single18)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC14 = this;
							nPC14.velocity = nPC14.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < single18 && this.direction == 1)
					{
						if (this.type == 466 && this.velocity.X < -2f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > single18)
						{
							this.velocity.X = single18;
						}
					}
					else if (this.velocity.X > -single18 && this.direction == -1)
					{
						if (this.type == 466 && this.velocity.X > 2f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -single18)
						{
							this.velocity.X = -single18;
						}
					}
					if (this.velocity.Y == 0f && this.type == 462 && (this.direction > 0 && this.velocity.X < 0f || this.direction < 0 && this.velocity.X > 0f))
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				else if (this.type >= 269 && this.type <= 280)
				{
					float single19 = 1.5f;
					if (this.type == 269)
					{
						single19 = 2f;
					}
					if (this.type == 270)
					{
						single19 = 1f;
					}
					if (this.type == 271)
					{
						single19 = 1.5f;
					}
					if (this.type == 272)
					{
						single19 = 3f;
					}
					if (this.type == 273)
					{
						single19 = 1.25f;
					}
					if (this.type == 274)
					{
						single19 = 3f;
					}
					if (this.type == 275)
					{
						single19 = 3.25f;
					}
					if (this.type == 276)
					{
						single19 = 2f;
					}
					if (this.type == 277)
					{
						single19 = 2.75f;
					}
					if (this.type == 278)
					{
						single19 = 1.8f;
					}
					if (this.type == 279)
					{
						single19 = 1.3f;
					}
					if (this.type == 280)
					{
						single19 = 2.5f;
					}
					single19 = single19 * (1f + (1f - this.scale));
					if (this.velocity.X < -single19 || this.velocity.X > single19)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC15 = this;
							nPC15.velocity = nPC15.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < single19 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > single19)
						{
							this.velocity.X = single19;
						}
					}
					else if (this.velocity.X > -single19 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -single19)
						{
							this.velocity.X = -single19;
						}
					}
				}
				else if (this.type >= 305 && this.type <= 314)
				{
					float single20 = 1.5f;
					if (this.type == 305 || this.type == 310)
					{
						single20 = 2f;
					}
					if (this.type == 306 || this.type == 311)
					{
						single20 = 1.25f;
					}
					if (this.type == 307 || this.type == 312)
					{
						single20 = 2.25f;
					}
					if (this.type == 308 || this.type == 313)
					{
						single20 = 1.5f;
					}
					if (this.type == 309 || this.type == 314)
					{
						single20 = 1f;
					}
					if (this.type < 310)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.85f;
							if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
							{
								this.velocity.Y = -7f;
								this.velocity.X = single20 * (float)this.direction;
							}
						}
						else if (this.spriteDirection == this.direction)
						{
							this.velocity.X = (this.velocity.X * 10f + single20 * (float)this.direction) / 11f;
						}
					}
					else if (this.velocity.X < -single20 || this.velocity.X > single20)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC16 = this;
							nPC16.velocity = nPC16.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < single20 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > single20)
						{
							this.velocity.X = single20;
						}
					}
					else if (this.velocity.X > -single20 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -single20)
						{
							this.velocity.X = -single20;
						}
					}
				}
				else if (this.type == 67 || this.type == 220 || this.type == 428)
				{
					if (this.velocity.X < -0.5f || this.velocity.X > 0.5f)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC17 = this;
							nPC17.velocity = nPC17.velocity * 0.7f;
						}
					}
					else if (this.velocity.X < 0.5f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.03f;
						if (this.velocity.X > 0.5f)
						{
							this.velocity.X = 0.5f;
						}
					}
					else if (this.velocity.X > -0.5f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.03f;
						if (this.velocity.X < -0.5f)
						{
							this.velocity.X = -0.5f;
						}
					}
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					float single21 = 1f;
					float single22 = 0.05f;
					if (this.life < this.lifeMax / 2)
					{
						single21 = 2f;
						single22 = 0.1f;
					}
					if (this.type == 79)
					{
						single21 = single21 * 1.5f;
					}
					if (this.velocity.X < -single21 || this.velocity.X > single21)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC18 = this;
							nPC18.velocity = nPC18.velocity * 0.7f;
						}
					}
					else if (this.velocity.X < single21 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + single22;
						if (this.velocity.X > single21)
						{
							this.velocity.X = single21;
						}
					}
					else if (this.velocity.X > -single21 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - single22;
						if (this.velocity.X < -single21)
						{
							this.velocity.X = -single21;
						}
					}
				}
				else if (this.type == 287)
				{
					float single23 = 5f;
					float single24 = 0.2f;
					if (this.velocity.X < -single23 || this.velocity.X > single23)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC19 = this;
							nPC19.velocity = nPC19.velocity * 0.7f;
						}
					}
					else if (this.velocity.X < single23 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + single24;
						if (this.velocity.X > single23)
						{
							this.velocity.X = single23;
						}
					}
					else if (this.velocity.X > -single23 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - single24;
						if (this.velocity.X < -single23)
						{
							this.velocity.X = -single23;
						}
					}
				}
				else if (this.type == 243)
				{
					float single25 = 1f;
					float single26 = 0.07f;
					single25 = single25 + (1f - (float)this.life / (float)this.lifeMax) * 1.5f;
					single26 = single26 + (1f - (float)this.life / (float)this.lifeMax) * 0.15f;
					if (this.velocity.X < -single25 || this.velocity.X > single25)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC20 = this;
							nPC20.velocity = nPC20.velocity * 0.7f;
						}
					}
					else if (this.velocity.X < single25 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + single26;
						if (this.velocity.X > single25)
						{
							this.velocity.X = single25;
						}
					}
					else if (this.velocity.X > -single25 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - single26;
						if (this.velocity.X < -single25)
						{
							this.velocity.X = -single25;
						}
					}
				}
				else if (this.type == 251)
				{
					float single27 = 1f;
					float single28 = 0.08f;
					single27 = single27 + (1f - (float)this.life / (float)this.lifeMax) * 2f;
					single28 = single28 + (1f - (float)this.life / (float)this.lifeMax) * 0.2f;
					if (this.velocity.X < -single27 || this.velocity.X > single27)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC21 = this;
							nPC21.velocity = nPC21.velocity * 0.7f;
						}
					}
					else if (this.velocity.X < single27 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + single28;
						if (this.velocity.X > single27)
						{
							this.velocity.X = single27;
						}
					}
					else if (this.velocity.X > -single27 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - single28;
						if (this.velocity.X < -single27)
						{
							this.velocity.X = -single27;
						}
					}
				}
				else if (this.type == 386)
				{
					if (this.ai[2] <= 0f)
					{
						float single29 = 0.15f;
						float single30 = 1.5f;
						if (this.velocity.X < -single30 || this.velocity.X > single30)
						{
							if (this.velocity.Y == 0f)
							{
								NPC nPC22 = this;
								nPC22.velocity = nPC22.velocity * 0.7f;
							}
						}
						else if (this.velocity.X < single30 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + single29;
							if (this.velocity.X > single30)
							{
								this.velocity.X = single30;
							}
						}
						else if (this.velocity.X > -single30 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - single29;
							if (this.velocity.X < -single30)
							{
								this.velocity.X = -single30;
							}
						}
					}
					else if (this.velocity.Y == 0f)
					{
						this.velocity.X = this.velocity.X * 0.8f;
					}
				}
				else if (this.type == 460)
				{
					float single31 = 3f;
					float single32 = 0.1f;
					if (Math.Abs(this.velocity.X) > 2f)
					{
						single32 = single32 * 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 2.5)
					{
						single32 = single32 * 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 3f)
					{
						single32 = single32 * 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 3.5)
					{
						single32 = single32 * 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 4f)
					{
						single32 = single32 * 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 4.5)
					{
						single32 = single32 * 0.8f;
					}
					if (Math.Abs(this.velocity.X) > 5f)
					{
						single32 = single32 * 0.8f;
					}
					if ((double)Math.Abs(this.velocity.X) > 5.5)
					{
						single32 = single32 * 0.8f;
					}
					single31 = single31 + (1f - (float)this.life / (float)this.lifeMax) * 3f;
					if (this.velocity.X < -single31 || this.velocity.X > single31)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC23 = this;
							nPC23.velocity = nPC23.velocity * 0.7f;
						}
					}
					else if (this.velocity.X < single31 && this.direction == 1)
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
						this.velocity.X = this.velocity.X + single32;
						if (this.velocity.X > single31)
						{
							this.velocity.X = single31;
						}
					}
					else if (this.velocity.X > -single31 && this.direction == -1)
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
						this.velocity.X = this.velocity.X - single32;
						if (this.velocity.X < -single31)
						{
							this.velocity.X = -single31;
						}
					}
				}
				else if (this.type == 508)
				{
					float single33 = 2.5f;
					float single34 = 40f;
					float single35 = Math.Abs(this.velocity.X);
					if (single35 > 2.75f)
					{
						single33 = 3.5f;
						single34 = single34 + 80f;
					}
					else if ((double)single35 > 2.25)
					{
						single33 = 3f;
						single34 = single34 + 60f;
					}
					if ((double)Math.Abs(this.velocity.Y) < 0.5)
					{
						if (this.velocity.X > 0f && this.direction < 0)
						{
							NPC nPC24 = this;
							nPC24.velocity = nPC24.velocity * 0.9f;
						}
						if (this.velocity.X < 0f && this.direction > 0)
						{
							NPC nPC25 = this;
							nPC25.velocity = nPC25.velocity * 0.9f;
						}
					}
					if (Math.Abs(this.velocity.Y) > NPC.gravity)
					{
						single34 = single34 * 3f;
					}
					if (this.velocity.X <= 0f && this.direction < 0)
					{
						this.velocity.X = (this.velocity.X * single34 - single33) / (single34 + 1f);
					}
					else if (this.velocity.X >= 0f && this.direction > 0)
					{
						this.velocity.X = (this.velocity.X * single34 + single33) / (single34 + 1f);
					}
					else if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 20f && Math.Abs(this.velocity.Y) <= NPC.gravity)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.X = this.velocity.X + (float)this.direction * 0.025f;
					}
				}
				else if (this.type == 391 || this.type == 427 || this.type == 415 || this.type == 419 || this.type == 518 || this.type == 532)
				{
					float single36 = 5f;
					float single37 = 0.25f;
					float single38 = 0.7f;
					if (this.type == 427)
					{
						single36 = 6f;
						single37 = 0.2f;
						single38 = 0.8f;
					}
					else if (this.type == 415)
					{
						single36 = 4f;
						single37 = 0.1f;
						single38 = 0.95f;
					}
					else if (this.type == 419)
					{
						single36 = 6f;
						single37 = 0.15f;
						single38 = 0.85f;
					}
					else if (this.type == 518)
					{
						single36 = 5f;
						single37 = 0.1f;
						single38 = 0.95f;
					}
					else if (this.type == 532)
					{
						single36 = 5f;
						single37 = 0.15f;
						single38 = 0.98f;
					}
					if (this.velocity.X < -single36 || this.velocity.X > single36)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC26 = this;
							nPC26.velocity = nPC26.velocity * single38;
						}
					}
					else if (this.velocity.X < single36 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + single37;
						if (this.velocity.X > single36)
						{
							this.velocity.X = single36;
						}
					}
					else if (this.velocity.X > -single36 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - single37;
						if (this.velocity.X < -single36)
						{
							this.velocity.X = -single36;
						}
					}
				}
				else if (this.type >= 430 && this.type <= 436 || this.type == 494 || this.type == 495)
				{
					if (this.ai[2] != 0f)
					{
						this.damage = (int)((double)this.defDamage * 1.5);
						this.ai[3] = 1f;
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)Math.Abs(this.velocity.X) < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] >= 20f || this.velocity.Y != 0f || Main.dayTime && (double)this.position.Y < Main.worldSurface * 16)
						{
							this.ai[2] = 0f;
						}
					}
					else
					{
						this.damage = this.defDamage;
						float single39 = 1f;
						single39 = single39 * (1f + (1f - this.scale));
						if (this.velocity.X < -single39 || this.velocity.X > single39)
						{
							if (this.velocity.Y == 0f)
							{
								NPC nPC27 = this;
								nPC27.velocity = nPC27.velocity * 0.8f;
							}
						}
						else if (this.velocity.X < single39 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + 0.07f;
							if (this.velocity.X > single39)
							{
								this.velocity.X = single39;
							}
						}
						else if (this.velocity.X > -single39 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - 0.07f;
							if (this.velocity.X < -single39)
							{
								this.velocity.X = -single39;
							}
						}
						if (this.velocity.Y == 0f && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16) && !Main.player[this.target].dead)
						{
							Vector2 center10 = base.Center - Main.player[this.target].Center;
							int num70 = 50;
							if (this.type >= 494 && this.type <= 495)
							{
								num70 = 42;
							}
							if (center10.Length() < (float)num70 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.velocity.X = this.velocity.X * 0.7f;
								this.ai[2] = 1f;
							}
						}
					}
				}
				else if (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 214 && this.type != 215 && this.type != 216 && this.type != 290 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350 && this.type != 379 && this.type != 380 && this.type != 381 && this.type != 382 && (this.type < 449 || this.type > 452) && this.type != 468 && this.type != 481 && this.type != 411 && this.type != 409 && (this.type < 498 || this.type > 506) && this.type != 424 && this.type != 426 && this.type != 520)
				{
					float single40 = 1f;
					if (this.type == 186)
					{
						single40 = 1.1f;
					}
					if (this.type == 187)
					{
						single40 = 0.9f;
					}
					if (this.type == 188)
					{
						single40 = 1.2f;
					}
					if (this.type == 189)
					{
						single40 = 0.8f;
					}
					if (this.type == 132)
					{
						single40 = 0.95f;
					}
					if (this.type == 200)
					{
						single40 = 0.87f;
					}
					if (this.type == 223)
					{
						single40 = 1.05f;
					}
					if (this.type == 489)
					{
						Vector2 center11 = Main.player[this.target].Center - base.Center;
						float single41 = center11.Length();
						single41 = single41 * 0.0025f;
						if ((double)single41 > 1.5)
						{
							single41 = 1.5f;
						}
						single40 = (!Main.expertMode ? 2.5f - single41 : 3f - single41);
						single40 = single40 * 0.8f;
					}
					if (this.type == 489 || this.type == 3 || this.type == 132 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 331 || this.type == 332)
					{
						single40 = single40 * (1f + (1f - this.scale));
					}
					if (this.velocity.X < -single40 || this.velocity.X > single40)
					{
						if (this.velocity.Y == 0f)
						{
							NPC nPC28 = this;
							nPC28.velocity = nPC28.velocity * 0.8f;
						}
					}
					else if (this.velocity.X < single40 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > single40)
						{
							this.velocity.X = single40;
						}
					}
					else if (this.velocity.X > -single40 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -single40)
						{
							this.velocity.X = -single40;
						}
					}
				}
				if (this.type >= 277 && this.type <= 280)
				{
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.2f, 0.1f, 0f);
				}
				else if (this.type == 520)
				{
					Lighting.AddLight(base.Top + new Vector2(0f, 20f), 0.3f, 0.3f, 0.7f);
				}
				else if (this.type == 525)
				{
					Vector3 vector3 = new Vector3(0.7f, 1f, 0.2f) * 0.5f;
					Lighting.AddLight(base.Top + new Vector2(0f, 15f), vector3);
				}
				else if (this.type == 526)
				{
					Vector3 vector31 = new Vector3(1f, 1f, 0.5f) * 0.4f;
					Lighting.AddLight(base.Top + new Vector2(0f, 15f), vector31);
				}
				else if (this.type == 527)
				{
					Vector3 vector32 = new Vector3(0.6f, 0.3f, 1f) * 0.4f;
					Lighting.AddLight(base.Top + new Vector2(0f, 15f), vector32);
				}
				else if (this.type == 415)
				{
					this.hide = false;
					int num71 = 0;
					while (num71 < 200)
					{
						if (!Main.npc[num71].active || Main.npc[num71].type != 416 || Main.npc[num71].ai[0] != (float)this.whoAmI)
						{
							num71++;
						}
						else
						{
							this.hide = true;
							goto Label10;
						}
					}
				}
				else if (this.type == 258)
				{
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Main.player[this.target].Center.X < this.position.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						else if (Main.player[this.target].Center.X > this.position.X + (float)this.width && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (Main.player[this.target].Center.X < this.position.X && this.velocity.X > -5f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (Main.player[this.target].Center.X > this.position.X + (float)this.width && this.velocity.X < 5f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
					}
					else if (Main.player[this.target].Center.Y + 50f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -7f;
					}
				}
				else if (this.type == 425)
				{
					if (this.velocity.Y == 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.velocity.Y != 0f && this.ai[2] == 1f)
					{
						this.TargetClosest(true);
						this.spriteDirection = -this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float x14 = Main.player[this.target].Center.X - (float)(this.direction * 400) - base.Center.X;
							float y12 = Main.player[this.target].Bottom.Y - base.Bottom.Y;
							if (x14 < 0f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							else if (x14 > 0f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (x14 < 0f && this.velocity.X > -5f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (x14 > 0f && this.velocity.X < 5f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
							if (y12 < -20f && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.8f;
							}
							else if (y12 > 20f && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.8f;
							}
							if (y12 < -20f && this.velocity.Y > -5f)
							{
								this.velocity.Y = this.velocity.Y - 0.3f;
							}
							else if (y12 > 20f && this.velocity.Y < 5f)
							{
								this.velocity.Y = this.velocity.Y + 0.3f;
							}
						}
						if (Main.rand.Next(3) == 0)
						{
							Vector2 center12 = (base.Center + new Vector2((float)(this.direction * -14), -8f)) - (Vector2.One * 4f);
							Vector2 vector226 = (new Vector2((float)(this.direction * -6), 12f) * 0.2f) + (Utils.RandomVector2(Main.rand, -1f, 1f) * 0.1f);
							Dust dust7 = Main.dust[Dust.NewDust(center12, 8, 8, 229, vector226.X, vector226.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 0.5f)];
							dust7.noGravity = true;
							dust7.velocity = vector226;
							dust7.customData = this;
						}
						for (int a = 0; a < 200; a++)
						{
							if (a != this.whoAmI && Main.npc[a].active && Main.npc[a].type == this.type && Math.Abs(this.position.X - Main.npc[a].position.X) + Math.Abs(this.position.Y - Main.npc[a].position.Y) < (float)this.width)
							{
								if (this.position.X >= Main.npc[a].position.X)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								else
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.position.Y >= Main.npc[a].position.Y)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -5f;
						this.ai[2] = 1f;
					}
					if (Main.netMode != 1)
					{
						this.localAI[2] = this.localAI[2] + 1f;
						if (this.localAI[2] >= (float)(360 + Main.rand.Next(360)) && base.Distance(Main.player[this.target].Center) < 400f && Math.Abs(base.DirectionTo(Main.player[this.target].Center).Y) < 0.5f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							this.localAI[2] = 0f;
							Vector2 center13 = base.Center + new Vector2((float)(this.direction * 30), 2f);
							Vector2 vector227 = base.DirectionTo(Main.player[this.target].Center) * 7f;
							if (vector227.HasNaNs())
							{
								vector227 = new Vector2((float)(this.direction * 8), 0f);
							}
							int num72 = (Main.expertMode ? 50 : 75);
							for (int b = 0; b < 4; b++)
							{
								Vector2 vector228 = vector227 + Utils.RandomVector2(Main.rand, -0.8f, 0.8f);
								Projectile.NewProjectile(center13.X, center13.Y, vector228.X, vector228.Y, 577, num72, 1f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				else if (this.type == 427)
				{
					if (this.velocity.Y != 0f)
					{
						this.rotation = this.velocity.X * 0.1f;
					}
					else
					{
						this.ai[2] = 0f;
						this.rotation = 0f;
					}
					if (this.velocity.Y != 0f && this.ai[2] == 1f)
					{
						this.TargetClosest(true);
						this.spriteDirection = -this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float x15 = Main.player[this.target].Center.X - base.Center.X;
							float y13 = Main.player[this.target].Center.Y - base.Center.Y;
							if (x15 < 0f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (x15 > 0f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							if (x15 < -20f && this.velocity.X > -6f)
							{
								this.velocity.X = this.velocity.X - 0.015f;
							}
							else if (x15 > 20f && this.velocity.X < 6f)
							{
								this.velocity.X = this.velocity.X + 0.015f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
							if (y13 < -20f && this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							else if (y13 > 20f && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							if (y13 < -20f && this.velocity.Y > -6f)
							{
								this.velocity.Y = this.velocity.Y - 0.15f;
							}
							else if (y13 > 20f && this.velocity.Y < 6f)
							{
								this.velocity.Y = this.velocity.Y + 0.15f;
							}
						}
						for (int c = 0; c < 200; c++)
						{
							if (c != this.whoAmI && Main.npc[c].active && Main.npc[c].type == this.type && Math.Abs(this.position.X - Main.npc[c].position.X) + Math.Abs(this.position.Y - Main.npc[c].position.Y) < (float)this.width)
							{
								if (this.position.X >= Main.npc[c].position.X)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								else
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.position.Y >= Main.npc[c].position.Y)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -5f;
						this.ai[2] = 1f;
					}
				}
				else if (this.type == 426)
				{
					if (this.ai[1] > 0f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.85f;
						if (this.velocity.Y == 0f)
						{
							this.velocity.Y = -0.4f;
						}
					}
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Collision.CanHit(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
						{
							float x16 = Main.player[this.target].Center.X - (float)(this.direction * 300) - base.Center.X;
							if (x16 < 40f && this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (x16 > 40f && this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							if (x16 < 40f && this.velocity.X > -5f)
							{
								this.velocity.X = this.velocity.X - 0.2f;
							}
							else if (x16 > 40f && this.velocity.X < 5f)
							{
								this.velocity.X = this.velocity.X + 0.2f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
					}
					else if (Main.player[this.target].Center.Y + 100f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -6f;
					}
					for (int d = 0; d < 200; d++)
					{
						if (d != this.whoAmI && Main.npc[d].active && Main.npc[d].type == this.type && Math.Abs(this.position.X - Main.npc[d].position.X) + Math.Abs(this.position.Y - Main.npc[d].position.Y) < (float)this.width)
						{
							if (this.position.X >= Main.npc[d].position.X)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							if (this.position.Y >= Main.npc[d].position.Y)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
						}
					}
					if (Main.rand.Next(6) == 0 && this.ai[1] <= 20f)
					{
						Dust[] dustArray3 = Main.dust;
						Vector2 center14 = base.Center + new Vector2((float)((this.spriteDirection == 1 ? 8 : -20)), -20f);
						float x17 = this.velocity.X;
						float y14 = this.velocity.Y;
						skyBlue = new Color();
						Dust dust8 = dustArray3[Dust.NewDust(center14, 8, 8, 229, x17, y14, 100, skyBlue, 1f)];
						dust8.velocity = (dust8.velocity / 4f) + (this.velocity / 2f);
						dust8.scale = 0.6f;
						dust8.noLight = true;
					}
					if (this.ai[1] >= 57f)
					{
						Random random = Main.rand;
						numArray = new int[] { 161, 229 };
						int num73 = Utils.SelectRandom<int>(random, numArray);
						Dust[] dustArray4 = Main.dust;
						Vector2 center15 = base.Center + new Vector2((float)((this.spriteDirection == 1 ? 8 : -20)), -20f);
						float x18 = this.velocity.X;
						float y15 = this.velocity.Y;
						skyBlue = new Color();
						Dust dust9 = dustArray4[Dust.NewDust(center15, 8, 8, num73, x18, y15, 100, skyBlue, 1f)];
						dust9.velocity = (dust9.velocity / 4f) + base.DirectionTo(Main.player[this.target].Top);
						dust9.scale = 1.2f;
						dust9.noLight = true;
					}
					if (Main.rand.Next(6) == 0)
					{
						Dust[] dustArray5 = Main.dust;
						Vector2 center16 = base.Center;
						skyBlue = new Color();
						Dust dust10 = dustArray5[Dust.NewDust(center16, 2, 2, 229, 0f, 0f, 0, skyBlue, 1f)];
						dust10.position = base.Center + new Vector2((float)((this.spriteDirection == 1 ? 26 : -26)), 24f);
						dust10.velocity.X = 0f;
						if (dust10.velocity.Y < 0f)
						{
							dust10.velocity.Y = 0f;
						}
						dust10.noGravity = true;
						dust10.scale = 1f;
						dust10.noLight = true;
					}
				}
				else if (this.type != 185)
				{
					if (this.type == 428)
					{
						if (this.velocity.Y != 0f)
						{
							NPC x19 = this;
							x19.rotation = x19.rotation + this.velocity.X * 0.08f;
						}
						else
						{
							this.rotation = 0f;
						}
					}
				}
				else if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					this.localAI[0] = 0f;
				}
				else if (this.localAI[0] == 1f)
				{
					NPC x20 = this;
					x20.rotation = x20.rotation + this.velocity.X * 0.05f;
				}
			Label10:
				if (this.type == 159 && Main.netMode != 1)
				{
					Vector2 vector229 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x21 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector229.X;
					float y16 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector229.Y;
					if ((float)Math.Sqrt((double)(x21 * x21 + y16 * y16)) > 300f)
					{
						this.Transform(158);
					}
				}
				if (this.type == 164 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int x22 = (int)base.Center.X / 16;
					int y17 = (int)base.Center.Y / 16;
					bool flag15 = false;
					for (int e = x22 - 1; e <= x22 + 1; e++)
					{
						for (int f = y17 - 1; f <= y17 + 1; f++)
						{
							if (Main.tile[e, f].wall > 0)
							{
								flag15 = true;
							}
						}
					}
					if (flag15)
					{
						this.Transform(165);
					}
				}
				if (this.type == 239 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int x23 = (int)base.Center.X / 16;
					int y18 = (int)base.Center.Y / 16;
					bool flag16 = false;
					for (int g = x23 - 1; g <= x23 + 1; g++)
					{
						for (int h = y18 - 1; h <= y18 + 1; h++)
						{
							if (Main.tile[g, h].wall > 0)
							{
								flag16 = true;
							}
						}
					}
					if (flag16)
					{
						this.Transform(240);
					}
				}
				if (this.type == 530 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int x24 = (int)base.Center.X / 16;
					int y19 = (int)base.Center.Y / 16;
					bool flag17 = false;
					for (int i1 = x24 - 1; i1 <= x24 + 1; i1++)
					{
						for (int j1 = y19 - 1; j1 <= y19 + 1; j1++)
						{
							if (Main.tile[i1, j1].wall > 0)
							{
								flag17 = true;
							}
						}
					}
					if (flag17)
					{
						this.Transform(531);
					}
				}
				if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && (this.type == 163 || this.type == 238) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
				{
					this.localAI[0] = this.localAI[0] + 1f;
					if (this.justHit)
					{
						this.localAI[0] = this.localAI[0] - (float)Main.rand.Next(20, 60);
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
					}
					if (this.localAI[0] > (float)Main.rand.Next(180, 900))
					{
						this.localAI[0] = 0f;
						Vector2 center17 = Main.player[this.target].Center - base.Center;
						center17.Normalize();
						center17 = center17 * 8f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, center17.X, center17.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
					}
				}
				if (this.type == 163 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int x25 = (int)base.Center.X / 16;
					int y20 = (int)base.Center.Y / 16;
					bool flag18 = false;
					for (int k1 = x25 - 1; k1 <= x25 + 1; k1++)
					{
						for (int l1 = y20 - 1; l1 <= y20 + 1; l1++)
						{
							if (Main.tile[k1, l1].wall > 0)
							{
								flag18 = true;
							}
						}
					}
					if (flag18)
					{
						this.Transform(238);
					}
				}
				if (this.type == 236 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int x26 = (int)base.Center.X / 16;
					int y21 = (int)base.Center.Y / 16;
					bool flag19 = false;
					for (int m1 = x26 - 1; m1 <= x26 + 1; m1++)
					{
						for (int n1 = y21 - 1; n1 <= y21 + 1; n1++)
						{
							if (Main.tile[m1, n1].wall > 0)
							{
								flag19 = true;
							}
						}
					}
					if (flag19)
					{
						this.Transform(237);
					}
				}
				if (this.type == 243)
				{
					if (this.justHit && Main.rand.Next(3) == 0)
					{
						this.ai[2] = this.ai[2] - (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] = this.ai[2] + 1f;
					float single42 = (float)Main.rand.Next(30, 900);
					single42 = single42 * ((float)this.life / (float)this.lifeMax);
					single42 = single42 + 30f;
					if (Main.netMode != 1 && this.ai[2] >= single42 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && (this.direction > 0 && base.Center.X < Main.player[this.target].Center.X || this.direction < 0 && base.Center.X > Main.player[this.target].Center.X) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float single43 = 15f;
						Vector2 y22 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 20f);
						float x27 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y22.X;
						float y23 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y22.Y;
						x27 = x27 + (float)Main.rand.Next(-40, 41);
						y23 = y23 + (float)Main.rand.Next(-40, 41);
						float single44 = (float)Math.Sqrt((double)(x27 * x27 + y23 * y23));
						this.netUpdate = true;
						single44 = single43 / single44;
						x27 = x27 * single44;
						y23 = y23 * single44;
						int num74 = 32;
						int num75 = 257;
						y22.X = y22.X + x27 * 3f;
						y22.Y = y22.Y + y23 * 3f;
						Projectile.NewProjectile(y22.X, y22.Y, x27, y23, num75, num74, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 251)
				{
					if (this.justHit)
					{
						this.ai[2] = this.ai[2] - (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] = this.ai[2] + 1f;
					float single45 = (float)Main.rand.Next(60, 1800);
					single45 = single45 * ((float)this.life / (float)this.lifeMax);
					single45 = single45 + 15f;
					if (Main.netMode != 1 && this.ai[2] >= single45 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && (this.direction > 0 && base.Center.X < Main.player[this.target].Center.X || this.direction < 0 && base.Center.X > Main.player[this.target].Center.X) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float single46 = 15f;
						Vector2 y24 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 12f);
						float x28 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y24.X;
						float y25 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y24.Y;
						x28 = x28 + (float)Main.rand.Next(-40, 41);
						y25 = y25 + (float)Main.rand.Next(-30, 0);
						float single47 = (float)Math.Sqrt((double)(x28 * x28 + y25 * y25));
						this.netUpdate = true;
						single47 = single46 / single47;
						x28 = x28 * single47;
						y25 = y25 * single47;
						int num76 = 30;
						int num77 = 83;
						y24.X = y24.X + x28 * 3f;
						y24.Y = y24.Y + y25 * 3f;
						Projectile.NewProjectile(y24.X, y24.Y, x28, y25, num77, num76, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 386)
				{
					if (!this.confused)
					{
						if (this.ai[2] < 60f)
						{
							this.ai[2] = this.ai[2] + 1f;
						}
						if (this.ai[2] > 0f && NPC.CountNPCS(387) >= 4 * NPC.CountNPCS(386))
						{
							this.ai[2] = 0f;
						}
						if (this.justHit)
						{
							this.ai[2] = -30f;
						}
						if (this.ai[2] == 30f)
						{
							int x29 = (int)this.position.X / 16;
							int y26 = (int)this.position.Y / 16;
							int x30 = (int)this.position.X / 16;
							int y27 = (int)this.position.Y / 16;
							int num78 = 5;
							int num79 = 0;
							bool flag20 = false;
							int num80 = 2;
							int num81 = 0;
						Label11:
							while (!flag20 && num79 < 100)
							{
								num79++;
								int num82 = Main.rand.Next(x29 - num78, x29 + num78);
								int num83 = Main.rand.Next(y26 - num78, y26 + num78);
								for (int o1 = num83; o1 < y26 + num78; o1++)
								{
									if ((o1 < y26 - num80 || o1 > y26 + num80 || num82 < x29 - num80 || num82 > x29 + num80) && (o1 < y27 - num81 || o1 > y27 + num81 || num82 < x30 - num81 || num82 > x30 + num81) && Main.tile[num82, o1].nactive())
									{
										bool flag21 = true;
										if (Main.tile[num82, o1 - 1].lava())
										{
											flag21 = false;
										}
										if (flag21 && Main.tileSolid[Main.tile[num82, o1].type] && !Collision.SolidTiles(num82 - 1, num82 + 1, o1 - 4, o1 - 1))
										{
											int num84 = NPC.NewNPC(num82 * 16 - this.width / 2, o1 * 16, 387, 0, 0f, 0f, 0f, 0f, 255);
											Main.npc[num84].position.Y = (float)(o1 * 16 - Main.npc[num84].height);
											flag20 = true;
											this.netUpdate = true;
											goto Label11;
										}
									}
								}
							}
						}
						if (this.ai[2] == 60f)
						{
							this.ai[2] = -120f;
						}
					}
					else
					{
						this.ai[2] = -60f;
					}
				}
				if (this.type == 389)
				{
					if (!this.confused)
					{
						if (this.ai[2] < 20f)
						{
							this.ai[2] = this.ai[2] + 1f;
						}
						if (this.justHit)
						{
							this.ai[2] = -30f;
						}
						if (this.ai[2] == 20f && Main.netMode != 1)
						{
							this.ai[2] = (float)(-10 + Main.rand.Next(3) * -10);
							Projectile.NewProjectile(base.Center.X, base.Center.Y + 8f, (float)(this.direction * 6), 0f, 437, 25, 1f, Main.myPlayer, 0f, 0f);
						}
					}
					else
					{
						this.ai[2] = -60f;
					}
				}
				if (this.type == 110 || this.type == 111 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 350 || this.type == 379 || this.type == 380 || this.type == 381 || this.type == 382 || this.type >= 449 && this.type <= 452 || this.type == 468 || this.type == 481 || this.type == 411 || this.type == 409 || this.type >= 498 && this.type <= 506 || this.type == 424 || this.type == 426 || this.type == 520)
				{
					bool flag22 = (this.type == 381 || this.type == 382 ? true : this.type == 520);
					bool flag23 = this.type == 426;
					bool flag24 = true;
					int num85 = -1;
					int num86 = -1;
					if (this.type == 411)
					{
						flag22 = true;
						num85 = 90;
						num86 = 90;
						if (this.ai[1] <= 150f)
						{
							flag24 = false;
						}
					}
					if (!this.confused)
					{
						if (this.ai[1] > 0f)
						{
							this.ai[1] = this.ai[1] - 1f;
						}
						if (this.justHit)
						{
							this.ai[1] = 30f;
							this.ai[2] = 0f;
						}
						int num87 = 70;
						if (this.type == 379 || this.type == 380)
						{
							num87 = 80;
						}
						if (this.type == 381 || this.type == 382)
						{
							num87 = 80;
						}
						if (this.type == 520)
						{
							num87 = 15;
						}
						if (this.type == 350)
						{
							num87 = 110;
						}
						if (this.type == 291)
						{
							num87 = 200;
						}
						if (this.type == 292)
						{
							num87 = 120;
						}
						if (this.type == 293)
						{
							num87 = 90;
						}
						if (this.type == 111)
						{
							num87 = 180;
						}
						if (this.type == 206)
						{
							num87 = 50;
						}
						if (this.type == 214)
						{
							num87 = 40;
						}
						if (this.type == 215)
						{
							num87 = 80;
						}
						if (this.type == 290)
						{
							num87 = 30;
						}
						if (this.type == 411)
						{
							num87 = 300;
						}
						if (this.type == 409)
						{
							num87 = 60;
						}
						if (this.type == 424)
						{
							num87 = 180;
						}
						if (this.type == 426)
						{
							num87 = 60;
						}
						bool flag25 = false;
						if (this.type == 216)
						{
							if (this.localAI[2] >= 20f)
							{
								flag25 = true;
							}
							num87 = (!flag25 ? 8 : 60);
						}
						int num88 = num87 / 2;
						if (this.type == 424)
						{
							num88 = num87 - 1;
						}
						if (this.type == 426)
						{
							num88 = num87 - 1;
						}
						if (this.ai[2] > 0f)
						{
							if (flag24)
							{
								this.TargetClosest(true);
							}
							if (this.ai[1] == (float)num88)
							{
								if (this.type == 216)
								{
									this.localAI[2] = this.localAI[2] + 1f;
								}
								float single48 = 11f;
								if (this.type == 111)
								{
									single48 = 9f;
								}
								if (this.type == 206)
								{
									single48 = 7f;
								}
								if (this.type == 290)
								{
									single48 = 9f;
								}
								if (this.type == 293)
								{
									single48 = 4f;
								}
								if (this.type == 214)
								{
									single48 = 14f;
								}
								if (this.type == 215)
								{
									single48 = 16f;
								}
								if (this.type == 382)
								{
									single48 = 7f;
								}
								if (this.type == 520)
								{
									single48 = 8f;
								}
								if (this.type == 409)
								{
									single48 = 4f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									single48 = 7f;
								}
								if (this.type == 481)
								{
									single48 = 9f;
								}
								if (this.type == 468)
								{
									single48 = 7.5f;
								}
								if (this.type == 411)
								{
									single48 = 1f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									single48 = 7f;
								}
								Vector2 y28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								if (this.type == 481)
								{
									y28.Y = y28.Y - 14f;
								}
								if (this.type == 206)
								{
									y28.Y = y28.Y - 10f;
								}
								if (this.type == 290)
								{
									y28.Y = y28.Y - 10f;
								}
								if (this.type == 381 || this.type == 382)
								{
									y28.Y = y28.Y + 6f;
								}
								if (this.type == 520)
								{
									y28.Y = this.position.Y + 20f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									y28.Y = y28.Y - 8f;
								}
								if (this.type == 426)
								{
									y28 = y28 + new Vector2((float)(this.spriteDirection * 2), -12f);
								}
								float x31 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y28.X;
								float single49 = Math.Abs(x31) * 0.1f;
								if (this.type == 291 || this.type == 292)
								{
									single49 = 0f;
								}
								if (this.type == 215)
								{
									single49 = Math.Abs(x31) * 0.08f;
								}
								if (this.type == 214 || this.type == 216 && !flag25)
								{
									single49 = 0f;
								}
								if (this.type == 381 || this.type == 382 || this.type == 520)
								{
									single49 = 0f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									single49 = Math.Abs(x31) * (float)Main.rand.Next(10, 50) * 0.01f;
								}
								if (this.type == 468)
								{
									single49 = Math.Abs(x31) * (float)Main.rand.Next(10, 50) * 0.01f;
								}
								if (this.type == 481)
								{
									single49 = Math.Abs(x31) * (float)Main.rand.Next(-10, 11) * 0.0025f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									single49 = Math.Abs(x31) * (float)Main.rand.Next(1, 11) * 0.0025f;
								}
								float y29 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y28.Y - single49;
								if (this.type == 291)
								{
									x31 = x31 + (float)Main.rand.Next(-40, 41) * 0.2f;
									y29 = y29 + (float)Main.rand.Next(-40, 41) * 0.2f;
								}
								else if (this.type == 381 || this.type == 382 || this.type == 520)
								{
									x31 = x31 + (float)Main.rand.Next(-100, 101) * 0.4f;
									y29 = y29 + (float)Main.rand.Next(-100, 101) * 0.4f;
									x31 = x31 * ((float)Main.rand.Next(85, 116) * 0.01f);
									y29 = y29 * ((float)Main.rand.Next(85, 116) * 0.01f);
									if (this.type == 520)
									{
										x31 = x31 + (float)Main.rand.Next(-100, 101) * 0.6f;
										y29 = y29 + (float)Main.rand.Next(-100, 101) * 0.6f;
										x31 = x31 * ((float)Main.rand.Next(85, 116) * 0.015f);
										y29 = y29 * ((float)Main.rand.Next(85, 116) * 0.015f);
									}
								}
								else if (this.type == 481)
								{
									x31 = x31 + (float)Main.rand.Next(-40, 41) * 0.4f;
									y29 = y29 + (float)Main.rand.Next(-40, 41) * 0.4f;
								}
								else if (this.type >= 498 && this.type <= 506)
								{
									x31 = x31 + (float)Main.rand.Next(-40, 41) * 0.3f;
									y29 = y29 + (float)Main.rand.Next(-40, 41) * 0.3f;
								}
								else if (this.type != 292)
								{
									x31 = x31 + (float)Main.rand.Next(-40, 41);
									y29 = y29 + (float)Main.rand.Next(-40, 41);
								}
								float single50 = (float)Math.Sqrt((double)(x31 * x31 + y29 * y29));
								this.netUpdate = true;
								single50 = single48 / single50;
								x31 = x31 * single50;
								y29 = y29 * single50;
								int num89 = 35;
								int num90 = 82;
								if (this.type == 111)
								{
									num89 = 11;
								}
								if (this.type == 206)
								{
									num89 = 37;
								}
								if (this.type == 379 || this.type == 380)
								{
									num89 = 40;
								}
								if (this.type == 350)
								{
									num89 = 45;
								}
								if (this.type == 468)
								{
									num89 = 50;
								}
								if (this.type == 111)
								{
									num90 = 81;
								}
								if (this.type == 379 || this.type == 380)
								{
									num90 = 81;
								}
								if (this.type == 381)
								{
									num90 = 436;
									num89 = 24;
								}
								if (this.type == 382)
								{
									num90 = 438;
									num89 = 30;
								}
								if (this.type == 520)
								{
									num90 = 592;
									num89 = 35;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									num90 = 471;
									num89 = 20;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									num90 = 572;
									num89 = 14;
								}
								if (this.type == 481)
								{
									num90 = 508;
									num89 = 24;
								}
								if (this.type == 206)
								{
									num90 = 177;
								}
								if (this.type == 468)
								{
									num90 = 501;
								}
								if (this.type == 411)
								{
									num90 = 537;
									num89 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 424)
								{
									num90 = 573;
									num89 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 426)
								{
									num90 = 581;
									num89 = (Main.expertMode ? 45 : 60);
								}
								if (this.type == 291)
								{
									num90 = 302;
									num89 = 100;
								}
								if (this.type == 290)
								{
									num90 = 300;
									num89 = 60;
								}
								if (this.type == 293)
								{
									num90 = 303;
									num89 = 60;
								}
								if (this.type == 214)
								{
									num90 = 180;
									num89 = 25;
								}
								if (this.type == 215)
								{
									num90 = 82;
									num89 = 40;
								}
								if (this.type == 292)
								{
									num89 = 50;
									num90 = 180;
								}
								if (this.type == 216)
								{
									num90 = 180;
									num89 = 30;
									if (flag25)
									{
										num89 = 100;
										num90 = 240;
										this.localAI[2] = 0f;
									}
								}
								y28.X = y28.X + x31;
								y28.Y = y28.Y + y29;
								if (Main.expertMode && this.type == 290)
								{
									num89 = (int)((double)num89 * 0.75);
								}
								if (Main.expertMode && this.type >= 381 && this.type <= 392)
								{
									num89 = (int)((double)num89 * 0.8);
								}
								if (Main.netMode != 1)
								{
									if (this.type == 292)
									{
										for (int p1 = 0; p1 < 4; p1++)
										{
											x31 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y28.X;
											y29 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y28.Y;
											single50 = (float)Math.Sqrt((double)(x31 * x31 + y29 * y29));
											single50 = 12f / single50;
											float single51 = x31 + (float)Main.rand.Next(-40, 41);
											x31 = single51;
											x31 = single51;
											float single52 = y29 + (float)Main.rand.Next(-40, 41);
											y29 = single52;
											y29 = single52;
											x31 = x31 * single50;
											y29 = y29 * single50;
											Projectile.NewProjectile(y28.X, y28.Y, x31, y29, num90, num89, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									else if (this.type == 411)
									{
										Projectile.NewProjectile(y28.X, y28.Y, x31, y29, num90, num89, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
									}
									else if (this.type == 424)
									{
										for (int q1 = 0; q1 < 4; q1++)
										{
											Projectile.NewProjectile(base.Center.X - (float)(this.spriteDirection * 4), base.Center.Y + 6f, (float)(-3 + 2 * q1) * 0.15f, (float)(-Main.rand.Next(0, 3)) * 0.2f - 0.1f, num90, num89, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
										}
									}
									else if (this.type != 409)
									{
										Projectile.NewProjectile(y28.X, y28.Y, x31, y29, num90, num89, 0f, Main.myPlayer, 0f, 0f);
									}
									else
									{
										int num91 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 410, this.whoAmI, 0f, 0f, 0f, 0f, 255);
										Main.npc[num91].velocity = new Vector2(x31, -6f + y29);
									}
								}
								if (Math.Abs(y29) > Math.Abs(x31) * 2f)
								{
									if (y29 <= 0f)
									{
										this.ai[2] = 5f;
									}
									else
									{
										this.ai[2] = 1f;
									}
								}
								else if (Math.Abs(x31) > Math.Abs(y29) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (y29 <= 0f)
								{
									this.ai[2] = 4f;
								}
								else
								{
									this.ai[2] = 2f;
								}
							}
							if (this.velocity.Y != 0f && !flag23 || this.ai[1] <= 0f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 0f;
							}
							else if (!flag22 || num85 != -1 && this.ai[1] >= (float)num85 && this.ai[1] < (float)(num85 + num86) && (!flag23 || this.velocity.Y == 0f))
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.spriteDirection = this.direction;
							}
						}
						if (this.type == 468 && !Main.eclipse)
						{
							flag22 = true;
						}
						else if ((this.ai[2] <= 0f || flag22) && (this.velocity.Y == 0f || flag23) && this.ai[1] <= 0f && !Main.player[this.target].dead)
						{
							bool flag26 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							if (this.type == 520)
							{
								flag26 = Collision.CanHitLine(base.Top + new Vector2(0f, 20f), 0, 0, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							}
							if (Main.player[this.target].stealth == 0f && Main.player[this.target].itemAnimation == 0)
							{
								flag26 = false;
							}
							if (flag26)
							{
								float single53 = 10f;
								Vector2 vector230 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x32 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector230.X;
								float single54 = Math.Abs(x32) * 0.1f;
								float y30 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector230.Y - single54;
								x32 = x32 + (float)Main.rand.Next(-40, 41);
								y30 = y30 + (float)Main.rand.Next(-40, 41);
								float single55 = (float)Math.Sqrt((double)(x32 * x32 + y30 * y30));
								float single56 = 700f;
								if (this.type == 214)
								{
									single56 = 550f;
								}
								if (this.type == 215)
								{
									single56 = 800f;
								}
								if (this.type >= 498 && this.type <= 506)
								{
									single56 = 190f;
								}
								if (this.type >= 449 && this.type <= 452)
								{
									single56 = 200f;
								}
								if (this.type == 481)
								{
									single56 = 400f;
								}
								if (this.type == 468)
								{
									single56 = 400f;
								}
								if (single55 < single56)
								{
									this.netUpdate = true;
									this.velocity.X = this.velocity.X * 0.5f;
									single55 = single53 / single55;
									x32 = x32 * single55;
									y30 = y30 * single55;
									this.ai[2] = 3f;
									this.ai[1] = (float)num87;
									if (Math.Abs(y30) > Math.Abs(x32) * 2f)
									{
										if (y30 <= 0f)
										{
											this.ai[2] = 5f;
										}
										else
										{
											this.ai[2] = 1f;
										}
									}
									else if (Math.Abs(x32) > Math.Abs(y30) * 2f)
									{
										this.ai[2] = 3f;
									}
									else if (y30 <= 0f)
									{
										this.ai[2] = 4f;
									}
									else
									{
										this.ai[2] = 2f;
									}
								}
							}
						}
						if (this.ai[2] <= 0f || flag22 && (num85 == -1 || this.ai[1] < (float)num85 || this.ai[1] >= (float)(num85 + num86)))
						{
							float single57 = 1f;
							float single58 = 0.07f;
							float single59 = 0.8f;
							if (this.type == 214)
							{
								single57 = 2f;
								single58 = 0.09f;
							}
							else if (this.type == 215)
							{
								single57 = 1.5f;
								single58 = 0.08f;
							}
							else if (this.type == 381 || this.type == 382)
							{
								single57 = 2f;
								single58 = 0.5f;
							}
							else if (this.type == 520)
							{
								single57 = 4f;
								single58 = 1f;
								single59 = 0.7f;
							}
							else if (this.type == 411)
							{
								single57 = 2f;
								single58 = 0.5f;
							}
							else if (this.type == 409)
							{
								single57 = 2f;
								single58 = 0.5f;
							}
							bool flag27 = false;
							if ((this.type == 381 || this.type == 382) && Vector2.Distance(base.Center, Main.player[this.target].Center) < 300f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag27 = true;
								this.ai[3] = 0f;
							}
							if (this.type == 520 && Vector2.Distance(base.Center, Main.player[this.target].Center) < 400f && Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag27 = true;
								this.ai[3] = 0f;
							}
							if (this.velocity.X < -single57 || this.velocity.X > single57 || flag27)
							{
								if (this.velocity.Y == 0f)
								{
									NPC nPC29 = this;
									nPC29.velocity = nPC29.velocity * single59;
								}
							}
							else if (this.velocity.X < single57 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + single58;
								if (this.velocity.X > single57)
								{
									this.velocity.X = single57;
								}
							}
							else if (this.velocity.X > -single57 && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - single58;
								if (this.velocity.X < -single57)
								{
									this.velocity.X = -single57;
								}
							}
						}
						if (this.type == 520)
						{
							this.localAI[2] = this.localAI[2] + 1f;
							if (this.localAI[2] >= 6f)
							{
								this.localAI[2] = 0f;
								this.localAI[3] = Main.player[this.target].DirectionFrom(base.Top + new Vector2(0f, 20f)).ToRotation();
							}
						}
					}
					else
					{
						this.ai[2] = 0f;
					}
				}
				if (this.type == 109 && Main.netMode != 1 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] = this.ai[2] + 1f;
					if (this.ai[2] > 450f)
					{
						Vector2 vector231 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 24), this.position.Y + 4f);
						int num92 = 3 * this.direction;
						int num93 = -5;
						int num94 = Projectile.NewProjectile(vector231.X, vector231.Y, (float)num92, (float)num93, 75, 0, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num94].timeLeft = 300;
						this.ai[2] = 0f;
					}
				}
				bool flag28 = false;
				if (this.velocity.Y == 0f)
				{
					int y31 = (int)(this.position.Y + (float)this.height + 7f) / 16;
					int x33 = (int)this.position.X / 16;
					int x34 = (int)(this.position.X + (float)this.width) / 16;
					int num95 = x33;
					while (num95 <= x34)
					{
						if (Main.tile[num95, y31] == null)
						{
							return;
						}
						if (!Main.tile[num95, y31].nactive() || !Main.tileSolid[Main.tile[num95, y31].type])
						{
							num95++;
						}
						else
						{
							flag28 = true;
							break;
						}
					}
				}
				if (this.type == 428)
				{
					flag28 = false;
				}
				if (this.velocity.Y >= 0f)
				{
					int num96 = 0;
					if (this.velocity.X < 0f)
					{
						num96 = -1;
					}
					if (this.velocity.X > 0f)
					{
						num96 = 1;
					}
					Vector2 vector232 = this.position;
					vector232.X = vector232.X + this.velocity.X;
					int x35 = (int)((vector232.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num96)) / 16f);
					int y32 = (int)((vector232.Y + (float)this.height - 1f) / 16f);
					if (Main.tile[x35, y32] == null)
					{
						Main.tile[x35, y32] = new Tile();
					}
					if (Main.tile[x35, y32 - 1] == null)
					{
						Main.tile[x35, y32 - 1] = new Tile();
					}
					if (Main.tile[x35, y32 - 2] == null)
					{
						Main.tile[x35, y32 - 2] = new Tile();
					}
					if (Main.tile[x35, y32 - 3] == null)
					{
						Main.tile[x35, y32 - 3] = new Tile();
					}
					if (Main.tile[x35, y32 + 1] == null)
					{
						Main.tile[x35, y32 + 1] = new Tile();
					}
					if (Main.tile[x35 - num96, y32 - 3] == null)
					{
						Main.tile[x35 - num96, y32 - 3] = new Tile();
					}
					if ((float)(x35 * 16) < vector232.X + (float)this.width && (float)(x35 * 16 + 16) > vector232.X && (Main.tile[x35, y32].nactive() && !Main.tile[x35, y32].topSlope() && !Main.tile[x35, y32 - 1].topSlope() && Main.tileSolid[Main.tile[x35, y32].type] && !Main.tileSolidTop[Main.tile[x35, y32].type] || Main.tile[x35, y32 - 1].halfBrick() && Main.tile[x35, y32 - 1].nactive()) && (!Main.tile[x35, y32 - 1].nactive() || !Main.tileSolid[Main.tile[x35, y32 - 1].type] || Main.tileSolidTop[Main.tile[x35, y32 - 1].type] || Main.tile[x35, y32 - 1].halfBrick() && (!Main.tile[x35, y32 - 4].nactive() || !Main.tileSolid[Main.tile[x35, y32 - 4].type] || Main.tileSolidTop[Main.tile[x35, y32 - 4].type])) && (!Main.tile[x35, y32 - 2].nactive() || !Main.tileSolid[Main.tile[x35, y32 - 2].type] || Main.tileSolidTop[Main.tile[x35, y32 - 2].type]) && (!Main.tile[x35, y32 - 3].nactive() || !Main.tileSolid[Main.tile[x35, y32 - 3].type] || Main.tileSolidTop[Main.tile[x35, y32 - 3].type]) && (!Main.tile[x35 - num96, y32 - 3].nactive() || !Main.tileSolid[Main.tile[x35 - num96, y32 - 3].type]))
					{
						float single60 = (float)(y32 * 16);
						if (Main.tile[x35, y32].halfBrick())
						{
							single60 = single60 + 8f;
						}
						if (Main.tile[x35, y32 - 1].halfBrick())
						{
							single60 = single60 - 8f;
						}
						if (single60 < vector232.Y + (float)this.height)
						{
							float y33 = vector232.Y + (float)this.height - single60;
							float single61 = 16.1f;
							if (this.type == 163 || this.type == 164 || this.type == 236 || this.type == 239 || this.type == 530)
							{
								single61 = single61 + 8f;
							}
							if (y33 <= single61)
							{
								NPC nPC30 = this;
								nPC30.gfxOffY = nPC30.gfxOffY + (this.position.Y + (float)this.height - single60);
								this.position.Y = single60 - (float)this.height;
								if (y33 >= 9f)
								{
									this.stepSpeed = 2f;
								}
								else
								{
									this.stepSpeed = 1f;
								}
							}
						}
					}
				}
				if (flag28)
				{
					int x36 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
					int y34 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
					if (this.type == 109 || this.type == 163 || this.type == 164 || this.type == 199 || this.type == 236 || this.type == 239 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 391 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 508 || this.type == 415 || this.type == 530 || this.type == 532)
					{
						x36 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 16) * this.direction)) / 16f);
					}
					if (Main.tile[x36, y34] == null)
					{
						Main.tile[x36, y34] = new Tile();
					}
					if (Main.tile[x36, y34 - 1] == null)
					{
						Main.tile[x36, y34 - 1] = new Tile();
					}
					if (Main.tile[x36, y34 - 2] == null)
					{
						Main.tile[x36, y34 - 2] = new Tile();
					}
					if (Main.tile[x36, y34 - 3] == null)
					{
						Main.tile[x36, y34 - 3] = new Tile();
					}
					if (Main.tile[x36, y34 + 1] == null)
					{
						Main.tile[x36, y34 + 1] = new Tile();
					}
					if (Main.tile[x36 + this.direction, y34 - 1] == null)
					{
						Main.tile[x36 + this.direction, y34 - 1] = new Tile();
					}
					if (Main.tile[x36 + this.direction, y34 + 1] == null)
					{
						Main.tile[x36 + this.direction, y34 + 1] = new Tile();
					}
					if (Main.tile[x36 - this.direction, y34 + 1] == null)
					{
						Main.tile[x36 - this.direction, y34 + 1] = new Tile();
					}
					Main.tile[x36, y34 + 1].halfBrick();
					if (!Main.tile[x36, y34 - 1].nactive() || Main.tile[x36, y34 - 1].type != 10 && Main.tile[x36, y34 - 1].type != 388 || !flag11)
					{
						int num97 = this.spriteDirection;
						if (this.type == 425)
						{
							num97 = num97 * -1;
						}
						if (this.velocity.X < 0f && num97 == -1 || this.velocity.X > 0f && num97 == 1)
						{
							if (this.height >= 32 && Main.tile[x36, y34 - 2].nactive() && Main.tileSolid[Main.tile[x36, y34 - 2].type])
							{
								if (!Main.tile[x36, y34 - 3].nactive() || !Main.tileSolid[Main.tile[x36, y34 - 3].type])
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
								else
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
							}
							else if (Main.tile[x36, y34 - 1].nactive() && Main.tileSolid[Main.tile[x36, y34 - 1].type])
							{
								this.velocity.Y = -6f;
								this.netUpdate = true;
							}
							else if (this.position.Y + (float)this.height - (float)(y34 * 16) > 20f && Main.tile[x36, y34].nactive() && !Main.tile[x36, y34].topSlope() && Main.tileSolid[Main.tile[x36, y34].type])
							{
								this.velocity.Y = -5f;
								this.netUpdate = true;
							}
							else if (this.directionY < 0 && this.type != 67 && (!Main.tile[x36, y34 + 1].nactive() || !Main.tileSolid[Main.tile[x36, y34 + 1].type]) && (!Main.tile[x36 + this.direction, y34 + 1].nactive() || !Main.tileSolid[Main.tile[x36 + this.direction, y34 + 1].type]))
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X * 1.5f;
								this.netUpdate = true;
							}
							else if (flag11)
							{
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.velocity.Y == 0f && flag9 && this.ai[3] == 1f)
							{
								this.velocity.Y = -5f;
							}
						}
						if ((this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 77 || this.type == 104 || this.type == 168 || this.type == 196 || this.type == 385 || this.type == 389 || this.type == 464 || this.type == 470 || this.type >= 524 && this.type <= 527) && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 100f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && (this.direction > 0 && this.velocity.X >= 1f || this.direction < 0 && this.velocity.X <= -1f))
						{
							this.velocity.X = this.velocity.X * 2f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 120 && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 287 && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 150f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && (this.direction > 0 && this.velocity.X >= 1f || this.direction < 0 && this.velocity.X <= -1f))
						{
							this.velocity.X = (float)(8 * this.direction);
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 287 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.2f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 460 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.3f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
					}
					else
					{
						this.ai[2] = this.ai[2] + 1f;
						this.ai[3] = 0f;
						if (this.ai[2] >= 60f)
						{
							if (!Main.bloodMoon && (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 320 || this.type == 321 || this.type == 319))
							{
								this.ai[1] = 0f;
							}
							this.velocity.X = 0.5f * (float)(-this.direction);
							int num98 = 5;
							if (Main.tile[x36, y34 - 1].type == 388)
							{
								num98 = 2;
							}
							this.ai[1] = this.ai[1] + (float)num98;
							if (this.type == 27)
							{
								this.ai[1] = this.ai[1] + 1f;
							}
							if (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296)
							{
								this.ai[1] = this.ai[1] + 6f;
							}
							this.ai[2] = 0f;
							bool flag29 = false;
							if (this.ai[1] >= 10f)
							{
								flag29 = true;
								this.ai[1] = 10f;
							}
							if (this.type == 460)
							{
								flag29 = true;
							}
							WorldGen.KillTile(x36, y34 - 1, true, false, false);
							if ((Main.netMode != 1 || !flag29) && flag29 && Main.netMode != 1)
							{
								if (this.type != 26)
								{
									if (Main.tile[x36, y34 - 1].type == 10)
									{
										bool flag30 = WorldGen.OpenDoor(x36, y34 - 1, this.direction);
										if (!flag30)
										{
											this.ai[3] = (float)num57;
											this.netUpdate = true;
										}
										if (Main.netMode == 2 && flag30)
										{
											NetMessage.SendData(19, -1, -1, "", 0, (float)x36, (float)(y34 - 1), (float)this.direction, 0, 0, 0);
										}
									}
									if (Main.tile[x36, y34 - 1].type == 388)
									{
										bool flag31 = WorldGen.ShiftTallGate(x36, y34 - 1, false);
										if (!flag31)
										{
											this.ai[3] = (float)num57;
											this.netUpdate = true;
										}
										if (Main.netMode == 2 && flag31)
										{
											NetMessage.SendData(19, -1, -1, "", 4, (float)x36, (float)(y34 - 1), 0f, 0, 0, 0);
										}
									}
								}
								else
								{
									WorldGen.KillTile(x36, y34 - 1, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 0, (float)x36, (float)(y34 - 1), 0f, 0, 0, 0);
									}
								}
							}
						}
					}
				}
				else if (flag11)
				{
					this.ai[1] = 0f;
					this.ai[2] = 0f;
				}
				if (Main.netMode != 1 && this.type == 120 && this.ai[3] >= (float)num57)
				{
					int x37 = (int)Main.player[this.target].position.X / 16;
					int y35 = (int)Main.player[this.target].position.Y / 16;
					int x38 = (int)this.position.X / 16;
					int y36 = (int)this.position.Y / 16;
					int num99 = 20;
					int num100 = 0;
					bool flag32 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num100 = 100;
						flag32 = true;
					}
					while (!flag32)
					{
						if (num100 >= 100)
						{
							return;
						}
						num100++;
						int num101 = Main.rand.Next(x37 - num99, x37 + num99);
						int num102 = Main.rand.Next(y35 - num99, y35 + num99);
						for (int r1 = num102; r1 < y35 + num99; r1++)
						{
							if ((r1 < y35 - 4 || r1 > y35 + 4 || num101 < x37 - 4 || num101 > x37 + 4) && (r1 < y36 - 1 || r1 > y36 + 1 || num101 < x38 - 1 || num101 > x38 + 1) && Main.tile[num101, r1].nactive())
							{
								bool flag33 = true;
								if (this.type == 32 && Main.tile[num101, r1 - 1].wall == 0)
								{
									flag33 = false;
								}
								else if (Main.tile[num101, r1 - 1].lava())
								{
									flag33 = false;
								}
								if (flag33 && Main.tileSolid[Main.tile[num101, r1].type] && !Collision.SolidTiles(num101 - 1, num101 + 1, r1 - 4, r1 - 1))
								{
									this.position.X = (float)(num101 * 16 - this.width / 2);
									this.position.Y = (float)(r1 * 16 - this.height);
									this.netUpdate = true;
									this.ai[3] = -120f;
								}
							}
						}
					}
				}
			}
			else if (this.aiStyle == 4)
			{
				bool flag34 = false;
				if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.12)
				{
					flag34 = true;
				}
				bool flag35 = false;
				if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.04)
				{
					flag35 = true;
				}
				float single62 = 20f;
				if (flag35)
				{
					single62 = 10f;
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
				{
					this.TargetClosest(true);
				}
				bool flag36 = Main.player[this.target].dead;
				float x39 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
				float y37 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
				float single63 = (float)Math.Atan2((double)y37, (double)x39) + 1.57f;
				if (single63 < 0f)
				{
					single63 = single63 + 6.283f;
				}
				else if ((double)single63 > 6.283)
				{
					single63 = single63 - 6.283f;
				}
				float single64 = 0f;
				if (this.ai[0] == 0f && this.ai[1] == 0f)
				{
					single64 = 0.02f;
				}
				if (this.ai[0] == 0f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					single64 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 0f)
				{
					single64 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					single64 = 0.08f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 4f && this.ai[2] > single62)
				{
					single64 = 0.15f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 5f)
				{
					single64 = 0.05f;
				}
				if (Main.expertMode)
				{
					single64 = single64 * 1.5f;
				}
				if (flag35 && Main.expertMode)
				{
					single64 = 0f;
				}
				if (this.rotation < single63)
				{
					if ((double)(single63 - this.rotation) <= 3.1415)
					{
						NPC nPC31 = this;
						nPC31.rotation = nPC31.rotation + single64;
					}
					else
					{
						NPC nPC32 = this;
						nPC32.rotation = nPC32.rotation - single64;
					}
				}
				else if (this.rotation > single63)
				{
					if ((double)(this.rotation - single63) <= 3.1415)
					{
						NPC nPC33 = this;
						nPC33.rotation = nPC33.rotation - single64;
					}
					else
					{
						NPC nPC34 = this;
						nPC34.rotation = nPC34.rotation + single64;
					}
				}
				if (this.rotation > single63 - single64 && this.rotation < single63 + single64)
				{
					this.rotation = single63;
				}
				if (this.rotation < 0f)
				{
					NPC nPC35 = this;
					nPC35.rotation = nPC35.rotation + 6.283f;
				}
				else if ((double)this.rotation > 6.283)
				{
					NPC nPC36 = this;
					nPC36.rotation = nPC36.rotation - 6.283f;
				}
				if (this.rotation > single63 - single64 && this.rotation < single63 + single64)
				{
					this.rotation = single63;
				}
				if (Main.rand.Next(5) == 0)
				{
					Vector2 vector233 = new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f);
					int num103 = this.width;
					int num104 = (int)((float)this.height * 0.5f);
					float x40 = this.velocity.X;
					skyBlue = new Color();
					int num105 = Dust.NewDust(vector233, num103, num104, 5, x40, 2f, 0, skyBlue, 1f);
					Main.dust[num105].velocity.X = Main.dust[num105].velocity.X * 0.5f;
					Main.dust[num105].velocity.Y = Main.dust[num105].velocity.Y * 0.1f;
				}
				if (Main.dayTime || flag36)
				{
					this.velocity.Y = this.velocity.Y - 0.04f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
						return;
					}
				}
				else if (this.ai[0] == 0f)
				{
					if (this.ai[1] == 0f)
					{
						float single65 = 5f;
						float single66 = 0.04f;
						if (Main.expertMode)
						{
							single66 = 0.15f;
							single65 = 7f;
						}
						Vector2 vector234 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x41 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector234.X;
						float y38 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector234.Y;
						float single67 = (float)Math.Sqrt((double)(x41 * x41 + y38 * y38));
						float single68 = single67;
						single67 = single65 / single67;
						x41 = x41 * single67;
						y38 = y38 * single67;
						if (this.velocity.X < x41)
						{
							this.velocity.X = this.velocity.X + single66;
							if (this.velocity.X < 0f && x41 > 0f)
							{
								this.velocity.X = this.velocity.X + single66;
							}
						}
						else if (this.velocity.X > x41)
						{
							this.velocity.X = this.velocity.X - single66;
							if (this.velocity.X > 0f && x41 < 0f)
							{
								this.velocity.X = this.velocity.X - single66;
							}
						}
						if (this.velocity.Y < y38)
						{
							this.velocity.Y = this.velocity.Y + single66;
							if (this.velocity.Y < 0f && y38 > 0f)
							{
								this.velocity.Y = this.velocity.Y + single66;
							}
						}
						else if (this.velocity.Y > y38)
						{
							this.velocity.Y = this.velocity.Y - single66;
							if (this.velocity.Y > 0f && y38 < 0f)
							{
								this.velocity.Y = this.velocity.Y - single66;
							}
						}
						this.ai[2] = this.ai[2] + 1f;
						float single69 = 600f;
						if (Main.expertMode)
						{
							single69 = single69 * 0.35f;
						}
						if (this.ai[2] >= single69)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
						}
						else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && single68 < 500f || Main.expertMode && single68 < 500f)
						{
							if (!Main.player[this.target].dead)
							{
								this.ai[3] = this.ai[3] + 1f;
							}
							float single70 = 110f;
							if (Main.expertMode)
							{
								single70 = single70 * 0.4f;
							}
							if (this.ai[3] >= single70)
							{
								this.ai[3] = 0f;
								this.rotation = single63;
								float single71 = 5f;
								if (Main.expertMode)
								{
									single71 = 6f;
								}
								float x42 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector234.X;
								float y39 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector234.Y;
								float single72 = (float)Math.Sqrt((double)(x42 * x42 + y39 * y39));
								single72 = single71 / single72;
								Vector2 vector235 = vector234;
								vector2.X = x42 * single72;
								vector2.Y = y39 * single72;
								vector235.X = vector235.X + vector2.X * 10f;
								vector235.Y = vector235.Y + vector2.Y * 10f;
								if (Main.netMode != 1)
								{
									int num106 = NPC.NewNPC((int)vector235.X, (int)vector235.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num106].velocity.X = vector2.X;
									Main.npc[num106].velocity.Y = vector2.Y;
									if (Main.netMode == 2 && num106 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num106, 0f, 0f, 0f, 0, 0, 0);
									}
								}
								Main.PlaySound(3, (int)vector235.X, (int)vector235.Y, 1);
								for (int s1 = 0; s1 < 10; s1++)
								{
									skyBlue = new Color();
									Dust.NewDust(vector235, 20, 20, 5, vector2.X * 0.4f, vector2.Y * 0.4f, 0, skyBlue, 1f);
								}
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.rotation = single63;
						float single73 = 6f;
						if (Main.expertMode)
						{
							single73 = 7f;
						}
						Vector2 vector236 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x43 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector236.X;
						float y40 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector236.Y;
						float single74 = (float)Math.Sqrt((double)(x43 * x43 + y40 * y40));
						single74 = single73 / single74;
						this.velocity.X = x43 * single74;
						this.velocity.Y = y40 * single74;
						this.ai[1] = 2f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
						}
					}
					else if (this.ai[1] == 2f)
					{
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] < 40f)
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						else
						{
							NPC nPC37 = this;
							nPC37.velocity = nPC37.velocity * 0.98f;
							if (Main.expertMode)
							{
								NPC nPC38 = this;
								nPC38.velocity = nPC38.velocity * 0.985f;
							}
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						int num107 = 150;
						if (Main.expertMode)
						{
							num107 = 100;
						}
						if (this.ai[2] >= (float)num107)
						{
							this.ai[3] = this.ai[3] + 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = single63;
							if (this.ai[3] < 3f)
							{
								this.ai[1] = 1f;
							}
							else
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
						}
					}
					float single75 = 0.5f;
					if (Main.expertMode)
					{
						single75 = 0.65f;
					}
					if ((float)this.life < (float)this.lifeMax * single75)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
							return;
						}
					}
				}
				else if (this.ai[0] == 1f || this.ai[0] == 2f)
				{
					if (this.ai[0] != 1f)
					{
						this.ai[2] = this.ai[2] - 0.005f;
						if (this.ai[2] < 0f)
						{
							this.ai[2] = 0f;
						}
					}
					else
					{
						this.ai[2] = this.ai[2] + 0.005f;
						if ((double)this.ai[2] > 0.5)
						{
							this.ai[2] = 0.5f;
						}
					}
					NPC nPC39 = this;
					nPC39.rotation = nPC39.rotation + this.ai[2];
					this.ai[1] = this.ai[1] + 1f;
					if (Main.expertMode && this.ai[1] % 20f == 0f)
					{
						float single76 = 5f;
						Vector2 vector237 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float single77 = (float)Main.rand.Next(-200, 200);
						float single78 = (float)Main.rand.Next(-200, 200);
						float single79 = (float)Math.Sqrt((double)(single77 * single77 + single78 * single78));
						single79 = single76 / single79;
						Vector2 vector238 = vector237;
						vector21.X = single77 * single79;
						vector21.Y = single78 * single79;
						vector238.X = vector238.X + vector21.X * 10f;
						vector238.Y = vector238.Y + vector21.Y * 10f;
						if (Main.netMode != 1)
						{
							int num108 = NPC.NewNPC((int)vector238.X, (int)vector238.Y, 5, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num108].velocity.X = vector21.X;
							Main.npc[num108].velocity.Y = vector21.Y;
							if (Main.netMode == 2 && num108 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num108, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						for (int t1 = 0; t1 < 10; t1++)
						{
							skyBlue = new Color();
							Dust.NewDust(vector238, 20, 20, 5, vector21.X * 0.4f, vector21.Y * 0.4f, 0, skyBlue, 1f);
						}
					}
					if (this.ai[1] == 100f)
					{
						this.ai[0] = this.ai[0] + 1f;
						this.ai[1] = 0f;
						if (this.ai[0] != 3f)
						{
							Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
							for (int u1 = 0; u1 < 2; u1++)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 8, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
							}
							for (int v1 = 0; v1 < 20; v1++)
							{
								Vector2 vector239 = this.position;
								int num109 = this.width;
								int num110 = this.height;
								skyBlue = new Color();
								Dust.NewDust(vector239, num109, num110, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
							}
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
						else
						{
							this.ai[2] = 0f;
						}
					}
					Vector2 vector240 = this.position;
					int num111 = this.width;
					int num112 = this.height;
					skyBlue = new Color();
					Dust.NewDust(vector240, num111, num112, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
					this.velocity.X = this.velocity.X * 0.98f;
					this.velocity.Y = this.velocity.Y * 0.98f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else
				{
					this.defense = 0;
					this.damage = (int)(23f * Main.expertDamage);
					if (Main.expertMode)
					{
						if (flag34)
						{
							this.defense = -15;
						}
						if (!flag35)
						{
							this.damage = (int)(18f * Main.expertDamage);
						}
						else
						{
							this.damage = (int)(20f * Main.expertDamage);
							this.defense = -30;
						}
					}
					if (this.ai[1] == 0f && flag34)
					{
						this.ai[1] = 5f;
					}
					if (this.ai[1] == 0f)
					{
						float single80 = 6f;
						float single81 = 0.07f;
						Vector2 vector241 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x44 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector241.X;
						float y41 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 120f - vector241.Y;
						float single82 = (float)Math.Sqrt((double)(x44 * x44 + y41 * y41));
						if (single82 > 400f && Main.expertMode)
						{
							single80 = single80 + 1f;
							single81 = single81 + 0.05f;
							if (single82 > 600f)
							{
								single80 = single80 + 1f;
								single81 = single81 + 0.05f;
								if (single82 > 800f)
								{
									single80 = single80 + 1f;
									single81 = single81 + 0.05f;
								}
							}
						}
						single82 = single80 / single82;
						x44 = x44 * single82;
						y41 = y41 * single82;
						if (this.velocity.X < x44)
						{
							this.velocity.X = this.velocity.X + single81;
							if (this.velocity.X < 0f && x44 > 0f)
							{
								this.velocity.X = this.velocity.X + single81;
							}
						}
						else if (this.velocity.X > x44)
						{
							this.velocity.X = this.velocity.X - single81;
							if (this.velocity.X > 0f && x44 < 0f)
							{
								this.velocity.X = this.velocity.X - single81;
							}
						}
						if (this.velocity.Y < y41)
						{
							this.velocity.Y = this.velocity.Y + single81;
							if (this.velocity.Y < 0f && y41 > 0f)
							{
								this.velocity.Y = this.velocity.Y + single81;
							}
						}
						else if (this.velocity.Y > y41)
						{
							this.velocity.Y = this.velocity.Y - single81;
							if (this.velocity.Y > 0f && y41 < 0f)
							{
								this.velocity.Y = this.velocity.Y - single81;
							}
						}
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] >= 200f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.35)
							{
								this.ai[1] = 3f;
							}
							this.target = 255;
							this.netUpdate = true;
						}
						if (Main.expertMode && flag35)
						{
							this.TargetClosest(true);
							this.netUpdate = true;
							this.ai[1] = 3f;
							this.ai[2] = 0f;
							this.ai[3] = this.ai[3] - 1000f;
						}
					}
					else if (this.ai[1] == 1f)
					{
						Main.PlaySound(36, (int)this.position.X, (int)this.position.Y, 0);
						this.rotation = single63;
						float single83 = 6.8f;
						if (Main.expertMode && this.ai[3] == 1f)
						{
							single83 = single83 * 1.15f;
						}
						if (Main.expertMode && this.ai[3] == 2f)
						{
							single83 = single83 * 1.3f;
						}
						Vector2 vector242 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x45 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector242.X;
						float y42 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector242.Y;
						float single84 = (float)Math.Sqrt((double)(x45 * x45 + y42 * y42));
						single84 = single83 / single84;
						this.velocity.X = x45 * single84;
						this.velocity.Y = y42 * single84;
						this.ai[1] = 2f;
						this.netUpdate = true;
						if (this.netSpam > 10)
						{
							this.netSpam = 10;
						}
					}
					else if (this.ai[1] == 2f)
					{
						float single85 = 40f;
						this.ai[2] = this.ai[2] + 1f;
						if (Main.expertMode)
						{
							single85 = 50f;
						}
						if (this.ai[2] < single85)
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						else
						{
							NPC nPC40 = this;
							nPC40.velocity = nPC40.velocity * 0.97f;
							if (Main.expertMode)
							{
								NPC nPC41 = this;
								nPC41.velocity = nPC41.velocity * 0.98f;
							}
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						int num113 = 130;
						if (Main.expertMode)
						{
							num113 = 90;
						}
						if (this.ai[2] >= (float)num113)
						{
							this.ai[3] = this.ai[3] + 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = single63;
							if (this.ai[3] < 3f)
							{
								this.ai[1] = 1f;
							}
							else
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
								if (Main.expertMode && Main.netMode != 1 && (double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] = 3f;
									this.ai[3] = this.ai[3] + (float)Main.rand.Next(1, 4);
								}
								this.netUpdate = true;
								if (this.netSpam > 10)
								{
									this.netSpam = 10;
								}
							}
						}
					}
					else if (this.ai[1] == 3f)
					{
						if (this.ai[3] == 4f && flag34 && base.Center.Y > Main.player[this.target].Center.Y)
						{
							this.TargetClosest(true);
							this.ai[1] = 0f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
						}
						else if (Main.netMode != 1)
						{
							this.TargetClosest(true);
							float single86 = 20f;
							Vector2 vector243 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x46 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector243.X;
							float y43 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector243.Y;
							float single87 = Math.Abs(Main.player[this.target].velocity.X) + Math.Abs(Main.player[this.target].velocity.Y) / 4f;
							single87 = single87 + (10f - single87);
							if (single87 < 5f)
							{
								single87 = 5f;
							}
							if (single87 > 15f)
							{
								single87 = 15f;
							}
							if (this.ai[2] == -1f && !flag35)
							{
								single87 = single87 * 4f;
								single86 = single86 * 1.3f;
							}
							if (flag35)
							{
								single87 = single87 * 2f;
							}
							x46 = x46 - Main.player[this.target].velocity.X * single87;
							y43 = y43 - Main.player[this.target].velocity.Y * single87 / 4f;
							x46 = x46 * (1f + (float)Main.rand.Next(-10, 11) * 0.01f);
							y43 = y43 * (1f + (float)Main.rand.Next(-10, 11) * 0.01f);
							if (flag35)
							{
								x46 = x46 * (1f + (float)Main.rand.Next(-10, 11) * 0.01f);
								y43 = y43 * (1f + (float)Main.rand.Next(-10, 11) * 0.01f);
							}
							float single88 = (float)Math.Sqrt((double)(x46 * x46 + y43 * y43));
							float single89 = single88;
							single88 = single86 / single88;
							this.velocity.X = x46 * single88;
							this.velocity.Y = y43 * single88;
							this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
							this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
							if (flag35)
							{
								this.velocity.X = this.velocity.X + (float)Main.rand.Next(-50, 51) * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.1f;
								float single90 = Math.Abs(this.velocity.X);
								float single91 = Math.Abs(this.velocity.Y);
								if (base.Center.X > Main.player[this.target].Center.X)
								{
									single91 = single91 * -1f;
								}
								if (base.Center.Y > Main.player[this.target].Center.Y)
								{
									single90 = single90 * -1f;
								}
								this.velocity.X = single91 + this.velocity.X;
								this.velocity.Y = single90 + this.velocity.Y;
								this.velocity.Normalize();
								NPC nPC42 = this;
								nPC42.velocity = nPC42.velocity * single86;
								this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 21) * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)Main.rand.Next(-20, 21) * 0.1f;
							}
							else if (single89 < 100f)
							{
								if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
								{
									float single92 = Math.Abs(this.velocity.X);
									float single93 = Math.Abs(this.velocity.Y);
									if (base.Center.X > Main.player[this.target].Center.X)
									{
										single93 = single93 * -1f;
									}
									if (base.Center.Y > Main.player[this.target].Center.Y)
									{
										single92 = single92 * -1f;
									}
									this.velocity.X = single93;
									this.velocity.Y = single92;
								}
							}
							else if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								float single94 = (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f;
								float single95 = single94;
								if (base.Center.X > Main.player[this.target].Center.X)
								{
									single95 = single95 * -1f;
								}
								if (base.Center.Y > Main.player[this.target].Center.Y)
								{
									single94 = single94 * -1f;
								}
								this.velocity.X = single95;
								this.velocity.Y = single94;
							}
							this.ai[1] = 4f;
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
						}
					}
					else if (this.ai[1] == 4f)
					{
						if (this.ai[2] == 0f)
						{
							Main.PlaySound(36, (int)this.position.X, (int)this.position.Y, -1);
						}
						float single96 = single62;
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] == single96 && Vector2.Distance(this.position, Main.player[this.target].position) < 200f)
						{
							this.ai[2] = this.ai[2] - 1f;
						}
						if (this.ai[2] < single96)
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						else
						{
							NPC nPC43 = this;
							nPC43.velocity = nPC43.velocity * 0.95f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						if (this.ai[2] >= single96 + 13f)
						{
							this.netUpdate = true;
							if (this.netSpam > 10)
							{
								this.netSpam = 10;
							}
							this.ai[3] = this.ai[3] + 1f;
							this.ai[2] = 0f;
							if (this.ai[3] < 5f)
							{
								this.ai[1] = 3f;
							}
							else
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
						}
					}
					else if (this.ai[1] == 5f)
					{
						float single97 = 600f;
						float single98 = 9f;
						float single99 = 0.3f;
						Vector2 vector244 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x47 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector244.X;
						float y44 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) + single97 - vector244.Y;
						float single100 = (float)Math.Sqrt((double)(x47 * x47 + y44 * y44));
						single100 = single98 / single100;
						x47 = x47 * single100;
						y44 = y44 * single100;
						if (this.velocity.X < x47)
						{
							this.velocity.X = this.velocity.X + single99;
							if (this.velocity.X < 0f && x47 > 0f)
							{
								this.velocity.X = this.velocity.X + single99;
							}
						}
						else if (this.velocity.X > x47)
						{
							this.velocity.X = this.velocity.X - single99;
							if (this.velocity.X > 0f && x47 < 0f)
							{
								this.velocity.X = this.velocity.X - single99;
							}
						}
						if (this.velocity.Y < y44)
						{
							this.velocity.Y = this.velocity.Y + single99;
							if (this.velocity.Y < 0f && y44 > 0f)
							{
								this.velocity.Y = this.velocity.Y + single99;
							}
						}
						else if (this.velocity.Y > y44)
						{
							this.velocity.Y = this.velocity.Y - single99;
							if (this.velocity.Y > 0f && y44 < 0f)
							{
								this.velocity.Y = this.velocity.Y - single99;
							}
						}
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] >= 70f)
						{
							this.TargetClosest(true);
							this.ai[1] = 3f;
							this.ai[2] = -1f;
							this.ai[3] = (float)Main.rand.Next(-3, 1);
							this.netUpdate = true;
						}
					}
					if (flag35 && this.ai[1] == 5f)
					{
						this.ai[1] = 3f;
						return;
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				float single101 = 6f;
				float single102 = 0.05f;
				if (this.type == 6 || this.type == 173)
				{
					single101 = 4f;
					single102 = 0.02f;
					if (this.type == 6 && Main.expertMode)
					{
						single102 = 0.035f;
					}
				}
				else if (this.type == 94)
				{
					single101 = 4.2f;
					single102 = 0.022f;
				}
				else if (this.type == 252)
				{
					if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						single102 = 0.01f;
						single101 = 2f;
					}
					else
					{
						single101 = 6f;
						single102 = 0.1f;
					}
				}
				else if (this.type == 42 || this.type >= 231 && this.type <= 235)
				{
					single101 = 3.5f;
					single102 = 0.021f;
					if (this.type == 231)
					{
						single101 = 3f;
						single102 = 0.017f;
					}
					single101 = single101 * (1f - this.scale);
					single102 = single102 * (1f - this.scale);
				}
				else if (this.type == 205)
				{
					single101 = 3.25f;
					single102 = 0.018f;
				}
				else if (this.type == 176)
				{
					single101 = 4f;
					single102 = 0.017f;
				}
				else if (this.type == 23)
				{
					single101 = 1f;
					single102 = 0.03f;
				}
				else if (this.type == 5)
				{
					single101 = 5f;
					single102 = 0.03f;
				}
				else if (this.type == 210 || this.type == 211)
				{
					this.localAI[0] = this.localAI[0] + 1f;
					float single103 = (this.localAI[0] - 60f) / 60f;
					if (single103 <= 1f)
					{
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
						if (this.velocity.Y > 6f)
						{
							this.velocity.Y = 6f;
						}
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					else
					{
						single103 = 1f;
					}
					single101 = 5f;
					single102 = 0.1f;
					single102 = single102 * single103;
				}
				Vector2 vector245 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float x48 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float y45 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				x48 = (float)((int)(x48 / 8f) * 8);
				y45 = (float)((int)(y45 / 8f) * 8);
				vector245.X = (float)((int)(vector245.X / 8f) * 8);
				vector245.Y = (float)((int)(vector245.Y / 8f) * 8);
				x48 = x48 - vector245.X;
				y45 = y45 - vector245.Y;
				float single104 = (float)Math.Sqrt((double)(x48 * x48 + y45 * y45));
				float single105 = single104;
				bool flag37 = false;
				if (single104 > 600f)
				{
					flag37 = true;
				}
				if (single104 != 0f)
				{
					single104 = single101 / single104;
					x48 = x48 * single104;
					y45 = y45 * single104;
				}
				else
				{
					x48 = this.velocity.X;
					y45 = this.velocity.Y;
				}
				if (this.type == 6 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || this.type >= 231 && this.type <= 235)
				{
					if (single105 > 100f || this.type == 42 || this.type == 94 || this.type == 176 || this.type == 210 || this.type == 211 || this.type >= 231 && this.type <= 235)
					{
						this.ai[0] = this.ai[0] + 1f;
						if (this.ai[0] <= 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.023f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y + 0.023f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.023f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.023f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (single105 < 150f && (this.type == 6 || this.type == 94 || this.type == 173))
					{
						this.velocity.X = this.velocity.X + x48 * 0.007f;
						this.velocity.Y = this.velocity.Y + y45 * 0.007f;
					}
				}
				if (Main.player[this.target].dead)
				{
					x48 = (float)this.direction * single101 / 2f;
					y45 = -single101 / 2f;
				}
				if (this.velocity.X < x48)
				{
					this.velocity.X = this.velocity.X + single102;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X < 0f && x48 > 0f)
					{
						this.velocity.X = this.velocity.X + single102;
					}
				}
				else if (this.velocity.X > x48)
				{
					this.velocity.X = this.velocity.X - single102;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X > 0f && x48 < 0f)
					{
						this.velocity.X = this.velocity.X - single102;
					}
				}
				if (this.velocity.Y < y45)
				{
					this.velocity.Y = this.velocity.Y + single102;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y < 0f && y45 > 0f)
					{
						this.velocity.Y = this.velocity.Y + single102;
					}
				}
				else if (this.velocity.Y > y45)
				{
					this.velocity.Y = this.velocity.Y - single102;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y > 0f && y45 < 0f)
					{
						this.velocity.Y = this.velocity.Y - single102;
					}
				}
				if (this.type == 23)
				{
					if (x48 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)y45, (double)x48);
					}
					else if (x48 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)y45, (double)x48) + 3.14f;
					}
				}
				else if (this.type == 139)
				{
					this.localAI[0] = this.localAI[0] + 1f;
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					if (Main.netMode != 1 && this.localAI[0] >= 120f)
					{
						this.localAI[0] = 0f;
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							int num114 = 25;
							if (Main.expertMode)
							{
								num114 = 22;
							}
							int num115 = 84;
							Projectile.NewProjectile(vector245.X, vector245.Y, x48, y45, num115, num114, 0f, Main.myPlayer, 0f, 0f);
						}
					}
					int x49 = (int)this.position.X + this.width / 2;
					int y46 = (int)this.position.Y + this.height / 2;
					if (!WorldGen.SolidTile(x49 / 16, y46 / 16))
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
					}
					if (x48 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)y45, (double)x48);
					}
					if (x48 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)y45, (double)x48) + 3.14f;
					}
				}
				else if (this.type == 6 || this.type == 94 || this.type == 173)
				{
					this.rotation = (float)Math.Atan2((double)y45, (double)x48) - 1.57f;
				}
				else if (this.type == 42 || this.type == 176 || this.type == 205 || this.type >= 231 && this.type <= 235)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				}
				if (this.type == 6 || this.type == 23 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || this.type >= 231 && this.type <= 235)
				{
					float single106 = 0.7f;
					if (this.type == 6 || this.type == 173)
					{
						single106 = 0.4f;
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -single106;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -single106;
						if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.type == 23)
					{
						Vector2 vector246 = new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y);
						int num116 = this.width;
						int num117 = this.height;
						skyBlue = new Color();
						int num118 = Dust.NewDust(vector246, num116, num117, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 2f);
						Main.dust[num118].noGravity = true;
						Main.dust[num118].velocity.X = Main.dust[num118].velocity.X * 0.3f;
						Main.dust[num118].velocity.Y = Main.dust[num118].velocity.Y * 0.3f;
					}
					else if (this.type != 42 && this.type != 139 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235) && Main.rand.Next(20) == 0)
					{
						int num119 = 18;
						if (this.type == 173)
						{
							num119 = 5;
						}
						int num120 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), num119, this.velocity.X, 2f, 75, this.color, this.scale);
						Main.dust[num120].velocity.X = Main.dust[num120].velocity.X * 0.5f;
						Main.dust[num120].velocity.Y = Main.dust[num120].velocity.Y * 0.1f;
					}
				}
				else if (this.type != 252 && Main.rand.Next(40) == 0)
				{
					Vector2 vector247 = new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f);
					int num121 = this.width;
					int num122 = (int)((float)this.height * 0.5f);
					float x50 = this.velocity.X;
					skyBlue = new Color();
					int num123 = Dust.NewDust(vector247, num121, num122, 5, x50, 2f, 0, skyBlue, 1f);
					Main.dust[num123].velocity.X = Main.dust[num123].velocity.X * 0.5f;
					Main.dust[num123].velocity.Y = Main.dust[num123].velocity.Y * 0.1f;
				}
				if ((this.type == 6 || this.type == 94 || this.type == 173) && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.3f;
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 205 && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 42 || this.type == 176 || this.type >= 231 && this.type <= 235)
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.ai[1] == 101f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
						this.ai[1] = 0f;
					}
					if (Main.netMode != 1)
					{
						this.ai[1] = this.ai[1] + (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						if (this.type == 176)
						{
							this.ai[1] = this.ai[1] + (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						}
						if (Main.player[this.target].stealth == 0f && Main.player[this.target].itemAnimation == 0)
						{
							this.ai[1] = 0f;
						}
						if (this.ai[1] >= 130f)
						{
							if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.ai[1] = 0f;
							}
							else
							{
								float single107 = 8f;
								Vector2 vector248 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
								float x51 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector248.X + (float)Main.rand.Next(-20, 21);
								float y47 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector248.Y + (float)Main.rand.Next(-20, 21);
								if ((x51 >= 0f || this.velocity.X >= 0f) && (x51 <= 0f || this.velocity.X <= 0f))
								{
									this.ai[1] = 0f;
								}
								else
								{
									float single108 = (float)Math.Sqrt((double)(x51 * x51 + y47 * y47));
									single108 = single107 / single108;
									x51 = x51 * single108;
									y47 = y47 * single108;
									int num124 = (int)(10f * this.scale);
									if (this.type == 176)
									{
										num124 = (int)(30f * this.scale);
									}
									int num125 = 55;
									int num126 = Projectile.NewProjectile(vector248.X, vector248.Y, x51, y47, num125, num124, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num126].timeLeft = 300;
									this.ai[1] = 101f;
									this.netUpdate = true;
								}
							}
						}
					}
				}
				if (this.type == 139 && flag37)
				{
					if ((this.velocity.X <= 0f || x48 <= 0f) && (this.velocity.X >= 0f || x48 >= 0f))
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
					else if (Math.Abs(this.velocity.X) < 12f)
					{
						this.velocity.X = this.velocity.X * 1.05f;
					}
				}
				if (Main.netMode != 1 && this.type == 94 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					this.localAI[0] = this.localAI[0] + 1f;
					if (this.localAI[0] == 180f)
					{
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
						}
						this.localAI[0] = 0f;
					}
				}
				if (Main.dayTime && this.type != 173 && this.type != 6 && this.type != 23 && this.type != 42 && this.type != 94 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235) || Main.player[this.target].dead)
				{
					this.velocity.Y = this.velocity.Y - single102 * 2f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
				}
				if ((this.velocity.X > 0f && this.oldVelocity.X < 0f || this.velocity.X < 0f && this.oldVelocity.X > 0f || this.velocity.Y > 0f && this.oldVelocity.Y < 0f || this.velocity.Y < 0f && this.oldVelocity.Y > 0f) && !this.justHit)
				{
					this.netUpdate = true;
					return;
				}
			}
			else if (this.aiStyle == 6)
			{
				if (this.type == 117 && this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 13);
					int num127 = 1;
					if (this.velocity.X < 0f)
					{
						num127 = -1;
					}
					for (int w1 = 0; w1 < 20; w1++)
					{
						Vector2 vector249 = new Vector2(this.position.X - 20f, this.position.Y - 20f);
						float single109 = (float)(num127 * 8);
						skyBlue = new Color();
						Dust.NewDust(vector249, this.width + 40, this.height + 40, 5, single109, -1f, 0, skyBlue, 1f);
					}
				}
				if (this.type == 454 && this.localAI[3] == 0f)
				{
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 119);
					this.localAI[3] = 1f;
				}
				if (this.type >= 454 && this.type <= 459)
				{
					this.dontTakeDamage = this.alpha > 0;
					if (this.type == 454 || this.type != 454 && Main.npc[(int)this.ai[1]].alpha < 85)
					{
						if (this.dontTakeDamage)
						{
							for (int x110 = 0; x110 < 2; x110++)
							{
								Vector2 vector250 = new Vector2(this.position.X, this.position.Y);
								int num128 = this.width;
								int num129 = this.height;
								skyBlue = new Color();
								int num130 = Dust.NewDust(vector250, num128, num129, 228, 0f, 0f, 100, skyBlue, 2f);
								Main.dust[num130].noGravity = true;
								Main.dust[num130].noLight = true;
							}
						}
						NPC nPC44 = this;
						nPC44.alpha = nPC44.alpha - 42;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
				}
				else if (this.type == 402 && this.ai[1] == 0f)
				{
					this.ai[1] = (float)Main.rand.Next(-2, 0);
					this.netUpdate = true;
				}
				if (Main.netMode != 1 && Main.expertMode)
				{
					if (this.type == 14 && (double)(this.position.Y / 16f) < Main.worldSurface)
					{
						if (Main.rand.Next(900) == 0)
						{
							this.TargetClosest(true);
							if (Collision.CanHitLine(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
					}
					else if (this.type == 13)
					{
						int num131 = 90;
						num131 = num131 + (int)((float)this.life / (float)this.lifeMax * 60f * 5f);
						if (Main.rand.Next(num131) == 0)
						{
							this.TargetClosest(true);
							if (Collision.CanHitLine(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
					}
				}
				if (this.type >= 13 && this.type <= 15)
				{
					this.realLife = -1;
				}
				else if (this.ai[3] > 0f)
				{
					this.realLife = (int)this.ai[3];
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				if (Main.player[this.target].dead && this.timeLeft > 300)
				{
					this.timeLeft = 300;
				}
				if (Main.netMode != 1)
				{
					if (this.type == 87 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num132 = 0;
						int num133 = this.whoAmI;
						for (int y110 = 0; y110 < 14; y110++)
						{
							int num134 = 89;
							if (y110 == 1 || y110 == 8)
							{
								num134 = 88;
							}
							else if (y110 == 11)
							{
								num134 = 90;
							}
							else if (y110 == 12)
							{
								num134 = 91;
							}
							else if (y110 == 13)
							{
								num134 = 92;
							}
							num132 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num134, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num132].ai[3] = (float)this.whoAmI;
							Main.npc[num132].realLife = this.whoAmI;
							Main.npc[num132].ai[1] = (float)num133;
							Main.npc[num133].ai[0] = (float)num132;
							NetMessage.SendData(23, -1, -1, "", num132, 0f, 0f, 0f, 0, 0, 0);
							num133 = num132;
						}
					}
					if (this.type == 454 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num135 = 0;
						int num136 = this.whoAmI;
						for (int a1 = 0; a1 < 30; a1++)
						{
							int num137 = 456;
							if ((a1 - 2) % 4 == 0 && a1 < 26)
							{
								num137 = 455;
							}
							else if (a1 == 27)
							{
								num137 = 457;
							}
							else if (a1 == 28)
							{
								num137 = 458;
							}
							else if (a1 == 29)
							{
								num137 = 459;
							}
							num135 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num137, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num135].ai[3] = (float)this.whoAmI;
							Main.npc[num135].realLife = this.whoAmI;
							Main.npc[num135].ai[1] = (float)num136;
							Main.npc[num136].ai[0] = (float)num135;
							NetMessage.SendData(23, -1, -1, "", num135, 0f, 0f, 0f, 0, 0, 0);
							num136 = num135;
						}
					}
					if (this.type == 513 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num138 = 0;
						int num139 = this.whoAmI;
						int num140 = Main.rand.Next(6, 10);
						for (int b1 = 0; b1 < num140; b1++)
						{
							int num141 = 514;
							if (b1 == num140 - 1)
							{
								num141 = 515;
							}
							num138 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num141, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num138].ai[3] = (float)this.whoAmI;
							Main.npc[num138].realLife = this.whoAmI;
							Main.npc[num138].ai[1] = (float)num139;
							Main.npc[num139].ai[0] = (float)num138;
							NetMessage.SendData(23, -1, -1, "", num138, 0f, 0f, 0f, 0, 0, 0);
							num139 = num138;
						}
					}
					if (this.type == 510 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num142 = 0;
						int num143 = this.whoAmI;
						int num144 = Main.rand.Next(12, 21);
						for (int c1 = 0; c1 < num144; c1++)
						{
							int num145 = 511;
							if (c1 == num144 - 1)
							{
								num145 = 512;
							}
							num142 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num145, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num142].ai[3] = (float)this.whoAmI;
							Main.npc[num142].realLife = this.whoAmI;
							Main.npc[num142].ai[1] = (float)num143;
							Main.npc[num143].ai[0] = (float)num142;
							NetMessage.SendData(23, -1, -1, "", num142, 0f, 0f, 0f, 0, 0, 0);
							num143 = num142;
						}
					}
					else if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 13 || this.type == 14 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || this.type == 117 || this.type == 118) && this.ai[0] == 0f)
					{
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
						{
							if (this.type < 13 || this.type > 15)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
							}
							this.ai[2] = (float)Main.rand.Next(8, 13);
							if (this.type == 10)
							{
								this.ai[2] = (float)Main.rand.Next(4, 7);
							}
							if (this.type == 13)
							{
								this.ai[2] = (float)Main.rand.Next(45, 56);
								if (Main.expertMode)
								{
									this.ai[2] = (float)((int)(this.ai[2] * 1.1f));
								}
							}
							if (this.type == 39)
							{
								this.ai[2] = (float)Main.rand.Next(12, 19);
							}
							if (this.type == 95)
							{
								this.ai[2] = (float)Main.rand.Next(6, 12);
							}
							if (this.type == 98)
							{
								this.ai[2] = (float)Main.rand.Next(20, 26);
							}
							if (this.type == 117)
							{
								this.ai[2] = (float)Main.rand.Next(3, 6);
							}
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						else if ((this.type == 8 || this.type == 11 || this.type == 14 || this.type == 40 || this.type == 96 || this.type == 99 || this.type == 118) && this.ai[2] > 0f)
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						else
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						}
						if (this.type < 13 || this.type > 15)
						{
							Main.npc[(int)this.ai[0]].ai[3] = this.ai[3];
							Main.npc[(int)this.ai[0]].realLife = this.realLife;
						}
						Main.npc[(int)this.ai[0]].ai[1] = (float)this.whoAmI;
						Main.npc[(int)this.ai[0]].ai[2] = this.ai[2] - 1f;
						this.netUpdate = true;
					}
					if (this.type == 412 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num146 = 0;
						int num147 = this.whoAmI;
						int num148 = 30;
						for (int d1 = 0; d1 < num148; d1++)
						{
							int num149 = 413;
							if (d1 == num148 - 1)
							{
								num149 = 414;
							}
							num146 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num149, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num146].ai[3] = (float)this.whoAmI;
							Main.npc[num146].realLife = this.whoAmI;
							Main.npc[num146].ai[1] = (float)num147;
							Main.npc[num147].ai[0] = (float)num146;
							NetMessage.SendData(23, -1, -1, "", num146, 0f, 0f, 0f, 0, 0, 0);
							num147 = num146;
						}
					}
					num6 = this.type;
					if (num6 <= 100)
					{
						switch (num6)
						{
							case 8:
							case 9:
							case 11:
							case 12:
							{
								break;
							}
							case 10:
							{
								goto Label6;
							}
							default:
							{
								switch (num6)
								{
									case 40:
									case 41:
									{
										break;
									}
									default:
									{
										switch (num6)
										{
											case 88:
											case 89:
											case 90:
											case 91:
											case 92:
											case 96:
											case 97:
											case 99:
											case 100:
											{
												break;
											}
											default:
											{
												goto Label6;
											}
										}
										break;
									}
								}
								break;
							}
						}
					}
					else if (num6 > 414)
					{
						switch (num6)
						{
							case 455:
							case 456:
							case 457:
							case 458:
							case 459:
							{
								break;
							}
							default:
							{
								switch (num6)
								{
									case 511:
									case 512:
									case 514:
									case 515:
									{
										break;
									}
									default:
									{
										goto Label6;
									}
								}
								break;
							}
						}
					}
					else
					{
						switch (num6)
						{
							case 118:
							case 119:
							{
								break;
							}
							default:
							{
								switch (num6)
								{
									case 413:
									case 414:
									{
										break;
									}
									default:
									{
										goto Label6;
									}
								}
								break;
							}
						}
					}
					if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle)
					{
						this.life = 0;
						this.HitEffect(0, 10);
						this.active = false;
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				Label6:
					num6 = this.type;
					if (num6 <= 99)
					{
						switch (num6)
						{
							case 7:
							case 8:
							case 10:
							case 11:
							{
								break;
							}
							case 9:
							{
								goto Label7;
							}
							default:
							{
								switch (num6)
								{
									case 39:
									case 40:
									{
										break;
									}
									default:
									{
										switch (num6)
										{
											case 87:
											case 88:
											case 89:
											case 90:
											case 91:
											case 95:
											case 96:
											case 98:
											case 99:
											{
												break;
											}
											default:
											{
												goto Label7;
											}
										}
										break;
									}
								}
								break;
							}
						}
					}
					else if (num6 > 413)
					{
						switch (num6)
						{
							case 454:
							case 455:
							case 456:
							case 457:
							case 458:
							{
								break;
							}
							default:
							{
								switch (num6)
								{
									case 510:
									case 511:
									case 513:
									case 514:
									{
										break;
									}
									default:
									{
										goto Label7;
									}
								}
								break;
							}
						}
					}
					else
					{
						switch (num6)
						{
							case 117:
							case 118:
							{
								break;
							}
							default:
							{
								switch (num6)
								{
									case 412:
									case 413:
									{
										break;
									}
									default:
									{
										goto Label7;
									}
								}
								break;
							}
						}
					}
					if (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle)
					{
						this.life = 0;
						this.HitEffect(0, 10);
						this.active = false;
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				Label7:
					if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (!Main.npc[(int)this.ai[1]].active && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 13 && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 15 && !Main.npc[(int)this.ai[1]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10);
							this.checkDead();
							this.active = false;
							NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
						{
							this.type = 13;
							int num150 = this.whoAmI;
							float single110 = (float)this.life / (float)this.lifeMax;
							float single111 = this.ai[0];
							this.SetDefaultsKeepPlayerInteraction(this.type);
							this.life = (int)((float)this.lifeMax * single110);
							this.ai[0] = single111;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = num150;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
						{
							int num151 = this.whoAmI;
							float single112 = (float)this.life / (float)this.lifeMax;
							float single113 = this.ai[1];
							this.SetDefaultsKeepPlayerInteraction(this.type);
							this.life = (int)((float)this.lifeMax * single112);
							this.ai[1] = single113;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = num151;
						}
					}
					if (!this.active && Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
					}
				}
				int x52 = (int)(this.position.X / 16f) - 1;
				int x53 = (int)((this.position.X + (float)this.width) / 16f) + 2;
				int y48 = (int)(this.position.Y / 16f) - 1;
				int y49 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
				if (x52 < 0)
				{
					x52 = 0;
				}
				if (x53 > Main.maxTilesX)
				{
					x53 = Main.maxTilesX;
				}
				if (y48 < 0)
				{
					y48 = 0;
				}
				if (y49 > Main.maxTilesY)
				{
					y49 = Main.maxTilesY;
				}
				bool flag38 = false;
				if (this.type >= 87 && this.type <= 92)
				{
					flag38 = true;
				}
				if (this.type >= 454 && this.type <= 459)
				{
					flag38 = true;
				}
				if (this.type == 402 && this.ai[1] == -1f)
				{
					flag38 = true;
				}
				if (this.type >= 412 && this.type <= 414)
				{
					flag38 = true;
				}
				if (!flag38)
				{
					for (int e1 = x52; e1 < x53; e1++)
					{
						for (int f1 = y48; f1 < y49; f1++)
						{
							if (Main.tile[e1, f1] != null && (Main.tile[e1, f1].nactive() && (Main.tileSolid[Main.tile[e1, f1].type] || Main.tileSolidTop[Main.tile[e1, f1].type] && Main.tile[e1, f1].frameY == 0) || Main.tile[e1, f1].liquid > 64))
							{
								vector22.X = (float)(e1 * 16);
								vector22.Y = (float)(f1 * 16);
								if (this.position.X + (float)this.width > vector22.X && this.position.X < vector22.X + 16f && this.position.Y + (float)this.height > vector22.Y && this.position.Y < vector22.Y + 16f)
								{
									flag38 = true;
									if (Main.rand.Next(100) == 0 && this.type != 117 && Main.tile[e1, f1].nactive())
									{
										WorldGen.KillTile(e1, f1, true, true, false);
									}
								}
							}
						}
					}
				}
				if (!flag38 && (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 375 || this.type == 454 || this.type == 510 || this.type == 513))
				{
					Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					int num152 = 1000;
					bool flag39 = true;
					for (int g1 = 0; g1 < 255; g1++)
					{
						if (Main.player[g1].active)
						{
							Rectangle rectangle1 = new Rectangle((int)Main.player[g1].position.X - num152, (int)Main.player[g1].position.Y - num152, num152 * 2, num152 * 2);
							if (rectangle.Intersects(rectangle1))
							{
								flag39 = false;
								break;
							}
						}
					}
					if (flag39)
					{
						flag38 = true;
					}
				}
				if (this.type >= 87 && this.type <= 92 || this.type >= 454 && this.type <= 459)
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.type == 414)
				{
					if (this.justHit)
					{
						this.localAI[3] = 3f;
					}
					if (this.localAI[2] > 0f)
					{
						this.localAI[2] = this.localAI[2] - 16f;
						if (this.localAI[2] == 0f)
						{
							this.localAI[2] = -128f;
						}
					}
					else if (this.localAI[2] < 0f)
					{
						this.localAI[2] = this.localAI[2] + 16f;
					}
					else if (this.localAI[3] > 0f)
					{
						this.localAI[2] = 128f;
						this.localAI[3] = this.localAI[3] - 1f;
					}
				}
				if (this.type == 412)
				{
					Vector2 center18 = base.Center + ((this.rotation - 1.57079637f).ToRotationVector2() * 8f);
					Vector2 rotationVector2 = this.rotation.ToRotationVector2() * 16f;
					Dust zero = Main.dust[Dust.NewDust(center18 + rotationVector2, 0, 0, 6, this.velocity.X, this.velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 3f)];
					zero.noGravity = true;
					zero.noLight = true;
					Dust dust11 = zero;
					dust11.position = dust11.position - new Vector2(4f);
					zero.fadeIn = 1f;
					zero.velocity = Vector2.Zero;
					zero = Main.dust[Dust.NewDust(center18 - rotationVector2, 0, 0, 6, this.velocity.X, this.velocity.Y, 100, Color.Transparent, 1f + Main.rand.NextFloat() * 3f)];
					zero.noGravity = true;
					zero.noLight = true;
					Dust dust12 = zero;
					dust12.position = dust12.position - new Vector2(4f);
					zero.fadeIn = 1f;
					zero.velocity = Vector2.Zero;
				}
				float single114 = 8f;
				float single115 = 0.07f;
				if (this.type == 95)
				{
					single114 = 5.5f;
					single115 = 0.045f;
				}
				if (this.type == 10)
				{
					single114 = 6f;
					single115 = 0.05f;
				}
				if (this.type == 513)
				{
					single114 = 7f;
					single115 = 0.03f;
				}
				if (this.type == 13)
				{
					single114 = 10f;
					single115 = 0.07f;
					if (Main.expertMode)
					{
						single114 = 12f;
						single115 = 0.15f;
					}
				}
				if (this.type == 510)
				{
					single114 = 10f;
					single115 = 0.25f;
				}
				if (this.type == 87)
				{
					single114 = 11f;
					single115 = 0.25f;
				}
				if (this.type == 375)
				{
					single114 = 6f;
					single115 = 0.15f;
				}
				if (this.type == 454)
				{
					single114 = 20f;
					single115 = 0.55f;
				}
				if (this.type == 402)
				{
					single114 = 6f;
					single115 = 0.2f;
				}
				if (this.type == 117 && Main.wof >= 0)
				{
					float single116 = (float)((float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax);
					if ((double)single116 < 0.5)
					{
						single114 = single114 + 1f;
						single115 = single115 + 0.1f;
					}
					if ((double)single116 < 0.25)
					{
						single114 = single114 + 1f;
						single115 = single115 + 0.1f;
					}
					if ((double)single116 < 0.1)
					{
						single114 = single114 + 2f;
						single115 = single115 + 0.1f;
					}
				}
				Vector2 y50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float x54 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float y51 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				if (this.type == 412)
				{
					single114 = 10f;
					single115 = 0.3f;
					int num153 = -1;
					int x55 = (int)(Main.player[this.target].Center.X / 16f);
					int y52 = (int)(Main.player[this.target].Center.Y / 16f);
					for (int h1 = x55 - 2; h1 <= x55 + 2; h1++)
					{
						int num154 = y52;
						while (num154 <= y52 + 15)
						{
							if (!WorldGen.SolidTile2(h1, num154))
							{
								num154++;
							}
							else
							{
								num153 = num154;
								break;
							}
						}
						if (num153 > 0)
						{
							break;
						}
					}
					if (num153 <= 0)
					{
						single114 = 14f;
						single115 = 0.5f;
					}
					else
					{
						num153 = num153 * 16;
						float single117 = (float)(num153 - 800);
						if (Main.player[this.target].position.Y > single117)
						{
							y51 = single117;
							if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 500f)
							{
								x54 = (this.velocity.X <= 0f ? Main.player[this.target].Center.X - 600f : Main.player[this.target].Center.X + 600f);
							}
						}
					}
					float single118 = single114 * 1.3f;
					float single119 = single114 * 0.7f;
					float single120 = this.velocity.Length();
					if (single120 > 0f)
					{
						if (single120 > single118)
						{
							this.velocity.Normalize();
							NPC nPC45 = this;
							nPC45.velocity = nPC45.velocity * single118;
						}
						else if (single120 < single119)
						{
							this.velocity.Normalize();
							NPC nPC46 = this;
							nPC46.velocity = nPC46.velocity * single119;
						}
					}
					if (num153 <= 0)
					{
						for (int i2 = 0; i2 < 200; i2++)
						{
							if (Main.npc[i2].active && Main.npc[i2].type == this.type && i2 != this.whoAmI)
							{
								Vector2 center19 = Main.npc[i2].Center - base.Center;
								if (center19.Length() < 60f)
								{
									center19.Normalize();
									center19 = center19 * 200f;
									x54 = x54 - center19.X;
									y51 = y51 - center19.Y;
								}
							}
						}
					}
					else
					{
						for (int j2 = 0; j2 < 200; j2++)
						{
							if (Main.npc[j2].active && Main.npc[j2].type == this.type && j2 != this.whoAmI)
							{
								Vector2 center20 = Main.npc[j2].Center - base.Center;
								if (center20.Length() < 400f)
								{
									center20.Normalize();
									center20 = center20 * 1000f;
									x54 = x54 - center20.X;
									y51 = y51 - center20.Y;
								}
							}
						}
					}
				}
				x54 = (float)((int)(x54 / 16f) * 16);
				y51 = (float)((int)(y51 / 16f) * 16);
				y50.X = (float)((int)(y50.X / 16f) * 16);
				y50.Y = (float)((int)(y50.Y / 16f) * 16);
				x54 = x54 - y50.X;
				y51 = y51 - y50.Y;
				if (this.type == 375)
				{
					x54 = x54 * -1f;
					y51 = y51 * -1f;
				}
				float single121 = (float)Math.Sqrt((double)(x54 * x54 + y51 * y51));
				if (this.ai[1] <= 0f || this.ai[1] >= (float)((int)Main.npc.Length))
				{
					if (flag38)
					{
						if (this.type != 87 && this.type != 117 && this.type != 454 && this.type != 412 && this.soundDelay == 0)
						{
							float single122 = single121 / 40f;
							if (single122 < 10f)
							{
								single122 = 10f;
							}
							if (single122 > 20f)
							{
								single122 = 20f;
							}
							this.soundDelay = (int)single122;
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
						}
						single121 = (float)Math.Sqrt((double)(x54 * x54 + y51 * y51));
						float single123 = Math.Abs(x54);
						float single124 = Math.Abs(y51);
						float single125 = single114 / single121;
						x54 = x54 * single125;
						y51 = y51 * single125;
						bool flag40 = false;
						if ((this.type == 7 || this.type == 13) && !Main.player[this.target].ZoneCorrupt && !Main.player[this.target].ZoneCrimson)
						{
							flag40 = true;
						}
						if (this.type == 513 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16)
						{
							flag40 = true;
						}
						if (this.type == 510 && (double)Main.player[this.target].position.Y < Main.worldSurface * 16)
						{
							flag40 = true;
						}
						if (flag40)
						{
							bool flag41 = true;
							for (int k2 = 0; k2 < 255; k2++)
							{
								if (Main.player[k2].active && !Main.player[k2].dead && Main.player[k2].ZoneCorrupt)
								{
									flag41 = false;
								}
							}
							if (flag41)
							{
								if (Main.netMode != 1 && (double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2)
								{
									this.active = false;
									for (int l2 = (int)this.ai[0]; l2 > 0 && l2 < 200 && Main.npc[l2].active && Main.npc[l2].aiStyle == this.aiStyle; l2 = num)
									{
										num = (int)Main.npc[l2].ai[0];
										Main.npc[l2].active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", l2, 0f, 0f, 0f, 0, 0, 0);
										}
									}
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
								x54 = 0f;
								y51 = single114;
							}
						}
						bool flag42 = false;
						if (this.type == 87)
						{
							if ((this.velocity.X > 0f && x54 < 0f || this.velocity.X < 0f && x54 > 0f || this.velocity.Y > 0f && y51 < 0f || this.velocity.Y < 0f && y51 > 0f) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > single115 / 2f && single121 < 300f)
							{
								flag42 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < single114)
								{
									NPC nPC47 = this;
									nPC47.velocity = nPC47.velocity * 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || (double)(Main.player[this.target].position.Y / 16f) > Main.worldSurface || Main.player[this.target].dead)
							{
								flag42 = true;
								if (Math.Abs(this.velocity.X) < single114 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -single114)
								{
									this.velocity.Y = this.velocity.Y - single115;
								}
							}
						}
						if (this.type == 454)
						{
							if ((this.velocity.X > 0f && x54 < 0f || this.velocity.X < 0f && x54 > 0f || this.velocity.Y > 0f && y51 < 0f || this.velocity.Y < 0f && y51 > 0f) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > single115 / 2f && single121 < 300f)
							{
								flag42 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < single114)
								{
									NPC nPC48 = this;
									nPC48.velocity = nPC48.velocity * 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || Main.player[this.target].dead)
							{
								flag42 = true;
								if (Math.Abs(this.velocity.X) < single114 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -single114)
								{
									this.velocity.Y = this.velocity.Y - single115;
								}
							}
						}
						if (!flag42)
						{
							if (this.velocity.X > 0f && x54 > 0f || this.velocity.X < 0f && x54 < 0f || this.velocity.Y > 0f && y51 > 0f || this.velocity.Y < 0f && y51 < 0f)
							{
								if (this.velocity.X < x54)
								{
									this.velocity.X = this.velocity.X + single115;
								}
								else if (this.velocity.X > x54)
								{
									this.velocity.X = this.velocity.X - single115;
								}
								if (this.velocity.Y < y51)
								{
									this.velocity.Y = this.velocity.Y + single115;
								}
								else if (this.velocity.Y > y51)
								{
									this.velocity.Y = this.velocity.Y - single115;
								}
								if ((double)Math.Abs(y51) < (double)single114 * 0.2 && (this.velocity.X > 0f && x54 < 0f || this.velocity.X < 0f && x54 > 0f))
								{
									if (this.velocity.Y <= 0f)
									{
										this.velocity.Y = this.velocity.Y - single115 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + single115 * 2f;
									}
								}
								if ((double)Math.Abs(x54) < (double)single114 * 0.2 && (this.velocity.Y > 0f && y51 < 0f || this.velocity.Y < 0f && y51 > 0f))
								{
									if (this.velocity.X <= 0f)
									{
										this.velocity.X = this.velocity.X - single115 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X + single115 * 2f;
									}
								}
							}
							else if (single123 <= single124)
							{
								if (this.velocity.Y < y51)
								{
									this.velocity.Y = this.velocity.Y + single115 * 1.1f;
								}
								else if (this.velocity.Y > y51)
								{
									this.velocity.Y = this.velocity.Y - single115 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)single114 * 0.5)
								{
									if (this.velocity.X <= 0f)
									{
										this.velocity.X = this.velocity.X - single115;
									}
									else
									{
										this.velocity.X = this.velocity.X + single115;
									}
								}
							}
							else
							{
								if (this.velocity.X < x54)
								{
									this.velocity.X = this.velocity.X + single115 * 1.1f;
								}
								else if (this.velocity.X > x54)
								{
									this.velocity.X = this.velocity.X - single115 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)single114 * 0.5)
								{
									if (this.velocity.Y <= 0f)
									{
										this.velocity.Y = this.velocity.Y - single115;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + single115;
									}
								}
							}
						}
					}
					else
					{
						this.TargetClosest(true);
						this.velocity.Y = this.velocity.Y + 0.11f;
						if (this.velocity.Y > single114)
						{
							this.velocity.Y = single114;
						}
						if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)single114 * 0.4)
						{
							if (this.velocity.X >= 0f)
							{
								this.velocity.X = this.velocity.X + single115 * 1.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X - single115 * 1.1f;
							}
						}
						else if (this.velocity.Y != single114)
						{
							if (this.velocity.Y > 4f)
							{
								if (this.velocity.X >= 0f)
								{
									this.velocity.X = this.velocity.X - single115 * 0.9f;
								}
								else
								{
									this.velocity.X = this.velocity.X + single115 * 0.9f;
								}
							}
						}
						else if (this.velocity.X < x54)
						{
							this.velocity.X = this.velocity.X + single115;
						}
						else if (this.velocity.X > x54)
						{
							this.velocity.X = this.velocity.X - single115;
						}
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 510 || this.type == 513)
					{
						if (!flag38)
						{
							if (this.localAI[0] != 0f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
						else
						{
							if (this.localAI[0] != 1f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 1f;
						}
						if ((this.velocity.X > 0f && this.oldVelocity.X < 0f || this.velocity.X < 0f && this.oldVelocity.X > 0f || this.velocity.Y > 0f && this.oldVelocity.Y < 0f || this.velocity.Y < 0f && this.oldVelocity.Y > 0f) && !this.justHit)
						{
							this.netUpdate = true;
						}
					}
					if (this.type == 454)
					{
						float single126 = Vector2.Distance(Main.player[this.target].Center, base.Center);
						int num155 = 0;
						if (Vector2.Normalize(Main.player[this.target].Center - base.Center).ToRotation().AngleTowards(this.velocity.ToRotation(), 1.57079637f) == this.velocity.ToRotation() && single126 < 350f)
						{
							num155 = 4;
						}
						if ((double)num155 > this.frameCounter)
						{
							NPC nPC49 = this;
							nPC49.frameCounter = nPC49.frameCounter + 1;
						}
						if ((double)num155 < this.frameCounter)
						{
							NPC nPC50 = this;
							nPC50.frameCounter = nPC50.frameCounter - 1;
						}
						if (this.frameCounter < 0)
						{
							this.frameCounter = 0;
						}
						if (this.frameCounter > 4)
						{
							this.frameCounter = 4;
							return;
						}
					}
				}
				else
				{
					try
					{
						y50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						x54 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - y50.X;
						y51 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - y50.Y;
					}
					catch (Exception ex)
					{
#if DEBUG
						Console.WriteLine(ex);
						System.Diagnostics.Debugger.Break();

#endif
					}
					this.rotation = (float)Math.Atan2((double)y51, (double)x54) + 1.57f;
					single121 = (float)Math.Sqrt((double)(x54 * x54 + y51 * y51));
					int num156 = this.width;
					if (this.type >= 87 && this.type <= 92)
					{
						num156 = 42;
					}
					if (this.type >= 454 && this.type <= 459)
					{
						num156 = 36;
					}
					if (this.type >= 13 && this.type <= 15)
					{
						num156 = (int)((float)num156 * this.scale);
					}
					if (this.type >= 412 && this.type <= 414)
					{
						num156 = num156 + 6;
					}
					single121 = (single121 - (float)num156) / single121;
					x54 = x54 * single121;
					y51 = y51 * single121;
					this.velocity = Vector2.Zero;
					this.position.X = this.position.X + x54;
					this.position.Y = this.position.Y + y51;
					if (this.type >= 87 && this.type <= 92)
					{
						if (x54 < 0f)
						{
							this.spriteDirection = 1;
						}
						else if (x54 > 0f)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type >= 454 && this.type <= 459)
					{
						if (x54 < 0f)
						{
							this.spriteDirection = 1;
							return;
						}
						if (x54 > 0f)
						{
							this.spriteDirection = -1;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 7)
			{
				bool flag43 = Main.raining;
				if (!Main.dayTime)
				{
					flag43 = true;
				}
				if (Main.eclipse)
				{
					flag43 = true;
				}
				if (Main.slimeRain)
				{
					flag43 = true;
				}
				if (!Main.expertMode)
				{
					this.defense = (this.dryadWard ? this.defDefense : this.defDefense + 6);
				}
				else
				{
					this.defense = (this.dryadWard ? this.defDefense : this.defDefense + 10);
				}
				float single127 = 1f;
				if (this.townNPC || this.type == 453)
				{
					if (NPC.downedBoss1)
					{
						single127 = single127 + 0.1f;
						NPC nPC51 = this;
						nPC51.defense = nPC51.defense + 3;
					}
					if (NPC.downedBoss2)
					{
						single127 = single127 + 0.1f;
						NPC nPC52 = this;
						nPC52.defense = nPC52.defense + 3;
					}
					if (NPC.downedBoss3)
					{
						single127 = single127 + 0.1f;
						NPC nPC53 = this;
						nPC53.defense = nPC53.defense + 3;
					}
					if (NPC.downedQueenBee)
					{
						single127 = single127 + 0.1f;
						NPC nPC54 = this;
						nPC54.defense = nPC54.defense + 3;
					}
					if (Main.hardMode)
					{
						single127 = single127 + 0.4f;
						NPC nPC55 = this;
						nPC55.defense = nPC55.defense + 12;
					}
					if (NPC.downedMechBoss1)
					{
						single127 = single127 + 0.15f;
						NPC nPC56 = this;
						nPC56.defense = nPC56.defense + 6;
					}
					if (NPC.downedMechBoss2)
					{
						single127 = single127 + 0.15f;
						NPC nPC57 = this;
						nPC57.defense = nPC57.defense + 6;
					}
					if (NPC.downedMechBoss3)
					{
						single127 = single127 + 0.15f;
						NPC nPC58 = this;
						nPC58.defense = nPC58.defense + 6;
					}
					if (NPC.downedPlantBoss)
					{
						single127 = single127 + 0.15f;
						NPC nPC59 = this;
						nPC59.defense = nPC59.defense + 8;
					}
					if (NPC.downedGolemBoss)
					{
						single127 = single127 + 0.15f;
						NPC nPC60 = this;
						nPC60.defense = nPC60.defense + 8;
					}
					if (NPC.downedAncientCultist)
					{
						single127 = single127 + 0.15f;
						NPC nPC61 = this;
						nPC61.defense = nPC61.defense + 8;
					}
				}
				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
				{
					this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
					if (Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, 9999f, 0f, 0f, 0, 0, 0);
					}
				}
				if ((this.type == 148 || this.type == 149) && this.localAI[0] == 0f)
				{
					this.localAI[0] = (float)Main.rand.Next(1, 5);
				}
				if (this.type == 124)
				{
					bool flag44 = false;
					int num157 = 0;
					while (num157 < 1000)
					{
						if (!Main.projectile[num157].active || Main.projectile[num157].type != 582 || Main.projectile[num157].ai[1] != (float)this.whoAmI)
						{
							num157++;
						}
						else
						{
							flag44 = true;
							break;
						}
					}
					this.localAI[0] = (float)flag44.ToInt();
				}
				if ((this.type == 362 || this.type == 364) && Main.netMode != 1 && (this.velocity.Y > 4f || this.velocity.Y < -4f || this.wet))
				{
					int num158 = this.direction;
					this.Transform(this.type + 1);
					this.TargetClosest(true);
					this.direction = num158;
					this.netUpdate = true;
					return;
				}
				num6 = this.type;
				if (num6 <= 124)
				{
					switch (num6)
					{
						case 107:
						{
							NPC.savedGoblin = true;
							break;
						}
						case 108:
						{
							NPC.savedWizard = true;
							break;
						}
						default:
						{
							if (num6 == 124)
							{
								NPC.savedMech = true;
								break;
							}
							else
							{
								break;
							}
						}
					}
				}
				else if (num6 == 353)
				{
					NPC.savedStylist = true;
				}
				else if (num6 == 369)
				{
					NPC.savedAngler = true;
				}
				else if (num6 == 441)
				{
					NPC.savedTaxCollector = true;
				}
				if (this.type >= 0 && this.type < 540 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
				{
					this.TargetClosest(true);
					if (this.position.X < Main.player[this.target].position.X)
					{
						this.direction = 1;
						this.spriteDirection = this.direction;
					}
					if (this.position.X > Main.player[this.target].position.X)
					{
						this.direction = -1;
						this.spriteDirection = this.direction;
					}
					if (this.homeTileX == -1)
					{
						this.homeTileX = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					}
				}
				else if (this.homeTileX == -1 && this.homeTileY == -1 && this.velocity.Y == 0f)
				{
					this.homeTileX = (int)base.Center.X / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height + 4f) / 16;
				}
				bool flag45 = false;
				int num159 = this.homeTileY;
				if (this.type == 441)
				{
					NPC.taxCollector = true;
				}
				this.directionY = -1;
				if (this.direction == 0)
				{
					this.direction = 1;
				}
				for (int m2 = 0; m2 < 255; m2++)
				{
					if (Main.player[m2].active && Main.player[m2].talkNPC == this.whoAmI)
					{
						flag45 = true;
						if (this.ai[0] != 0f)
						{
							this.netUpdate = true;
						}
						this.ai[0] = 0f;
						this.ai[1] = 300f;
						this.localAI[3] = 100f;
						if (Main.player[m2].position.X + (float)(Main.player[m2].width / 2) >= this.position.X + (float)(this.width / 2))
						{
							this.direction = 1;
						}
						else
						{
							this.direction = -1;
						}
					}
				}
				if (this.ai[3] == 1f)
				{
					this.life = -1;
					this.HitEffect(0, 10);
					this.active = false;
					this.netUpdate = true;
					if (this.type == 37)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
					return;
				}
				if (this.type == 37 && Main.netMode != 1)
				{
					this.homeless = false;
					this.homeTileX = Main.dungeonX;
					this.homeTileY = Main.dungeonY;
					if (NPC.downedBoss3)
					{
						this.ai[3] = 1f;
						this.netUpdate = true;
					}
				}
				if (Main.netMode != 1 && this.homeTileY > 0)
				{
					while (!WorldGen.SolidTile(this.homeTileX, num159) && num159 < Main.maxTilesY - 20)
					{
						num159++;
					}
				}
				if (this.type == 368)
				{
					this.homeless = true;
					if (!Main.dayTime)
					{
						this.homeTileX = (int)(base.Center.X / 16f);
						this.homeTileY = (int)(this.position.Y + (float)this.height + 2f) / 16;
						if (!flag45)
						{
							this.ai[0] = 1f;
							this.ai[1] = 200f;
						}
						flag43 = false;
					}
				}
				if (this.type == 369 && this.homeless && this.wet)
				{
					if (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380))
					{
						this.homeTileX = Main.spawnTileX;
						this.homeTileY = Main.spawnTileY;
						this.ai[0] = 1f;
						this.ai[1] = 200f;
					}
					if (this.position.X / 16f < 200f)
					{
						this.direction = 1;
					}
					else if (this.position.X / 16f > (float)(Main.maxTilesX - 200))
					{
						this.direction = -1;
					}
				}
				int x56 = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int y53 = (int)(this.position.Y + (float)this.height + 1f) / 16;
				if (!WorldGen.InWorld(x56, y53, 0) || Main.tile[x56, y53] == null)
				{
					return;
				}
				if (!this.homeless && Main.netMode != 1 && this.townNPC && (flag43 || Main.tileDungeon[Main.tile[x56, y53].type]) && (x56 != this.homeTileX || y53 != num159))
				{
					bool flag46 = true;
					for (int n2 = 0; n2 < 2; n2++)
					{
						Rectangle rectangle2 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						if (n2 == 1)
						{
							rectangle2 = new Rectangle(this.homeTileX * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num159 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						}
						for (int o2 = 0; o2 < 255; o2++)
						{
							if (Main.player[o2].active)
							{
								Rectangle rectangle3 = new Rectangle((int)Main.player[o2].position.X, (int)Main.player[o2].position.Y, Main.player[o2].width, Main.player[o2].height);
								if (rectangle3.Intersects(rectangle2))
								{
									flag46 = false;
									break;
								}
							}
							if (!flag46)
							{
								break;
							}
						}
					}
					if (flag46)
					{
						if (this.type == 37 || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, num159 - 3, num159 - 1))
						{
							this.velocity.X = 0f;
							this.velocity.Y = 0f;
							this.position.X = (float)(this.homeTileX * 16 + 8 - this.width / 2);
							this.position.Y = (float)(num159 * 16 - this.height) - 0.1f;
							this.netUpdate = true;
						}
						else
						{
							this.homeless = true;
							WorldGen.QuickFindHome(this.whoAmI);
						}
					}
				}
				bool flag47 = (this.type == 300 ? true : this.type == 447);
				float dangerDetectRange = 200f;
				if (NPCID.Sets.DangerDetectRange[this.type] != -1)
				{
					dangerDetectRange = (float)NPCID.Sets.DangerDetectRange[this.type];
				}
				bool flag48 = false;
				bool flag49 = false;
				float single128 = -1f;
				float single129 = -1f;
				int num160 = 0;
				int num161 = -1;
				int num162 = -1;
				if (Main.netMode != 1 && !flag45)
				{
					for (int p2 = 0; p2 < 200; p2++)
					{
						if (Main.npc[p2].active && !Main.npc[p2].friendly && Main.npc[p2].damage > 0 && Main.npc[p2].Distance(base.Center) < dangerDetectRange && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[p2].netID)))
						{
							flag48 = true;
							float x57 = Main.npc[p2].Center.X - base.Center.X;
							if (x57 < 0f && (single128 == -1f || x57 > single128))
							{
								single128 = x57;
								num161 = p2;
							}
							if (x57 > 0f && (single129 == -1f || x57 < single129))
							{
								single129 = x57;
								num162 = p2;
							}
						}
					}
					if (flag48)
					{
						if (single128 != -1f)
						{
							num160 = (single129 != -1f ? (single129 < -single128).ToDirectionInt() : -1);
						}
						else
						{
							num160 = 1;
						}
						float single130 = 0f;
						if (single128 != -1f)
						{
							single130 = -single128;
						}
						if (single130 == 0f || single129 < single130 && single129 > 0f)
						{
							single130 = single129;
						}
						if (this.ai[0] == 8f)
						{
							if (this.direction == -num160)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(300 + Main.rand.Next(300));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
						else if (this.ai[0] != 10f && this.ai[0] != 12f && this.ai[0] != 13f && this.ai[0] != 14f && this.ai[0] != 15f)
						{
							if (NPCID.Sets.PrettySafe[this.type] != -1 && (float)NPCID.Sets.PrettySafe[this.type] < single130)
							{
								flag48 = false;
								flag49 = true;
							}
							else if (this.ai[0] != 1f)
							{
								if ((this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f ? true : this.ai[0] == 17f))
								{
									NPC nPC62 = Main.npc[(int)this.ai[2]];
									if (nPC62.active)
									{
										nPC62.ai[0] = 1f;
										nPC62.ai[1] = (float)(120 + Main.rand.Next(120));
										nPC62.ai[2] = 0f;
										nPC62.localAI[3] = 0f;
										nPC62.direction = -num160;
										nPC62.netUpdate = true;
									}
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(120 + Main.rand.Next(120));
								this.ai[2] = 0f;
								this.localAI[3] = 0f;
								this.direction = -num160;
								this.netUpdate = true;
							}
							else if (this.ai[0] == 1f && this.direction != -num160)
							{
								this.direction = -num160;
								this.netUpdate = true;
							}
						}
					}
				}
				if (this.ai[0] == 0f)
				{
					if (this.localAI[3] > 0f)
					{
						this.localAI[3] = this.localAI[3] - 1f;
					}
					if (!flag43 || flag45 || NPCID.Sets.TownCritter[this.type])
					{
						if (flag47)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (this.velocity.X > 0.1f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X >= -0.1f)
						{
							this.velocity.X = 0f;
						}
						else
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						if (Main.netMode != 1)
						{
							if (this.ai[1] > 0f)
							{
								this.ai[1] = this.ai[1] - 1f;
							}
							if (this.ai[1] <= 0f)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(300));
								this.ai[2] = 0f;
								if (NPCID.Sets.TownCritter[this.type])
								{
									this.ai[1] = this.ai[1] + (float)Main.rand.Next(200, 400);
								}
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else if (Main.netMode != 1)
					{
						if (x56 != this.homeTileX || y53 != num159)
						{
							if (x56 <= this.homeTileX)
							{
								this.direction = 1;
							}
							else
							{
								this.direction = -1;
							}
							this.ai[0] = 1f;
							this.ai[1] = (float)(200 + Main.rand.Next(200));
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
						else
						{
							if (this.velocity.X != 0f)
							{
								this.netUpdate = true;
							}
							if (this.velocity.X > 0.1f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X >= -0.1f)
							{
								this.velocity.X = 0f;
							}
							else
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
						}
					}
					if (Main.netMode != 1 && (!flag43 || x56 == this.homeTileX && y53 == num159))
					{
						if (x56 >= this.homeTileX - 25 && x56 <= this.homeTileX + 25)
						{
							if (Main.rand.Next(80) == 0 && this.localAI[3] == 0f)
							{
								this.localAI[3] = 200f;
								NPC nPC63 = this;
								nPC63.direction = nPC63.direction * -1;
								this.netUpdate = true;
							}
						}
						else if (this.localAI[3] == 0f)
						{
							if (x56 < this.homeTileX - 50 && this.direction == -1)
							{
								this.direction = 1;
								this.netUpdate = true;
							}
							else if (x56 > this.homeTileX + 50 && this.direction == 1)
							{
								this.direction = -1;
								this.netUpdate = true;
							}
						}
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (Main.netMode == 1 || !flag43 || x56 != this.homeTileX || y53 != this.homeTileY || NPCID.Sets.TownCritter[this.type])
					{
						bool flag50 = Collision.DrownCollision(this.position, this.width, this.height, 1f);
						if (!flag50)
						{
							if (Main.netMode != 1 && !this.homeless && !Main.tileDungeon[Main.tile[x56, y53].type] && (x56 < this.homeTileX - 35 || x56 > this.homeTileX + 35))
							{
								if (this.position.X < (float)(this.homeTileX * 16) && this.direction == -1)
								{
									this.ai[1] = this.ai[1] - 5f;
								}
								else if (this.position.X > (float)(this.homeTileX * 16) && this.direction == 1)
								{
									this.ai[1] = this.ai[1] - 5f;
								}
							}
							this.ai[1] = this.ai[1] - 1f;
						}
						if (this.ai[1] <= 0f)
						{
							this.ai[0] = 0f;
							this.ai[1] = (float)(300 + Main.rand.Next(300));
							this.ai[2] = 0f;
							if (!NPCID.Sets.TownCritter[this.type])
							{
								this.ai[1] = this.ai[1] + (float)Main.rand.Next(900);
							}
							else
							{
								this.ai[1] = this.ai[1] - (float)Main.rand.Next(100);
							}
							this.localAI[3] = 60f;
							this.netUpdate = true;
						}
						if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
						{
							Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
							if (tileSafely.type == 11)
							{
								if (WorldGen.CloseDoor(this.doorX, this.doorY, false))
								{
									this.closeDoor = false;
									NetMessage.SendData(19, -1, -1, "", 1, (float)this.doorX, (float)this.doorY, (float)this.direction, 0, 0, 0);
								}
								if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
								{
									this.closeDoor = false;
								}
							}
							else if (tileSafely.type != 389)
							{
								this.closeDoor = false;
							}
							else
							{
								if (WorldGen.ShiftTallGate(this.doorX, this.doorY, true))
								{
									this.closeDoor = false;
									NetMessage.SendData(19, -1, -1, "", 5, (float)this.doorX, (float)this.doorY, 0f, 0, 0, 0);
								}
								if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
								{
									this.closeDoor = false;
								}
							}
						}
						float single131 = 1f;
						float single132 = 0.07f;
						if (this.type == 299 || this.type == 539 || this.type == 538)
						{
							single131 = 1.5f;
						}
						if (flag47)
						{
							single131 = 2f;
							single132 = 1f;
						}
						if (this.friendly && (flag48 || flag50))
						{
							single131 = 1.5f;
							float single133 = 1f - (float)this.life / (float)this.lifeMax;
							single131 = single131 + single133 * 0.9f;
							single132 = 0.1f;
						}
						if (this.velocity.X < -single131 || this.velocity.X > single131)
						{
							if (this.velocity.Y == 0f)
							{
								NPC nPC64 = this;
								nPC64.velocity = nPC64.velocity * 0.8f;
							}
						}
						else if (this.velocity.X < single131 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + single132;
							if (this.velocity.X > single131)
							{
								this.velocity.X = single131;
							}
						}
						else if (this.velocity.X > -single131 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - single132;
							if (this.velocity.X > single131)
							{
								this.velocity.X = single131;
							}
						}
						bool flag51 = true;
						if ((float)(this.homeTileY * 16 - 32) > this.position.Y)
						{
							flag51 = false;
						}
						if (this.direction == 1 && this.position.Y + (float)(this.width / 2) > (float)(this.homeTileX * 16) || this.direction == -1 && this.position.Y + (float)(this.width / 2) < (float)(this.homeTileX * 16))
						{
							flag51 = true;
						}
						if (this.velocity.Y == 0f)
						{
							Collision.StepDown(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false);
						}
						if (this.velocity.Y >= 0f)
						{
							Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, flag51, 1);
						}
						if (this.velocity.Y == 0f)
						{
							int x58 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
							int y54 = (int)((this.position.Y + (float)this.height - 16f) / 16f);
							bool flag52 = false;
							bool flag53 = true;
							if (this.townNPC && this.ai[1] < 30f)
							{
								flag52 = !Utils.PlotTileLine(base.Top, base.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs));
								if (!flag52)
								{
									Rectangle hitbox = base.Hitbox;
									hitbox.X = hitbox.X - 20;
									hitbox.Width = hitbox.Width + 40;
									int num163 = 0;
									while (num163 < 200)
									{
										if (!Main.npc[num163].active || !Main.npc[num163].friendly || num163 == this.whoAmI || Main.npc[num163].velocity.X != 0f || !hitbox.Intersects(Main.npc[num163].Hitbox))
										{
											num163++;
										}
										else
										{
											flag52 = true;
											break;
										}
									}
								}
							}
							if (!flag52 && flag50)
							{
								flag52 = true;
							}
							if (flag53 && (NPCID.Sets.TownCritter[this.type] || x56 < this.homeTileX - 35 || x56 > this.homeTileX + 35))
							{
								flag53 = false;
							}
							if (flag53)
							{
								int num164 = 0;
								int num165 = -1;
								while (num165 <= 4)
								{
									Tile tile = Framing.GetTileSafely(x58 - this.direction * num164, y54 + num165);
									if (!tile.lava() || tile.liquid <= 0)
									{
										if (tile.nactive() && Main.tileSolid[tile.type])
										{
											flag53 = false;
										}
										num165++;
									}
									else
									{
										flag53 = true;
										break;
									}
								}
							}
							if (!flag53 && this.wet)
							{
								bool flag54 = flag50;
								bool flag55 = false;
								if (!flag54)
								{
									flag55 = Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), 0f), this.width, this.height, 1f);
								}
								flag55 = (flag55 ? true : Collision.DrownCollision(this.position + new Vector2((float)(this.width * this.direction), (float)(this.height * 2 - 16 - (flag54 ? 16 : 0))), this.width, 16 + (flag54 ? 16 : 0), 1f));
								if (flag55 && this.localAI[3] <= 0f)
								{
									flag53 = true;
									this.localAI[3] = 600f;
								}
							}
							if (this.position.X == this.localAI[3])
							{
								NPC nPC65 = this;
								nPC65.direction = nPC65.direction * -1;
								this.netUpdate = true;
								this.localAI[3] = 600f;
							}
							if (!flag50)
							{
								this.localAI[3] = -1f;
							}
							else if (this.localAI[3] > 0f)
							{
								this.localAI[3] = this.localAI[3] - 1f;
							}
							Tile tileSafely1 = Framing.GetTileSafely(x58, y54);
							Tile tile1 = Framing.GetTileSafely(x58, y54 - 1);
							Tile tileSafely2 = Framing.GetTileSafely(x58, y54 - 2);
							if (!this.townNPC || !tileSafely2.nactive() || tileSafely2.type != 10 && tileSafely2.type != 388 || Main.rand.Next(10) != 0 && !flag43)
							{
								if (this.velocity.X < 0f && this.spriteDirection == -1 || this.velocity.X > 0f && this.spriteDirection == 1)
								{
									if (tileSafely2.nactive() && Main.tileSolid[tileSafely2.type] && !Main.tileSolidTop[tileSafely2.type])
									{
										if (!Collision.SolidTilesVersatile(x58 - this.direction * 2, x58 - this.direction, y54 - 5, y54 - 1) && !Collision.SolidTiles(x58, x58, y54 - 5, y54 - 3))
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
										}
										else if (flag47)
										{
											if (WorldGen.SolidTile((int)(base.Center.X / 16f) + this.direction, (int)(base.Center.Y / 16f)))
											{
												NPC nPC66 = this;
												nPC66.direction = nPC66.direction * -1;
												this.velocity.X = this.velocity.X * 0f;
												this.netUpdate = true;
											}
										}
										else if (!flag48)
										{
											NPC nPC67 = this;
											nPC67.direction = nPC67.direction * -1;
											this.netUpdate = true;
										}
										else
										{
											flag52 = false;
											this.velocity.X = 0f;
											NPC nPC68 = this;
											nPC68.direction = nPC68.direction * -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
									}
									else if (tile1.nactive() && Main.tileSolid[tile1.type] && !Main.tileSolidTop[tile1.type])
									{
										if (!Collision.SolidTilesVersatile(x58 - this.direction * 2, x58 - this.direction, y54 - 4, y54 - 1) && !Collision.SolidTiles(x58, x58, y54 - 4, y54 - 2))
										{
											this.velocity.Y = -5f;
											this.netUpdate = true;
										}
										else if (!flag48)
										{
											NPC nPC69 = this;
											nPC69.direction = nPC69.direction * -1;
											this.netUpdate = true;
										}
										else
										{
											flag52 = false;
											this.velocity.X = 0f;
											NPC nPC70 = this;
											nPC70.direction = nPC70.direction * -1;
											this.netUpdate = true;
											this.ai[0] = 8f;
											this.ai[1] = 240f;
										}
									}
									else if (this.position.Y + (float)this.height - (float)(y54 * 16) <= 20f || !tileSafely1.nactive() || !Main.tileSolid[tileSafely1.type] || tileSafely1.topSlope())
									{
										if (flag53)
										{
											NPC nPC71 = this;
											nPC71.direction = nPC71.direction * -1;
											this.velocity.X = this.velocity.X * -1f;
											this.netUpdate = true;
											if (flag48)
											{
												flag52 = false;
												this.velocity.X = 0f;
												this.ai[0] = 8f;
												this.ai[1] = 240f;
											}
										}
									}
									else if (!Collision.SolidTilesVersatile(x58 - this.direction * 2, x58, y54 - 3, y54 - 1))
									{
										this.velocity.Y = -4.4f;
										this.netUpdate = true;
									}
									else if (!flag48)
									{
										NPC nPC72 = this;
										nPC72.direction = nPC72.direction * -1;
										this.netUpdate = true;
									}
									else
									{
										flag52 = false;
										this.velocity.X = 0f;
										NPC nPC73 = this;
										nPC73.direction = nPC73.direction * -1;
										this.netUpdate = true;
										this.ai[0] = 8f;
										this.ai[1] = 240f;
									}
									if (flag52)
									{
										this.ai[1] = 90f;
										this.netUpdate = true;
									}
									if (this.velocity.Y < 0f)
									{
										this.localAI[3] = this.position.X;
									}
								}
								if (this.velocity.Y < 0f && this.wet)
								{
									this.velocity.Y = this.velocity.Y * 1.2f;
								}
								if (this.velocity.Y < 0f && NPCID.Sets.TownCritter[this.type] && !flag47)
								{
									this.velocity.Y = this.velocity.Y * 1.2f;
								}
							}
							else if (Main.netMode != 1)
							{
								if (WorldGen.OpenDoor(x58, y54 - 2, this.direction))
								{
									this.closeDoor = true;
									this.doorX = x58;
									this.doorY = y54 - 2;
									NetMessage.SendData(19, -1, -1, "", 0, (float)x58, (float)(y54 - 2), (float)this.direction, 0, 0, 0);
									this.netUpdate = true;
									this.ai[1] = this.ai[1] + 80f;
								}
								else if (WorldGen.OpenDoor(x58, y54 - 2, -this.direction))
								{
									this.closeDoor = true;
									this.doorX = x58;
									this.doorY = y54 - 2;
									NetMessage.SendData(19, -1, -1, "", 0, (float)x58, (float)(y54 - 2), (float)(-this.direction), 0, 0, 0);
									this.netUpdate = true;
									this.ai[1] = this.ai[1] + 80f;
								}
								else if (!WorldGen.ShiftTallGate(x58, y54 - 2, false))
								{
									NPC nPC74 = this;
									nPC74.direction = nPC74.direction * -1;
									this.netUpdate = true;
								}
								else
								{
									this.closeDoor = true;
									this.doorX = x58;
									this.doorY = y54 - 2;
									NetMessage.SendData(19, -1, -1, "", 4, (float)x58, (float)(y54 - 2), 0f, 0, 0, 0);
									this.netUpdate = true;
									this.ai[1] = this.ai[1] + 80f;
								}
							}
						}
					}
					else
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(200 + Main.rand.Next(200));
						this.localAI[3] = 60f;
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 11f)
				{
					if (Main.netMode != 1)
					{
						this.localAI[3] = this.localAI[3] - 1f;
						if (Main.rand.Next(60) == 0 && this.localAI[3] == 0f)
						{
							this.localAI[3] = 60f;
							NPC nPC75 = this;
							nPC75.direction = nPC75.direction * -1;
							this.netUpdate = true;
						}
					}
					this.ai[1] = this.ai[1] - 1f;
					this.velocity.X = this.velocity.X * 0.8f;
					if (this.ai[1] <= 0f)
					{
						this.localAI[3] = 40f;
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 5f || this.ai[0] == 8f || this.ai[0] == 9f || this.ai[0] == 16f || this.ai[0] == 17f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] = this.ai[1] - 1f;
					if (this.ai[0] == 8f && this.ai[1] < 60f && flag48)
					{
						this.ai[1] = 180f;
						this.netUpdate = true;
					}
					if (this.ai[0] == 5f)
					{
						Point tileCoordinates = base.Center.ToTileCoordinates();
						if (Main.tile[tileCoordinates.X, tileCoordinates.Y].type != 15)
						{
							this.ai[1] = 0f;
						}
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(30 + Main.rand.Next(60));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 6f || this.ai[0] == 7f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] = this.ai[1] - 1f;
					int num166 = (int)this.ai[2];
					if (num166 < 0 || num166 > 255 || !Main.player[num166].active || Main.player[num166].dead || Main.player[num166].Distance(base.Center) > 200f || !Collision.CanHitLine(base.Top, 0, 0, Main.player[num166].Top, 0, 0))
					{
						this.ai[1] = 0f;
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(60 + Main.rand.Next(60));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(30 + Main.rand.Next(60));
						this.netUpdate = true;
					}
					else
					{
						int num167 = (base.Center.X < Main.player[num166].Center.X ? 1 : -1);
						if (num167 != this.direction)
						{
							this.netUpdate = true;
						}
						this.direction = num167;
					}
				}
				else if (this.ai[0] == 10f)
				{
					int num168 = 0;
					int num169 = 0;
					float single134 = 0f;
					float single135 = 0f;
					int num170 = 0;
					int num171 = 0;
					int num172 = 0;
					float single136 = 0f;
					float dangerDetectRange1 = (float)NPCID.Sets.DangerDetectRange[this.type];
					float single137 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0;
						this.localAI[3] = 0f;
					}
					if (this.type == 38)
					{
						num168 = 30;
						single135 = 6f;
						num169 = 20;
						num170 = 10;
						num171 = 180;
						num172 = 120;
						single136 = 16f;
						single134 = 7f;
					}
					else if (this.type == 208)
					{
						num168 = 588;
						single135 = 6f;
						num169 = 30;
						num170 = 10;
						num171 = 60;
						num172 = 120;
						single136 = 16f;
						single134 = 6f;
					}
					else if (this.type == 17)
					{
						num168 = 48;
						single135 = 9f;
						num169 = 12;
						num170 = 10;
						num171 = 60;
						num172 = 60;
						single136 = 16f;
						single134 = 1.5f;
					}
					else if (this.type == 369)
					{
						num168 = 520;
						single135 = 12f;
						num169 = 10;
						num170 = 10;
						num171 = 0;
						num172 = 1;
						single136 = 16f;
						single134 = 3f;
					}
					else if (this.type == 453)
					{
						num168 = 21;
						single135 = 14f;
						num169 = 14;
						num170 = 10;
						num171 = 0;
						num172 = 1;
						single136 = 16f;
						single134 = 3f;
					}
					else if (this.type == 107)
					{
						num168 = 24;
						single135 = 5f;
						num169 = 15;
						num170 = 10;
						num171 = 60;
						num172 = 60;
						single136 = 16f;
						single134 = 1f;
					}
					else if (this.type == 124)
					{
						num168 = 582;
						single135 = 10f;
						num169 = 11;
						num170 = 1;
						num171 = 30;
						num172 = 30;
						single134 = 3.5f;
					}
					else if (this.type == 18)
					{
						num168 = 583;
						single135 = 8f;
						num169 = 8;
						num170 = 1;
						num171 = 15;
						num172 = 10;
						single134 = 2f;
						single136 = 10f;
					}
					else if (this.type == 142)
					{
						num168 = 589;
						single135 = 7f;
						num169 = 22;
						num170 = 1;
						num171 = 10;
						num172 = 1;
						single134 = 2f;
						single136 = 10f;
					}
					if (Main.expertMode)
					{
						num169 = (int)((float)num169 * Main.expertNPCDamage);
					}
					num169 = (int)((float)num169 * single127);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] = this.ai[1] - 1f;
					this.localAI[3] = this.localAI[3] + 1f;
					if (this.localAI[3] == (float)num170 && Main.netMode != 1)
					{
						Vector2 unitY = -Vector2.UnitY;
						if (num160 == 1 && this.spriteDirection == 1 && num162 != -1)
						{
							unitY = base.DirectionTo(Main.npc[num162].Center + new Vector2(0f, -single136 * MathHelper.Clamp(base.Distance(Main.npc[num162].Center) / dangerDetectRange1, 0f, 1f)));
						}
						if (num160 == -1 && this.spriteDirection == -1 && num161 != -1)
						{
							unitY = base.DirectionTo(Main.npc[num161].Center + new Vector2(0f, -single136 * MathHelper.Clamp(base.Distance(Main.npc[num161].Center) / dangerDetectRange1, 0f, 1f)));
						}
						if (unitY.HasNaNs() || Math.Sign(unitY.X) != this.spriteDirection)
						{
							unitY = new Vector2((float)this.spriteDirection, -1f);
						}
						unitY = unitY * single135;
						unitY = unitY + Utils.RandomVector2(Main.rand, -single137, single137);
						int num173 = 1000;
						if (this.type != 124)
						{
							num173 = (this.type != 142 ? Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, unitY.X, unitY.Y, num168, num169, single134, Main.myPlayer, 0f, 0f) : Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, unitY.X, unitY.Y, num168, num169, single134, Main.myPlayer, 0f, (float)Main.rand.Next(5)));
						}
						else
						{
							num173 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, unitY.X, unitY.Y, num168, num169, single134, Main.myPlayer, 0f, (float)this.whoAmI);
						}
						Main.projectile[num173].npcProj = true;
						Main.projectile[num173].noDropItem = true;
					}
					if (this.ai[1] <= 0f && !false)
					{
						float[] singleArray = this.ai;
						if (this.localAI[2] != 8f || !flag48)
						{
							obj3 = null;
						}
						else
						{
							obj3 = 8;
						}
						singleArray[0] = (float)obj3;
						this.ai[1] = (float)(num171 + Main.rand.Next(num172));
						this.ai[2] = 0f;
						float[] singleArray1 = this.localAI;
						float[] singleArray2 = this.localAI;
						float single138 = (float)(num171 / 2 + Main.rand.Next(num172));
						single1 = single138;
						singleArray2[3] = single138;
						singleArray1[1] = single1;
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 12f)
				{
					int num174 = 0;
					int num175 = 0;
					float single139 = 0f;
					int num176 = 0;
					int num177 = 0;
					int num178 = 0;
					float single140 = 0f;
					int num179 = 0;
					bool flag56 = false;
					float single141 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0;
						this.localAI[3] = 0f;
					}
					int num180 = -1;
					if (num160 == 1 && this.spriteDirection == 1)
					{
						num180 = num162;
					}
					if (num160 == -1 && this.spriteDirection == -1)
					{
						num180 = num161;
					}
					if (this.type == 19)
					{
						num174 = 14;
						single139 = 13f;
						num175 = 24;
						num177 = 14;
						num178 = 4;
						single140 = 3f;
						num176 = 1;
						single141 = 0.5f;
						if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
						{
							this.frameCounter = 0;
							this.localAI[3] = 0f;
						}
						if (Main.hardMode)
						{
							num175 = 15;
							if (this.localAI[3] > (float)num176)
							{
								num176 = 10;
								flag56 = true;
							}
							if (this.localAI[3] > (float)num176)
							{
								num176 = 20;
								flag56 = true;
							}
							if (this.localAI[3] > (float)num176)
							{
								num176 = 30;
								flag56 = true;
							}
						}
					}
					else if (this.type == 227)
					{
						num174 = 587;
						single139 = 10f;
						num175 = 8;
						num177 = 10;
						num178 = 1;
						single140 = 1.75f;
						num176 = 1;
						single141 = 0.5f;
						if (this.localAI[3] > (float)num176)
						{
							num176 = 12;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num176)
						{
							num176 = 24;
							flag56 = true;
						}
						if (Main.hardMode)
						{
							num175 = num175 + 2;
						}
					}
					else if (this.type == 368)
					{
						num174 = 14;
						single139 = 13f;
						num175 = 24;
						num177 = 12;
						num178 = 5;
						single140 = 2f;
						num176 = 1;
						single141 = 0.2f;
						if (Main.hardMode)
						{
							num175 = 30;
							num174 = 357;
						}
					}
					else if (this.type == 22)
					{
						single139 = 10f;
						num175 = 8;
						num176 = 1;
						if (!Main.hardMode)
						{
							num174 = 1;
							num177 = 30;
							num178 = 20;
						}
						else
						{
							num174 = 2;
							num177 = 15;
							num178 = 10;
							num175 = num175 + 6;
						}
						single140 = 2.75f;
						num179 = 4;
						single141 = 0.7f;
					}
					else if (this.type == 228)
					{
						num174 = 267;
						single139 = 14f;
						num175 = 20;
						num176 = 1;
						num177 = 10;
						num178 = 1;
						single140 = 3f;
						num179 = 6;
						single141 = 0.4f;
					}
					else if (this.type == 178)
					{
						num174 = 242;
						single139 = 13f;
						num175 = 15;
						num177 = 10;
						num178 = 1;
						single140 = 2f;
						num176 = 1;
						if (this.localAI[3] > (float)num176)
						{
							num176 = 8;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num176)
						{
							num176 = 16;
							flag56 = true;
						}
						single141 = 0.3f;
					}
					else if (this.type == 229)
					{
						num174 = 14;
						single139 = 14f;
						num175 = 24;
						num177 = 10;
						num178 = 1;
						single140 = 2f;
						num176 = 1;
						single141 = 0.7f;
						if (this.localAI[3] > (float)num176)
						{
							num176 = 16;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num176)
						{
							num176 = 24;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num176)
						{
							num176 = 32;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num176)
						{
							num176 = 40;
							flag56 = true;
						}
						if (this.localAI[3] > (float)num176)
						{
							num176 = 48;
							flag56 = true;
						}
						if (this.localAI[3] == 0f && num180 != -1 && base.Distance(Main.npc[num180].Center) < (float)NPCID.Sets.PrettySafe[this.type])
						{
							single141 = 0.1f;
							num174 = 162;
							num175 = 50;
							single140 = 10f;
							single139 = 24f;
						}
					}
					else if (this.type == 209)
					{
						Random random1 = Main.rand;
						numArray = new int[] { 134, 133, 135 };
						num174 = Utils.SelectRandom<int>(random1, numArray);
						num176 = 1;
						if (num174 == 135)
						{
							single139 = 12f;
							num175 = 30;
							num177 = 30;
							num178 = 10;
							single140 = 7f;
							single141 = 0.2f;
						}
						else if (num174 == 133)
						{
							single139 = 10f;
							num175 = 25;
							num177 = 10;
							num178 = 1;
							single140 = 6f;
							single141 = 0.2f;
						}
						else if (num174 == 134)
						{
							single139 = 13f;
							num175 = 20;
							num177 = 20;
							num178 = 10;
							single140 = 4f;
							single141 = 0.1f;
						}
					}
					if (Main.expertMode)
					{
						num175 = (int)((float)num175 * Main.expertNPCDamage);
					}
					num175 = (int)((float)num175 * single127);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] = this.ai[1] - 1f;
					this.localAI[3] = this.localAI[3] + 1f;
					if (this.localAI[3] == (float)num176 && Main.netMode != 1)
					{
						Vector2 zero1 = Vector2.Zero;
						if (num180 != -1)
						{
							zero1 = base.DirectionTo(Main.npc[num180].Center + new Vector2(0f, (float)(-num179)));
						}
						if (zero1.HasNaNs() || Math.Sign(zero1.X) != this.spriteDirection)
						{
							zero1 = new Vector2((float)this.spriteDirection, 0f);
						}
						zero1 = zero1 * single139;
						zero1 = zero1 + Utils.RandomVector2(Main.rand, -single141, single141);
						int num181 = 1000;
						num181 = (this.type != 227 ? Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, zero1.X, zero1.Y, num174, num175, single140, Main.myPlayer, 0f, 0f) : Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, zero1.X, zero1.Y, num174, num175, single140, Main.myPlayer, 0f, (float)Main.rand.Next(12) / 6f));
						Main.projectile[num181].npcProj = true;
						Main.projectile[num181].noDropItem = true;
					}
					if (this.localAI[3] == (float)num176 && flag56 && num180 != -1)
					{
						Vector2 vector251 = base.DirectionTo(Main.npc[num180].Center);
						if (vector251.Y <= 0.5f && vector251.Y >= -0.5f)
						{
							this.ai[2] = vector251.Y;
						}
					}
					if (this.ai[1] <= 0f && !false)
					{
						float[] singleArray3 = this.ai;
						float array3_0 = 8;
						if (this.localAI[2] != 8f || !flag48)
						{
							array3_0 = 0;
						}
						singleArray3[0] = (float)array3_0;
						this.ai[1] = (float)(num177 + Main.rand.Next(num178));
						this.ai[2] = 0f;
						float[] singleArray4 = this.localAI;
						float[] singleArray5 = this.localAI;
						float single142 = (float)(num177 / 2 + Main.rand.Next(num178));
						single1 = single142;
						singleArray5[3] = single142;
						singleArray4[1] = single1;
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 13f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0;
					}
					this.ai[1] = this.ai[1] - 1f;
					this.localAI[3] = this.localAI[3] + 1f;
					if (this.localAI[3] == 1f && Main.netMode != 1)
					{
						Vector2 vector252 = base.DirectionTo(Main.npc[(int)this.ai[2]].Center + new Vector2(0f, -20f));
						if (vector252.HasNaNs() || Math.Sign(vector252.X) == -this.spriteDirection)
						{
							vector252 = new Vector2((float)this.spriteDirection, -1f);
						}
						vector252 = vector252 * 8f;
						int num182 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, vector252.X, vector252.Y, 584, 0, 0f, Main.myPlayer, this.ai[2], 0f);
						Main.projectile[num182].npcProj = true;
						Main.projectile[num182].noDropItem = true;
					}
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(10 + Main.rand.Next(10));
						this.ai[2] = 0f;
						this.localAI[3] = (float)(5 + Main.rand.Next(10));
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 14f)
				{
					int num183 = 0;
					int num184 = 0;
					float single143 = 0f;
					int num185 = 0;
					int num186 = 0;
					int num187 = 0;
					float single144 = 0f;
					float single145 = 0f;
					float dangerDetectRange2 = (float)NPCID.Sets.DangerDetectRange[this.type];
					float single146 = 1f;
					float single147 = 0f;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0;
						this.localAI[3] = 0f;
					}
					int num188 = -1;
					if (num160 == 1 && this.spriteDirection == 1)
					{
						num188 = num162;
					}
					if (num160 == -1 && this.spriteDirection == -1)
					{
						num188 = num161;
					}
					if (this.type == 54)
					{
						num183 = 585;
						single143 = 10f;
						num184 = 16;
						num185 = 30;
						num186 = 20;
						num187 = 15;
						single144 = 2f;
						single147 = 1f;
					}
					else if (this.type == 108)
					{
						num183 = 15;
						single143 = 6f;
						num184 = 18;
						num185 = 15;
						num186 = 15;
						num187 = 5;
						single144 = 3f;
						single145 = 20f;
					}
					else if (this.type == 160)
					{
						num183 = 590;
						num184 = 40;
						num185 = 15;
						num186 = 10;
						num187 = 1;
						single144 = 3f;
						while (this.localAI[3] > (float)num185)
						{
							num185 = num185 + 15;
						}
					}
					else if (this.type == 20)
					{
						num183 = 586;
						num185 = 24;
						num186 = 10;
						num187 = 1;
						single144 = 3f;
					}
					if (Main.expertMode)
					{
						num184 = (int)((float)num184 * Main.expertNPCDamage);
					}
					num184 = (int)((float)num184 * single127);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] = this.ai[1] - 1f;
					this.localAI[3] = this.localAI[3] + 1f;
					if (this.localAI[3] == (float)num185 && Main.netMode != 1)
					{
						Vector2 zero2 = Vector2.Zero;
						if (num188 != -1)
						{
							zero2 = base.DirectionTo(Main.npc[num188].Center + new Vector2(0f, -single145 * MathHelper.Clamp(base.Distance(Main.npc[num188].Center) / dangerDetectRange2, 0f, 1f)));
						}
						if (zero2.HasNaNs() || Math.Sign(zero2.X) != this.spriteDirection)
						{
							zero2 = new Vector2((float)this.spriteDirection, 0f);
						}
						zero2 = zero2 * single143;
						zero2 = zero2 + Utils.RandomVector2(Main.rand, -single147, single147);
						if (this.type == 108)
						{
							Random random2 = Main.rand;
							numArray = new int[] { 1, 1, 1, 1, 2, 2, 3 };
							int num189 = Utils.SelectRandom<int>(random2, numArray);
							for (int q2 = 0; q2 < num189; q2++)
							{
								Vector2 vector253 = Utils.RandomVector2(Main.rand, -3.4f, 3.4f);
								int num190 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, zero2.X + vector253.X, zero2.Y + vector253.Y, num183, num184, single144, Main.myPlayer, 0f, 0f);
								Main.projectile[num190].npcProj = true;
								Main.projectile[num190].noDropItem = true;
							}
						}
						else if (this.type == 160)
						{
							if (num188 != -1)
							{
								Vector2 size = (Main.npc[num188].position - (Main.npc[num188].Size * 2f)) + ((Main.npc[num188].Size * Utils.RandomVector2(Main.rand, 0f, 1f)) * 5f);
								int num191 = 10;
								while (num191 > 0 && WorldGen.SolidTile(Framing.GetTileSafely((int)size.X / 16, (int)size.Y / 16)))
								{
									num191--;
									size = (Main.npc[num188].position - (Main.npc[num188].Size * 2f)) + ((Main.npc[num188].Size * Utils.RandomVector2(Main.rand, 0f, 1f)) * 5f);
								}
								int num192 = Projectile.NewProjectile(size.X, size.Y, 0f, 0f, num183, num184, single144, Main.myPlayer, 0f, 0f);
								Main.projectile[num192].npcProj = true;
								Main.projectile[num192].noDropItem = true;
							}
						}
						else if (this.type != 20)
						{
							int num193 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, zero2.X, zero2.Y, num183, num184, single144, Main.myPlayer, 0f, 0f);
							Main.projectile[num193].npcProj = true;
							Main.projectile[num193].noDropItem = true;
						}
						else
						{
							int num194 = Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * 16), base.Center.Y - 2f, zero2.X, zero2.Y, num183, num184, single144, Main.myPlayer, 0f, (float)this.whoAmI);
							Main.projectile[num194].npcProj = true;
							Main.projectile[num194].noDropItem = true;
						}
					}
					if (single146 > 0f)
					{
						Vector3 vector33 = NPCID.Sets.MagicAuraColor[this.type].ToVector3() * single146;
						Lighting.AddLight(base.Center, vector33.X, vector33.Y, vector33.Z);
					}
					if (this.ai[1] <= 0f && !false)
					{
						float[] singleArray6 = this.ai;
						if (this.localAI[2] != 8f || !flag48)
						{
							obj1 = null;
						}
						else
						{
							obj1 = 8;
						}
						singleArray6[0] = (float)obj1;
						this.ai[1] = (float)(num186 + Main.rand.Next(num187));
						this.ai[2] = 0f;
						float[] singleArray7 = this.localAI;
						float[] singleArray8 = this.localAI;
						float single148 = (float)(num186 / 2 + Main.rand.Next(num187));
						single1 = single148;
						singleArray8[3] = single148;
						singleArray7[1] = single1;
						this.netUpdate = true;
					}
				}
				else if (this.ai[0] == 15f)
				{
					int num195 = 0;
					int num196 = 0;
					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
					{
						this.frameCounter = 0;
						this.localAI[3] = 0f;
					}
					int num197 = 0;
					float single149 = 0f;
					int num198 = 0;
					int num199 = 0;
					if (num160 == 1)
					{
						int num200 = this.spriteDirection;
					}
					if (num160 == -1)
					{
						int num201 = this.spriteDirection;
					}
					if (this.type == 207)
					{
						num197 = 11;
						int num202 = 32;
						num199 = num202;
						num198 = num202;
						num195 = 12;
						num196 = 6;
						single149 = 4.25f;
					}
					else if (this.type == 441)
					{
						num197 = 9;
						int num203 = 28;
						num199 = num203;
						num198 = num203;
						num195 = 9;
						num196 = 3;
						single149 = 3.5f;
					}
					else if (this.type == 353)
					{
						num197 = 10;
						int num204 = 32;
						num199 = num204;
						num198 = num204;
						num195 = 15;
						num196 = 8;
						single149 = 5f;
					}
					if (Main.expertMode)
					{
						num197 = (int)((float)num197 * Main.expertNPCDamage);
					}
					num197 = (int)((float)num197 * single127);
					this.velocity.X = this.velocity.X * 0.8f;
					this.ai[1] = this.ai[1] - 1f;
					if (Main.netMode != 1)
					{
						Tuple<Vector2, float> swingStats = this.GetSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, num198, num199);
						Rectangle rectangle4 = new Rectangle((int)swingStats.Item1.X, (int)swingStats.Item1.Y, num198, num199);
						if (this.spriteDirection == -1)
						{
							rectangle4.X = rectangle4.X - num198;
						}
						rectangle4.Y = rectangle4.Y - num199;
						this.TweakSwingStats(NPCID.Sets.AttackTime[this.type] * 2, (int)this.ai[1], this.spriteDirection, ref rectangle4);
						int num205 = Main.myPlayer;
						for (int r2 = 0; r2 < 200; r2++)
						{
							NPC nPC76 = Main.npc[r2];
							if (nPC76.active && nPC76.immune[num205] == 0 && !nPC76.dontTakeDamage && !nPC76.friendly && nPC76.damage > 0 && rectangle4.Intersects(nPC76.Hitbox) && (nPC76.noTileCollide || Collision.CanHit(this.position, this.width, this.height, nPC76.position, nPC76.width, nPC76.height)))
							{
								nPC76.StrikeNPCNoInteraction(num197, single149, this.spriteDirection, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, "", r2, (float)num197, single149, (float)this.spriteDirection, 0, 0, 0);
								}
								nPC76.netUpdate = true;
								nPC76.immune[num205] = (int)this.ai[1] + 2;
							}
						}
					}
					if (this.ai[1] <= 0f)
					{
						bool flag57 = false;
						if (flag48)
						{
							if (!Collision.CanHit(base.Center, 0, 0, base.Center + ((Vector2.UnitX * (float)(-num160)) * 32f), 0, 0) || this.localAI[2] == 8f)
							{
								flag57 = true;
							}
							if (flag57)
							{
								int attackTime = NPCID.Sets.AttackTime[this.type];
								int num206 = (num160 == 1 ? num162 : num161);
								int num207 = (num160 == 1 ? num161 : num162);
								if (num206 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num206].Center, 0, 0))
								{
									num206 = (num207 == -1 || !Collision.CanHit(base.Center, 0, 0, Main.npc[num207].Center, 0, 0) ? -1 : num207);
								}
								if (num206 == -1)
								{
									flag57 = false;
								}
								else
								{
									this.ai[0] = 15f;
									this.ai[1] = (float)attackTime;
									this.ai[2] = 0f;
									this.localAI[3] = 0f;
									this.direction = (this.position.X < Main.npc[num206].position.X ? 1 : -1);
									this.netUpdate = true;
								}
							}
						}
						if (!flag57)
						{
							float[] singleArray9 = this.ai;
							if (this.localAI[2] != 8f || !flag48)
							{
								obj = null;
							}
							else
							{
								obj = 8;
							}
							singleArray9[0] = (float)obj;
							this.ai[1] = (float)(num195 + Main.rand.Next(num196));
							this.ai[2] = 0f;
							float[] singleArray10 = this.localAI;
							float[] singleArray11 = this.localAI;
							float single150 = (float)(num195 / 2 + Main.rand.Next(num196));
							single1 = single150;
							singleArray11[3] = single150;
							singleArray10[1] = single1;
							this.netUpdate = true;
						}
					}
				}
				if (Main.netMode != 1 && (this.townNPC || this.type == 453) && !flag45)
				{
					bool flag58 = (this.ai[0] >= 2f ? false : !flag48);
					if (this.ai[0] < 2f || this.ai[0] == 8f)
					{
						flag5 = (flag48 ? true : flag49);
					}
					else
					{
						flag5 = false;
					}
					bool flag59 = flag5;
					if (this.localAI[1] > 0f)
					{
						this.localAI[1] = this.localAI[1] - 1f;
					}
					if (this.localAI[1] > 0f)
					{
						flag59 = false;
					}
					if (flag59 && this.type == 124 && this.localAI[0] == 1f)
					{
						flag59 = false;
					}
					if (flag59 && this.type == 20)
					{
						flag59 = false;
						int num208 = 0;
						while (num208 < 200)
						{
							NPC nPC77 = Main.npc[num208];
							if (!nPC77.active || !nPC77.townNPC || base.Distance(nPC77.Center) > 1200f || nPC77.HasBuff(165) != -1)
							{
								num208++;
							}
							else
							{
								flag59 = true;
								break;
							}
						}
					}
					if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(300) == 0)
					{
						int num209 = 420;
						num209 = (Main.rand.Next(2) != 0 ? num209 * Main.rand.Next(1, 3) : num209 * Main.rand.Next(1, 4));
						int num210 = 100;
						int num211 = 20;
						int num212 = 0;
						while (num212 < 200)
						{
							NPC nPC78 = Main.npc[num212];
							bool flag60 = ((nPC78.ai[0] != 1f || !nPC78.closeDoor) && (nPC78.ai[0] != 1f || nPC78.ai[1] <= 200f) ? nPC78.ai[0] > 1f : true);
							if (nPC78 == this || !nPC78.active || !nPC78.CanTalk || flag60 || nPC78.Distance(base.Center) >= (float)num210 || nPC78.Distance(base.Center) <= (float)num211 || !Collision.CanHit(base.Center, 0, 0, nPC78.Center, 0, 0))
							{
								num212++;
							}
							else
							{
								int directionInt = (this.position.X < nPC78.position.X).ToDirectionInt();
								this.ai[0] = 3f;
								this.ai[1] = (float)num209;
								this.ai[2] = (float)num212;
								this.direction = directionInt;
								this.netUpdate = true;
								nPC78.ai[0] = 4f;
								nPC78.ai[1] = (float)num209;
								nPC78.ai[2] = (float)this.whoAmI;
								nPC78.direction = -directionInt;
								nPC78.netUpdate = true;
								goto Label5;
							}
						}
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1800) == 0)
					{
						int num213 = 420;
						num213 = (Main.rand.Next(2) != 0 ? num213 * Main.rand.Next(1, 3) : num213 * Main.rand.Next(1, 4));
						int num214 = 100;
						int num215 = 20;
						int num216 = 0;
						while (num216 < 200)
						{
							NPC nPC79 = Main.npc[num216];
							bool flag61 = ((nPC79.ai[0] != 1f || !nPC79.closeDoor) && (nPC79.ai[0] != 1f || nPC79.ai[1] <= 200f) ? nPC79.ai[0] > 1f : true);
							if (nPC79 == this || !nPC79.active || !nPC79.CanTalk || flag61 || nPC79.Distance(base.Center) >= (float)num214 || nPC79.Distance(base.Center) <= (float)num215 || !Collision.CanHit(base.Center, 0, 0, nPC79.Center, 0, 0))
							{
								num216++;
							}
							else
							{
								int directionInt1 = (this.position.X < nPC79.position.X).ToDirectionInt();
								this.ai[0] = 16f;
								this.ai[1] = (float)num213;
								this.ai[2] = (float)num216;
								this.localAI[2] = (float)Main.rand.Next(4);
								this.localAI[3] = (float)Main.rand.Next(3 - (int)this.localAI[2]);
								this.direction = directionInt1;
								this.netUpdate = true;
								nPC79.ai[0] = 17f;
								nPC79.ai[1] = (float)num213;
								nPC79.ai[2] = (float)this.whoAmI;
								nPC79.localAI[2] = 0f;
								nPC79.localAI[3] = 0f;
								nPC79.direction = -directionInt1;
								nPC79.netUpdate = true;
								goto Label5;
							}
						}
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1200) == 0 && this.type == 208)
					{
						int num217 = 300;
						int num218 = 150;
						int num219 = 0;
						while (num219 < 255)
						{
							Player player1 = Main.player[num219];
							if (!player1.active || player1.dead || player1.Distance(base.Center) >= (float)num218 || !Collision.CanHitLine(base.Top, 0, 0, player1.Top, 0, 0))
							{
								num219++;
							}
							else
							{
								int directionInt2 = (this.position.X < player1.position.X).ToDirectionInt();
								this.ai[0] = 6f;
								this.ai[1] = (float)num217;
								this.ai[2] = (float)num219;
								this.direction = directionInt2;
								this.netUpdate = true;
								goto Label5;
							}
						}
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1800) == 0)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)(45 * Main.rand.Next(1, 2));
						this.netUpdate = true;
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(600) == 0 && this.type == 229 && !flag49)
					{
						this.ai[0] = 11f;
						this.ai[1] = (float)(30 * Main.rand.Next(1, 4));
						this.netUpdate = true;
					}
					else if (flag58 && this.ai[0] == 0f && this.velocity.Y == 0f && Main.rand.Next(1200) == 0)
					{
						int num220 = 220;
						int num221 = 150;
						int num222 = 0;
						while (num222 < 255)
						{
							Player player2 = Main.player[num222];
							if (!player2.active || player2.dead || player2.Distance(base.Center) >= (float)num221 || !Collision.CanHitLine(base.Top, 0, 0, player2.Top, 0, 0))
							{
								num222++;
							}
							else
							{
								int directionInt3 = (this.position.X < player2.position.X).ToDirectionInt();
								this.ai[0] = 7f;
								this.ai[1] = (float)num220;
								this.ai[2] = (float)num222;
								this.direction = directionInt3;
								this.netUpdate = true;
								goto Label5;
							}
						}
					}
					else if (flag58 && this.ai[0] == 1f && this.velocity.Y == 0f && Main.rand.Next(300) == 0)
					{
						Point point = base.Center.ToTileCoordinates();
						bool flag62 = WorldGen.InWorld(point.X, point.Y, 1);
						if (flag62)
						{
							int num223 = 0;
							while (num223 < 200)
							{
								if (!Main.npc[num223].active || Main.npc[num223].aiStyle != 7 || !Main.npc[num223].townNPC || Main.npc[num223].ai[0] != 5f || !(Main.npc[num223].Center.ToTileCoordinates() == point))
								{
									num223++;
								}
								else
								{
									flag62 = false;
									break;
								}
							}
						}
						if (flag62)
						{
							Tile tile2 = Main.tile[point.X, point.Y];
							flag62 = tile2.type == 15;
							if (flag62 && tile2.frameY == 1080)
							{
								flag62 = false;
							}
							if (flag62)
							{
								this.ai[0] = 5f;
								this.ai[1] = (float)(900 + Main.rand.Next(10800));
								this.direction = (tile2.frameX == 0 ? -1 : 1);
								base.Bottom = new Vector2((float)(point.X * 16 + 8 + 2 * this.direction), (float)(point.Y * 16 + 32));
								this.velocity = Vector2.Zero;
								this.localAI[3] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else if (flag58 && this.ai[0] == 1f && this.velocity.Y == 0f && Main.rand.Next(600) == 0 && Utils.PlotTileLine(base.Top, base.Bottom, (float)this.width, new Utils.PerLinePoint(DelegateMethods.SearchAvoidedByNPCs)))
					{
						Point tileCoordinates1 = (base.Center + new Vector2((float)(this.direction * 10), 0f)).ToTileCoordinates();
						bool flag63 = WorldGen.InWorld(tileCoordinates1.X, tileCoordinates1.Y, 1);
						if (flag63)
						{
							Tile tileSafely3 = Framing.GetTileSafely(tileCoordinates1.X, tileCoordinates1.Y);
							if (!tileSafely3.nactive() || !TileID.Sets.InteractibleByNPCs[tileSafely3.type])
							{
								flag63 = false;
							}
						}
						if (flag63)
						{
							this.ai[0] = 9f;
							this.ai[1] = (float)(40 + Main.rand.Next(90));
							this.velocity = Vector2.Zero;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
					}
				Label5:
					if (this.ai[0] < 2f && this.velocity.Y == 0f && this.type == 18)
					{
						int num224 = -1;
						for (int s2 = 0; s2 < 200; s2++)
						{
							NPC nPC80 = Main.npc[s2];
							if (nPC80.active && nPC80.townNPC && nPC80.life != nPC80.lifeMax && (num224 == -1 || nPC80.lifeMax - nPC80.life > Main.npc[num224].lifeMax - Main.npc[num224].life) && Collision.CanHitLine(this.position, this.width, this.height, nPC80.position, nPC80.width, nPC80.height) && base.Distance(nPC80.Center) < 500f)
							{
								num224 = s2;
							}
						}
						if (num224 != -1)
						{
							this.ai[0] = 13f;
							this.ai[1] = 34f;
							this.ai[2] = (float)num224;
							this.localAI[3] = 0f;
							this.direction = (this.position.X < Main.npc[num224].position.X ? 1 : -1);
							this.netUpdate = true;
						}
					}
					if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 0 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int attackTime1 = NPCID.Sets.AttackTime[this.type];
						int num225 = (num160 == 1 ? num162 : num161);
						int num226 = (num160 == 1 ? num161 : num162);
						if (num225 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num225].Center, 0, 0))
						{
							num225 = (num226 == -1 || !Collision.CanHit(base.Center, 0, 0, Main.npc[num226].Center, 0, 0) ? -1 : num226);
						}
						if (num225 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 10f;
							this.ai[1] = (float)attackTime1;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = (this.position.X < Main.npc[num225].position.X ? 1 : -1);
							this.netUpdate = true;
						}
					}
					else if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 1 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int attackTime2 = NPCID.Sets.AttackTime[this.type];
						int num227 = (num160 == 1 ? num162 : num161);
						int num228 = (num160 == 1 ? num161 : num162);
						if (num227 != -1 && !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num227].Center, 0, 0))
						{
							num227 = (num228 == -1 || !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num228].Center, 0, 0) ? -1 : num228);
						}
						if (num227 != -1)
						{
							Vector2 vector254 = base.DirectionTo(Main.npc[num227].Center);
							if (vector254.Y <= 0.5f && vector254.Y >= -0.5f)
							{
								this.localAI[2] = this.ai[0];
								this.ai[0] = 12f;
								this.ai[1] = (float)attackTime2;
								this.ai[2] = vector254.Y;
								this.localAI[3] = 0f;
								this.direction = (this.position.X < Main.npc[num227].position.X ? 1 : -1);
								this.netUpdate = true;
							}
						}
					}
					if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 2 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int attackTime3 = NPCID.Sets.AttackTime[this.type];
						int num229 = (num160 == 1 ? num162 : num161);
						int num230 = (num160 == 1 ? num161 : num162);
						if (num229 != -1 && !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num229].Center, 0, 0))
						{
							num229 = (num230 == -1 || !Collision.CanHitLine(base.Center, 0, 0, Main.npc[num230].Center, 0, 0) ? -1 : num230);
						}
						if (num229 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 14f;
							this.ai[1] = (float)attackTime3;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = (this.position.X < Main.npc[num229].position.X ? 1 : -1);
							this.netUpdate = true;
						}
						else if (this.type == 20)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 14f;
							this.ai[1] = (float)attackTime3;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.netUpdate = true;
						}
					}
					if (flag59 && this.velocity.Y == 0f && NPCID.Sets.AttackType[this.type] == 3 && NPCID.Sets.AttackAverageChance[this.type] > 0 && Main.rand.Next(NPCID.Sets.AttackAverageChance[this.type] * 2) == 0)
					{
						int attackTime4 = NPCID.Sets.AttackTime[this.type];
						int num231 = (num160 == 1 ? num162 : num161);
						int num232 = (num160 == 1 ? num161 : num162);
						if (num231 != -1 && !Collision.CanHit(base.Center, 0, 0, Main.npc[num231].Center, 0, 0))
						{
							num231 = (num232 == -1 || !Collision.CanHit(base.Center, 0, 0, Main.npc[num232].Center, 0, 0) ? -1 : num232);
						}
						if (num231 != -1)
						{
							this.localAI[2] = this.ai[0];
							this.ai[0] = 15f;
							this.ai[1] = (float)attackTime4;
							this.ai[2] = 0f;
							this.localAI[3] = 0f;
							this.direction = (this.position.X < Main.npc[num231].position.X ? 1 : -1);
							this.netUpdate = true;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				this.TargetClosest(true);
				this.velocity.X = this.velocity.X * 0.93f;
				if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
				{
					this.velocity.X = 0f;
				}
				if (this.ai[0] == 0f)
				{
					this.ai[0] = 500f;
				}
				if (this.type == 172)
				{
					if (this.alpha < 255)
					{
						NPC nPC81 = this;
						nPC81.alpha = nPC81.alpha + 1;
					}
					if (this.justHit)
					{
						this.alpha = 0;
					}
				}
				if (this.ai[2] != 0f && this.ai[3] != 0f)
				{
					if (this.type == 172)
					{
						this.alpha = 255;
					}
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int t2 = 0; t2 < 50; t2++)
					{
						if (this.type == 29 || this.type == 45)
						{
							Vector2 vector255 = new Vector2(this.position.X, this.position.Y);
							int num233 = this.width;
							int num234 = this.height;
							skyBlue = new Color();
							int num235 = Dust.NewDust(vector255, num233, num234, 27, 0f, 0f, 100, skyBlue, (float)Main.rand.Next(1, 3));
							Dust dust13 = Main.dust[num235];
							dust13.velocity = dust13.velocity * 3f;
							if (Main.dust[num235].scale > 1f)
							{
								Main.dust[num235].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							Vector2 vector256 = new Vector2(this.position.X, this.position.Y);
							int num236 = this.width;
							int num237 = this.height;
							skyBlue = new Color();
							int num238 = Dust.NewDust(vector256, num236, num237, 172, 0f, 0f, 100, skyBlue, 1.5f);
							Dust dust14 = Main.dust[num238];
							dust14.velocity = dust14.velocity * 3f;
							Main.dust[num238].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							Vector2 vector257 = new Vector2(this.position.X, this.position.Y);
							int num239 = this.width;
							int num240 = this.height;
							skyBlue = new Color();
							int num241 = Dust.NewDust(vector257, num239, num240, 173, 0f, 0f, 0, skyBlue, 1f);
							Dust dust15 = Main.dust[num241];
							dust15.velocity = dust15.velocity * 2f;
							Main.dust[num241].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							Vector2 vector258 = new Vector2(this.position.X, this.position.Y);
							int num242 = this.width;
							int num243 = this.height;
							skyBlue = new Color();
							int num244 = Dust.NewDust(vector258, num242, num243, 174, 0f, 0f, 100, skyBlue, 1.5f);
							Dust dust16 = Main.dust[num244];
							dust16.velocity = dust16.velocity * 3f;
							Main.dust[num244].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							Vector2 vector259 = new Vector2(this.position.X, this.position.Y);
							int num245 = this.width;
							int num246 = this.height;
							skyBlue = new Color();
							int num247 = Dust.NewDust(vector259, num245, num246, 175, 0f, 0f, 100, skyBlue, 1.5f);
							Dust dust17 = Main.dust[num247];
							dust17.velocity = dust17.velocity * 3f;
							Main.dust[num247].noGravity = true;
						}
						else if (this.type == 172)
						{
							Vector2 vector260 = new Vector2(this.position.X, this.position.Y);
							int num248 = this.width;
							int num249 = this.height;
							skyBlue = new Color();
							int num250 = Dust.NewDust(vector260, num248, num249, 106, 0f, 0f, 100, skyBlue, 2.5f);
							Dust dust18 = Main.dust[num250];
							dust18.velocity = dust18.velocity * 3f;
							Main.dust[num250].noGravity = true;
						}
						else if (this.type != 533)
						{
							Vector2 vector261 = new Vector2(this.position.X, this.position.Y);
							int num251 = this.width;
							int num252 = this.height;
							skyBlue = new Color();
							int num253 = Dust.NewDust(vector261, num251, num252, 6, 0f, 0f, 100, skyBlue, 2.5f);
							Dust dust19 = Main.dust[num253];
							dust19.velocity = dust19.velocity * 3f;
							Main.dust[num253].noGravity = true;
						}
						else
						{
							Vector2 vector262 = this.position;
							int num254 = this.width;
							int num255 = this.height;
							skyBlue = new Color();
							int num256 = Dust.NewDust(vector262, num254, num255, 27, 0f, 0f, 100, skyBlue, 2.5f);
							Dust dust20 = Main.dust[num256];
							dust20.velocity = dust20.velocity * 3f;
							Main.dust[num256].noGravity = true;
						}
					}
					this.position.X = this.ai[2] * 16f - (float)(this.width / 2) + 8f;
					this.position.Y = this.ai[3] * 16f - (float)this.height;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int u2 = 0; u2 < 50; u2++)
					{
						if (this.type == 29 || this.type == 45)
						{
							Vector2 vector263 = new Vector2(this.position.X, this.position.Y);
							int num257 = this.width;
							int num258 = this.height;
							skyBlue = new Color();
							int num259 = Dust.NewDust(vector263, num257, num258, 27, 0f, 0f, 100, skyBlue, (float)Main.rand.Next(1, 3));
							Dust dust21 = Main.dust[num259];
							dust21.velocity = dust21.velocity * 3f;
							if (Main.dust[num259].scale > 1f)
							{
								Main.dust[num259].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							Vector2 vector264 = new Vector2(this.position.X, this.position.Y);
							int num260 = this.width;
							int num261 = this.height;
							skyBlue = new Color();
							int num262 = Dust.NewDust(vector264, num260, num261, 172, 0f, 0f, 100, skyBlue, 1.5f);
							Dust dust22 = Main.dust[num262];
							dust22.velocity = dust22.velocity * 3f;
							Main.dust[num262].noGravity = true;
						}
						else if (this.type == 172)
						{
							Vector2 vector265 = new Vector2(this.position.X, this.position.Y);
							int num263 = this.width;
							int num264 = this.height;
							skyBlue = new Color();
							int num265 = Dust.NewDust(vector265, num263, num264, 106, 0f, 0f, 100, skyBlue, 2.5f);
							Dust dust23 = Main.dust[num265];
							dust23.velocity = dust23.velocity * 3f;
							Main.dust[num265].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							Vector2 vector266 = new Vector2(this.position.X, this.position.Y);
							int num266 = this.width;
							int num267 = this.height;
							skyBlue = new Color();
							int num268 = Dust.NewDust(vector266, num266, num267, 173, 0f, 0f, 0, skyBlue, 1f);
							Dust dust24 = Main.dust[num268];
							dust24.velocity = dust24.velocity * 2f;
							Main.dust[num268].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							Vector2 vector267 = new Vector2(this.position.X, this.position.Y);
							int num269 = this.width;
							int num270 = this.height;
							skyBlue = new Color();
							int num271 = Dust.NewDust(vector267, num269, num270, 174, 0f, 0f, 100, skyBlue, 1.5f);
							Dust dust25 = Main.dust[num271];
							dust25.velocity = dust25.velocity * 3f;
							Main.dust[num271].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							Vector2 vector268 = new Vector2(this.position.X, this.position.Y);
							int num272 = this.width;
							int num273 = this.height;
							skyBlue = new Color();
							int num274 = Dust.NewDust(vector268, num272, num273, 175, 0f, 0f, 100, skyBlue, 1.5f);
							Dust dust26 = Main.dust[num274];
							dust26.velocity = dust26.velocity * 3f;
							Main.dust[num274].noGravity = true;
						}
						else if (this.type != 533)
						{
							Vector2 vector269 = new Vector2(this.position.X, this.position.Y);
							int num275 = this.width;
							int num276 = this.height;
							skyBlue = new Color();
							int num277 = Dust.NewDust(vector269, num275, num276, 6, 0f, 0f, 100, skyBlue, 2.5f);
							Dust dust27 = Main.dust[num277];
							dust27.velocity = dust27.velocity * 3f;
							Main.dust[num277].noGravity = true;
						}
						else
						{
							Vector2 vector270 = this.position;
							int num278 = this.width;
							int num279 = this.height;
							skyBlue = new Color();
							int num280 = Dust.NewDust(vector270, num278, num279, 27, 0f, 0f, 100, skyBlue, 2.5f);
							Dust dust28 = Main.dust[num280];
							dust28.velocity = dust28.velocity * 3f;
							Main.dust[num280].noGravity = true;
						}
					}
				}
				this.ai[0] = this.ai[0] + 1f;
				if (this.type == 283 || this.type == 284)
				{
					if (this.ai[0] == 50f || this.ai[0] == 100f || this.ai[0] == 150f || this.ai[0] == 200f || this.ai[0] == 250f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 400f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.type == 172)
				{
					if (this.ai[0] == 75f || this.ai[0] == 150f || this.ai[0] == 225f || this.ai[0] == 300f || this.ai[0] == 375f || this.ai[0] == 450f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
				}
				else if (this.type == 533)
				{
					if (this.ai[0] == 180f)
					{
						this.ai[1] = 181f;
						this.netUpdate = true;
					}
				}
				else if (this.type == 281 || this.type == 282)
				{
					if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 120f || this.ai[0] == 140f || this.ai[0] == 160f || this.ai[0] == 220f || this.ai[0] == 240f || this.ai[0] == 260f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 460f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.ai[0] == 100f || this.ai[0] == 200f || this.ai[0] == 300f)
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if ((this.type == 285 || this.type == 286) && this.ai[0] > 400f)
				{
					this.ai[0] = 650f;
				}
				if (this.type == 533 && this.ai[0] >= 360f)
				{
					this.ai[0] = 650f;
				}
				if (this.ai[0] >= 650f && Main.netMode != 1)
				{
					this.ai[0] = 1f;
					int x59 = (int)Main.player[this.target].position.X / 16;
					int y55 = (int)Main.player[this.target].position.Y / 16;
					int x60 = (int)this.position.X / 16;
					int y56 = (int)this.position.Y / 16;
					int num281 = 20;
					int num282 = 0;
					bool flag64 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num282 = 100;
						flag64 = true;
					}
				Label2:
					while (!flag64 && num282 < 100)
					{
						num282++;
						int num283 = Main.rand.Next(x59 - num281, x59 + num281);
						int num284 = Main.rand.Next(y55 - num281, y55 + num281);
						for (int v2 = num284; v2 < y55 + num281; v2++)
						{
							if ((v2 < y55 - 4 || v2 > y55 + 4 || num283 < x59 - 4 || num283 > x59 + 4) && (v2 < y56 - 1 || v2 > y56 + 1 || num283 < x60 - 1 || num283 > x60 + 1) && Main.tile[num283, v2].nactive())
							{
								bool flag65 = true;
								if ((this.type == 32 || this.type >= 281 && this.type <= 286) && !Main.wallDungeon[Main.tile[num283, v2 - 1].wall])
								{
									flag65 = false;
								}
								else if (Main.tile[num283, v2 - 1].lava())
								{
									flag65 = false;
								}
								if (flag65 && Main.tileSolid[Main.tile[num283, v2].type] && !Collision.SolidTiles(num283 - 1, num283 + 1, v2 - 4, v2 - 1))
								{
									this.ai[1] = 20f;
									this.ai[2] = (float)num283;
									this.ai[3] = (float)v2;
									flag64 = true;
									goto Label2;
								}
							}
						}
					}
					this.netUpdate = true;
				}
				if (this.ai[1] > 0f)
				{
					this.ai[1] = this.ai[1] - 1f;
					if (this.type == 533)
					{
						if (this.ai[1] % 30f == 0f && this.ai[1] / 30f < 5f)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							if (Main.netMode != 1)
							{
								Point point1 = base.Center.ToTileCoordinates();
								Point tileCoordinates2 = Main.player[this.target].Center.ToTileCoordinates();
								Vector2 center21 = Main.player[this.target].Center - base.Center;
								int num285 = 6;
								int num286 = 6;
								int num287 = 0;
								int num288 = 2;
								int num289 = 0;
								bool flag66 = false;
								if (center21.Length() > 2000f)
								{
									flag66 = true;
								}
								do
								{
								Label4:
									if (flag66)
									{
										break;
									}
									if (num289 < 50)
									{
										num289++;
										num1 = Main.rand.Next(tileCoordinates2.X - num285, tileCoordinates2.X + num285 + 1);
										num2 = Main.rand.Next(tileCoordinates2.Y - num285, tileCoordinates2.Y + num285 + 1);
										if ((num2 < tileCoordinates2.Y - num287 || num2 > tileCoordinates2.Y + num287 || num1 < tileCoordinates2.X - num287 || num1 > tileCoordinates2.X + num287) && (num2 < point1.Y - num286 || num2 > point1.Y + num286 || num1 < point1.X - num286 || num1 > point1.X + num286) && !Main.tile[num1, num2].nactive())
										{
											flag = true;
											if (flag && Main.tile[num1, num2].lava())
											{
												flag = false;
											}
											if (!flag || !Collision.SolidTiles(num1 - num288, num1 + num288, num2 - num288, num2 + num288))
											{
												continue;
											}
											flag = false;
										}
										else
										{
											goto Label4;
										}
									}
									else
									{
										break;
									}
								}
								while (!flag);
								Projectile.NewProjectile((float)(num1 * 16 + 8), (float)(num2 * 16 + 8), 0f, 0f, 596, 0, 1f, Main.myPlayer, (float)this.target, 0f);
								flag66 = true;
							}
						}
					}
					else if (this.ai[1] == 25f)
					{
						if (this.type < 281 || this.type > 286)
						{
							if (this.type != 172)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							}
							if (Main.netMode != 1)
							{
								if (this.type == 29 || this.type == 45)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 30, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (this.type == 32)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 33, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (this.type != 172)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2 + this.direction * 8, (int)this.position.Y + 20, 25, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									float single151 = 10f;
									Vector2 vector271 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float x61 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector271.X + (float)Main.rand.Next(-10, 11);
									float y57 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector271.Y + (float)Main.rand.Next(-10, 11);
									float single152 = (float)Math.Sqrt((double)(x61 * x61 + y57 * y57));
									single152 = single151 / single152;
									x61 = x61 * single152;
									y57 = y57 * single152;
									int num290 = 40;
									int num291 = 129;
									int num292 = Projectile.NewProjectile(vector271.X, vector271.Y, x61, y57, num291, num290, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num292].timeLeft = 300;
									this.localAI[0] = 0f;
								}
							}
						}
						else if (Main.netMode != 1)
						{
							float single153 = 6f;
							if (this.type == 285 || this.type == 286)
							{
								single153 = 8f;
							}
							if (this.type == 281 || this.type == 282)
							{
								single153 = 4f;
							}
							Vector2 vector272 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y);
							float x62 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector272.X;
							float y58 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector272.Y;
							if (this.type == 283 || this.type == 284)
							{
								x62 = x62 + (float)Main.rand.Next(-30, 31);
								y58 = y58 + (float)Main.rand.Next(-30, 31);
								x62 = x62 - Main.player[this.target].velocity.X * 10f;
								y58 = y58 - Main.player[this.target].velocity.Y * 10f;
							}
							float single154 = (float)Math.Sqrt((double)(x62 * x62 + y58 * y58));
							single154 = single153 / single154;
							x62 = x62 * single154;
							y58 = y58 * single154;
							int num293 = 30;
							int num294 = 290;
							if (this.type == 285 || this.type == 286)
							{
								num294 = 291;
								num293 = 40;
							}
							if (this.type == 281 || this.type == 282)
							{
								num294 = 293;
								num293 = 40;
							}
							if (Main.expertMode)
							{
								num293 = (int)((double)num293 * 0.8);
							}
							int num295 = Projectile.NewProjectile(vector272.X, vector272.Y, x62, y58, num294, num293, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num295].timeLeft = 300;
							if (num294 == 291)
							{
								Main.projectile[num295].ai[0] = Main.player[this.target].Center.X;
								Main.projectile[num295].ai[1] = Main.player[this.target].Center.Y;
								Main.projectile[num295].netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
					}
				}
				if (this.type == 29 || this.type == 45)
				{
					if (Main.rand.Next(5) == 0)
					{
						Vector2 vector273 = new Vector2(this.position.X, this.position.Y + 2f);
						int num296 = this.width;
						int num297 = this.height;
						skyBlue = new Color();
						int num298 = Dust.NewDust(vector273, num296, num297, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 1.5f);
						Main.dust[num298].noGravity = true;
						Main.dust[num298].velocity.X = Main.dust[num298].velocity.X * 0.5f;
						Main.dust[num298].velocity.Y = -2f;
						return;
					}
				}
				else if (this.type != 32)
				{
					if (this.type == 172)
					{
						int num299 = 1;
						if (this.alpha == 255)
						{
							num299 = 2;
						}
						for (int w2 = 0; w2 < num299; w2++)
						{
							if (Main.rand.Next(255) > 255 - this.alpha)
							{
								Vector2 vector274 = new Vector2(this.position.X, this.position.Y + 2f);
								int num300 = this.width;
								int num301 = this.height;
								skyBlue = new Color();
								int num302 = Dust.NewDust(vector274, num300, num301, 106, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 1.2f);
								Main.dust[num302].noGravity = true;
								Main.dust[num302].velocity.X = Main.dust[num302].velocity.X * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Main.dust[num302].velocity.Y = Main.dust[num302].velocity.Y * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Dust dust29 = Main.dust[num302];
								dust29.scale = dust29.scale * (1f + (float)Main.rand.Next(6) * 0.1f);
							}
						}
						return;
					}
					if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							Vector2 vector275 = new Vector2(this.position.X, this.position.Y + 2f);
							int num303 = this.width;
							int num304 = this.height;
							skyBlue = new Color();
							int num305 = Dust.NewDust(vector275, num303, num304, 173, 0f, 0f, 0, skyBlue, 1f);
							Main.dust[num305].velocity.X = Main.dust[num305].velocity.X * 0.5f;
							Main.dust[num305].velocity.Y = Main.dust[num305].velocity.Y * 0.5f;
							return;
						}
					}
					else if (this.type == 285 || this.type == 286)
					{
						if (Main.rand.Next(2) == 0)
						{
							Vector2 vector276 = new Vector2(this.position.X, this.position.Y + 2f);
							int num306 = this.width;
							int num307 = this.height;
							skyBlue = new Color();
							int num308 = Dust.NewDust(vector276, num306, num307, 174, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 1f);
							Main.dust[num308].noGravity = true;
							Dust dust30 = Main.dust[num308];
							dust30.velocity = dust30.velocity * 0.4f;
							Main.dust[num308].velocity.Y = Main.dust[num308].velocity.Y - 0.7f;
							return;
						}
					}
					else if (this.type != 281 && this.type != 282)
					{
						if (this.type == 533)
						{
							Lighting.AddLight(base.Top, 0.6f, 0.6f, 0.3f);
							return;
						}
						if (Main.rand.Next(2) == 0)
						{
							Vector2 vector277 = new Vector2(this.position.X, this.position.Y + 2f);
							int num309 = this.width;
							int num310 = this.height;
							skyBlue = new Color();
							int num311 = Dust.NewDust(vector277, num309, num310, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 2f);
							Main.dust[num311].noGravity = true;
							Main.dust[num311].velocity.X = Main.dust[num311].velocity.X * 1f;
							Main.dust[num311].velocity.Y = Main.dust[num311].velocity.Y * 1f;
							return;
						}
					}
					else if (Main.rand.Next(2) == 0)
					{
						Vector2 vector278 = new Vector2(this.position.X, this.position.Y + 2f);
						int num312 = this.width;
						int num313 = this.height;
						skyBlue = new Color();
						int num314 = Dust.NewDust(vector278, num312, num313, 175, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 0.1f);
						Main.dust[num314].noGravity = true;
						Dust dust31 = Main.dust[num314];
						dust31.velocity = dust31.velocity * 0.5f;
						Main.dust[num314].fadeIn = 1.2f;
						return;
					}
				}
				else if (Main.rand.Next(3) != 0)
				{
					Vector2 vector279 = new Vector2(this.position.X, this.position.Y + 2f);
					int num315 = this.width;
					int num316 = this.height;
					skyBlue = new Color();
					int num317 = Dust.NewDust(vector279, num315, num316, 172, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 0.9f);
					Main.dust[num317].noGravity = true;
					Main.dust[num317].velocity.X = Main.dust[num317].velocity.X * 0.3f;
					Main.dust[num317].velocity.Y = Main.dust[num317].velocity.Y * 0.2f;
					Main.dust[num317].velocity.Y = Main.dust[num317].velocity.Y - 1f;
					return;
				}
			}
			else if (this.aiStyle == 9)
			{
				if (this.type == 516)
				{
					if (this.alpha < 220)
					{
						NPC nPC82 = this;
						nPC82.alpha = nPC82.alpha + 40;
					}
					if (this.ai[0] == 0f)
					{
						this.ai[0] = 1f;
						Vector2 unitY1 = Main.player[this.target].Center - base.Center;
						unitY1.Normalize();
						if (unitY1.HasNaNs())
						{
							unitY1 = -Vector2.UnitY;
						}
						Vector2 vector280 = unitY1.RotatedByRandom(1.57079637050629);
						vector24 = new Vector2();
						unitY1 = vector280.RotatedBy(-0.785398185253143, vector24);
						if (unitY1.Y > 0.2f)
						{
							unitY1.Y = 0.2f;
						}
						this.velocity = unitY1 * (6f + Main.rand.NextFloat() * 4f);
					}
					if (this.collideX || this.collideY || base.Distance(Main.player[this.target].Center) < 20f)
					{
						this.StrikeNPCNoInteraction(9999, 0f, this.direction, false, false, false);
					}
				}
				if (this.target == 255)
				{
					this.TargetClosest(true);
					float single155 = 6f;
					if (this.type == 25)
					{
						single155 = 5f;
					}
					if (this.type == 112)
					{
						single155 = 7f;
					}
					Vector2 vector281 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x63 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector281.X;
					float y59 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector281.Y;
					float single156 = (float)Math.Sqrt((double)(x63 * x63 + y59 * y59));
					single156 = single155 / single156;
					this.velocity.X = x63 * single156;
					this.velocity.Y = y59 * single156;
				}
				if (this.type == 112)
				{
					this.ai[0] = this.ai[0] + 1f;
					if (this.ai[0] > 3f)
					{
						this.ai[0] = 3f;
					}
					if (this.ai[0] == 2f)
					{
						NPC nPC83 = this;
						nPC83.position = nPC83.position + this.velocity;
						Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 9);
						for (int x210 = 0; x210 < 20; x210++)
						{
							Vector2 vector282 = new Vector2(this.position.X, this.position.Y + 2f);
							int num318 = this.width;
							int num319 = this.height;
							skyBlue = new Color();
							int num320 = Dust.NewDust(vector282, num318, num319, 18, 0f, 0f, 100, skyBlue, 1.8f);
							Dust dust32 = Main.dust[num320];
							dust32.velocity = dust32.velocity * 1.3f;
							Dust dust33 = Main.dust[num320];
							dust33.velocity = dust33.velocity + this.velocity;
							Main.dust[num320].noGravity = true;
						}
					}
				}
				if (this.type == 112 && Collision.SolidCollision(this.position, this.width, this.height))
				{
					int num321 = Main.netMode;
					this.StrikeNPCNoInteraction(999, 0f, 0, false, false, false);
				}
				if (this.timeLeft > 100)
				{
					this.timeLeft = 100;
				}
				if (this.type != 516)
				{
					for (int y210 = 0; y210 < 2; y210++)
					{
						if (this.type == 30)
						{
							this.alpha = 255;
							for (int a2 = 0; a2 < 2; a2++)
							{
								Vector2 vector283 = new Vector2(this.position.X, this.position.Y + 2f);
								int num322 = this.width;
								int num323 = this.height;
								skyBlue = new Color();
								int num324 = Dust.NewDust(vector283, num322, num323, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 1.3f);
								Main.dust[num324].noGravity = true;
								Dust dust34 = Main.dust[num324];
								dust34.velocity = dust34.velocity * 0.3f;
								Main.dust[num324].velocity.X = Main.dust[num324].velocity.X - this.velocity.X * 0.2f;
								Main.dust[num324].velocity.Y = Main.dust[num324].velocity.Y - this.velocity.Y * 0.2f;
							}
						}
						else if (this.type == 33)
						{
							for (int b2 = 0; b2 < 3; b2++)
							{
								float x64 = this.velocity.X / 3f * (float)y210;
								float y60 = this.velocity.Y / 3f * (float)y210;
								int num325 = 2;
								Vector2 vector284 = new Vector2(this.position.X + (float)num325, this.position.Y + (float)num325);
								skyBlue = new Color();
								int num326 = Dust.NewDust(vector284, this.width - num325 * 2, this.height - num325 * 2, 172, 0f, 0f, 100, skyBlue, 1.2f);
								Main.dust[num326].noGravity = true;
								Dust dust35 = Main.dust[num326];
								dust35.velocity = dust35.velocity * 0.1f;
								Dust dust36 = Main.dust[num326];
								dust36.velocity = dust36.velocity + (this.velocity * 0.5f);
								Main.dust[num326].position.X = Main.dust[num326].position.X - x64;
								Main.dust[num326].position.Y = Main.dust[num326].position.Y - y60;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num327 = 2;
								Vector2 vector285 = new Vector2(this.position.X + (float)num327, this.position.Y + (float)num327);
								skyBlue = new Color();
								int num328 = Dust.NewDust(vector285, this.width - num327 * 2, this.height - num327 * 2, 172, 0f, 0f, 100, skyBlue, 0.6f);
								Dust dust37 = Main.dust[num328];
								dust37.velocity = dust37.velocity * 0.25f;
								Dust dust38 = Main.dust[num328];
								dust38.velocity = dust38.velocity + (this.velocity * 0.5f);
							}
						}
						else if (this.type != 112)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
							Vector2 vector286 = new Vector2(this.position.X, this.position.Y + 2f);
							int num329 = this.width;
							int num330 = this.height;
							skyBlue = new Color();
							int num331 = Dust.NewDust(vector286, num329, num330, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 2f);
							Main.dust[num331].noGravity = true;
							Main.dust[num331].velocity.X = Main.dust[num331].velocity.X * 0.3f;
							Main.dust[num331].velocity.Y = Main.dust[num331].velocity.Y * 0.3f;
						}
						else
						{
							Vector2 vector287 = new Vector2(this.position.X, this.position.Y + 2f);
							int num332 = this.width;
							int num333 = this.height;
							skyBlue = new Color();
							int num334 = Dust.NewDust(vector287, num332, num333, 18, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 80, skyBlue, 1.3f);
							Dust dust39 = Main.dust[num334];
							dust39.velocity = dust39.velocity * 0.3f;
							Main.dust[num334].noGravity = true;
						}
					}
					NPC nPC84 = this;
					nPC84.rotation = nPC84.rotation + 0.4f * (float)this.direction;
					return;
				}
				NPC nPC85 = this;
				nPC85.rotation = nPC85.rotation + 0.1f * (float)this.direction;
				float single157 = 15f;
				float single158 = 0.0833333358f;
				Vector2 center22 = base.Center;
				Vector2 center23 = Main.player[this.target].Center;
				Vector2 vector288 = center23 - center22;
				vector288.Normalize();
				if (vector288.HasNaNs())
				{
					vector288 = new Vector2((float)this.direction, 0f);
				}
				this.velocity = ((this.velocity * (single157 - 1f)) + (vector288 * (this.velocity.Length() + single158))) / single157;
				if (this.velocity.Length() < 6f)
				{
					NPC nPC86 = this;
					nPC86.velocity = nPC86.velocity * 1.05f;
					return;
				}
			}
			else if (this.aiStyle == 10)
			{
				float single159 = 1f;
				float single160 = 0.011f;
				this.TargetClosest(true);
				Vector2 vector289 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float x65 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector289.X;
				float y61 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector289.Y;
				float single161 = (float)Math.Sqrt((double)(x65 * x65 + y61 * y61));
				float single162 = single161;
				this.ai[1] = this.ai[1] + 1f;
				if (this.ai[1] > 600f)
				{
					single160 = single160 * 8f;
					single159 = 4f;
					if (this.ai[1] > 650f)
					{
						this.ai[1] = 0f;
					}
				}
				else if (single162 < 250f)
				{
					this.ai[0] = this.ai[0] + 0.9f;
					if (this.ai[0] <= 0f)
					{
						this.velocity.Y = this.velocity.Y - 0.019f;
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.019f;
					}
					if (this.ai[0] < -100f || this.ai[0] > 100f)
					{
						this.velocity.X = this.velocity.X + 0.019f;
					}
					else
					{
						this.velocity.X = this.velocity.X - 0.019f;
					}
					if (this.ai[0] > 200f)
					{
						this.ai[0] = -200f;
					}
				}
				if (single162 > 350f)
				{
					single159 = 5f;
					single160 = 0.3f;
				}
				else if (single162 > 300f)
				{
					single159 = 3f;
					single160 = 0.2f;
				}
				else if (single162 > 250f)
				{
					single159 = 1.5f;
					single160 = 0.1f;
				}
				single161 = single159 / single161;
				x65 = x65 * single161;
				y61 = y61 * single161;
				if (Main.player[this.target].dead)
				{
					x65 = (float)this.direction * single159 / 2f;
					y61 = -single159 / 2f;
				}
				if (this.velocity.X < x65)
				{
					this.velocity.X = this.velocity.X + single160;
				}
				else if (this.velocity.X > x65)
				{
					this.velocity.X = this.velocity.X - single160;
				}
				if (this.velocity.Y < y61)
				{
					this.velocity.Y = this.velocity.Y + single160;
				}
				else if (this.velocity.Y > y61)
				{
					this.velocity.Y = this.velocity.Y - single160;
				}
				if (x65 > 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)y61, (double)x65);
				}
				if (x65 < 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)y61, (double)x65) + 3.14f;
				}
				if (this.type == 289)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
						this.ai[3] = 0f;
					}
					vector289 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					x65 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector289.X;
					y61 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector289.Y;
					single161 = (float)Math.Sqrt((double)(x65 * x65 + y61 * y61));
					if (single161 > 500f)
					{
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						return;
					}
					this.ai[2] = this.ai[2] + 1f;
					if (this.ai[3] != 0f)
					{
						if (this.ai[2] > 40f)
						{
							this.ai[3] = 0f;
						}
						if (Main.netMode != 1 && this.ai[2] == 20f)
						{
							float single163 = 6f;
							int num335 = 25;
							int num336 = 299;
							single161 = single163 / single161;
							x65 = x65 * single161;
							y61 = y61 * single161;
							Projectile.NewProjectile(vector289.X, vector289.Y, x65, y61, num336, num335, 0f, Main.myPlayer, 0f, 0f);
							return;
						}
					}
					else if (this.ai[2] > 120f)
					{
						this.ai[2] = 0f;
						this.ai[3] = 1f;
						this.netUpdate = true;
						return;
					}
				}
			}
			else if (this.aiStyle == 11)
			{
				this.defense = this.defDefense;
				if (this.ai[0] == 0f && Main.netMode != 1)
				{
					this.TargetClosest(true);
					this.ai[0] = 1f;
					if (this.type != 68)
					{
						int num337 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num337].ai[0] = -1f;
						Main.npc[num337].ai[1] = (float)this.whoAmI;
						Main.npc[num337].target = this.target;
						Main.npc[num337].netUpdate = true;
						num337 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num337].ai[0] = 1f;
						Main.npc[num337].ai[1] = (float)this.whoAmI;
						Main.npc[num337].ai[3] = 150f;
						Main.npc[num337].target = this.target;
						Main.npc[num337].netUpdate = true;
					}
				}
				if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
				{
					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					this.ai[1] = 2f;
				}
				if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
				{
					this.TargetClosest(true);
					if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						this.ai[1] = 3f;
					}
				}
				if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
				{
					this.ai[1] = 2f;
					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
				}
				int num338 = 0;
				if (Main.expertMode)
				{
					for (int c2 = 0; c2 < 200; c2++)
					{
						if (Main.npc[c2].active && Main.npc[c2].type == this.type + 1)
						{
							num338++;
						}
					}
					NPC nPC87 = this;
					nPC87.defense = nPC87.defense + num338 * 25;
					if ((num338 < 2 || (double)this.life < (double)this.lifeMax * 0.75) && this.ai[1] == 0f)
					{
						float single164 = 80f;
						if (num338 == 0)
						{
							single164 = single164 / 2f;
						}
						if (Main.netMode != 1 && this.ai[2] % single164 == 0f)
						{
							Vector2 center24 = base.Center;
							float x66 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - center24.X;
							float y62 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - center24.Y;
							Math.Sqrt((double)(x66 * x66 + y62 * y62));
							if (Collision.CanHit(center24, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float single165 = 3f;
								if (num338 == 0)
								{
									single165 = single165 + 2f;
								}
								float x67 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - center24.X + (float)Main.rand.Next(-20, 21);
								float y63 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - center24.Y + (float)Main.rand.Next(-20, 21);
								float single166 = (float)Math.Sqrt((double)(x67 * x67 + y63 * y63));
								single166 = single165 / single166;
								x67 = x67 * single166;
								y63 = y63 * single166;
								Vector2 vector290 = new Vector2(x67 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f, y63 * 1f + (float)Main.rand.Next(-50, 51) * 0.01f);
								vector290.Normalize();
								vector290 = vector290 * single165;
								vector290 = vector290 + this.velocity;
								x67 = vector290.X;
								y63 = vector290.Y;
								int num339 = 17;
								int num340 = 270;
								center24 = center24 + (vector290 * 5f);
								int num341 = Projectile.NewProjectile(center24.X, center24.Y, x67, y63, num340, num339, 0f, Main.myPlayer, -1f, 0f);
								Main.projectile[num341].timeLeft = 300;
							}
						}
					}
				}
				if (this.ai[1] == 0f)
				{
					this.damage = this.defDamage;
					this.ai[2] = this.ai[2] + 1f;
					if (this.ai[2] >= 800f)
					{
						this.ai[2] = 0f;
						this.ai[1] = 1f;
						this.TargetClosest(true);
						this.netUpdate = true;
					}
					this.rotation = this.velocity.X / 15f;
					float single167 = 0.02f;
					float single168 = 2f;
					float single169 = 0.05f;
					float single170 = 8f;
					if (Main.expertMode)
					{
						single167 = 0.03f;
						single168 = 4f;
						single169 = 0.07f;
						single170 = 9.5f;
					}
					if (this.position.Y > Main.player[this.target].position.Y - 250f)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.98f;
						}
						this.velocity.Y = this.velocity.Y - single167;
						if (this.velocity.Y > single168)
						{
							this.velocity.Y = single168;
						}
					}
					else if (this.position.Y < Main.player[this.target].position.Y - 250f)
					{
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.98f;
						}
						this.velocity.Y = this.velocity.Y + single167;
						if (this.velocity.Y < -single168)
						{
							this.velocity.Y = -single168;
						}
					}
					if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
						}
						this.velocity.X = this.velocity.X - single169;
						if (this.velocity.X > single170)
						{
							this.velocity.X = single170;
						}
					}
					if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
						}
						this.velocity.X = this.velocity.X + single169;
						if (this.velocity.X < -single170)
						{
							this.velocity.X = -single170;
						}
					}
				}
				else if (this.ai[1] == 1f)
				{
					NPC nPC88 = this;
					nPC88.defense = nPC88.defense - 10;
					this.ai[2] = this.ai[2] + 1f;
					if (this.ai[2] == 2f)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
					if (this.ai[2] >= 400f)
					{
						this.ai[2] = 0f;
						this.ai[1] = 0f;
					}
					NPC nPC89 = this;
					nPC89.rotation = nPC89.rotation + (float)this.direction * 0.3f;
					Vector2 vector291 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x68 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector291.X;
					float y64 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector291.Y;
					float single171 = (float)Math.Sqrt((double)(x68 * x68 + y64 * y64));
					float single172 = 1.5f;
					if (Main.expertMode)
					{
						this.damage = (int)((double)this.defDamage * 1.3);
						single172 = 4f;
						if (single171 > 150f)
						{
							single172 = single172 * 1.05f;
						}
						if (single171 > 200f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 250f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 300f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 350f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 400f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 450f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 500f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 550f)
						{
							single172 = single172 * 1.1f;
						}
						if (single171 > 600f)
						{
							single172 = single172 * 1.1f;
						}
						if (num338 == 0)
						{
							single172 = single172 * 1.2f;
						}
						else if (num338 == 1)
						{
							single172 = single172 * 1.1f;
						}
					}
					single171 = single172 / single171;
					this.velocity.X = x68 * single171;
					this.velocity.Y = y64 * single171;
				}
				else if (this.ai[1] == 2f)
				{
					this.damage = 1000;
					this.defense = 9999;
					NPC nPC90 = this;
					nPC90.rotation = nPC90.rotation + (float)this.direction * 0.3f;
					Vector2 vector292 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x69 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector292.X;
					float y65 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector292.Y;
					float single173 = (float)Math.Sqrt((double)(x69 * x69 + y65 * y65));
					single173 = 8f / single173;
					this.velocity.X = x69 * single173;
					this.velocity.Y = y65 * single173;
				}
				else if (this.ai[1] == 3f)
				{
					this.velocity.Y = this.velocity.Y + 0.1f;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.X = this.velocity.X * 0.95f;
					if (this.timeLeft > 50)
					{
						this.timeLeft = 50;
					}
				}
				if (this.ai[1] != 2f && this.ai[1] != 3f && this.type != 68)
				{
					if (num338 == 0 && Main.expertMode)
					{
						return;
					}
					Vector2 vector293 = new Vector2(this.position.X + (float)(this.width / 2) - 15f - this.velocity.X * 5f, this.position.Y + (float)this.height - 2f);
					skyBlue = new Color();
					int num342 = Dust.NewDust(vector293, 30, 10, 5, -this.velocity.X * 0.2f, 3f, 0, skyBlue, 2f);
					Main.dust[num342].noGravity = true;
					Main.dust[num342].velocity.X = Main.dust[num342].velocity.X * 1.3f;
					Main.dust[num342].velocity.X = Main.dust[num342].velocity.X + this.velocity.X * 0.4f;
					Main.dust[num342].velocity.Y = Main.dust[num342].velocity.Y + (2f + this.velocity.Y);
					for (int d2 = 0; d2 < 2; d2++)
					{
						Vector2 vector294 = new Vector2(this.position.X, this.position.Y + 120f);
						int num343 = this.width;
						float x70 = this.velocity.X;
						float y66 = this.velocity.Y;
						skyBlue = new Color();
						num342 = Dust.NewDust(vector294, num343, 60, 5, x70, y66, 0, skyBlue, 2f);
						Main.dust[num342].noGravity = true;
						Dust dust40 = Main.dust[num342];
						dust40.velocity = dust40.velocity - this.velocity;
						Main.dust[num342].velocity.Y = Main.dust[num342].velocity.Y + 5f;
					}
					return;
				}
			}
			else if (this.aiStyle == 12)
			{
				this.spriteDirection = -(int)this.ai[0];
				if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 11)
				{
					this.ai[2] = this.ai[2] + 10f;
					if (this.ai[2] > 50f || Main.netMode != 2)
					{
						this.life = -1;
						this.HitEffect(0, 10);
						this.active = false;
					}
				}
				if (this.ai[2] == 0f || this.ai[2] == 3f)
				{
					if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (Main.npc[(int)this.ai[1]].ai[1] == 0f)
					{
						this.ai[3] = this.ai[3] + 1f;
						if (Main.expertMode)
						{
							this.ai[3] = this.ai[3] + 0.5f;
						}
						if (this.ai[3] >= 300f)
						{
							this.ai[2] = this.ai[2] + 1f;
							this.ai[3] = 0f;
							this.netUpdate = true;
						}
						if (Main.expertMode)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.04f;
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.07f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.07f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
						}
						else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y + 0.04f;
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X - 0.07f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X + 0.07f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					else
					{
						if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y - 0.07f;
							if (this.velocity.Y > 6f)
							{
								this.velocity.Y = 6f;
							}
						}
						else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.96f;
							}
							this.velocity.Y = this.velocity.Y + 0.07f;
							if (this.velocity.Y < -6f)
							{
								this.velocity.Y = -6f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.96f;
							}
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					Vector2 vector295 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x71 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector295.X;
					float y67 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector295.Y;
					Math.Sqrt((double)(x71 * x71 + y67 * y67));
					this.rotation = (float)Math.Atan2((double)y67, (double)x71) + 1.57f;
					return;
				}
				if (this.ai[2] == 1f)
				{
					Vector2 vector296 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x72 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector296.X;
					float y68 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector296.Y;
					float single174 = (float)Math.Sqrt((double)(x72 * x72 + y68 * y68));
					this.rotation = (float)Math.Atan2((double)y68, (double)x72) + 1.57f;
					this.velocity.X = this.velocity.X * 0.95f;
					this.velocity.Y = this.velocity.Y - 0.1f;
					if (Main.expertMode)
					{
						this.velocity.Y = this.velocity.Y - 0.06f;
						if (this.velocity.Y < -13f)
						{
							this.velocity.Y = -13f;
						}
					}
					else if (this.velocity.Y < -8f)
					{
						this.velocity.Y = -8f;
					}
					if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
					{
						this.TargetClosest(true);
						this.ai[2] = 2f;
						vector296 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						x72 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector296.X;
						y68 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector296.Y;
						single174 = (float)Math.Sqrt((double)(x72 * x72 + y68 * y68));
						single174 = (!Main.expertMode ? 18f / single174 : 21f / single174);
						this.velocity.X = x72 * single174;
						this.velocity.Y = y68 * single174;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[2] == 2f)
				{
					if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
					{
						this.ai[2] = 3f;
						return;
					}
				}
				else if (this.ai[2] == 4f)
				{
					Vector2 vector297 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x73 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector297.X;
					float y69 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector297.Y;
					float single175 = (float)Math.Sqrt((double)(x73 * x73 + y69 * y69));
					this.rotation = (float)Math.Atan2((double)y69, (double)x73) + 1.57f;
					this.velocity.Y = this.velocity.Y * 0.95f;
					this.velocity.X = this.velocity.X + 0.1f * -this.ai[0];
					if (Main.expertMode)
					{
						this.velocity.X = this.velocity.X + 0.07f * -this.ai[0];
						if (this.velocity.X < -12f)
						{
							this.velocity.X = -12f;
						}
						else if (this.velocity.X > 12f)
						{
							this.velocity.X = 12f;
						}
					}
					else if (this.velocity.X < -8f)
					{
						this.velocity.X = -8f;
					}
					else if (this.velocity.X > 8f)
					{
						this.velocity.X = 8f;
					}
					if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
					{
						this.TargetClosest(true);
						this.ai[2] = 5f;
						vector297 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						x73 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector297.X;
						y69 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector297.Y;
						single175 = (float)Math.Sqrt((double)(x73 * x73 + y69 * y69));
						single175 = (!Main.expertMode ? 17f / single175 : 22f / single175);
						this.velocity.X = x73 * single175;
						this.velocity.Y = y69 * single175;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[2] == 5f && (this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) || this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)))
				{
					this.ai[2] = 0f;
					return;
				}
			}
			else if (this.aiStyle == 13)
			{
				if (this.ai[0] < 0f || this.ai[0] >= (float)Main.maxTilesX || this.ai[1] < 0f || this.ai[1] >= (float)Main.maxTilesX)
				{
					return;
				}
				if (Main.tile[(int)this.ai[0], (int)this.ai[1]] == null)
				{
					Main.tile[(int)this.ai[0], (int)this.ai[1]] = new Tile();
				}
				if (!Main.tile[(int)this.ai[0], (int)this.ai[1]].active())
				{
					this.life = -1;
					this.HitEffect(0, 10);
					this.active = false;
					return;
				}
				this.TargetClosest(true);
				float single176 = 0.035f;
				float single177 = 150f;
				if (this.type == 43)
				{
					single177 = 250f;
				}
				if (this.type == 101)
				{
					single177 = 175f;
				}
				if (this.type == 259)
				{
					single177 = 100f;
				}
				if (this.type == 175)
				{
					single177 = 500f;
					single176 = 0.05f;
				}
				if (this.type == 260)
				{
					single177 = 350f;
					single176 = 0.15f;
				}
				this.ai[2] = this.ai[2] + 1f;
				if (this.ai[2] > 300f)
				{
					single177 = (float)((int)((double)single177 * 1.3));
					if (this.ai[2] > 450f)
					{
						this.ai[2] = 0f;
					}
				}
				Vector2 vector298 = new Vector2(this.ai[0] * 16f + 8f, this.ai[1] * 16f + 8f);
				float x74 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector298.X;
				float y70 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector298.Y;
				float single178 = (float)Math.Sqrt((double)(x74 * x74 + y70 * y70));
				if (single178 > single177)
				{
					single178 = single177 / single178;
					x74 = x74 * single178;
					y70 = y70 * single178;
				}
				if (this.position.X < this.ai[0] * 16f + 8f + x74)
				{
					this.velocity.X = this.velocity.X + single176;
					if (this.velocity.X < 0f && x74 > 0f)
					{
						this.velocity.X = this.velocity.X + single176 * 1.5f;
					}
				}
				else if (this.position.X > this.ai[0] * 16f + 8f + x74)
				{
					this.velocity.X = this.velocity.X - single176;
					if (this.velocity.X > 0f && x74 < 0f)
					{
						this.velocity.X = this.velocity.X - single176 * 1.5f;
					}
				}
				if (this.position.Y < this.ai[1] * 16f + 8f + y70)
				{
					this.velocity.Y = this.velocity.Y + single176;
					if (this.velocity.Y < 0f && y70 > 0f)
					{
						this.velocity.Y = this.velocity.Y + single176 * 1.5f;
					}
				}
				else if (this.position.Y > this.ai[1] * 16f + 8f + y70)
				{
					this.velocity.Y = this.velocity.Y - single176;
					if (this.velocity.Y > 0f && y70 < 0f)
					{
						this.velocity.Y = this.velocity.Y - single176 * 1.5f;
					}
				}
				if (this.type == 43)
				{
					if (this.velocity.X > 3f)
					{
						this.velocity.X = 3f;
					}
					if (this.velocity.X < -3f)
					{
						this.velocity.X = -3f;
					}
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
					if (this.velocity.Y < -3f)
					{
						this.velocity.Y = -3f;
					}
				}
				else if (this.type != 175)
				{
					if (this.velocity.X > 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.velocity.X < -2f)
					{
						this.velocity.X = -2f;
					}
					if (this.velocity.Y > 2f)
					{
						this.velocity.Y = 2f;
					}
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				else
				{
					if (this.velocity.X > 4f)
					{
						this.velocity.X = 4f;
					}
					if (this.velocity.X < -4f)
					{
						this.velocity.X = -4f;
					}
					if (this.velocity.Y > 4f)
					{
						this.velocity.Y = 4f;
					}
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
				}
				if (this.type == 259 || this.type == 260)
				{
					this.rotation = (float)Math.Atan2((double)y70, (double)x74) + 1.57f;
				}
				else
				{
					if (x74 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)y70, (double)x74);
					}
					if (x74 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)y70, (double)x74) + 3.14f;
					}
				}
				if (this.collideX)
				{
					this.netUpdate = true;
					this.velocity.X = this.oldVelocity.X * -0.7f;
					if (this.velocity.X > 0f && this.velocity.X < 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.velocity.X < 0f && this.velocity.X > -2f)
					{
						this.velocity.X = -2f;
					}
				}
				if (this.collideY)
				{
					this.netUpdate = true;
					this.velocity.Y = this.oldVelocity.Y * -0.7f;
					if (this.velocity.Y > 0f && this.velocity.Y < 2f)
					{
						this.velocity.Y = 2f;
					}
					if (this.velocity.Y < 0f && this.velocity.Y > -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 101 && !Main.player[this.target].dead)
					{
						if (this.justHit)
						{
							this.localAI[0] = 0f;
						}
						this.localAI[0] = this.localAI[0] + 1f;
						if (this.localAI[0] >= 120f)
						{
							if (Collision.SolidCollision(this.position, this.width, this.height) || !Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.localAI[0] = 100f;
							}
							else
							{
								float single179 = 10f;
								vector298 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								x74 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector298.X + (float)Main.rand.Next(-10, 11);
								y70 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector298.Y + (float)Main.rand.Next(-10, 11);
								single178 = (float)Math.Sqrt((double)(x74 * x74 + y70 * y70));
								single178 = single179 / single178;
								x74 = x74 * single178;
								y70 = y70 * single178;
								int num344 = 22;
								if (Main.expertMode)
								{
									num344 = (int)((double)num344 * 0.8);
								}
								int num345 = 96;
								int num346 = Projectile.NewProjectile(vector298.X, vector298.Y, x74, y70, num345, num344, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num346].timeLeft = 300;
								this.localAI[0] = 0f;
							}
						}
					}
					if (this.type == 260 && !Main.player[this.target].dead)
					{
						if (this.justHit)
						{
							this.localAI[0] = 0f;
						}
						this.localAI[0] = this.localAI[0] + 1f;
						if (this.localAI[0] >= 150f)
						{
							if (Collision.SolidCollision(this.position, this.width, this.height))
							{
								this.localAI[0] = 250f;
								return;
							}
							float single180 = 14f;
							vector298 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							x74 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector298.X + (float)Main.rand.Next(-10, 11);
							float single181 = Math.Abs(x74 * 0.1f);
							if (y70 > 0f)
							{
								single181 = 0f;
							}
							y70 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector298.Y + (float)Main.rand.Next(-10, 11) - single181;
							single178 = (float)Math.Sqrt((double)(x74 * x74 + y70 * y70));
							single178 = single180 / single178;
							x74 = x74 * single178;
							y70 = y70 * single178;
							int num347 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 261, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num347].velocity.X = x74;
							Main.npc[num347].velocity.Y = y70;
							Main.npc[num347].netUpdate = true;
							this.localAI[0] = 0f;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 14)
			{
				if (this.type == 60 || this.type == 151)
				{
					Vector2 vector299 = new Vector2(this.position.X, this.position.Y);
					int num348 = this.width;
					int num349 = this.height;
					skyBlue = new Color();
					int num350 = Dust.NewDust(vector299, num348, num349, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, skyBlue, 2f);
					Main.dust[num350].noGravity = true;
				}
				if (this.type == 150 && Main.rand.Next(10) == 0)
				{
					Vector2 vector2100 = new Vector2(this.position.X, this.position.Y);
					int num351 = this.width;
					int num352 = this.height;
					skyBlue = new Color();
					int num353 = Dust.NewDust(vector2100, num351, num352, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 1.5f);
					Main.dust[num353].noGravity = true;
					Dust dust41 = Main.dust[num353];
					dust41.velocity = dust41.velocity * 0.2f;
					Main.dust[num353].noLight = true;
				}
				this.noGravity = true;
				if (this.collideX)
				{
					this.velocity.X = this.oldVelocity.X * -0.5f;
					if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
					{
						this.velocity.X = 2f;
					}
					if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
					{
						this.velocity.X = -2f;
					}
				}
				if (this.collideY)
				{
					this.velocity.Y = this.oldVelocity.Y * -0.5f;
					if (this.velocity.Y > 0f && this.velocity.Y < 1f)
					{
						this.velocity.Y = 1f;
					}
					if (this.velocity.Y < 0f && this.velocity.Y > -1f)
					{
						this.velocity.Y = -1f;
					}
				}
				if (this.type != 226)
				{
					this.TargetClosest(true);
				}
				else
				{
					int num354 = 1;
					int num355 = 1;
					if (this.velocity.X < 0f)
					{
						num354 = -1;
					}
					if (this.velocity.Y < 0f)
					{
						num355 = -1;
					}
					this.TargetClosest(true);
					if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.direction = num354;
						this.directionY = num355;
					}
				}
				if (this.type == 158)
				{
					if ((double)this.position.Y < Main.worldSurface * 16 && Main.dayTime && !Main.eclipse)
					{
						this.directionY = -1;
						NPC nPC91 = this;
						nPC91.direction = nPC91.direction * -1;
					}
					if (this.direction == -1 && this.velocity.X > -7f)
					{
						this.velocity.X = this.velocity.X - 0.2f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -7f)
						{
							this.velocity.X = -7f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 7f)
					{
						this.velocity.X = this.velocity.X + 0.2f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 7f)
						{
							this.velocity.X = 7f;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -7f)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						if (this.velocity.Y < -7f)
						{
							this.velocity.Y = -7f;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < 7f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						if (this.velocity.Y > 7f)
						{
							this.velocity.Y = 7f;
						}
					}
				}
				else if (this.type != 226)
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = -1.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 1.5)
						{
							this.velocity.Y = 1.5f;
						}
					}
				}
				else
				{
					if (this.direction == -1 && this.velocity.X > -4f)
					{
						this.velocity.X = this.velocity.X - 0.2f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f)
					{
						this.velocity.X = this.velocity.X + 0.2f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				if (this.type == 49 || this.type == 51 || this.type == 60 || this.type == 62 || this.type == 66 || this.type == 93 || this.type == 137 || this.type == 150 || this.type == 151 || this.type == 152)
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.type != 60)
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.07f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.03f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.07f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.03f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.02f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.02f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				if (this.type == 158 && Main.netMode != 1)
				{
					Vector2 vector2101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x75 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2101.X;
					float y71 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2101.Y;
					if ((float)Math.Sqrt((double)(x75 * x75 + y71 * y71)) < 200f && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.Transform(159);
					}
				}
				this.ai[1] = this.ai[1] + 1f;
				if (this.type == 158)
				{
					this.ai[1] = this.ai[1] + 1f;
				}
				if (this.ai[1] > 200f)
				{
					if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.ai[1] = 0f;
					}
					float single182 = 0.2f;
					float single183 = 0.1f;
					float single184 = 4f;
					float single185 = 1.5f;
					if (this.type == 48 || this.type == 62 || this.type == 66)
					{
						single182 = 0.12f;
						single183 = 0.07f;
						single184 = 3f;
						single185 = 1.25f;
					}
					if (this.ai[1] > 1000f)
					{
						this.ai[1] = 0f;
					}
					this.ai[2] = this.ai[2] + 1f;
					if (this.ai[2] > 0f)
					{
						if (this.velocity.Y < single185)
						{
							this.velocity.Y = this.velocity.Y + single183;
						}
					}
					else if (this.velocity.Y > -single185)
					{
						this.velocity.Y = this.velocity.Y - single183;
					}
					if (this.ai[2] >= -150f && this.ai[2] <= 150f)
					{
						if (this.velocity.X > -single184)
						{
							this.velocity.X = this.velocity.X - single182;
						}
					}
					else if (this.velocity.X < single184)
					{
						this.velocity.X = this.velocity.X + single182;
					}
					if (this.ai[2] > 300f)
					{
						this.ai[2] = -300f;
					}
				}
				if (Main.netMode != 1)
				{
					if (this.type == 48)
					{
						this.ai[0] = this.ai[0] + 1f;
						if (this.ai[0] != 30f && this.ai[0] != 60f && this.ai[0] != 90f)
						{
							if (this.ai[0] >= (float)(400 + Main.rand.Next(400)))
							{
								this.ai[0] = 0f;
							}
						}
						else if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							float single186 = 6f;
							Vector2 vector2102 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x76 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2102.X + (float)Main.rand.Next(-100, 101);
							float y72 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2102.Y + (float)Main.rand.Next(-100, 101);
							float single187 = (float)Math.Sqrt((double)(x76 * x76 + y72 * y72));
							single187 = single186 / single187;
							x76 = x76 * single187;
							y72 = y72 * single187;
							int num356 = 15;
							int num357 = 38;
							int num358 = Projectile.NewProjectile(vector2102.X, vector2102.Y, x76, y72, num357, num356, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num358].timeLeft = 300;
						}
					}
					if (this.type == 62 || this.type == 66)
					{
						this.ai[0] = this.ai[0] + 1f;
						if (this.ai[0] != 20f && this.ai[0] != 40f && this.ai[0] != 60f && this.ai[0] != 80f)
						{
							if (this.ai[0] >= (float)(300 + Main.rand.Next(300)))
							{
								this.ai[0] = 0f;
							}
						}
						else if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							float single188 = 0.2f;
							Vector2 vector2103 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x77 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2103.X + (float)Main.rand.Next(-100, 101);
							float y73 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2103.Y + (float)Main.rand.Next(-100, 101);
							float single189 = (float)Math.Sqrt((double)(x77 * x77 + y73 * y73));
							single189 = single188 / single189;
							x77 = x77 * single189;
							y73 = y73 * single189;
							int num359 = 21;
							int num360 = 44;
							int num361 = Projectile.NewProjectile(vector2103.X, vector2103.Y, x77, y73, num360, num359, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num361].timeLeft = 300;
						}
					}
					if (this.type == 156)
					{
						this.ai[0] = this.ai[0] + 1f;
						if (this.ai[0] != 20f && this.ai[0] != 40f && this.ai[0] != 60f && this.ai[0] != 80f && this.ai[0] != 100f)
						{
							if (this.ai[0] >= (float)(250 + Main.rand.Next(250)))
							{
								this.ai[0] = 0f;
								return;
							}
						}
						else if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							float single190 = 0.2f;
							Vector2 vector2104 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x78 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2104.X + (float)Main.rand.Next(-50, 51);
							float y74 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2104.Y + (float)Main.rand.Next(-50, 51);
							float single191 = (float)Math.Sqrt((double)(x78 * x78 + y74 * y74));
							single191 = single190 / single191;
							x78 = x78 * single191;
							y74 = y74 * single191;
							int num362 = 80;
							int num363 = 115;
							vector2104 = vector2104 + (this.velocity * 5f);
							int num364 = Projectile.NewProjectile(vector2104.X + x78 * 100f, vector2104.Y + y74 * 100f, x78, y74, num363, num362, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num364].timeLeft = 300;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 15)
			{
				float single192 = 1f;
				bool flag67 = false;
				bool flag68 = false;
				this.aiAction = 0;
				if (this.ai[3] == 0f && this.life > 0)
				{
					this.ai[3] = (float)this.lifeMax;
				}
				if (this.localAI[3] == 0f && Main.netMode != 1)
				{
					this.ai[0] = -100f;
					this.localAI[3] = 1f;
					this.TargetClosest(true);
					this.netUpdate = true;
				}
				if (Main.player[this.target].dead)
				{
					this.TargetClosest(true);
					if (Main.player[this.target].dead)
					{
						this.timeLeft = 0;
						if (Main.player[this.target].Center.X >= base.Center.X)
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
				}
				if (!Main.player[this.target].dead && this.ai[2] >= 300f && this.ai[1] < 5f && this.velocity.Y == 0f)
				{
					this.ai[2] = 0f;
					this.ai[0] = 0f;
					this.ai[1] = 5f;
					if (Main.netMode != 1)
					{
						this.TargetClosest(false);
						Point point2 = base.Center.ToTileCoordinates();
						Point tileCoordinates3 = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 center25 = Main.player[this.target].Center - base.Center;
						int num365 = 10;
						int num366 = 0;
						int num367 = 7;
						int num368 = 0;
						bool flag69 = false;
						if (center25.Length() > 2000f)
						{
							flag69 = true;
							num368 = 100;
						}
						while (!flag69 && num368 < 100)
						{
							num368++;
							int num369 = Main.rand.Next(tileCoordinates3.X - num365, tileCoordinates3.X + num365 + 1);
							int num370 = Main.rand.Next(tileCoordinates3.Y - num365, tileCoordinates3.Y + 1);
							if (num370 >= tileCoordinates3.Y - num367 && num370 <= tileCoordinates3.Y + num367 && num369 >= tileCoordinates3.X - num367 && num369 <= tileCoordinates3.X + num367 || num370 >= point2.Y - num366 && num370 <= point2.Y + num366 && num369 >= point2.X - num366 && num369 <= point2.X + num366 || Main.tile[num369, num370].nactive())
							{
								continue;
							}
							int num371 = num370;
							int num372 = 0;
							if ((!Main.tile[num369, num371].nactive() || !Main.tileSolid[Main.tile[num369, num371].type] ? true : Main.tileSolidTop[Main.tile[num369, num371].type]))
							{
								while (num372 < 150 && num371 + num372 < Main.maxTilesY)
								{
									int num373 = num371 + num372;
									if ((!Main.tile[num369, num373].nactive() || !Main.tileSolid[Main.tile[num369, num373].type] ? true : Main.tileSolidTop[Main.tile[num369, num373].type]))
									{
										num372++;
									}
									else
									{
										num372--;
										break;
									}
								}
							}
							else
							{
								num372 = 1;
							}
							num370 = num370 + num372;
							bool flag70 = true;
							if (flag70 && Main.tile[num369, num370].lava())
							{
								flag70 = false;
							}
							if (flag70 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
							{
								flag70 = false;
							}
							if (!flag70)
							{
								continue;
							}
							this.localAI[1] = (float)(num369 * 16 + 8);
							this.localAI[2] = (float)(num370 * 16 + 16);
							flag69 = true;
							break;
						}
						if (num368 >= 100)
						{
							Vector2 bottom = Main.player[Player.FindClosest(this.position, this.width, this.height)].Bottom;
							this.localAI[1] = bottom.X;
							this.localAI[2] = bottom.Y;
						}
					}
				}
				if (!Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
				{
					this.ai[2] = this.ai[2] + 1f;
				}
				if (Math.Abs(base.Top.Y - Main.player[this.target].Bottom.Y) > 320f)
				{
					this.ai[2] = this.ai[2] + 1f;
				}
				if (this.ai[1] == 5f)
				{
					flag67 = true;
					this.aiAction = 1;
					this.ai[0] = this.ai[0] + 1f;
					single192 = MathHelper.Clamp((60f - this.ai[0]) / 60f, 0f, 1f);
					single192 = 0.5f + single192 * 0.5f;
					if (this.ai[0] >= 60f)
					{
						flag68 = true;
					}
					if (this.ai[0] == 60f)
					{
						Gore.NewGore(base.Center + new Vector2(-40f, (float)(-this.height / 2)), this.velocity, 734, 1f);
					}
					if (this.ai[0] >= 60f && Main.netMode != 1)
					{
						base.Bottom = new Vector2(this.localAI[1], this.localAI[2]);
						this.ai[1] = 6f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (Main.netMode == 1 && this.ai[0] >= 120f)
					{
						this.ai[1] = 6f;
						this.ai[0] = 0f;
					}
					if (!flag68)
					{
						for (int e2 = 0; e2 < 10; e2++)
						{
							int num374 = Dust.NewDust(this.position + (Vector2.UnitX * -20f), this.width + 40, this.height, 4, this.velocity.X, this.velocity.Y, 150, new Color(78, 136, 255, 80), 2f);
							Main.dust[num374].noGravity = true;
							Dust dust42 = Main.dust[num374];
							dust42.velocity = dust42.velocity * 0.5f;
						}
					}
				}
				else if (this.ai[1] == 6f)
				{
					flag67 = true;
					this.aiAction = 0;
					this.ai[0] = this.ai[0] + 1f;
					single192 = MathHelper.Clamp(this.ai[0] / 30f, 0f, 1f);
					single192 = 0.5f + single192 * 0.5f;
					if (this.ai[0] >= 30f && Main.netMode != 1)
					{
						this.ai[1] = 0f;
						this.ai[0] = 0f;
						this.netUpdate = true;
						this.TargetClosest(true);
					}
					if (Main.netMode == 1 && this.ai[0] >= 60f)
					{
						this.ai[1] = 0f;
						this.ai[0] = 0f;
						this.TargetClosest(true);
					}
					for (int f2 = 0; f2 < 10; f2++)
					{
						int num375 = Dust.NewDust(this.position + (Vector2.UnitX * -20f), this.width + 40, this.height, 4, this.velocity.X, this.velocity.Y, 150, new Color(78, 136, 255, 80), 2f);
						Main.dust[num375].noGravity = true;
						Dust dust43 = Main.dust[num375];
						dust43.velocity = dust43.velocity * 2f;
					}
				}
				bool flag71 = flag68;
				bool flag72 = flag71;
				this.hide = flag71;
				this.dontTakeDamage = flag72;
				if (this.velocity.Y == 0f)
				{
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (!flag67)
					{
						this.ai[0] = this.ai[0] + 2f;
						if ((double)this.life < (double)this.lifeMax * 0.8)
						{
							this.ai[0] = this.ai[0] + 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.6)
						{
							this.ai[0] = this.ai[0] + 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.4)
						{
							this.ai[0] = this.ai[0] + 2f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.2)
						{
							this.ai[0] = this.ai[0] + 3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							this.ai[0] = this.ai[0] + 4f;
						}
						if (this.ai[0] >= 0f)
						{
							this.netUpdate = true;
							this.TargetClosest(true);
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = -13f;
								this.velocity.X = this.velocity.X + 3.5f * (float)this.direction;
								this.ai[0] = -200f;
								this.ai[1] = 0f;
							}
							else if (this.ai[1] != 2f)
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X + 4f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] = this.ai[1] + 1f;
							}
							else
							{
								this.velocity.Y = -6f;
								this.velocity.X = this.velocity.X + 4.5f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] = this.ai[1] + 1f;
							}
						}
						else if (this.ai[0] >= -30f)
						{
							this.aiAction = 1;
						}
					}
				}
				else if (this.target < 255 && (this.direction == 1 && this.velocity.X < 3f || this.direction == -1 && this.velocity.X > -3f))
				{
					if ((this.direction != -1 || (double)this.velocity.X >= 0.1) && (this.direction != 1 || (double)this.velocity.X <= -0.1))
					{
						this.velocity.X = this.velocity.X * 0.93f;
					}
					else
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
					}
				}
				int num376 = Dust.NewDust(this.position, this.width, this.height, 4, this.velocity.X, this.velocity.Y, 255, new Color(0, 80, 255, 80), this.scale * 1.2f);
				Main.dust[num376].noGravity = true;
				Dust dust44 = Main.dust[num376];
				dust44.velocity = dust44.velocity * 0.5f;
				if (this.life > 0)
				{
					float single193 = (float)this.life / (float)this.lifeMax;
					single193 = single193 * 0.5f + 0.75f;
					single193 = single193 * single192;
					if (single193 != this.scale)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)this.height;
						this.scale = single193;
						this.width = (int)(98f * this.scale);
						this.height = (int)(92f * this.scale);
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)this.height;
					}
					if (Main.netMode != 1)
					{
						int num377 = (int)((double)this.lifeMax * 0.05);
						if ((float)(this.life + num377) < this.ai[3])
						{
							this.ai[3] = (float)this.life;
							int num378 = Main.rand.Next(1, 4);
							for (int g2 = 0; g2 < num378; g2++)
							{
								int x79 = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
								int y75 = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
								int num379 = 1;
								if (Main.expertMode && Main.rand.Next(4) == 0)
								{
									num379 = 535;
								}
								int num380 = NPC.NewNPC(x79, y75, num379, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num380].SetDefaults(num379, -1f);
								Main.npc[num380].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
								Main.npc[num380].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
								Main.npc[num380].ai[0] = (float)(-1000 * Main.rand.Next(3));
								Main.npc[num380].ai[1] = 0f;
								if (Main.netMode == 2 && num380 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num380, 0f, 0f, 0f, 0, 0, 0);
								}
							}
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 16)
			{
				if (this.direction == 0)
				{
					this.TargetClosest(true);
				}
				if (!this.wet)
				{
					if (this.velocity.Y == 0f)
					{
						if (this.type == 65)
						{
							this.velocity.X = this.velocity.X * 0.94f;
							if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2)
							{
								this.velocity.X = 0f;
							}
						}
						else if (Main.netMode != 1)
						{
							this.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
							this.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
							this.netUpdate = true;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.3f;
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					this.ai[0] = 1f;
				}
				else
				{
					bool flag73 = false;
					if (this.type != 55)
					{
						this.TargetClosest(false);
						if (Main.player[this.target].wet && !Main.player[this.target].dead)
						{
							flag73 = true;
						}
					}
					if (!flag73)
					{
						if (this.collideX)
						{
							this.velocity.X = this.velocity.X * -1f;
							NPC nPC92 = this;
							nPC92.direction = nPC92.direction * -1;
							this.netUpdate = true;
						}
						if (this.collideY)
						{
							this.netUpdate = true;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
								this.directionY = -1;
								this.ai[0] = -1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = Math.Abs(this.velocity.Y);
								this.directionY = 1;
								this.ai[0] = 1f;
							}
						}
					}
					if (this.type == 102)
					{
						Lighting.AddLight((int)(this.position.X + (float)(this.width / 2) + (float)(this.direction * (this.width + 8))) / 16, (int)(this.position.Y + 2f) / 16, 0.07f, 0.04f, 0.025f);
					}
					if (!flag73)
					{
						if (this.type != 157)
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
							if (this.velocity.X < -1f || this.velocity.X > 1f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.ai[0] != -1f)
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
								if ((double)this.velocity.Y > 0.3)
								{
									this.ai[0] = -1f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
								if ((double)this.velocity.Y < -0.3)
								{
									this.ai[0] = 1f;
								}
							}
						}
						else
						{
							if (Main.player[this.target].position.Y <= this.position.Y)
							{
								this.directionY = -1;
							}
							else
							{
								this.directionY = 1;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * 0.2f;
							if (this.velocity.X < -2f || this.velocity.X > 2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.ai[0] != -1f)
							{
								float single194 = 0.6f;
								if (this.directionY < 0)
								{
									single194 = 0.2f;
								}
								if (this.directionY > 0)
								{
									single194 = 1f;
								}
								this.velocity.Y = this.velocity.Y + 0.02f;
								if (this.velocity.Y > single194)
								{
									this.ai[0] = -1f;
								}
							}
							else
							{
								float single195 = -0.6f;
								if (this.directionY < 0)
								{
									single195 = -1f;
								}
								if (this.directionY > 0)
								{
									single195 = -0.2f;
								}
								this.velocity.Y = this.velocity.Y - 0.02f;
								if (this.velocity.Y < single195)
								{
									this.ai[0] = 1f;
								}
							}
						}
						int x80 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int y76 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (Main.tile[x80, y76 - 1] == null)
						{
							Main.tile[x80, y76 - 1] = new Tile();
						}
						if (Main.tile[x80, y76 + 1] == null)
						{
							Main.tile[x80, y76 + 1] = new Tile();
						}
						if (Main.tile[x80, y76 + 2] == null)
						{
							Main.tile[x80, y76 + 2] = new Tile();
						}
						if (Main.tile[x80, y76 - 1].liquid > 128)
						{
							if (Main.tile[x80, y76 + 1].active())
							{
								this.ai[0] = -1f;
							}
							else if (Main.tile[x80, y76 + 2].active())
							{
								this.ai[0] = -1f;
							}
						}
						if (this.type != 157 && ((double)this.velocity.Y > 0.4 || (double)this.velocity.Y < -0.4))
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
					}
					else
					{
						this.TargetClosest(true);
						if (this.type == 157)
						{
							if (this.velocity.X > 0f && this.direction < 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < 0f && this.direction > 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * 0.25f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.2f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 7f;
							}
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -7f;
							}
							if (this.velocity.Y > 5f)
							{
								this.velocity.Y = 4f;
							}
							if (this.velocity.Y < -5f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.type == 65 || this.type == 102)
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.15f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.15f;
							if (this.velocity.X > 5f)
							{
								this.velocity.X = 5f;
							}
							if (this.velocity.X < -5f)
							{
								this.velocity.X = -5f;
							}
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
							this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.1f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
					}
				}
				this.rotation = this.velocity.Y * (float)this.direction * 0.1f;
				if ((double)this.rotation < -0.2)
				{
					this.rotation = -0.2f;
				}
				if ((double)this.rotation > 0.2)
				{
					this.rotation = 0.2f;
					return;
				}
			}
			else if (this.aiStyle == 17)
			{
				this.noGravity = true;
				if (this.ai[0] == 0f)
				{
					this.noGravity = false;
					this.TargetClosest(true);
					if (Main.netMode != 1)
					{
						if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
						{
							this.ai[0] = 1f;
							this.netUpdate = true;
						}
						else
						{
							Rectangle rectangle5 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
							Rectangle rectangle6 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
							if (rectangle6.Intersects(rectangle5) || this.life < this.lifeMax)
							{
								this.ai[0] = 1f;
								this.velocity.Y = this.velocity.Y - 6f;
								this.netUpdate = true;
							}
						}
					}
				}
				else if (!Main.player[this.target].dead)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -3f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 3f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					float single196 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
					float y77 = Main.player[this.target].position.Y - (float)(this.height / 2);
					if (single196 > 50f)
					{
						y77 = y77 - 100f;
					}
					if (this.position.Y >= y77)
					{
						this.velocity.Y = this.velocity.Y - 0.05f;
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.01f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.05f;
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.01f;
						}
					}
					if (this.velocity.Y < -3f)
					{
						this.velocity.Y = -3f;
					}
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				if (this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 18)
			{
				bool flag74 = false;
				if (!this.wet || this.ai[1] != 1f)
				{
					this.dontTakeDamage = false;
				}
				else
				{
					flag74 = true;
				}
				if (Main.expertMode && (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242))
				{
					if (!this.wet)
					{
						this.ai[1] = 0f;
						this.ai[2] = 0f;
					}
					else
					{
						if (this.target >= 0 && Main.player[this.target].wet && !Main.player[this.target].dead && (Main.player[this.target].Center - base.Center).Length() < 150f)
						{
							if (this.ai[1] != 0f)
							{
								this.ai[2] = this.ai[2] - 0.25f;
							}
							else
							{
								this.ai[2] = this.ai[2] + 2f;
							}
						}
						if (!flag74)
						{
							this.ai[2] = this.ai[2] + 1f;
							if (this.ai[2] >= 420f)
							{
								this.ai[1] = 1f;
								this.ai[2] = 0f;
							}
						}
						else
						{
							this.dontTakeDamage = true;
							this.ai[2] = this.ai[2] + 1f;
							if (this.ai[2] >= 120f)
							{
								this.ai[1] = 0f;
							}
						}
					}
				}
				float single197 = 1f;
				if (flag74)
				{
					single197 = single197 + 0.5f;
				}
				if (this.type == 63)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.05f * single197, 0.15f * single197, 0.4f * single197);
				}
				else if (this.type == 103)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.05f * single197, 0.45f * single197, 0.1f * single197);
				}
				else if (this.type != 221 && this.type != 242)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.35f * single197, 0.05f * single197, 0.2f * single197);
				}
				if (this.direction == 0)
				{
					this.TargetClosest(true);
				}
				if (flag74)
				{
					return;
				}
				if (!this.wet)
				{
					NPC x81 = this;
					x81.rotation = x81.rotation + this.velocity.X * 0.1f;
					if (this.velocity.Y == 0f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
						{
							this.velocity.X = 0f;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.2f;
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					this.ai[0] = 1f;
					return;
				}
				if (this.collideX)
				{
					this.velocity.X = this.velocity.X * -1f;
					NPC nPC93 = this;
					nPC93.direction = nPC93.direction * -1;
				}
				if (this.collideY)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
						this.directionY = -1;
						this.ai[0] = -1f;
					}
					else if (this.velocity.Y < 0f)
					{
						this.velocity.Y = Math.Abs(this.velocity.Y);
						this.directionY = 1;
						this.ai[0] = 1f;
					}
				}
				bool flag75 = false;
				if (!this.friendly)
				{
					this.TargetClosest(false);
					if (Main.player[this.target].wet && !Main.player[this.target].dead)
					{
						flag75 = true;
					}
				}
				if (!flag75)
				{
					this.localAI[2] = 0f;
					this.velocity.X = this.velocity.X + (float)this.direction * 0.02f;
					this.rotation = this.velocity.X * 0.4f;
					if (this.velocity.X < -1f || this.velocity.X > 1f)
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.ai[0] != -1f)
					{
						this.velocity.Y = this.velocity.Y + 0.01f;
						if (this.velocity.Y > 1f)
						{
							this.ai[0] = -1f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y - 0.01f;
						if (this.velocity.Y < -1f)
						{
							this.ai[0] = 1f;
						}
					}
					int x82 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int y78 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (Main.tile[x82, y78 - 1] == null)
					{
						Main.tile[x82, y78 - 1] = new Tile();
					}
					if (Main.tile[x82, y78 + 1] == null)
					{
						Main.tile[x82, y78 + 1] = new Tile();
					}
					if (Main.tile[x82, y78 + 2] == null)
					{
						Main.tile[x82, y78 + 2] = new Tile();
					}
					if (Main.tile[x82, y78 - 1].liquid <= 128)
					{
						this.ai[0] = 1f;
					}
					else if (Main.tile[x82, y78 + 1].active())
					{
						this.ai[0] = -1f;
					}
					else if (Main.tile[x82, y78 + 2].active())
					{
						this.ai[0] = -1f;
					}
					if ((double)this.velocity.Y > 1.2 || (double)this.velocity.Y < -1.2)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
						return;
					}
				}
				else
				{
					this.localAI[2] = 1f;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					NPC nPC94 = this;
					nPC94.velocity = nPC94.velocity * 0.98f;
					float single198 = 0.2f;
					if (this.type == 103)
					{
						NPC nPC95 = this;
						nPC95.velocity = nPC95.velocity * 0.98f;
						single198 = 0.6f;
					}
					if (this.type == 221)
					{
						NPC nPC96 = this;
						nPC96.velocity = nPC96.velocity * 0.99f;
						single198 = 1f;
					}
					if (this.type == 242)
					{
						NPC nPC97 = this;
						nPC97.velocity = nPC97.velocity * 0.995f;
						single198 = 3f;
					}
					if (this.velocity.X > -single198 && this.velocity.X < single198 && this.velocity.Y > -single198 && this.velocity.Y < single198)
					{
						if (this.type == 221)
						{
							this.localAI[0] = 1f;
						}
						this.TargetClosest(true);
						float single199 = 7f;
						if (this.type == 103)
						{
							single199 = 9f;
						}
						Vector2 vector2105 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x83 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2105.X;
						float y79 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2105.Y;
						float single200 = (float)Math.Sqrt((double)(x83 * x83 + y79 * y79));
						single200 = single199 / single200;
						x83 = x83 * single200;
						y79 = y79 * single200;
						this.velocity.X = x83;
						this.velocity.Y = y79;
						return;
					}
				}
			}
			else if (this.aiStyle != 19)
			{
				if (this.aiStyle == 20)
				{
					if (this.ai[0] == 0f)
					{
						if (Main.netMode == 1)
						{
							this.ai[1] = this.position.X + (float)(this.width / 2);
							this.ai[2] = this.position.Y + (float)(this.height / 2);
							return;
						}
						this.TargetClosest(true);
						NPC nPC98 = this;
						nPC98.direction = nPC98.direction * -1;
						NPC nPC99 = this;
						nPC99.directionY = nPC99.directionY * -1;
						this.position.Y = this.position.Y + (float)(this.height / 2 + 8);
						this.ai[1] = this.position.X + (float)(this.width / 2);
						this.ai[2] = this.position.Y + (float)(this.height / 2);
						if (this.direction == 0)
						{
							this.direction = 1;
						}
						if (this.directionY == 0)
						{
							this.directionY = 1;
						}
						this.ai[3] = 1f + (float)Main.rand.Next(15) * 0.1f;
						this.velocity.Y = (float)(this.directionY * 6) * this.ai[3];
						this.ai[0] = this.ai[0] + 1f;
						this.netUpdate = true;
						return;
					}
					float single201 = 6f * this.ai[3];
					float single202 = 0.2f * this.ai[3];
					float single203 = single201 / single202 / 2f;
					if (this.ai[0] >= 1f && this.ai[0] < (float)((int)single203))
					{
						this.velocity.Y = (float)this.directionY * single201;
						this.ai[0] = this.ai[0] + 1f;
						return;
					}
					if (this.ai[0] >= (float)((int)single203))
					{
						this.velocity.Y = 0f;
						NPC nPC100 = this;
						nPC100.directionY = nPC100.directionY * -1;
						this.velocity.X = single201 * (float)this.direction;
						this.ai[0] = -1f;
						return;
					}
					if (this.directionY > 0)
					{
						if (this.velocity.Y >= single201)
						{
							NPC nPC101 = this;
							nPC101.directionY = nPC101.directionY * -1;
							this.velocity.Y = single201;
						}
					}
					else if (this.directionY < 0 && this.velocity.Y <= -single201)
					{
						NPC nPC102 = this;
						nPC102.directionY = nPC102.directionY * -1;
						this.velocity.Y = -single201;
					}
					if (this.direction > 0)
					{
						if (this.velocity.X >= single201)
						{
							NPC nPC103 = this;
							nPC103.direction = nPC103.direction * -1;
							this.velocity.X = single201;
						}
					}
					else if (this.direction < 0 && this.velocity.X <= -single201)
					{
						NPC nPC104 = this;
						nPC104.direction = nPC104.direction * -1;
						this.velocity.X = -single201;
					}
					this.velocity.X = this.velocity.X + single202 * (float)this.direction;
					this.velocity.Y = this.velocity.Y + single202 * (float)this.directionY;
					return;
				}
				if (this.aiStyle == 21)
				{
					if (this.ai[0] == 0f)
					{
						this.TargetClosest(true);
						this.directionY = 1;
						this.ai[0] = 1f;
					}
					int num381 = 6;
					if (this.ai[1] != 0f)
					{
						NPC nPC105 = this;
						nPC105.rotation = nPC105.rotation - (float)(this.direction * this.directionY) * 0.13f;
						if (this.collideX)
						{
							this.ai[0] = 2f;
						}
						if (!this.collideX && this.ai[0] == 2f)
						{
							this.directionY = -this.directionY;
							this.ai[1] = 0f;
							this.ai[0] = 1f;
						}
						if (this.collideY)
						{
							this.direction = -this.direction;
							this.ai[1] = 0f;
						}
					}
					else
					{
						NPC nPC106 = this;
						nPC106.rotation = nPC106.rotation + (float)(this.direction * this.directionY) * 0.13f;
						if (this.collideY)
						{
							this.ai[0] = 2f;
						}
						if (!this.collideY && this.ai[0] == 2f)
						{
							this.direction = -this.direction;
							this.ai[1] = 1f;
							this.ai[0] = 1f;
						}
						if (this.collideX)
						{
							this.directionY = -this.directionY;
							this.ai[1] = 1f;
						}
					}
					this.velocity.X = (float)(num381 * this.direction);
					this.velocity.Y = (float)(num381 * this.directionY);
					float single204 = (float)(270 - Main.mouseTextColor) / 400f;
					Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.9f, 0.3f + single204, 0.2f);
					return;
				}
				if (this.aiStyle == 22)
				{
					bool flag76 = false;
					bool flag77 = (this.type != 330 ? false : !Main.pumpkinMoon);
					if (this.type == 253 && !Main.eclipse)
					{
						flag77 = true;
					}
					if (this.type == 490 && Main.dayTime)
					{
						flag77 = true;
					}
					if (this.justHit)
					{
						this.ai[2] = 0f;
					}
					if (!flag77)
					{
						if (this.ai[2] >= 0f)
						{
							int num382 = 16;
							bool flag78 = false;
							bool flag79 = false;
							if (this.position.X > this.ai[0] - (float)num382 && this.position.X < this.ai[0] + (float)num382)
							{
								flag78 = true;
							}
							else if (this.velocity.X < 0f && this.direction > 0 || this.velocity.X > 0f && this.direction < 0)
							{
								flag78 = true;
							}
							num382 = num382 + 24;
							if (this.position.Y > this.ai[1] - (float)num382 && this.position.Y < this.ai[1] + (float)num382)
							{
								flag79 = true;
							}
							if (!flag78 || !flag79)
							{
								this.ai[0] = this.position.X;
								this.ai[1] = this.position.Y;
								this.ai[2] = 0f;
							}
							else
							{
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] >= 30f && num382 == 16)
								{
									flag76 = true;
								}
								if (this.ai[2] >= 60f)
								{
									this.ai[2] = -200f;
									NPC nPC107 = this;
									nPC107.direction = nPC107.direction * -1;
									this.velocity.X = this.velocity.X * -1f;
									this.collideX = false;
								}
							}
							this.TargetClosest(true);
						}
						else if (this.type != 253)
						{
							if (this.type != 330)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							else
							{
								this.ai[2] = this.ai[2] + 0.1f;
							}
							if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) <= this.position.X + (float)(this.width / 2))
							{
								this.direction = 1;
							}
							else
							{
								this.direction = -1;
							}
						}
						else
						{
							this.TargetClosest(true);
							this.ai[2] = this.ai[2] + 2f;
						}
					}
					int x84 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction * 2;
					int y80 = (int)((this.position.Y + (float)this.height) / 16f);
					bool flag80 = true;
					bool flag81 = false;
					int num383 = 3;
					if (this.type == 122)
					{
						if (this.justHit)
						{
							this.ai[3] = 0f;
							this.localAI[1] = 0f;
						}
						float single205 = 7f;
						Vector2 vector2106 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x85 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2106.X;
						float y81 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2106.Y;
						float single206 = (float)Math.Sqrt((double)(x85 * x85 + y81 * y81));
						single206 = single205 / single206;
						x85 = x85 * single206;
						y81 = y81 * single206;
						if (Main.netMode != 1 && this.ai[3] == 32f && !Main.player[this.target].npcTypeNoAggro[this.type])
						{
							int num384 = 25;
							int num385 = 84;
							Projectile.NewProjectile(vector2106.X, vector2106.Y, x85, y81, num385, num384, 0f, Main.myPlayer, 0f, 0f);
						}
						num383 = 8;
						if (this.ai[3] > 0f)
						{
							this.ai[3] = this.ai[3] + 1f;
							if (this.ai[3] >= 64f)
							{
								this.ai[3] = 0f;
							}
						}
						if (Main.netMode != 1 && this.ai[3] == 0f)
						{
							this.localAI[1] = this.localAI[1] + 1f;
							if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && !Main.player[this.target].npcTypeNoAggro[this.type])
							{
								this.localAI[1] = 0f;
								this.ai[3] = 1f;
								this.netUpdate = true;
							}
						}
					}
					else if (this.type == 75)
					{
						num383 = 4;
						if (Main.rand.Next(6) == 0)
						{
							int num386 = Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
							Dust dust45 = Main.dust[num386];
							dust45.velocity = dust45.velocity * 0.3f;
						}
						if (Main.rand.Next(40) == 0)
						{
							Main.PlaySound(27, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type == 169)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.6f, 0.75f);
						this.alpha = 30;
						if (Main.rand.Next(3) == 0)
						{
							Vector2 vector2107 = this.position;
							int num387 = this.width;
							int num388 = this.height;
							skyBlue = new Color();
							int num389 = Dust.NewDust(vector2107, num387, num388, 92, 0f, 0f, 200, skyBlue, 1f);
							Dust dust46 = Main.dust[num389];
							dust46.velocity = dust46.velocity * 0.3f;
							Main.dust[num389].noGravity = true;
						}
						if (this.justHit)
						{
							this.ai[3] = 0f;
							this.localAI[1] = 0f;
						}
						float single207 = 5f;
						Vector2 vector2108 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x86 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2108.X;
						float y82 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2108.Y;
						float single208 = (float)Math.Sqrt((double)(x86 * x86 + y82 * y82));
						single208 = single207 / single208;
						x86 = x86 * single208;
						y82 = y82 * single208;
						if (x86 <= 0f)
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
						this.spriteDirection = this.direction;
						if (this.direction >= 0)
						{
							this.rotation = (float)Math.Atan2((double)y82, (double)x86);
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)(-y82), (double)(-x86));
						}
						if (Main.netMode != 1 && this.ai[3] == 16f)
						{
							int num390 = 45;
							int num391 = 128;
							Projectile.NewProjectile(vector2108.X, vector2108.Y, x86, y82, num391, num390, 0f, Main.myPlayer, 0f, 0f);
						}
						num383 = 10;
						if (this.ai[3] > 0f)
						{
							this.ai[3] = this.ai[3] + 1f;
							if (this.ai[3] >= 64f)
							{
								this.ai[3] = 0f;
							}
						}
						if (Main.netMode != 1 && this.ai[3] == 0f)
						{
							this.localAI[1] = this.localAI[1] + 1f;
							if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.localAI[1] = 0f;
								this.ai[3] = 1f;
								this.netUpdate = true;
							}
						}
					}
					else if (this.type == 268)
					{
						this.rotation = this.velocity.X * 0.1f;
						num383 = (Main.player[this.target].Center.Y >= base.Center.Y ? 6 : 12);
						if (Main.netMode != 1 && !this.confused)
						{
							this.ai[3] = this.ai[3] + 1f;
							if (this.justHit)
							{
								this.ai[3] = -45f;
								this.localAI[1] = 0f;
							}
							if (Main.netMode != 1 && this.ai[3] >= (float)(60 + Main.rand.Next(60)))
							{
								this.ai[3] = 0f;
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].head))
								{
									float single209 = 10f;
									Vector2 vector2109 = new Vector2(this.position.X + (float)this.width * 0.5f - 4f, this.position.Y + (float)this.height * 0.7f);
									float x87 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2109.X;
									float single210 = Math.Abs(x87) * 0.1f;
									float y83 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2109.Y - single210;
									x87 = x87 + (float)Main.rand.Next(-10, 11);
									y83 = y83 + (float)Main.rand.Next(-30, 21);
									float single211 = (float)Math.Sqrt((double)(x87 * x87 + y83 * y83));
									single211 = single209 / single211;
									x87 = x87 * single211;
									y83 = y83 * single211;
									int num392 = 40;
									int num393 = 288;
									Projectile.NewProjectile(vector2109.X, vector2109.Y, x87, y83, num393, num392, 0f, Main.myPlayer, 0f, 0f);
								}
							}
						}
					}
					if (this.type == 490)
					{
						num383 = 4;
						if (this.target >= 0)
						{
							Vector2 center26 = Main.player[this.target].Center - base.Center;
							float single212 = center26.Length();
							single212 = single212 / 70f;
							if (single212 > 8f)
							{
								single212 = 8f;
							}
							num383 = num383 + (int)single212;
						}
					}
					int num394 = y80;
					while (num394 < y80 + num383)
					{
						if (Main.tile[x84, num394] == null)
						{
							Main.tile[x84, num394] = new Tile();
						}
						if ((!Main.tile[x84, num394].nactive() || !Main.tileSolid[Main.tile[x84, num394].type]) && Main.tile[x84, num394].liquid <= 0)
						{
							num394++;
						}
						else
						{
							if (num394 <= y80 + 1)
							{
								flag81 = true;
							}
							flag80 = false;
							break;
						}
					}
					if (Main.player[this.target].npcTypeNoAggro[this.type])
					{
						bool flag82 = false;
						int num395 = y80;
						while (num395 < y80 + num383 - 2)
						{
							if (Main.tile[x84, num395] == null)
							{
								Main.tile[x84, num395] = new Tile();
							}
							if ((!Main.tile[x84, num395].nactive() || !Main.tileSolid[Main.tile[x84, num395].type]) && Main.tile[x84, num395].liquid <= 0)
							{
								num395++;
							}
							else
							{
								flag82 = true;
								break;
							}
						}
						this.directionY = (!flag82).ToDirectionInt();
					}
					if (this.type == 169 || this.type == 268)
					{
						int num396 = y80 - 3;
						while (num396 < y80)
						{
							if (Main.tile[x84, num396] == null)
							{
								Main.tile[x84, num396] = new Tile();
							}
							if ((!Main.tile[x84, num396].nactive() || !Main.tileSolid[Main.tile[x84, num396].type]) && Main.tile[x84, num396].liquid <= 0)
							{
								num396++;
							}
							else
							{
								flag81 = false;
								flag76 = true;
								break;
							}
						}
					}
					if (flag76)
					{
						flag81 = false;
						flag80 = true;
						if (this.type == 268)
						{
							this.velocity.Y = this.velocity.Y + 2f;
						}
					}
					if (!flag80)
					{
						if (this.type == 75 || this.type == 169)
						{
							if (this.directionY < 0 && this.velocity.Y > 0f || flag81)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
							}
						}
						else if (this.type == 490)
						{
							if (this.directionY < 0 && this.velocity.Y > 0f || flag81)
							{
								this.velocity.Y = this.velocity.Y - 0.075f;
							}
							if (this.velocity.Y < -0.75f)
							{
								this.velocity.Y = -0.75f;
							}
						}
						else if (this.directionY < 0 && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
						}
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					else if (this.type == 75 || this.type == 169)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = 2f;
						}
					}
					else if (this.type != 490)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y > 3f)
						{
							this.velocity.Y = 3f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.03f;
						if ((double)this.velocity.Y > 0.75)
						{
							this.velocity.Y = 0.75f;
						}
					}
					if (this.type == 75 && this.wet)
					{
						this.velocity.Y = this.velocity.Y - 0.2f;
						if (this.velocity.Y < -2f)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.4f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 1f)
						{
							this.velocity.X = 1f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -1f)
						{
							this.velocity.X = -1f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.25f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
					float single213 = 2f;
					if (this.type == 75)
					{
						single213 = 3f;
					}
					if (this.type == 253)
					{
						single213 = 4f;
					}
					if (this.type == 490)
					{
						single213 = 1.5f;
					}
					if (this.type == 330)
					{
						this.alpha = 0;
						single213 = 4f;
						if (!flag77)
						{
							this.TargetClosest(true);
						}
						else if (this.timeLeft > 10)
						{
							this.timeLeft = 10;
						}
						if (this.direction < 0 && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
						if (this.direction > 0 && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.9f;
						}
					}
					if (this.direction == -1 && this.velocity.X > -single213)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > single213)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -single213)
						{
							this.velocity.X = -single213;
						}
					}
					else if (this.direction == 1 && this.velocity.X < single213)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -single213)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > single213)
						{
							this.velocity.X = single213;
						}
					}
					single213 = (this.type != 490 ? 1.5f : 1f);
					if (this.directionY == -1 && this.velocity.Y > -single213)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if (this.velocity.Y > single213)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if (this.velocity.Y < -single213)
						{
							this.velocity.Y = -single213;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < single213)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if (this.velocity.Y < -single213)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if (this.velocity.Y > single213)
						{
							this.velocity.Y = single213;
						}
					}
					if (this.type == 122)
					{
						Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.4f, 0f, 0.25f);
						return;
					}
				}
				else if (this.aiStyle == 23)
				{
					this.noGravity = true;
					this.noTileCollide = true;
					if (this.type == 83)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.2f, 0.05f, 0.3f);
					}
					else if (this.type != 179)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.05f, 0.2f, 0.3f);
					}
					else
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.15f, 0.05f);
					}
					if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
					{
						this.TargetClosest(true);
					}
					if (this.ai[0] == 0f)
					{
						float single214 = 9f;
						Vector2 vector2110 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x88 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2110.X;
						float y84 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2110.Y;
						float single215 = (float)Math.Sqrt((double)(x88 * x88 + y84 * y84));
						single215 = single214 / single215;
						x88 = x88 * single215;
						y84 = y84 * single215;
						this.velocity.X = x88;
						this.velocity.Y = y84;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
						return;
					}
					if (this.ai[0] != 1f)
					{
						if (this.justHit)
						{
							this.ai[0] = 2f;
							this.ai[1] = 0f;
						}
						NPC nPC108 = this;
						nPC108.velocity = nPC108.velocity * 0.96f;
						this.ai[1] = this.ai[1] + 1f;
						float single216 = this.ai[1] / 120f;
						single216 = 0.1f + single216 * 0.4f;
						NPC nPC109 = this;
						nPC109.rotation = nPC109.rotation + single216 * (float)this.direction;
						if (this.ai[1] >= 120f)
						{
							this.netUpdate = true;
							this.ai[0] = 0f;
							this.ai[1] = 0f;
							return;
						}
					}
					else
					{
						if (this.justHit)
						{
							this.ai[0] = 2f;
							this.ai[1] = 0f;
						}
						NPC nPC110 = this;
						nPC110.velocity = nPC110.velocity * 0.99f;
						this.ai[1] = this.ai[1] + 1f;
						if (this.ai[1] >= 100f)
						{
							this.netUpdate = true;
							this.ai[0] = 2f;
							this.ai[1] = 0f;
							this.velocity.X = 0f;
							this.velocity.Y = 0f;
							return;
						}
					}
				}
				else if (this.aiStyle == 24)
				{
					this.noGravity = true;
					if (this.ai[0] == 0f)
					{
						this.noGravity = false;
						this.TargetClosest(true);
						if (Main.netMode != 1)
						{
							if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
							{
								this.ai[0] = 1f;
								this.netUpdate = true;
								this.direction = -this.direction;
							}
							else
							{
								Rectangle rectangle7 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
								Rectangle rectangle8 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
								if (rectangle8.Intersects(rectangle7) || this.life < this.lifeMax)
								{
									this.ai[0] = 1f;
									this.velocity.Y = this.velocity.Y - 6f;
									this.netUpdate = true;
									this.direction = -this.direction;
								}
							}
						}
					}
					else if (!Main.player[this.target].dead)
					{
						if (this.collideX)
						{
							NPC nPC111 = this;
							nPC111.direction = nPC111.direction * -1;
							this.velocity.X = this.oldVelocity.X * -0.5f;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
							{
								this.velocity.X = 2f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
							{
								this.velocity.X = -2f;
							}
						}
						if (this.collideY)
						{
							this.velocity.Y = this.oldVelocity.Y * -0.5f;
							if (this.velocity.Y > 0f && this.velocity.Y < 1f)
							{
								this.velocity.Y = 1f;
							}
							if (this.velocity.Y < 0f && this.velocity.Y > -1f)
							{
								this.velocity.Y = -1f;
							}
						}
						if (this.direction == -1 && this.velocity.X > -3f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 3f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -3f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
						}
						int x89 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
						int y85 = (int)((this.position.Y + (float)this.height) / 16f);
						bool flag83 = true;
						int num397 = 15;
						bool flag84 = false;
						int num398 = y85;
						while (num398 < y85 + num397)
						{
							if (Main.tile[x89, num398] == null)
							{
								Main.tile[x89, num398] = new Tile();
							}
							if ((!Main.tile[x89, num398].nactive() || !Main.tileSolid[Main.tile[x89, num398].type]) && Main.tile[x89, num398].liquid <= 0)
							{
								num398++;
							}
							else
							{
								if (num398 < y85 + 5)
								{
									flag84 = true;
								}
								flag83 = false;
								break;
							}
						}
						if (!flag83)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						if (flag84)
						{
							this.velocity.Y = this.velocity.Y - 0.2f;
						}
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					if (this.wet)
					{
						this.ai[1] = 0f;
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
						return;
					}
				}
				else if (this.aiStyle == 25)
				{
					bool flag85 = (this.type != 341 ? false : !Main.snowMoon);
					if (this.ai[3] == 0f)
					{
						this.position.X = this.position.X + 8f;
						if (this.position.Y / 16f > (float)(Main.maxTilesY - 200))
						{
							this.ai[3] = 3f;
						}
						else if ((double)(this.position.Y / 16f) <= Main.worldSurface)
						{
							this.ai[3] = 1f;
						}
						else
						{
							this.TargetClosest(true);
							if (!Main.player[this.target].ZoneSnow)
							{
								this.ai[3] = 2f;
							}
							else
							{
								this.ai[3] = 4f;
							}
						}
					}
					if (this.type == 341)
					{
						this.ai[3] = 1f;
					}
					if (this.ai[0] != 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.ai[2] = this.ai[2] + 1f;
							int num399 = 20;
							if (this.ai[1] == 0f)
							{
								num399 = 12;
							}
							if (this.ai[2] < (float)num399)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								return;
							}
							this.ai[2] = 0f;
							if (!flag85)
							{
								this.TargetClosest(true);
							}
							if (this.direction == 0)
							{
								this.direction = -1;
							}
							this.spriteDirection = this.direction;
							this.ai[1] = this.ai[1] + 1f;
							if (this.ai[1] != 2f)
							{
								this.velocity.X = (float)this.direction * 3.5f;
								this.velocity.Y = -4f;
							}
							else
							{
								this.velocity.X = (float)this.direction * 2.5f;
								this.velocity.Y = -8f;
								this.ai[1] = 0f;
							}
							this.netUpdate = true;
							return;
						}
						if (this.direction == 1 && this.velocity.X < 1f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							return;
						}
						if (this.direction == -1 && this.velocity.X > -1f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							return;
						}
					}
					else
					{
						if (!flag85)
						{
							this.TargetClosest(true);
						}
						if (Main.netMode != 1)
						{
							if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
							{
								this.ai[0] = 1f;
								this.netUpdate = true;
								return;
							}
							Rectangle rectangle9 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
							Rectangle rectangle10 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
							if (rectangle10.Intersects(rectangle9) || this.life < this.lifeMax)
							{
								this.ai[0] = 1f;
								this.netUpdate = true;
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 26)
				{
					int num400 = 30;
					int num401 = 10;
					bool flag86 = false;
					bool flag87 = false;
					bool flag88 = false;
					if (this.velocity.Y == 0f && (this.velocity.X > 0f && this.direction < 0 || this.velocity.X < 0f && this.direction > 0))
					{
						flag87 = true;
						this.ai[3] = this.ai[3] + 1f;
					}
					if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num400 || flag87)
					{
						this.ai[3] = this.ai[3] + 1f;
						flag88 = true;
					}
					else if (this.ai[3] > 0f)
					{
						this.ai[3] = this.ai[3] - 1f;
					}
					if (this.ai[3] > (float)(num400 * num401))
					{
						this.ai[3] = 0f;
					}
					if (this.justHit)
					{
						this.ai[3] = 0f;
					}
					if (this.ai[3] == (float)num400)
					{
						this.netUpdate = true;
					}
					Vector2 vector2111 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x90 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2111.X;
					float y86 = Main.player[this.target].position.Y - vector2111.Y;
					float single217 = (float)Math.Sqrt((double)(x90 * x90 + y86 * y86));
					if (single217 < 200f && !flag88)
					{
						this.ai[3] = 0f;
					}
					if (this.type == 410)
					{
						this.ai[1] = this.ai[1] + 1f;
						bool flag89 = this.ai[1] >= 240f;
						if (!flag89 && this.velocity.Y == 0f)
						{
							int num402 = 0;
							while (num402 < 255)
							{
								if (!Main.player[num402].active || Main.player[num402].dead || Main.player[num402].Distance(base.Center) >= 800f || Main.player[num402].Center.Y >= base.Center.Y || Math.Abs(Main.player[num402].Center.X - base.Center.X) >= 20f)
								{
									num402++;
								}
								else
								{
									flag89 = true;
									break;
								}
							}
						}
						if (flag89 && Main.netMode != 1)
						{
							for (int h2 = 0; h2 < 3; h2++)
							{
								Projectile.NewProjectile(base.Center.X, base.Center.Y, (Main.rand.NextFloat() - 0.5f) * 2f, -4f - 10f * Main.rand.NextFloat(), 538, 50, 0f, Main.myPlayer, 0f, 0f);
							}
							this.HitEffect(9999, 10);
							this.active = false;
							return;
						}
					}
					else if (this.type == 423)
					{
						if (this.ai[2] != 1f)
						{
							this.ai[1] = this.ai[1] + 1f;
							if (this.ai[1] >= 180f && single217 < 500f && this.velocity.Y == 0f)
							{
								flag86 = true;
								this.ai[1] = 0f;
								this.ai[2] = 1f;
								this.netUpdate = true;
							}
							else if (this.velocity.Y == 0f && single217 < 100f && Math.Abs(this.velocity.X) > 3f && (base.Center.X < Main.player[this.target].Center.X && this.velocity.X > 0f || base.Center.X > Main.player[this.target].Center.X && this.velocity.X < 0f))
							{
								this.velocity.Y = this.velocity.Y - 4f;
							}
						}
						else
						{
							this.ai[1] = this.ai[1] + 1f;
							this.velocity.X = this.velocity.X * 0.7f;
							if (this.ai[1] < 30f)
							{
								Vector2 center27 = base.Center + ((Vector2.UnitX * (float)this.spriteDirection) * -20f);
								Dust[] dustArray6 = Main.dust;
								skyBlue = new Color();
								Dust dust47 = dustArray6[Dust.NewDust(center27, 0, 0, 242, 0f, 0f, 0, skyBlue, 1f)];
								Vector2 vector2112 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
								dust47.position = center27 + (vector2112 * 20f);
								dust47.velocity = -vector2112 * 2f;
								dust47.scale = 0.5f + vector2112.X * (float)(-this.spriteDirection);
								dust47.fadeIn = 1f;
								dust47.noGravity = true;
							}
							else if (this.ai[1] == 30f)
							{
								for (int i3 = 0; i3 < 20; i3++)
								{
									Vector2 center28 = base.Center + ((Vector2.UnitX * (float)this.spriteDirection) * -20f);
									Dust[] dustArray7 = Main.dust;
									skyBlue = new Color();
									Dust unitX1 = dustArray7[Dust.NewDust(center28, 0, 0, 242, 0f, 0f, 0, skyBlue, 1f)];
									Vector2 vector2113 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
									unitX1.position = center28 + (vector2113 * 4f);
									unitX1.velocity = (vector2113 * 4f) + (((Vector2.UnitX * Main.rand.NextFloat()) * (float)this.spriteDirection) * -5f);
									unitX1.scale = 0.5f + vector2113.X * (float)(-this.spriteDirection);
									unitX1.fadeIn = 1f;
									unitX1.noGravity = true;
								}
							}
							if (this.velocity.X > -0.5f && this.velocity.X < 0.5f)
							{
								this.velocity.X = 0f;
							}
							if (this.ai[1] == 30f && Main.netMode != 1)
							{
								int num403 = (Main.expertMode ? 35 : 50);
								Projectile.NewProjectile(base.Center.X + (float)(this.spriteDirection * -20), base.Center.Y, (float)(this.spriteDirection * -7), 0f, 575, num403, 0f, Main.myPlayer, (float)this.target, 0f);
							}
							if (this.ai[1] >= 60f)
							{
								this.ai[1] = (float)(-Main.rand.Next(320, 601));
								this.ai[2] = 0f;
							}
						}
					}
					else if ((this.type == 155 || this.type == 329) && this.velocity.Y == 0f && single217 < 100f && Math.Abs(this.velocity.X) > 3f && (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X > 0f || this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X < 0f))
					{
						this.velocity.Y = this.velocity.Y - 4f;
					}
					if (this.ai[3] >= (float)num400)
					{
						if (this.velocity.X != 0f)
						{
							this.ai[0] = 0f;
						}
						else if (this.velocity.Y == 0f)
						{
							this.ai[0] = this.ai[0] + 1f;
							if (this.ai[0] >= 2f)
							{
								NPC nPC112 = this;
								nPC112.direction = nPC112.direction * -1;
								this.spriteDirection = this.direction;
								this.ai[0] = 0f;
							}
						}
						this.directionY = -1;
						if (this.direction == 0)
						{
							this.direction = 1;
						}
					}
					else if (this.type != 329 && this.type != 315 || Main.pumpkinMoon)
					{
						this.TargetClosest(true);
					}
					else if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					float single218 = 6f;
					float single219 = 0.07f;
					if (!flag86 && (this.velocity.Y == 0f || this.wet || this.velocity.X <= 0f && this.direction < 0 || this.velocity.X >= 0f && this.direction > 0))
					{
						if (this.type == 155)
						{
							if (this.velocity.X > 0f && this.direction < 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < 0f && this.direction > 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
						}
						else if (this.type == 329)
						{
							if (this.velocity.X > 0f && this.direction < 0)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (this.velocity.X < 0f && this.direction > 0)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (this.direction > 0 && this.velocity.X < 3f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.direction < 0 && this.velocity.X > -3f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
						}
						else if (this.type == 315)
						{
							if (this.velocity.X > 0f && this.direction < 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < 0f && this.direction > 0)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < -single218 || this.velocity.X > single218)
							{
								if (this.velocity.Y == 0f)
								{
									NPC nPC113 = this;
									nPC113.velocity = nPC113.velocity * 0.8f;
								}
							}
							else if (this.velocity.X < single218 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + 0.07f;
								if (this.velocity.X > single218)
								{
									this.velocity.X = single218;
								}
							}
							else if (this.velocity.X > -single218 && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - 0.07f;
								if (this.velocity.X < -single218)
								{
									this.velocity.X = -single218;
								}
							}
						}
						else if (this.type == 410)
						{
							if (Math.Sign(this.velocity.X) != this.direction)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							single218 = 6f;
							single219 = 0.2f;
						}
						else if (this.type == 423)
						{
							if (Math.Sign(this.velocity.X) != this.direction)
							{
								this.velocity.X = this.velocity.X * 0.85f;
							}
							single218 = 10f;
							single219 = 0.2f;
						}
						if (this.velocity.X < -single218 || this.velocity.X > single218)
						{
							if (this.velocity.Y == 0f)
							{
								NPC nPC114 = this;
								nPC114.velocity = nPC114.velocity * 0.8f;
							}
						}
						else if (this.velocity.X < single218 && this.direction == 1)
						{
							this.velocity.X = this.velocity.X + single219;
							if (this.velocity.X > single218)
							{
								this.velocity.X = single218;
							}
						}
						else if (this.velocity.X > -single218 && this.direction == -1)
						{
							this.velocity.X = this.velocity.X - single219;
							if (this.velocity.X < -single218)
							{
								this.velocity.X = -single218;
							}
						}
					}
					if (this.velocity.Y >= 0f)
					{
						int num404 = 0;
						if (this.velocity.X < 0f)
						{
							num404 = -1;
						}
						if (this.velocity.X > 0f)
						{
							num404 = 1;
						}
						Vector2 x91 = this.position;
						x91.X = x91.X + this.velocity.X;
						int x92 = (int)((x91.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num404)) / 16f);
						int y87 = (int)((x91.Y + (float)this.height - 1f) / 16f);
						if (Main.tile[x92, y87] == null)
						{
							Main.tile[x92, y87] = new Tile();
						}
						if (Main.tile[x92, y87 - 1] == null)
						{
							Main.tile[x92, y87 - 1] = new Tile();
						}
						if (Main.tile[x92, y87 - 2] == null)
						{
							Main.tile[x92, y87 - 2] = new Tile();
						}
						if (Main.tile[x92, y87 - 3] == null)
						{
							Main.tile[x92, y87 - 3] = new Tile();
						}
						if (Main.tile[x92, y87 + 1] == null)
						{
							Main.tile[x92, y87 + 1] = new Tile();
						}
						if ((float)(x92 * 16) < x91.X + (float)this.width && (float)(x92 * 16 + 16) > x91.X && (Main.tile[x92, y87].nactive() && !Main.tile[x92, y87].topSlope() && !Main.tile[x92, y87 - 1].topSlope() && Main.tileSolid[Main.tile[x92, y87].type] && !Main.tileSolidTop[Main.tile[x92, y87].type] || Main.tile[x92, y87 - 1].halfBrick() && Main.tile[x92, y87 - 1].nactive()) && (!Main.tile[x92, y87 - 1].nactive() || !Main.tileSolid[Main.tile[x92, y87 - 1].type] || Main.tileSolidTop[Main.tile[x92, y87 - 1].type] || Main.tile[x92, y87 - 1].halfBrick() && (!Main.tile[x92, y87 - 4].nactive() || !Main.tileSolid[Main.tile[x92, y87 - 4].type] || Main.tileSolidTop[Main.tile[x92, y87 - 4].type])) && (!Main.tile[x92, y87 - 2].nactive() || !Main.tileSolid[Main.tile[x92, y87 - 2].type] || Main.tileSolidTop[Main.tile[x92, y87 - 2].type]) && (!Main.tile[x92, y87 - 3].nactive() || !Main.tileSolid[Main.tile[x92, y87 - 3].type] || Main.tileSolidTop[Main.tile[x92, y87 - 3].type]) && (!Main.tile[x92 - num404, y87 - 3].nactive() || !Main.tileSolid[Main.tile[x92 - num404, y87 - 3].type]))
						{
							float single220 = (float)(y87 * 16);
							if (Main.tile[x92, y87].halfBrick())
							{
								single220 = single220 + 8f;
							}
							if (Main.tile[x92, y87 - 1].halfBrick())
							{
								single220 = single220 - 8f;
							}
							if (single220 < x91.Y + (float)this.height)
							{
								float y88 = x91.Y + (float)this.height - single220;
								if ((double)y88 <= 16.1)
								{
									NPC y89 = this;
									y89.gfxOffY = y89.gfxOffY + (this.position.Y + (float)this.height - single220);
									this.position.Y = single220 - (float)this.height;
									if (y88 >= 9f)
									{
										this.stepSpeed = 2f;
									}
									else
									{
										this.stepSpeed = 1f;
									}
								}
							}
						}
					}
					if (this.velocity.Y == 0f)
					{
						int x93 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 2) * this.direction) + this.velocity.X * 5f) / 16f);
						int y90 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
						if (Main.tile[x93, y90] == null)
						{
							Main.tile[x93, y90] = new Tile();
						}
						if (Main.tile[x93, y90 - 1] == null)
						{
							Main.tile[x93, y90 - 1] = new Tile();
						}
						if (Main.tile[x93, y90 - 2] == null)
						{
							Main.tile[x93, y90 - 2] = new Tile();
						}
						if (Main.tile[x93, y90 - 3] == null)
						{
							Main.tile[x93, y90 - 3] = new Tile();
						}
						if (Main.tile[x93, y90 + 1] == null)
						{
							Main.tile[x93, y90 + 1] = new Tile();
						}
						if (Main.tile[x93 + this.direction, y90 - 1] == null)
						{
							Main.tile[x93 + this.direction, y90 - 1] = new Tile();
						}
						if (Main.tile[x93 + this.direction, y90 + 1] == null)
						{
							Main.tile[x93 + this.direction, y90 + 1] = new Tile();
						}
						if (Main.tile[x93 - this.direction, y90 + 1] == null)
						{
							Main.tile[x93 - this.direction, y90 + 1] = new Tile();
						}
						int num405 = this.spriteDirection;
						if (this.type == 423 || this.type == 410)
						{
							num405 = num405 * -1;
						}
						if (this.velocity.X < 0f && num405 == -1 || this.velocity.X > 0f && num405 == 1)
						{
							bool flag90 = (this.type == 410 ? true : this.type == 423);
							float single221 = 3f;
							if (Main.tile[x93, y90 - 2].nactive() && Main.tileSolid[Main.tile[x93, y90 - 2].type])
							{
								if (!Main.tile[x93, y90 - 3].nactive() || !Main.tileSolid[Main.tile[x93, y90 - 3].type])
								{
									this.velocity.Y = -7.5f;
									this.netUpdate = true;
								}
								else
								{
									this.velocity.Y = -8.5f;
									this.netUpdate = true;
								}
							}
							else if (Main.tile[x93, y90 - 1].nactive() && !Main.tile[x93, y90 - 1].topSlope() && Main.tileSolid[Main.tile[x93, y90 - 1].type])
							{
								this.velocity.Y = -7f;
								this.netUpdate = true;
							}
							else if (this.position.Y + (float)this.height - (float)(y90 * 16) > 20f && Main.tile[x93, y90].nactive() && !Main.tile[x93, y90].topSlope() && Main.tileSolid[Main.tile[x93, y90].type])
							{
								this.velocity.Y = -6f;
								this.netUpdate = true;
							}
							else if ((this.directionY < 0 || Math.Abs(this.velocity.X) > single221) && (!flag90 || !Main.tile[x93, y90 + 1].nactive() || !Main.tileSolid[Main.tile[x93, y90 + 1].type]) && (!Main.tile[x93, y90 + 2].nactive() || !Main.tileSolid[Main.tile[x93, y90 + 2].type]) && (!Main.tile[x93 + this.direction, y90 + 3].nactive() || !Main.tileSolid[Main.tile[x93 + this.direction, y90 + 3].type]))
							{
								this.velocity.Y = -8f;
								this.netUpdate = true;
							}
						}
					}
					if (this.type == 423 && Math.Abs(this.velocity.X) >= single218 * 0.95f)
					{
						Rectangle hitbox1 = base.Hitbox;
						for (int j3 = 0; j3 < 2; j3++)
						{
							if (Main.rand.Next(3) == 0)
							{
								Dust[] dustArray8 = Main.dust;
								Vector2 vector2114 = hitbox1.TopLeft();
								int width = hitbox1.Width;
								int height = hitbox1.Height;
								skyBlue = new Color();
								Dust zero3 = dustArray8[Dust.NewDust(vector2114, width, height, 242, 0f, 0f, 0, skyBlue, 1f)];
								zero3.velocity = Vector2.Zero;
								zero3.noGravity = true;
								zero3.fadeIn = 1f;
								zero3.scale = 0.5f + Main.rand.NextFloat();
							}
						}
						return;
					}
				}
				else if (this.aiStyle == 27)
				{
					if (this.position.X < 160f || this.position.X > (float)((Main.maxTilesX - 10) * 16))
					{
						this.active = false;
					}
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.wofB = -1;
						Main.wofT = -1;
					}
					this.ai[1] = this.ai[1] + 1f;
					if (this.ai[2] == 0f)
					{
						if ((double)this.life < (double)this.lifeMax * 0.5)
						{
							this.ai[1] = this.ai[1] + 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.2)
						{
							this.ai[1] = this.ai[1] + 1f;
						}
						if (this.ai[1] > 2700f)
						{
							this.ai[2] = 1f;
						}
					}
					if (this.ai[2] > 0f && this.ai[1] > 60f)
					{
						int num406 = 3;
						if ((double)this.life < (double)this.lifeMax * 0.3)
						{
							num406++;
						}
						this.ai[2] = this.ai[2] + 1f;
						this.ai[1] = 0f;
						if (this.ai[2] > (float)num406)
						{
							this.ai[2] = 0f;
						}
						if (Main.netMode != 1)
						{
							int num407 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)(this.height / 2) + 20f), 117, 1, 0f, 0f, 0f, 0f, 255);
							Main.npc[num407].velocity.X = (float)(this.direction * 8);
						}
					}
					this.localAI[3] = this.localAI[3] + 1f;
					if (this.localAI[3] >= (float)(600 + Main.rand.Next(1000)))
					{
						this.localAI[3] = (float)(-Main.rand.Next(200));
						Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 10);
					}
					Main.wof = this.whoAmI;
					int x94 = (int)(this.position.X / 16f);
					int x95 = (int)((this.position.X + (float)this.width) / 16f);
					int y91 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
					int num408 = 0;
					int num409 = y91 + 7;
					while (num408 < 15 && num409 > Main.maxTilesY - 200)
					{
						num409++;
						for (int k3 = x94; k3 <= x95; k3++)
						{
							try
							{
								if (WorldGen.SolidTile(k3, num409) || Main.tile[k3, num409].liquid > 0)
								{
									num408++;
								}
							}
							catch
							{
								num408 = num408 + 15;
							}
						}
					}
					num409 = num409 + 4;
					if (Main.wofB == -1)
					{
						Main.wofB = num409 * 16;
					}
					else if (Main.wofB > num409 * 16)
					{
						Main.wofB = Main.wofB - 1;
						if (Main.wofB < num409 * 16)
						{
							Main.wofB = num409 * 16;
						}
					}
					else if (Main.wofB < num409 * 16)
					{
						Main.wofB = Main.wofB + 1;
						if (Main.wofB > num409 * 16)
						{
							Main.wofB = num409 * 16;
						}
					}
					num408 = 0;
					num409 = y91 - 7;
					while (num408 < 15 && num409 < Main.maxTilesY - 10)
					{
						num409--;
						for (int l3 = x94; l3 <= x95; l3++)
						{
							try
							{
								if (WorldGen.SolidTile(l3, num409) || Main.tile[l3, num409].liquid > 0)
								{
									num408++;
								}
							}
							catch
							{
								num408 = num408 + 15;
							}
						}
					}
					num409 = num409 - 4;
					if (Main.wofT == -1)
					{
						Main.wofT = num409 * 16;
					}
					else if (Main.wofT > num409 * 16)
					{
						Main.wofT = Main.wofT - 1;
						if (Main.wofT < num409 * 16)
						{
							Main.wofT = num409 * 16;
						}
					}
					else if (Main.wofT < num409 * 16)
					{
						Main.wofT = Main.wofT + 1;
						if (Main.wofT > num409 * 16)
						{
							Main.wofT = num409 * 16;
						}
					}
					float single222 = (float)((Main.wofB + Main.wofT) / 2 - this.height / 2);
					if (this.position.Y > single222 + 1f)
					{
						this.velocity.Y = -1f;
					}
					else if (this.position.Y < single222 - 1f)
					{
						this.velocity.Y = 1f;
					}
					this.velocity.Y = 0f;
					this.position.Y = single222;
					float single223 = 1.5f;
					if ((double)this.life < (double)this.lifeMax * 0.75)
					{
						single223 = single223 + 0.25f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						single223 = single223 + 0.4f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.25)
					{
						single223 = single223 + 0.5f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.1)
					{
						single223 = single223 + 0.6f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.66 && Main.expertMode)
					{
						single223 = single223 + 0.3f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.33 && Main.expertMode)
					{
						single223 = single223 + 0.3f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.05 && Main.expertMode)
					{
						single223 = single223 + 0.6f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.035 && Main.expertMode)
					{
						single223 = single223 + 0.6f;
					}
					if ((double)this.life < (double)this.lifeMax * 0.025 && Main.expertMode)
					{
						single223 = single223 + 0.6f;
					}
					if (Main.expertMode)
					{
						single223 = single223 * 1.35f;
						single223 = single223 + 0.35f;
					}
					if (this.velocity.X == 0f)
					{
						this.TargetClosest(true);
						this.velocity.X = (float)this.direction;
					}
					if (this.velocity.X >= 0f)
					{
						this.velocity.X = single223;
						this.direction = 1;
					}
					else
					{
						this.velocity.X = -single223;
						this.direction = -1;
					}
					this.spriteDirection = this.direction;
					Vector2 vector2115 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x96 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2115.X;
					float y92 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2115.Y;
					float single224 = (float)Math.Sqrt((double)(x96 * x96 + y92 * y92));
					x96 = x96 * single224;
					y92 = y92 * single224;
					if (this.direction > 0)
					{
						if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) <= this.position.X + (float)(this.width / 2))
						{
							this.rotation = 0f;
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)(-y92), (double)(-x96)) + 3.14f;
						}
					}
					else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) >= this.position.X + (float)(this.width / 2))
					{
						this.rotation = 0f;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)y92, (double)x96) + 3.14f;
					}
					if (Main.expertMode && Main.netMode != 1)
					{
						int num410 = (int)(1f + (float)this.life / (float)this.lifeMax * 10f);
						num410 = num410 * num410;
						if (num410 < 400)
						{
							num410 = (num410 * 19 + 400) / 20;
						}
						if (num410 < 60)
						{
							num410 = (num410 * 3 + 60) / 4;
						}
						if (num410 < 20)
						{
							num410 = (num410 + 20) / 2;
						}
						num410 = (int)((double)num410 * 0.7);
						if (Main.rand.Next(num410) == 0)
						{
							int num411 = 0;
							float[] singleArray12 = new float[10];
							for (int m3 = 0; m3 < 200; m3++)
							{
								if (num411 < 10 && Main.npc[m3].active && Main.npc[m3].type == 115)
								{
									singleArray12[num411] = Main.npc[m3].ai[0];
									num411++;
								}
							}
							int num412 = 1 + num411 * 2;
							if (num411 < 10 && Main.rand.Next(num412) <= 1)
							{
								int num413 = -1;
								int num414 = 0;
								while (num414 < 1000)
								{
									int num415 = Main.rand.Next(10);
									float single225 = (float)num415 * 0.1f - 0.05f;
									bool flag91 = true;
									int num416 = 0;
									while (num416 < num411)
									{
										if (single225 != singleArray12[num416])
										{
											num416++;
										}
										else
										{
											flag91 = false;
											break;
										}
									}
									if (!flag91)
									{
										num414++;
									}
									else
									{
										num413 = num415;
										break;
									}
								}
								if (num413 >= 0)
								{
									int num417 = NPC.NewNPC((int)this.position.X, (int)single222, 115, this.whoAmI, 0f, 0f, 0f, 0f, 255);
									Main.npc[num417].ai[0] = (float)num413 * 0.1f - 0.05f;
								}
							}
						}
					}
					if (this.localAI[0] == 1f && Main.netMode != 1)
					{
						this.localAI[0] = 2f;
						single222 = (float)((Main.wofB + Main.wofT) / 2);
						single222 = (single222 + (float)Main.wofT) / 2f;
						int num418 = NPC.NewNPC((int)this.position.X, (int)single222, 114, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num418].ai[0] = 1f;
						single222 = (float)((Main.wofB + Main.wofT) / 2);
						single222 = (single222 + (float)Main.wofB) / 2f;
						num418 = NPC.NewNPC((int)this.position.X, (int)single222, 114, this.whoAmI, 0f, 0f, 0f, 0f, 255);
						Main.npc[num418].ai[0] = -1f;
						single222 = (float)((Main.wofB + Main.wofT) / 2);
						single222 = (single222 + (float)Main.wofB) / 2f;
						for (int n3 = 0; n3 < 11; n3++)
						{
							num418 = NPC.NewNPC((int)this.position.X, (int)single222, 115, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num418].ai[0] = (float)n3 * 0.1f - 0.05f;
						}
						return;
					}
				}
				else if (this.aiStyle != 28)
				{
					if (this.aiStyle == 29)
					{
						if (this.justHit)
						{
							this.ai[1] = 10f;
						}
						if (Main.wof < 0)
						{
							this.active = false;
							return;
						}
						this.TargetClosest(true);
						float single226 = 0.1f;
						float single227 = 300f;
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
						{
							this.damage = (int)(75f * Main.damageMultiplier);
							this.defense = 40;
							if (Main.expertMode)
							{
								single226 = single226 + 0.1f;
							}
							else
							{
								single227 = 900f;
							}
						}
						else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
						{
							this.damage = (int)(60f * Main.damageMultiplier);
							this.defense = 30;
							if (Main.expertMode)
							{
								single226 = single226 + 0.066f;
							}
							else
							{
								single227 = 700f;
							}
						}
						else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
						{
							this.damage = (int)(45f * Main.damageMultiplier);
							this.defense = 20;
							if (Main.expertMode)
							{
								single226 = single226 + 0.033f;
							}
							else
							{
								single227 = 500f;
							}
						}
						if (Main.expertMode)
						{
							this.defense = this.defDefense;
							if (this.whoAmI % 4 == 0)
							{
								single227 = single227 * 1.75f;
							}
							if (this.whoAmI % 4 == 1)
							{
								single227 = single227 * 1.5f;
							}
							if (this.whoAmI % 4 == 2)
							{
								single227 = single227 * 1.25f;
							}
							if (this.whoAmI % 3 == 0)
							{
								single227 = single227 * 1.5f;
							}
							if (this.whoAmI % 3 == 1)
							{
								single227 = single227 * 1.25f;
							}
							single227 = single227 * 0.75f;
						}
						float x97 = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
						float y93 = Main.npc[Main.wof].position.Y;
						float single228 = (float)(Main.wofB - Main.wofT);
						y93 = (float)Main.wofT + single228 * this.ai[0];
						this.ai[2] = this.ai[2] + 1f;
						if (this.ai[2] > 100f)
						{
							single227 = (float)((int)(single227 * 1.3f));
							if (this.ai[2] > 200f)
							{
								this.ai[2] = 0f;
							}
						}
						Vector2 vector2116 = new Vector2(x97, y93);
						float x98 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector2116.X;
						float y94 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector2116.Y;
						float single229 = (float)Math.Sqrt((double)(x98 * x98 + y94 * y94));
						if (this.ai[1] == 0f)
						{
							if (single229 > single227)
							{
								single229 = single227 / single229;
								x98 = x98 * single229;
								y94 = y94 * single229;
							}
							if (this.position.X < x97 + x98)
							{
								this.velocity.X = this.velocity.X + single226;
								if (this.velocity.X < 0f && x98 > 0f)
								{
									this.velocity.X = this.velocity.X + single226 * 2.5f;
								}
							}
							else if (this.position.X > x97 + x98)
							{
								this.velocity.X = this.velocity.X - single226;
								if (this.velocity.X > 0f && x98 < 0f)
								{
									this.velocity.X = this.velocity.X - single226 * 2.5f;
								}
							}
							if (this.position.Y < y93 + y94)
							{
								this.velocity.Y = this.velocity.Y + single226;
								if (this.velocity.Y < 0f && y94 > 0f)
								{
									this.velocity.Y = this.velocity.Y + single226 * 2.5f;
								}
							}
							else if (this.position.Y > y93 + y94)
							{
								this.velocity.Y = this.velocity.Y - single226;
								if (this.velocity.Y > 0f && y94 < 0f)
								{
									this.velocity.Y = this.velocity.Y - single226 * 2.5f;
								}
							}
							float single230 = 4f;
							if (Main.expertMode && Main.wof >= 0)
							{
								float single231 = 1.5f;
								float single232 = (float)(Main.npc[Main.wof].life / Main.npc[Main.wof].lifeMax);
								if ((double)single232 < 0.75)
								{
									single231 = single231 + 0.7f;
								}
								if ((double)single232 < 0.5)
								{
									single231 = single231 + 0.7f;
								}
								if ((double)single232 < 0.25)
								{
									single231 = single231 + 0.9f;
								}
								if ((double)single232 < 0.1)
								{
									single231 = single231 + 0.9f;
								}
								single231 = single231 * 1.25f;
								single231 = single231 + 0.3f;
								single230 = single230 + single231 * 0.35f;
								if (base.Center.X < Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X > 0f)
								{
									single230 = single230 + 6f;
								}
								if (base.Center.X > Main.npc[Main.wof].Center.X && Main.npc[Main.wof].velocity.X < 0f)
								{
									single230 = single230 + 6f;
								}
							}
							if (this.velocity.X > single230)
							{
								this.velocity.X = single230;
							}
							if (this.velocity.X < -single230)
							{
								this.velocity.X = -single230;
							}
							if (this.velocity.Y > single230)
							{
								this.velocity.Y = single230;
							}
							if (this.velocity.Y < -single230)
							{
								this.velocity.Y = -single230;
							}
						}
						else if (this.ai[1] <= 0f)
						{
							this.ai[1] = 0f;
						}
						else
						{
							this.ai[1] = this.ai[1] - 1f;
						}
						if (x98 > 0f)
						{
							this.spriteDirection = 1;
							this.rotation = (float)Math.Atan2((double)y94, (double)x98);
						}
						if (x98 < 0f)
						{
							this.spriteDirection = -1;
							this.rotation = (float)Math.Atan2((double)y94, (double)x98) + 3.14f;
						}
						Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
						return;
					}
					if (this.aiStyle == 30)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool flag92 = Main.player[this.target].dead;
						float x99 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
						float y95 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
						float single233 = (float)Math.Atan2((double)y95, (double)x99) + 1.57f;
						if (single233 < 0f)
						{
							single233 = single233 + 6.283f;
						}
						else if ((double)single233 > 6.283)
						{
							single233 = single233 - 6.283f;
						}
						float single234 = 0.1f;
						if (this.rotation < single233)
						{
							if ((double)(single233 - this.rotation) <= 3.1415)
							{
								NPC nPC115 = this;
								nPC115.rotation = nPC115.rotation + single234;
							}
							else
							{
								NPC nPC116 = this;
								nPC116.rotation = nPC116.rotation - single234;
							}
						}
						else if (this.rotation > single233)
						{
							if ((double)(this.rotation - single233) <= 3.1415)
							{
								NPC nPC117 = this;
								nPC117.rotation = nPC117.rotation - single234;
							}
							else
							{
								NPC nPC118 = this;
								nPC118.rotation = nPC118.rotation + single234;
							}
						}
						if (this.rotation > single233 - single234 && this.rotation < single233 + single234)
						{
							this.rotation = single233;
						}
						if (this.rotation < 0f)
						{
							NPC nPC119 = this;
							nPC119.rotation = nPC119.rotation + 6.283f;
						}
						else if ((double)this.rotation > 6.283)
						{
							NPC nPC120 = this;
							nPC120.rotation = nPC120.rotation - 6.283f;
						}
						if (this.rotation > single233 - single234 && this.rotation < single233 + single234)
						{
							this.rotation = single233;
						}
						if (Main.rand.Next(5) == 0)
						{
							Vector2 vector2117 = new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f);
							int num419 = this.width;
							int num420 = (int)((float)this.height * 0.5f);
							float x100 = this.velocity.X;
							skyBlue = new Color();
							int num421 = Dust.NewDust(vector2117, num419, num420, 5, x100, 2f, 0, skyBlue, 1f);
							Main.dust[num421].velocity.X = Main.dust[num421].velocity.X * 0.5f;
							Main.dust[num421].velocity.Y = Main.dust[num421].velocity.Y * 0.1f;
						}
						if (Main.netMode != 1 && !Main.dayTime && !flag92 && this.timeLeft < 10)
						{
							for (int o3 = 0; o3 < 200; o3++)
							{
								if (o3 != this.whoAmI && Main.npc[o3].active && (Main.npc[o3].type == 125 || Main.npc[o3].type == 126) && Main.npc[o3].timeLeft - 1 > this.timeLeft)
								{
									this.timeLeft = Main.npc[o3].timeLeft - 1;
								}
							}
						}
						if (Main.dayTime || flag92)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							if (this.ai[1] == 0f)
							{
								float single235 = 7f;
								float single236 = 0.1f;
								if (Main.expertMode)
								{
									single235 = 8.25f;
									single236 = 0.115f;
								}
								int num422 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num422 = -1;
								}
								Vector2 y96 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x101 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num422 * 300) - y96.X;
								float y97 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - y96.Y;
								float single237 = (float)Math.Sqrt((double)(x101 * x101 + y97 * y97));
								float single238 = single237;
								single237 = single235 / single237;
								x101 = x101 * single237;
								y97 = y97 * single237;
								if (this.velocity.X < x101)
								{
									this.velocity.X = this.velocity.X + single236;
									if (this.velocity.X < 0f && x101 > 0f)
									{
										this.velocity.X = this.velocity.X + single236;
									}
								}
								else if (this.velocity.X > x101)
								{
									this.velocity.X = this.velocity.X - single236;
									if (this.velocity.X > 0f && x101 < 0f)
									{
										this.velocity.X = this.velocity.X - single236;
									}
								}
								if (this.velocity.Y < y97)
								{
									this.velocity.Y = this.velocity.Y + single236;
									if (this.velocity.Y < 0f && y97 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single236;
									}
								}
								else if (this.velocity.Y > y97)
								{
									this.velocity.Y = this.velocity.Y - single236;
									if (this.velocity.Y > 0f && y97 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single236;
									}
								}
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && single238 < 400f)
								{
									if (!Main.player[this.target].dead)
									{
										this.ai[3] = this.ai[3] + 1f;
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.9)
										{
											this.ai[3] = this.ai[3] + 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
										{
											this.ai[3] = this.ai[3] + 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.7)
										{
											this.ai[3] = this.ai[3] + 0.3f;
										}
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.6)
										{
											this.ai[3] = this.ai[3] + 0.3f;
										}
									}
									if (this.ai[3] >= 60f)
									{
										this.ai[3] = 0f;
										y96 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										x101 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y96.X;
										y97 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y96.Y;
										if (Main.netMode != 1)
										{
											float single239 = 9f;
											int num423 = 20;
											int num424 = 83;
											if (Main.expertMode)
											{
												single239 = 10.5f;
												num423 = 18;
											}
											single237 = (float)Math.Sqrt((double)(x101 * x101 + y97 * y97));
											single237 = single239 / single237;
											x101 = x101 * single237;
											y97 = y97 * single237;
											x101 = x101 + (float)Main.rand.Next(-40, 41) * 0.08f;
											y97 = y97 + (float)Main.rand.Next(-40, 41) * 0.08f;
											y96.X = y96.X + x101 * 15f;
											y96.Y = y96.Y + y97 * 15f;
											Projectile.NewProjectile(y96.X, y96.Y, x101, y97, num424, num423, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							else if (this.ai[1] == 1f)
							{
								this.rotation = single233;
								float single240 = 12f;
								if (Main.expertMode)
								{
									single240 = 15f;
								}
								Vector2 vector2118 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x102 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2118.X;
								float y98 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2118.Y;
								float single241 = (float)Math.Sqrt((double)(x102 * x102 + y98 * y98));
								single241 = single240 / single241;
								this.velocity.X = x102 * single241;
								this.velocity.Y = y98 * single241;
								this.ai[1] = 2f;
							}
							else if (this.ai[1] == 2f)
							{
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] < 25f)
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
								}
								else
								{
									this.velocity.X = this.velocity.X * 0.96f;
									this.velocity.Y = this.velocity.Y * 0.96f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
									if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = 0f;
									}
								}
								if (this.ai[2] >= 70f)
								{
									this.ai[3] = this.ai[3] + 1f;
									this.ai[2] = 0f;
									this.target = 255;
									this.rotation = single233;
									if (this.ai[3] < 4f)
									{
										this.ai[1] = 1f;
									}
									else
									{
										this.ai[1] = 0f;
										this.ai[3] = 0f;
									}
								}
							}
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 1f || this.ai[0] == 2f)
						{
							if (this.ai[0] != 1f)
							{
								this.ai[2] = this.ai[2] - 0.005f;
								if (this.ai[2] < 0f)
								{
									this.ai[2] = 0f;
								}
							}
							else
							{
								this.ai[2] = this.ai[2] + 0.005f;
								if ((double)this.ai[2] > 0.5)
								{
									this.ai[2] = 0.5f;
								}
							}
							NPC nPC121 = this;
							nPC121.rotation = nPC121.rotation + this.ai[2];
							this.ai[1] = this.ai[1] + 1f;
							if (this.ai[1] == 100f)
							{
								this.ai[0] = this.ai[0] + 1f;
								this.ai[1] = 0f;
								if (this.ai[0] != 3f)
								{
									Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
									for (int p3 = 0; p3 < 2; p3++)
									{
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 143, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
									}
									for (int q3 = 0; q3 < 20; q3++)
									{
										Vector2 vector2119 = this.position;
										int num425 = this.width;
										int num426 = this.height;
										skyBlue = new Color();
										Dust.NewDust(vector2119, num425, num426, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
									}
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
								else
								{
									this.ai[2] = 0f;
								}
							}
							Vector2 vector2120 = this.position;
							int num427 = this.width;
							int num428 = this.height;
							skyBlue = new Color();
							Dust.NewDust(vector2120, num427, num428, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							this.damage = (int)((double)this.defDamage * 1.5);
							this.defense = this.defDefense + 10;
							this.soundHit = 4;
							if (this.ai[1] != 0f)
							{
								int num429 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num429 = -1;
								}
								float single242 = 8f;
								float single243 = 0.2f;
								if (Main.expertMode)
								{
									single242 = 9.5f;
									single243 = 0.25f;
								}
								Vector2 y99 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x103 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num429 * 340) - y99.X;
								float y100 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y99.Y;
								float single244 = (float)Math.Sqrt((double)(x103 * x103 + y100 * y100));
								single244 = single242 / single244;
								x103 = x103 * single244;
								y100 = y100 * single244;
								if (this.velocity.X < x103)
								{
									this.velocity.X = this.velocity.X + single243;
									if (this.velocity.X < 0f && x103 > 0f)
									{
										this.velocity.X = this.velocity.X + single243;
									}
								}
								else if (this.velocity.X > x103)
								{
									this.velocity.X = this.velocity.X - single243;
									if (this.velocity.X > 0f && x103 < 0f)
									{
										this.velocity.X = this.velocity.X - single243;
									}
								}
								if (this.velocity.Y < y100)
								{
									this.velocity.Y = this.velocity.Y + single243;
									if (this.velocity.Y < 0f && y100 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single243;
									}
								}
								else if (this.velocity.Y > y100)
								{
									this.velocity.Y = this.velocity.Y - single243;
									if (this.velocity.Y > 0f && y100 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single243;
									}
								}
								y99 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								x103 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y99.X;
								y100 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y99.Y;
								this.rotation = (float)Math.Atan2((double)y100, (double)x103) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[1] = this.localAI[1] + 1f;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										this.localAI[1] = this.localAI[1] + 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.localAI[1] = this.localAI[1] + 0.75f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] = this.localAI[1] + 1.5f;
									}
									if (Main.expertMode)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if (this.localAI[1] > 60f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										float single245 = 9f;
										int num430 = 18;
										int num431 = 100;
										if (Main.expertMode)
										{
											num430 = 16;
										}
										single244 = (float)Math.Sqrt((double)(x103 * x103 + y100 * y100));
										single244 = single245 / single244;
										x103 = x103 * single244;
										y100 = y100 * single244;
										y99.X = y99.X + x103 * 15f;
										y99.Y = y99.Y + y100 * 15f;
										Projectile.NewProjectile(y99.X, y99.Y, x103, y100, num431, num430, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] >= 180f)
								{
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.TargetClosest(true);
									this.netUpdate = true;
									return;
								}
							}
							else
							{
								float single246 = 8f;
								float single247 = 0.15f;
								if (Main.expertMode)
								{
									single246 = 9.5f;
									single247 = 0.175f;
								}
								Vector2 y101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x104 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y101.X;
								float y102 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - y101.Y;
								float single248 = (float)Math.Sqrt((double)(x104 * x104 + y102 * y102));
								single248 = single246 / single248;
								x104 = x104 * single248;
								y102 = y102 * single248;
								if (this.velocity.X < x104)
								{
									this.velocity.X = this.velocity.X + single247;
									if (this.velocity.X < 0f && x104 > 0f)
									{
										this.velocity.X = this.velocity.X + single247;
									}
								}
								else if (this.velocity.X > x104)
								{
									this.velocity.X = this.velocity.X - single247;
									if (this.velocity.X > 0f && x104 < 0f)
									{
										this.velocity.X = this.velocity.X - single247;
									}
								}
								if (this.velocity.Y < y102)
								{
									this.velocity.Y = this.velocity.Y + single247;
									if (this.velocity.Y < 0f && y102 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single247;
									}
								}
								else if (this.velocity.Y > y102)
								{
									this.velocity.Y = this.velocity.Y - single247;
									if (this.velocity.Y > 0f && y102 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single247;
									}
								}
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] >= 300f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.TargetClosest(true);
									this.netUpdate = true;
								}
								y101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								x104 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y101.X;
								y102 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y101.Y;
								this.rotation = (float)Math.Atan2((double)y102, (double)x104) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[1] = this.localAI[1] + 1f;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] = this.localAI[1] + 2f;
									}
									if (this.localAI[1] > 180f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										float single249 = 8.5f;
										int num432 = 25;
										int num433 = 100;
										if (Main.expertMode)
										{
											single249 = 10f;
											num432 = 21;
										}
										single248 = (float)Math.Sqrt((double)(x104 * x104 + y102 * y102));
										single248 = single249 / single248;
										x104 = x104 * single248;
										y102 = y102 * single248;
										y101.X = y101.X + x104 * 15f;
										y101.Y = y101.Y + y102 * 15f;
										Projectile.NewProjectile(y101.X, y101.Y, x104, y102, num433, num432, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
					}
					else if (this.aiStyle == 31)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						bool flag93 = Main.player[this.target].dead;
						float x105 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
						float y103 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
						float single250 = (float)Math.Atan2((double)y103, (double)x105) + 1.57f;
						if (single250 < 0f)
						{
							single250 = single250 + 6.283f;
						}
						else if ((double)single250 > 6.283)
						{
							single250 = single250 - 6.283f;
						}
						float single251 = 0.15f;
						if (this.rotation < single250)
						{
							if ((double)(single250 - this.rotation) <= 3.1415)
							{
								NPC nPC122 = this;
								nPC122.rotation = nPC122.rotation + single251;
							}
							else
							{
								NPC nPC123 = this;
								nPC123.rotation = nPC123.rotation - single251;
							}
						}
						else if (this.rotation > single250)
						{
							if ((double)(this.rotation - single250) <= 3.1415)
							{
								NPC nPC124 = this;
								nPC124.rotation = nPC124.rotation - single251;
							}
							else
							{
								NPC nPC125 = this;
								nPC125.rotation = nPC125.rotation + single251;
							}
						}
						if (this.rotation > single250 - single251 && this.rotation < single250 + single251)
						{
							this.rotation = single250;
						}
						if (this.rotation < 0f)
						{
							NPC nPC126 = this;
							nPC126.rotation = nPC126.rotation + 6.283f;
						}
						else if ((double)this.rotation > 6.283)
						{
							NPC nPC127 = this;
							nPC127.rotation = nPC127.rotation - 6.283f;
						}
						if (this.rotation > single250 - single251 && this.rotation < single250 + single251)
						{
							this.rotation = single250;
						}
						if (Main.rand.Next(5) == 0)
						{
							Vector2 vector2121 = new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f);
							int num434 = this.width;
							int num435 = (int)((float)this.height * 0.5f);
							float x106 = this.velocity.X;
							skyBlue = new Color();
							int num436 = Dust.NewDust(vector2121, num434, num435, 5, x106, 2f, 0, skyBlue, 1f);
							Main.dust[num436].velocity.X = Main.dust[num436].velocity.X * 0.5f;
							Main.dust[num436].velocity.Y = Main.dust[num436].velocity.Y * 0.1f;
						}
						if (Main.netMode != 1 && !Main.dayTime && !flag93 && this.timeLeft < 10)
						{
							for (int r3 = 0; r3 < 200; r3++)
							{
								if (r3 != this.whoAmI && Main.npc[r3].active && (Main.npc[r3].type == 125 || Main.npc[r3].type == 126) && Main.npc[r3].timeLeft - 1 > this.timeLeft)
								{
									this.timeLeft = Main.npc[r3].timeLeft - 1;
								}
							}
						}
						if (Main.dayTime || flag93)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							if (this.ai[1] == 0f)
							{
								this.TargetClosest(true);
								float single252 = 12f;
								float single253 = 0.4f;
								int num437 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num437 = -1;
								}
								Vector2 y104 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x107 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num437 * 400) - y104.X;
								float y105 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y104.Y;
								float single254 = (float)Math.Sqrt((double)(x107 * x107 + y105 * y105));
								single254 = single252 / single254;
								x107 = x107 * single254;
								y105 = y105 * single254;
								if (this.velocity.X < x107)
								{
									this.velocity.X = this.velocity.X + single253;
									if (this.velocity.X < 0f && x107 > 0f)
									{
										this.velocity.X = this.velocity.X + single253;
									}
								}
								else if (this.velocity.X > x107)
								{
									this.velocity.X = this.velocity.X - single253;
									if (this.velocity.X > 0f && x107 < 0f)
									{
										this.velocity.X = this.velocity.X - single253;
									}
								}
								if (this.velocity.Y < y105)
								{
									this.velocity.Y = this.velocity.Y + single253;
									if (this.velocity.Y < 0f && y105 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single253;
									}
								}
								else if (this.velocity.Y > y105)
								{
									this.velocity.Y = this.velocity.Y - single253;
									if (this.velocity.Y > 0f && y105 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single253;
									}
								}
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] < 600f)
								{
									if (!Main.player[this.target].dead)
									{
										this.ai[3] = this.ai[3] + 1f;
										if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.8)
										{
											this.ai[3] = this.ai[3] + 0.5f;
										}
									}
									if (this.ai[3] >= 60f)
									{
										this.ai[3] = 0f;
										y104 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										x107 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y104.X;
										y105 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y104.Y;
										if (Main.netMode != 1)
										{
											float single255 = 12f;
											int num438 = 25;
											int num439 = 96;
											if (Main.expertMode)
											{
												single255 = 13.5f;
												num438 = 21;
											}
											single254 = (float)Math.Sqrt((double)(x107 * x107 + y105 * y105));
											single254 = single255 / single254;
											x107 = x107 * single254;
											y105 = y105 * single254;
											x107 = x107 + (float)Main.rand.Next(-40, 41) * 0.05f;
											y105 = y105 + (float)Main.rand.Next(-40, 41) * 0.05f;
											y104.X = y104.X + x107 * 4f;
											y104.Y = y104.Y + y105 * 4f;
											Projectile.NewProjectile(y104.X, y104.Y, x107, y105, num439, num438, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
								else
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
							}
							else if (this.ai[1] == 1f)
							{
								this.rotation = single250;
								float single256 = 13f;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.9)
									{
										single256 = single256 + 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.8)
									{
										single256 = single256 + 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.7)
									{
										single256 = single256 + 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.6)
									{
										single256 = single256 + 0.5f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										single256 = single256 + 0.5f;
									}
								}
								Vector2 vector2122 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x108 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2122.X;
								float y106 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2122.Y;
								float single257 = (float)Math.Sqrt((double)(x108 * x108 + y106 * y106));
								single257 = single256 / single257;
								this.velocity.X = x108 * single257;
								this.velocity.Y = y106 * single257;
								this.ai[1] = 2f;
							}
							else if (this.ai[1] == 2f)
							{
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] < 8f)
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
								}
								else
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.velocity.Y = this.velocity.Y * 0.9f;
									if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
									{
										this.velocity.X = 0f;
									}
									if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
									{
										this.velocity.Y = 0f;
									}
								}
								if (this.ai[2] >= 42f)
								{
									this.ai[3] = this.ai[3] + 1f;
									this.ai[2] = 0f;
									this.target = 255;
									this.rotation = single250;
									if (this.ai[3] < 10f)
									{
										this.ai[1] = 1f;
									}
									else
									{
										this.ai[1] = 0f;
										this.ai[3] = 0f;
									}
								}
							}
							if ((double)this.life < (double)this.lifeMax * 0.4)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 1f || this.ai[0] == 2f)
						{
							if (this.ai[0] != 1f)
							{
								this.ai[2] = this.ai[2] - 0.005f;
								if (this.ai[2] < 0f)
								{
									this.ai[2] = 0f;
								}
							}
							else
							{
								this.ai[2] = this.ai[2] + 0.005f;
								if ((double)this.ai[2] > 0.5)
								{
									this.ai[2] = 0.5f;
								}
							}
							NPC nPC128 = this;
							nPC128.rotation = nPC128.rotation + this.ai[2];
							this.ai[1] = this.ai[1] + 1f;
							if (this.ai[1] == 100f)
							{
								this.ai[0] = this.ai[0] + 1f;
								this.ai[1] = 0f;
								if (this.ai[0] != 3f)
								{
									Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
									for (int s3 = 0; s3 < 2; s3++)
									{
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 144, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
									}
									for (int t3 = 0; t3 < 20; t3++)
									{
										Vector2 vector2123 = this.position;
										int num440 = this.width;
										int num441 = this.height;
										skyBlue = new Color();
										Dust.NewDust(vector2123, num440, num441, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
									}
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
								else
								{
									this.ai[2] = 0f;
								}
							}
							Vector2 vector2124 = this.position;
							int num442 = this.width;
							int num443 = this.height;
							skyBlue = new Color();
							Dust.NewDust(vector2124, num442, num443, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
								return;
							}
						}
						else
						{
							this.soundHit = 4;
							this.damage = (int)((double)this.defDamage * 1.5);
							this.defense = this.defDefense + 18;
							if (this.ai[1] != 0f)
							{
								if (this.ai[1] == 1f)
								{
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									this.rotation = single250;
									float single258 = 14f;
									if (Main.expertMode)
									{
										single258 = single258 + 2f;
									}
									Vector2 vector2125 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float x109 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2125.X;
									float y107 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2125.Y;
									float single259 = (float)Math.Sqrt((double)(x109 * x109 + y107 * y107));
									single259 = single258 / single259;
									this.velocity.X = x109 * single259;
									this.velocity.Y = y107 * single259;
									this.ai[1] = 2f;
									return;
								}
								if (this.ai[1] == 2f)
								{
									this.ai[2] = this.ai[2] + 1f;
									if (Main.expertMode)
									{
										this.ai[2] = this.ai[2] + 0.5f;
									}
									if (this.ai[2] < 50f)
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									else
									{
										this.velocity.X = this.velocity.X * 0.93f;
										this.velocity.Y = this.velocity.Y * 0.93f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									if (this.ai[2] >= 80f)
									{
										this.ai[3] = this.ai[3] + 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = single250;
										if (this.ai[3] < 6f)
										{
											this.ai[1] = 1f;
											return;
										}
										this.ai[1] = 0f;
										this.ai[3] = 0f;
										return;
									}
								}
							}
							else
							{
								float single260 = 4f;
								float single261 = 0.1f;
								int num444 = 1;
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									num444 = -1;
								}
								Vector2 y108 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x111 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num444 * 180) - y108.X;
								float y109 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y108.Y;
								float single262 = (float)Math.Sqrt((double)(x111 * x111 + y109 * y109));
								if (Main.expertMode)
								{
									if (single262 > 300f)
									{
										single260 = single260 + 0.5f;
									}
									if (single262 > 400f)
									{
										single260 = single260 + 0.5f;
									}
									if (single262 > 500f)
									{
										single260 = single260 + 0.5f;
									}
									if (single262 > 600f)
									{
										single260 = single260 + 0.5f;
									}
									if (single262 > 700f)
									{
										single260 = single260 + 0.5f;
									}
									if (single262 > 800f)
									{
										single260 = single260 + 0.5f;
									}
								}
								single262 = single260 / single262;
								x111 = x111 * single262;
								y109 = y109 * single262;
								if (this.velocity.X < x111)
								{
									this.velocity.X = this.velocity.X + single261;
									if (this.velocity.X < 0f && x111 > 0f)
									{
										this.velocity.X = this.velocity.X + single261;
									}
								}
								else if (this.velocity.X > x111)
								{
									this.velocity.X = this.velocity.X - single261;
									if (this.velocity.X > 0f && x111 < 0f)
									{
										this.velocity.X = this.velocity.X - single261;
									}
								}
								if (this.velocity.Y < y109)
								{
									this.velocity.Y = this.velocity.Y + single261;
									if (this.velocity.Y < 0f && y109 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single261;
									}
								}
								else if (this.velocity.Y > y109)
								{
									this.velocity.Y = this.velocity.Y - single261;
									if (this.velocity.Y > 0f && y109 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single261;
									}
								}
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] >= 400f)
								{
									this.ai[1] = 1f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.target = 255;
									this.netUpdate = true;
								}
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[2] = this.localAI[2] + 1f;
									if (this.localAI[2] > 22f)
									{
										this.localAI[2] = 0f;
										Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
									}
									if (Main.netMode != 1)
									{
										this.localAI[1] = this.localAI[1] + 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] = this.localAI[1] + 2f;
										}
										if (this.localAI[1] > 8f)
										{
											this.localAI[1] = 0f;
											float single263 = 6f;
											int num445 = 30;
											if (Main.expertMode)
											{
												num445 = 26;
											}
											int num446 = 101;
											y108 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											x111 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y108.X;
											y109 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y108.Y;
											single262 = (float)Math.Sqrt((double)(x111 * x111 + y109 * y109));
											single262 = single263 / single262;
											x111 = x111 * single262;
											y109 = y109 * single262;
											y109 = y109 + (float)Main.rand.Next(-40, 41) * 0.01f;
											x111 = x111 + (float)Main.rand.Next(-40, 41) * 0.01f;
											y109 = y109 + this.velocity.Y * 0.5f;
											x111 = x111 + this.velocity.X * 0.5f;
											y108.X = y108.X - x111 * 1f;
											y108.Y = y108.Y - y109 * 1f;
											Projectile.NewProjectile(y108.X, y108.Y, x111, y109, num446, num445, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
								}
							}
						}
					}
					else if (this.aiStyle == 32)
					{
						this.damage = this.defDamage;
						this.defense = this.defDefense;
						if (this.ai[0] == 0f && Main.netMode != 1)
						{
							this.TargetClosest(true);
							this.ai[0] = 1f;
							int num447 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 128, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num447].ai[0] = -1f;
							Main.npc[num447].ai[1] = (float)this.whoAmI;
							Main.npc[num447].target = this.target;
							Main.npc[num447].netUpdate = true;
							num447 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 129, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num447].ai[0] = 1f;
							Main.npc[num447].ai[1] = (float)this.whoAmI;
							Main.npc[num447].target = this.target;
							Main.npc[num447].netUpdate = true;
							num447 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 130, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num447].ai[0] = -1f;
							Main.npc[num447].ai[1] = (float)this.whoAmI;
							Main.npc[num447].target = this.target;
							Main.npc[num447].ai[3] = 150f;
							Main.npc[num447].netUpdate = true;
							num447 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 131, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num447].ai[0] = 1f;
							Main.npc[num447].ai[1] = (float)this.whoAmI;
							Main.npc[num447].target = this.target;
							Main.npc[num447].netUpdate = true;
							Main.npc[num447].ai[3] = 150f;
						}
						if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
							{
								this.ai[1] = 3f;
							}
						}
						if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
						{
							this.ai[1] = 2f;
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
						if (this.ai[1] != 0f)
						{
							if (this.ai[1] == 1f)
							{
								NPC nPC129 = this;
								nPC129.defense = nPC129.defense * 2;
								NPC nPC130 = this;
								nPC130.damage = nPC130.damage * 2;
								this.ai[2] = this.ai[2] + 1f;
								if (this.ai[2] == 2f)
								{
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								}
								if (this.ai[2] >= 400f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
								NPC nPC131 = this;
								nPC131.rotation = nPC131.rotation + (float)this.direction * 0.3f;
								Vector2 vector2126 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x112 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2126.X;
								float y111 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2126.Y;
								float single264 = (float)Math.Sqrt((double)(x112 * x112 + y111 * y111));
								single264 = 2f / single264;
								this.velocity.X = x112 * single264;
								this.velocity.Y = y111 * single264;
								return;
							}
							if (this.ai[1] == 2f)
							{
								this.damage = 1000;
								this.defense = 9999;
								NPC nPC132 = this;
								nPC132.rotation = nPC132.rotation + (float)this.direction * 0.3f;
								Vector2 vector2127 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x113 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2127.X;
								float y112 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2127.Y;
								float single265 = (float)Math.Sqrt((double)(x113 * x113 + y112 * y112));
								float single266 = 10f;
								single266 = single266 + single265 / 100f;
								if (single266 < 8f)
								{
									single266 = 8f;
								}
								if (single266 > 32f)
								{
									single266 = 32f;
								}
								single265 = single266 / single265;
								this.velocity.X = x113 * single265;
								this.velocity.Y = y112 * single265;
								return;
							}
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.X = this.velocity.X * 0.95f;
								if (this.timeLeft > 500)
								{
									this.timeLeft = 500;
									return;
								}
							}
						}
						else
						{
							this.ai[2] = this.ai[2] + 1f;
							if (this.ai[2] >= 600f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 1f;
								this.TargetClosest(true);
								this.netUpdate = true;
							}
							this.rotation = this.velocity.X / 15f;
							if (this.position.Y > Main.player[this.target].position.Y - 200f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.98f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
							}
							else if (this.position.Y < Main.player[this.target].position.Y - 500f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.98f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + 100f)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 33)
					{
						Vector2 vector2128 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x114 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2128.X;
						float y113 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2128.Y;
						float single267 = (float)Math.Sqrt((double)(x114 * x114 + y113 * y113));
						if (this.ai[2] != 99f)
						{
							if (single267 > 800f)
							{
								this.ai[2] = 99f;
							}
						}
						else if (single267 < 400f)
						{
							this.ai[2] = 0f;
						}
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] = this.ai[2] + 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10);
								this.active = false;
							}
						}
						if (this.ai[2] != 99f)
						{
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] == 0f)
								{
									this.ai[3] = this.ai[3] + 1f;
									if (this.ai[3] >= 300f)
									{
										this.ai[2] = this.ai[2] + 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 320f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.04f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 260f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.04f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.3f;
										if (this.velocity.X > 12f)
										{
											this.velocity.X = 12f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 250f)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.3f;
										if (this.velocity.X < -12f)
										{
											this.velocity.X = -12f;
										}
									}
								}
								else
								{
									this.TargetClosest(true);
									if (!Main.player[this.target].dead)
									{
										Vector2 vector2129 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float x115 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2129.X;
										float y114 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2129.Y;
										float single268 = (float)Math.Sqrt((double)(x115 * x115 + y114 * y114));
										single268 = 7f / single268;
										x115 = x115 * single268;
										y114 = y114 * single268;
										this.rotation = (float)Math.Atan2((double)y114, (double)x115) - 1.57f;
										if (this.velocity.X > x115)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X - 0.05f;
										}
										if (this.velocity.X < x115)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X + 0.05f;
										}
										if (this.velocity.Y > y114)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y - 0.05f;
										}
										if (this.velocity.Y < y114)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y + 0.05f;
										}
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
									}
									this.ai[3] = this.ai[3] + 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
								}
								Vector2 vector2130 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x116 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2130.X;
								float y115 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2130.Y;
								Math.Sqrt((double)(x116 * x116 + y115 * y115));
								this.rotation = (float)Math.Atan2((double)y115, (double)x116) + 1.57f;
								return;
							}
							if (this.ai[2] == 1f)
							{
								Vector2 vector2131 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x117 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2131.X;
								float y116 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2131.Y;
								float single269 = (float)Math.Sqrt((double)(x117 * x117 + y116 * y116));
								this.rotation = (float)Math.Atan2((double)y116, (double)x117) + 1.57f;
								this.velocity.X = this.velocity.X * 0.95f;
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
								if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
								{
									this.TargetClosest(true);
									this.ai[2] = 2f;
									vector2131 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									x117 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2131.X;
									y116 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2131.Y;
									single269 = (float)Math.Sqrt((double)(x117 * x117 + y116 * y116));
									single269 = 22f / single269;
									this.velocity.X = x117 * single269;
									this.velocity.Y = y116 * single269;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] != 2f)
							{
								if (this.ai[2] == 4f)
								{
									this.TargetClosest(true);
									Vector2 vector2132 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float x118 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2132.X;
									float y117 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2132.Y;
									float single270 = (float)Math.Sqrt((double)(x118 * x118 + y117 * y117));
									single270 = 7f / single270;
									x118 = x118 * single270;
									y117 = y117 * single270;
									if (this.velocity.X > x118)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.97f;
										}
										this.velocity.X = this.velocity.X - 0.05f;
									}
									if (this.velocity.X < x118)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.97f;
										}
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.velocity.Y > y117)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.97f;
										}
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
									if (this.velocity.Y < y117)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.97f;
										}
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
									this.ai[3] = this.ai[3] + 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									vector2132 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									x118 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2132.X;
									y117 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2132.Y;
									single270 = (float)Math.Sqrt((double)(x118 * x118 + y117 * y117));
									this.rotation = (float)Math.Atan2((double)y117, (double)x118) + 1.57f;
									return;
								}
								if (this.ai[2] == 5f && (this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) || this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)))
								{
									this.ai[2] = 0f;
									return;
								}
							}
							else if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
							{
								this.ai[2] = 3f;
								return;
							}
						}
						else
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X < -12f)
								{
									this.velocity.X = -12f;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 34)
					{
						this.spriteDirection = -(int)this.ai[0];
						Vector2 vector2133 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x119 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2133.X;
						float y118 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2133.Y;
						float single271 = (float)Math.Sqrt((double)(x119 * x119 + y118 * y118));
						if (this.ai[2] != 99f)
						{
							if (single271 > 800f)
							{
								this.ai[2] = 99f;
							}
						}
						else if (single271 < 400f)
						{
							this.ai[2] = 0f;
						}
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] = this.ai[2] + 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10);
								this.active = false;
							}
						}
						if (this.ai[2] != 99f)
						{
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] == 0f)
								{
									this.ai[3] = this.ai[3] + 1f;
									if (this.ai[3] >= 600f)
									{
										this.ai[2] = this.ai[2] + 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 300f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 250f)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.94f;
										}
										this.velocity.X = this.velocity.X - 0.3f;
										if (this.velocity.X > 9f)
										{
											this.velocity.X = 9f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.94f;
										}
										this.velocity.X = this.velocity.X + 0.2f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								else
								{
									this.TargetClosest(true);
									this.TargetClosest(true);
									if (!Main.player[this.target].dead)
									{
										Vector2 vector2134 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float x120 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2134.X;
										float y119 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2134.Y;
										float single272 = (float)Math.Sqrt((double)(x120 * x120 + y119 * y119));
										single272 = 12f / single272;
										x120 = x120 * single272;
										y119 = y119 * single272;
										this.rotation = (float)Math.Atan2((double)y119, (double)x120) - 1.57f;
										if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) >= 2f)
										{
											NPC nPC133 = this;
											nPC133.velocity = nPC133.velocity * 0.97f;
										}
										else
										{
											this.rotation = (float)Math.Atan2((double)y119, (double)x120) - 1.57f;
											this.velocity.X = x120;
											this.velocity.Y = y119;
											this.netUpdate = true;
										}
										this.ai[3] = this.ai[3] + 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
									}
									else
									{
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
									}
								}
								Vector2 vector2135 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x121 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2135.X;
								float y120 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2135.Y;
								Math.Sqrt((double)(x121 * x121 + y120 * y120));
								this.rotation = (float)Math.Atan2((double)y120, (double)x121) + 1.57f;
								return;
							}
							if (this.ai[2] == 1f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								Vector2 vector2136 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x122 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 280f * this.ai[0] - vector2136.X;
								float y121 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2136.Y;
								float single273 = (float)Math.Sqrt((double)(x122 * x122 + y121 * y121));
								this.rotation = (float)Math.Atan2((double)y121, (double)x122) + 1.57f;
								this.velocity.X = (this.velocity.X * 5f + Main.npc[(int)this.ai[1]].velocity.X) / 6f;
								this.velocity.X = this.velocity.X + 0.5f;
								this.velocity.Y = this.velocity.Y - 0.5f;
								if (this.velocity.Y < -9f)
								{
									this.velocity.Y = -9f;
								}
								if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 280f)
								{
									this.TargetClosest(true);
									this.ai[2] = 2f;
									vector2136 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									x122 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2136.X;
									y121 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2136.Y;
									single273 = (float)Math.Sqrt((double)(x122 * x122 + y121 * y121));
									single273 = 20f / single273;
									this.velocity.X = x122 * single273;
									this.velocity.Y = y121 * single273;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 2f)
							{
								if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
								{
									if (this.ai[3] >= 4f)
									{
										this.ai[2] = 3f;
										this.ai[3] = 0f;
										return;
									}
									this.ai[2] = 1f;
									this.ai[3] = this.ai[3] + 1f;
									return;
								}
							}
							else if (this.ai[2] == 4f)
							{
								Vector2 vector2137 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x123 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2137.X;
								float y122 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2137.Y;
								float single274 = (float)Math.Sqrt((double)(x123 * x123 + y122 * y122));
								this.rotation = (float)Math.Atan2((double)y122, (double)x123) + 1.57f;
								this.velocity.Y = (this.velocity.Y * 5f + Main.npc[(int)this.ai[1]].velocity.Y) / 6f;
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
								{
									this.TargetClosest(true);
									this.ai[2] = 5f;
									vector2137 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									x123 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2137.X;
									y122 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2137.Y;
									single274 = (float)Math.Sqrt((double)(x123 * x123 + y122 * y122));
									single274 = 17f / single274;
									this.velocity.X = x123 * single274;
									this.velocity.Y = y122 * single274;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[2] == 5f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
							{
								if (this.ai[3] >= 4f)
								{
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									return;
								}
								this.ai[2] = 4f;
								this.ai[3] = this.ai[3] + 1f;
								return;
							}
						}
						else
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.1f;
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.5f;
								if (this.velocity.X > 12f)
								{
									this.velocity.X = 12f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.5f;
								if (this.velocity.X < -12f)
								{
									this.velocity.X = -12f;
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 35)
					{
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] = this.ai[2] + 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10);
								this.active = false;
							}
						}
						if (this.ai[2] == 0f)
						{
							if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (Main.npc[(int)this.ai[1]].ai[1] == 0f)
							{
								this.ai[3] = this.ai[3] + 1f;
								if (this.ai[3] >= 1100f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 1f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 150f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.04f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 150f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.04f;
									if (this.velocity.Y < -3f)
									{
										this.velocity.Y = -3f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 200f)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.2f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 160f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.2f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							else
							{
								this.localAI[0] = this.localAI[0] + 2f;
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.07f;
									if (this.velocity.Y > 6f)
									{
										this.velocity.Y = 6f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.07f;
									if (this.velocity.Y < -6f)
									{
										this.velocity.Y = -6f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							Vector2 y123 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x124 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - y123.X;
							float y124 = Main.npc[(int)this.ai[1]].position.Y + 230f - y123.Y;
							float single275 = (float)Math.Sqrt((double)(x124 * x124 + y124 * y124));
							this.rotation = (float)Math.Atan2((double)y124, (double)x124) + 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] = this.localAI[0] + 1f;
								if (this.localAI[0] > 140f)
								{
									this.localAI[0] = 0f;
									float single276 = 12f;
									int num448 = 0;
									int num449 = 102;
									single275 = single276 / single275;
									x124 = -x124 * single275;
									y124 = -y124 * single275;
									x124 = x124 + (float)Main.rand.Next(-40, 41) * 0.01f;
									y124 = y124 + (float)Main.rand.Next(-40, 41) * 0.01f;
									y123.X = y123.X + x124 * 4f;
									y123.Y = y123.Y + y124 * 4f;
									Projectile.NewProjectile(y123.X, y123.Y, x124, y124, num449, num448, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else if (this.ai[2] == 1f)
						{
							this.ai[3] = this.ai[3] + 1f;
							if (this.ai[3] >= 300f)
							{
								this.localAI[0] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							Vector2 x125 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x126 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - x125.X;
							float y125 = Main.npc[(int)this.ai[1]].position.Y - x125.Y;
							y125 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 80f - x125.Y;
							float single277 = (float)Math.Sqrt((double)(x126 * x126 + y125 * y125));
							single277 = 6f / single277;
							x126 = x126 * single277;
							y125 = y125 * single277;
							if (this.velocity.X > x126)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X - 0.04f;
							}
							if (this.velocity.X < x126)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X + 0.04f;
							}
							if (this.velocity.Y > y125)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y - 0.08f;
							}
							if (this.velocity.Y < y125)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y + 0.08f;
							}
							this.TargetClosest(true);
							x125 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							x126 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - x125.X;
							y125 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - x125.Y;
							single277 = (float)Math.Sqrt((double)(x126 * x126 + y125 * y125));
							this.rotation = (float)Math.Atan2((double)y125, (double)x126) - 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] = this.localAI[0] + 1f;
								if (this.localAI[0] > 40f)
								{
									this.localAI[0] = 0f;
									float single278 = 10f;
									int num450 = 0;
									int num451 = 102;
									single277 = single278 / single277;
									x126 = x126 * single277;
									y125 = y125 * single277;
									x126 = x126 + (float)Main.rand.Next(-40, 41) * 0.01f;
									y125 = y125 + (float)Main.rand.Next(-40, 41) * 0.01f;
									x125.X = x125.X + x126 * 4f;
									x125.Y = x125.Y + y125 * 4f;
									Projectile.NewProjectile(x125.X, x125.Y, x126, y125, num451, num450, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 36)
					{
						this.spriteDirection = -(int)this.ai[0];
						if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
						{
							this.ai[2] = this.ai[2] + 10f;
							if (this.ai[2] > 50f || Main.netMode != 2)
							{
								this.life = -1;
								this.HitEffect(0, 10);
								this.active = false;
							}
						}
						if (this.ai[2] == 0f || this.ai[2] == 3f)
						{
							if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
							{
								this.timeLeft = 10;
							}
							if (Main.npc[(int)this.ai[1]].ai[1] == 0f)
							{
								this.ai[3] = this.ai[3] + 1f;
								if (this.ai[3] >= 800f)
								{
									this.ai[2] = this.ai[2] + 1f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -3f)
									{
										this.velocity.Y = -3f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.14f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.14f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							else
							{
								this.localAI[0] = this.localAI[0] + 3f;
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.07f;
									if (this.velocity.Y > 6f)
									{
										this.velocity.Y = 6f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.07f;
									if (this.velocity.Y < -6f)
									{
										this.velocity.Y = -6f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
									}
								}
							}
							this.TargetClosest(true);
							Vector2 y126 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x127 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y126.X;
							float y127 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y126.Y;
							float single279 = (float)Math.Sqrt((double)(x127 * x127 + y127 * y127));
							this.rotation = (float)Math.Atan2((double)y127, (double)x127) - 1.57f;
							if (Main.netMode != 1)
							{
								this.localAI[0] = this.localAI[0] + 1f;
								if (this.localAI[0] > 200f)
								{
									this.localAI[0] = 0f;
									float single280 = 8f;
									int num452 = 25;
									int num453 = 100;
									single279 = single280 / single279;
									x127 = x127 * single279;
									y127 = y127 * single279;
									x127 = x127 + (float)Main.rand.Next(-40, 41) * 0.05f;
									y127 = y127 + (float)Main.rand.Next(-40, 41) * 0.05f;
									y126.X = y126.X + x127 * 8f;
									y126.Y = y126.Y + y127 * 8f;
									Projectile.NewProjectile(y126.X, y126.Y, x127, y127, num453, num452, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else if (this.ai[2] == 1f)
						{
							this.ai[3] = this.ai[3] + 1f;
							if (this.ai[3] >= 200f)
							{
								this.localAI[0] = 0f;
								this.ai[2] = 0f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							Vector2 x128 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x129 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 350f - x128.X;
							float y128 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 20f - x128.Y;
							float single281 = (float)Math.Sqrt((double)(x129 * x129 + y128 * y128));
							single281 = 7f / single281;
							x129 = x129 * single281;
							y128 = y128 * single281;
							if (this.velocity.X > x129)
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
							}
							if (this.velocity.X < x129)
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
							}
							if (this.velocity.Y > y128)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if (this.velocity.Y < y128)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							this.TargetClosest(true);
							x128 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							x129 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - x128.X;
							y128 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - x128.Y;
							single281 = (float)Math.Sqrt((double)(x129 * x129 + y128 * y128));
							this.rotation = (float)Math.Atan2((double)y128, (double)x129) - 1.57f;
							if (Main.netMode == 1)
							{
								this.localAI[0] = this.localAI[0] + 1f;
								if (this.localAI[0] > 80f)
								{
									this.localAI[0] = 0f;
									float single282 = 10f;
									int num454 = 25;
									int num455 = 100;
									single281 = single282 / single281;
									x129 = x129 * single281;
									y128 = y128 * single281;
									x129 = x129 + (float)Main.rand.Next(-40, 41) * 0.05f;
									y128 = y128 + (float)Main.rand.Next(-40, 41) * 0.05f;
									x128.X = x128.X + x129 * 8f;
									x128.Y = x128.Y + y128 * 8f;
									Projectile.NewProjectile(x128.X, x128.Y, x129, y128, num455, num454, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 37)
					{
						if (this.ai[3] > 0f)
						{
							this.realLife = (int)this.ai[3];
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						if (this.type >= 134 && this.type <= 136)
						{
							this.velocity.Length();
							if (this.type == 134 || this.type != 134 && Main.npc[(int)this.ai[1]].alpha < 128)
							{
								if (this.alpha != 0)
								{
									for (int u3 = 0; u3 < 2; u3++)
									{
										Vector2 vector2138 = new Vector2(this.position.X, this.position.Y);
										int num456 = this.width;
										int num457 = this.height;
										skyBlue = new Color();
										int num458 = Dust.NewDust(vector2138, num456, num457, 182, 0f, 0f, 100, skyBlue, 2f);
										Main.dust[num458].noGravity = true;
										Main.dust[num458].noLight = true;
									}
								}
								NPC nPC134 = this;
								nPC134.alpha = nPC134.alpha - 42;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
							}
						}
						if (this.type > 134)
						{
							bool flag94 = false;
							if (this.ai[1] <= 0f)
							{
								flag94 = true;
							}
							else if (Main.npc[(int)this.ai[1]].life <= 0)
							{
								flag94 = true;
							}
							if (flag94)
							{
								this.life = 0;
								this.HitEffect(0, 10);
								this.checkDead();
							}
						}
						if (Main.netMode != 1)
						{
							if (this.ai[0] == 0f && this.type == 134)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
								int num459 = 0;
								int num460 = this.whoAmI;
								int num461 = 80;
								for (int v3 = 0; v3 <= num461; v3++)
								{
									int num462 = 135;
									if (v3 == num461)
									{
										num462 = 136;
									}
									num459 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num462, this.whoAmI, 0f, 0f, 0f, 0f, 255);
									Main.npc[num459].ai[3] = (float)this.whoAmI;
									Main.npc[num459].realLife = this.whoAmI;
									Main.npc[num459].ai[1] = (float)num460;
									Main.npc[num460].ai[0] = (float)num459;
									NetMessage.SendData(23, -1, -1, "", num459, 0f, 0f, 0f, 0, 0, 0);
									num460 = num459;
								}
							}
							if (this.type == 135)
							{
								this.localAI[0] = this.localAI[0] + (float)Main.rand.Next(4);
								if (this.localAI[0] >= (float)Main.rand.Next(1400, 26000))
								{
									this.localAI[0] = 0f;
									this.TargetClosest(true);
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										float single283 = 8f;
										Vector2 y129 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
										float x130 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y129.X + (float)Main.rand.Next(-20, 21);
										float y130 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y129.Y + (float)Main.rand.Next(-20, 21);
										float single284 = (float)Math.Sqrt((double)(x130 * x130 + y130 * y130));
										single284 = single283 / single284;
										x130 = x130 * single284;
										y130 = y130 * single284;
										x130 = x130 + (float)Main.rand.Next(-20, 21) * 0.05f;
										y130 = y130 + (float)Main.rand.Next(-20, 21) * 0.05f;
										int num463 = 22;
										if (Main.expertMode)
										{
											num463 = 18;
										}
										int num464 = 100;
										y129.X = y129.X + x130 * 5f;
										y129.Y = y129.Y + y130 * 5f;
										int num465 = Projectile.NewProjectile(y129.X, y129.Y, x130, y130, num464, num463, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num465].timeLeft = 300;
										this.netUpdate = true;
									}
								}
							}
						}
						int x131 = (int)(this.position.X / 16f) - 1;
						int x132 = (int)((this.position.X + (float)this.width) / 16f) + 2;
						int y131 = (int)(this.position.Y / 16f) - 1;
						int y132 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
						if (x131 < 0)
						{
							x131 = 0;
						}
						if (x132 > Main.maxTilesX)
						{
							x132 = Main.maxTilesX;
						}
						if (y131 < 0)
						{
							y131 = 0;
						}
						if (y132 > Main.maxTilesY)
						{
							y132 = Main.maxTilesY;
						}
						bool flag95 = false;
						if (!flag95)
						{
							for (int w3 = x131; w3 < x132; w3++)
							{
								for (int x310 = y131; x310 < y132; x310++)
								{
									if (Main.tile[w3, x310] != null && (Main.tile[w3, x310].nactive() && (Main.tileSolid[Main.tile[w3, x310].type] || Main.tileSolidTop[Main.tile[w3, x310].type] && Main.tile[w3, x310].frameY == 0) || Main.tile[w3, x310].liquid > 64))
									{
										vector23.X = (float)(w3 * 16);
										vector23.Y = (float)(x310 * 16);
										if (this.position.X + (float)this.width > vector23.X && this.position.X < vector23.X + 16f && this.position.Y + (float)this.height > vector23.Y && this.position.Y < vector23.Y + 16f)
										{
											flag95 = true;
											break;
										}
									}
								}
							}
						}
						if (flag95)
						{
							this.localAI[1] = 0f;
						}
						else
						{
							if (this.type != 135 || this.ai[2] != 1f)
							{
								Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
							}
							this.localAI[1] = 1f;
							if (this.type == 134)
							{
								Rectangle rectangle11 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
								int num466 = 1000;
								bool flag96 = true;
								if (this.position.Y > Main.player[this.target].position.Y)
								{
									for (int y310 = 0; y310 < 255; y310++)
									{
										if (Main.player[y310].active)
										{
											Rectangle rectangle12 = new Rectangle((int)Main.player[y310].position.X - num466, (int)Main.player[y310].position.Y - num466, num466 * 2, num466 * 2);
											if (rectangle11.Intersects(rectangle12))
											{
												flag96 = false;
												break;
											}
										}
									}
									if (flag96)
									{
										flag95 = true;
									}
								}
							}
						}
						float single285 = 16f;
						if (Main.dayTime || Main.player[this.target].dead)
						{
							flag95 = false;
							this.velocity.Y = this.velocity.Y + 1f;
							if ((double)this.position.Y > Main.worldSurface * 16)
							{
								this.velocity.Y = this.velocity.Y + 1f;
								single285 = 32f;
							}
							if ((double)this.position.Y > Main.rockLayer * 16)
							{
								for (int a3 = 0; a3 < 200; a3++)
								{
									if (Main.npc[a3].aiStyle == this.aiStyle)
									{
										Main.npc[a3].active = false;
									}
								}
							}
						}
						float single286 = 0.1f;
						float single287 = 0.15f;
						Vector2 x133 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x134 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
						float y133 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
						x134 = (float)((int)(x134 / 16f) * 16);
						y133 = (float)((int)(y133 / 16f) * 16);
						x133.X = (float)((int)(x133.X / 16f) * 16);
						x133.Y = (float)((int)(x133.Y / 16f) * 16);
						x134 = x134 - x133.X;
						y133 = y133 - x133.Y;
						float single288 = (float)Math.Sqrt((double)(x134 * x134 + y133 * y133));
						if (this.ai[1] > 0f && this.ai[1] < (float)((int)Main.npc.Length))
						{
							try
							{
								x133 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								x134 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - x133.X;
								y133 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - x133.Y;
							}
							catch (Exception ex)
							{
#if DEBUG
								Console.WriteLine(ex);
								System.Diagnostics.Debugger.Break();

#endif
							}
							this.rotation = (float)Math.Atan2((double)y133, (double)x134) + 1.57f;
							single288 = (float)Math.Sqrt((double)(x134 * x134 + y133 * y133));
							int num467 = (int)(44f * this.scale);
							single288 = (single288 - (float)num467) / single288;
							x134 = x134 * single288;
							y133 = y133 * single288;
							this.velocity = Vector2.Zero;
							this.position.X = this.position.X + x134;
							this.position.Y = this.position.Y + y133;
							return;
						}
						if (flag95)
						{
							if (this.soundDelay == 0)
							{
								float single289 = single288 / 40f;
								if (single289 < 10f)
								{
									single289 = 10f;
								}
								if (single289 > 20f)
								{
									single289 = 20f;
								}
								this.soundDelay = (int)single289;
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
							}
							single288 = (float)Math.Sqrt((double)(x134 * x134 + y133 * y133));
							float single290 = Math.Abs(x134);
							float single291 = Math.Abs(y133);
							float single292 = single285 / single288;
							x134 = x134 * single292;
							y133 = y133 * single292;
							if ((this.velocity.X > 0f && x134 > 0f || this.velocity.X < 0f && x134 < 0f) && (this.velocity.Y > 0f && y133 > 0f || this.velocity.Y < 0f && y133 < 0f))
							{
								if (this.velocity.X < x134)
								{
									this.velocity.X = this.velocity.X + single287;
								}
								else if (this.velocity.X > x134)
								{
									this.velocity.X = this.velocity.X - single287;
								}
								if (this.velocity.Y < y133)
								{
									this.velocity.Y = this.velocity.Y + single287;
								}
								else if (this.velocity.Y > y133)
								{
									this.velocity.Y = this.velocity.Y - single287;
								}
							}
							if (this.velocity.X > 0f && x134 > 0f || this.velocity.X < 0f && x134 < 0f || this.velocity.Y > 0f && y133 > 0f || this.velocity.Y < 0f && y133 < 0f)
							{
								if (this.velocity.X < x134)
								{
									this.velocity.X = this.velocity.X + single286;
								}
								else if (this.velocity.X > x134)
								{
									this.velocity.X = this.velocity.X - single286;
								}
								if (this.velocity.Y < y133)
								{
									this.velocity.Y = this.velocity.Y + single286;
								}
								else if (this.velocity.Y > y133)
								{
									this.velocity.Y = this.velocity.Y - single286;
								}
								if ((double)Math.Abs(y133) < (double)single285 * 0.2 && (this.velocity.X > 0f && x134 < 0f || this.velocity.X < 0f && x134 > 0f))
								{
									if (this.velocity.Y <= 0f)
									{
										this.velocity.Y = this.velocity.Y - single286 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + single286 * 2f;
									}
								}
								if ((double)Math.Abs(x134) < (double)single285 * 0.2 && (this.velocity.Y > 0f && y133 < 0f || this.velocity.Y < 0f && y133 > 0f))
								{
									if (this.velocity.X <= 0f)
									{
										this.velocity.X = this.velocity.X - single286 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X + single286 * 2f;
									}
								}
							}
							else if (single290 <= single291)
							{
								if (this.velocity.Y < y133)
								{
									this.velocity.Y = this.velocity.Y + single286 * 1.1f;
								}
								else if (this.velocity.Y > y133)
								{
									this.velocity.Y = this.velocity.Y - single286 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)single285 * 0.5)
								{
									if (this.velocity.X <= 0f)
									{
										this.velocity.X = this.velocity.X - single286;
									}
									else
									{
										this.velocity.X = this.velocity.X + single286;
									}
								}
							}
							else
							{
								if (this.velocity.X < x134)
								{
									this.velocity.X = this.velocity.X + single286 * 1.1f;
								}
								else if (this.velocity.X > x134)
								{
									this.velocity.X = this.velocity.X - single286 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)single285 * 0.5)
								{
									if (this.velocity.Y <= 0f)
									{
										this.velocity.Y = this.velocity.Y - single286;
									}
									else
									{
										this.velocity.Y = this.velocity.Y + single286;
									}
								}
							}
						}
						else
						{
							this.TargetClosest(true);
							this.velocity.Y = this.velocity.Y + 0.15f;
							if (this.velocity.Y > single285)
							{
								this.velocity.Y = single285;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)single285 * 0.4)
							{
								if (this.velocity.X >= 0f)
								{
									this.velocity.X = this.velocity.X + single286 * 1.1f;
								}
								else
								{
									this.velocity.X = this.velocity.X - single286 * 1.1f;
								}
							}
							else if (this.velocity.Y != single285)
							{
								if (this.velocity.Y > 4f)
								{
									if (this.velocity.X >= 0f)
									{
										this.velocity.X = this.velocity.X - single286 * 0.9f;
									}
									else
									{
										this.velocity.X = this.velocity.X + single286 * 0.9f;
									}
								}
							}
							else if (this.velocity.X < x134)
							{
								this.velocity.X = this.velocity.X + single286;
							}
							else if (this.velocity.X > x134)
							{
								this.velocity.X = this.velocity.X - single286;
							}
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						if (this.type == 134)
						{
							if (!flag95)
							{
								if (this.localAI[0] != 0f)
								{
									this.netUpdate = true;
								}
								this.localAI[0] = 0f;
							}
							else
							{
								if (this.localAI[0] != 1f)
								{
									this.netUpdate = true;
								}
								this.localAI[0] = 1f;
							}
							if ((this.velocity.X > 0f && this.oldVelocity.X < 0f || this.velocity.X < 0f && this.oldVelocity.X > 0f || this.velocity.Y > 0f && this.oldVelocity.Y < 0f || this.velocity.Y < 0f && this.oldVelocity.Y > 0f) && !this.justHit)
							{
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.aiStyle == 38)
					{
						float single293 = 4f;
						float single294 = 1f;
						if (this.type == 143)
						{
							single293 = 3f;
							single294 = 0.7f;
						}
						if (this.type == 145)
						{
							single293 = 3.5f;
							single294 = 0.8f;
						}
						if (this.type == 143)
						{
							this.ai[2] = this.ai[2] + 1f;
							if (this.ai[2] >= 120f)
							{
								this.ai[2] = 0f;
								if (Main.netMode != 1)
								{
									Vector2 vector2139 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.5f);
									float single295 = (float)(12 * this.spriteDirection);
									float single296 = 0f;
									if (Main.netMode != 1)
									{
										int num468 = 25;
										int num469 = 110;
										int num470 = Projectile.NewProjectile(vector2139.X, vector2139.Y, single295, single296, num469, num468, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num470].ai[0] = 2f;
										Main.projectile[num470].timeLeft = 300;
										Main.projectile[num470].friendly = false;
										NetMessage.SendData(27, -1, -1, "", num470, 0f, 0f, 0f, 0, 0, 0);
										this.netUpdate = true;
									}
								}
							}
						}
						if (this.type == 144 && this.ai[1] >= 3f)
						{
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.ai[2] = this.ai[2] + 1f;
								if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[2] >= 200f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
							}
						}
						else if (this.type != 145 || this.ai[1] < 3f)
						{
							if (this.velocity.Y == 0f)
							{
								if (this.localAI[2] == this.position.X)
								{
									NPC nPC135 = this;
									nPC135.direction = nPC135.direction * -1;
									this.ai[3] = 60f;
								}
								this.localAI[2] = this.position.X;
								if (this.ai[3] == 0f)
								{
									this.TargetClosest(true);
								}
								this.ai[0] = this.ai[0] + 1f;
								if (this.ai[0] <= 2f)
								{
									this.velocity.Y = -6f;
									this.velocity.X = this.velocity.X + (float)this.direction * single294 * 0.9f;
								}
								else
								{
									this.ai[0] = 0f;
									this.ai[1] = this.ai[1] + 1f;
									this.velocity.Y = -8.2f;
									this.velocity.X = this.velocity.X + (float)this.direction * single294 * 1.1f;
								}
								this.spriteDirection = this.direction;
							}
							this.velocity.X = this.velocity.X + (float)this.direction * single294 * 0.01f;
						}
						else
						{
							this.TargetClosest(true);
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.ai[2] = this.ai[2] + 1f;
								if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
								{
									this.velocity.X = 0f;
								}
								if (this.ai[2] >= 16f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 0f;
								}
							}
							if (this.velocity.X == 0f && this.velocity.Y == 0f && this.ai[2] == 8f)
							{
								float single297 = 10f;
								Vector2 vector2140 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.25f);
								float x135 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2140.X;
								float y134 = Main.player[this.target].position.Y - vector2140.Y;
								float single298 = (float)Math.Sqrt((double)(x135 * x135 + y134 * y134));
								single298 = single297 / single298;
								x135 = x135 * single298;
								y134 = y134 * single298;
								if (Main.netMode != 1)
								{
									int num471 = 35;
									int num472 = 109;
									int num473 = Projectile.NewProjectile(vector2140.X, vector2140.Y, x135, y134, num472, num471, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num473].ai[0] = 2f;
									Main.projectile[num473].timeLeft = 300;
									Main.projectile[num473].friendly = false;
									NetMessage.SendData(27, -1, -1, "", num473, 0f, 0f, 0f, 0, 0, 0);
									this.netUpdate = true;
								}
							}
						}
						if (this.ai[3] > 0f)
						{
							this.ai[3] = this.ai[3] - 1f;
						}
						if (this.velocity.X > single293 && this.direction > 0)
						{
							this.velocity.X = 4f;
						}
						if (this.velocity.X < -single293 && this.direction < 0)
						{
							this.velocity.X = -4f;
							return;
						}
					}
					else if (this.aiStyle == 39)
					{
						if (this.target < 0 || Main.player[this.target].dead || this.direction == 0)
						{
							this.TargetClosest(true);
						}
						bool flag97 = true;
						int num474 = 0;
						if (this.velocity.X < 0f)
						{
							num474 = -1;
						}
						if (this.velocity.X > 0f)
						{
							num474 = 1;
						}
						Vector2 x136 = this.position;
						x136.X = x136.X + this.velocity.X;
						int x137 = (int)((x136.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num474)) / 16f);
						int y135 = (int)((x136.Y + (float)this.height - 1f) / 16f);
						if ((float)(x137 * 16) < x136.X + (float)this.width && (float)(x137 * 16 + 16) > x136.X && (Main.tile[x137, y135].nactive() && !Main.tile[x137, y135].topSlope() && !Main.tile[x137, y135 - 1].topSlope() && (Main.tileSolid[Main.tile[x137, y135].type] && !Main.tileSolidTop[Main.tile[x137, y135].type] || flag97 && Main.tileSolidTop[Main.tile[x137, y135].type] && (!Main.tileSolid[Main.tile[x137, y135 - 1].type] || !Main.tile[x137, y135 - 1].nactive()) && Main.tile[x137, y135].type != 16 && Main.tile[x137, y135].type != 18 && Main.tile[x137, y135].type != 134) || Main.tile[x137, y135 - 1].halfBrick() && Main.tile[x137, y135 - 1].nactive()) && (!Main.tile[x137, y135 - 1].nactive() || !Main.tileSolid[Main.tile[x137, y135 - 1].type] || Main.tileSolidTop[Main.tile[x137, y135 - 1].type] || Main.tile[x137, y135 - 1].halfBrick() && (!Main.tile[x137, y135 - 4].nactive() || !Main.tileSolid[Main.tile[x137, y135 - 4].type] || Main.tileSolidTop[Main.tile[x137, y135 - 4].type])) && (!Main.tile[x137, y135 - 2].nactive() || !Main.tileSolid[Main.tile[x137, y135 - 2].type] || Main.tileSolidTop[Main.tile[x137, y135 - 2].type]) && (!Main.tile[x137, y135 - 3].nactive() || !Main.tileSolid[Main.tile[x137, y135 - 3].type] || Main.tileSolidTop[Main.tile[x137, y135 - 3].type]) && (!Main.tile[x137 - num474, y135 - 3].nactive() || !Main.tileSolid[Main.tile[x137 - num474, y135 - 3].type] || Main.tileSolidTop[Main.tile[x137 - num474, y135 - 3].type]))
						{
							float single299 = (float)(y135 * 16);
							if (Main.tile[x137, y135].halfBrick())
							{
								single299 = single299 + 8f;
							}
							if (Main.tile[x137, y135 - 1].halfBrick())
							{
								single299 = single299 - 8f;
							}
							if (single299 < x136.Y + (float)this.height)
							{
								float y136 = x136.Y + (float)this.height - single299;
								if ((double)y136 <= 16.1)
								{
									NPC nPC136 = this;
									nPC136.gfxOffY = nPC136.gfxOffY + (this.position.Y + (float)this.height - single299);
									this.position.Y = single299 - (float)this.height;
									if (y136 >= 9f)
									{
										this.stepSpeed = 1.5f;
									}
									else
									{
										this.stepSpeed = 0.75f;
									}
								}
							}
						}
						if (this.justHit && this.type != 417)
						{
							this.ai[0] = 0f;
							this.ai[1] = 0f;
							this.TargetClosest(true);
						}
						if (this.type == 154 && Main.rand.Next(10) == 0)
						{
							Vector2 vector2141 = new Vector2(this.position.X, this.position.Y);
							int num475 = this.width;
							int num476 = this.height;
							skyBlue = new Color();
							int num477 = Dust.NewDust(vector2141, num475, num476, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 1.5f);
							Main.dust[num477].noGravity = true;
							Dust dust48 = Main.dust[num477];
							dust48.velocity = dust48.velocity * 0.2f;
						}
						if (this.ai[0] == 0f)
						{
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							else if (this.velocity.X > 0f)
							{
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
							Vector2 vector2142 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x138 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2142.X;
							float y137 = Main.player[this.target].position.Y - vector2142.Y;
							float single300 = (float)Math.Sqrt((double)(x138 * x138 + y137 * y137));
							bool flag98 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
							if (this.type < 496 || this.type > 497)
							{
								if (single300 > 200f && flag98)
								{
									this.ai[1] = this.ai[1] + 4f;
								}
								if (single300 > 600f && (flag98 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] = this.ai[1] + 10f;
								}
								if (this.wet)
								{
									this.ai[1] = 1000f;
								}
							}
							else
							{
								if (single300 > 200f && flag98)
								{
									this.ai[1] = this.ai[1] + 2f;
								}
								if (single300 > 600f && (flag98 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] = this.ai[1] + 4f;
								}
							}
							this.defense = this.defDefense;
							this.damage = this.defDamage;
							if (this.type < 496 || this.type > 497)
							{
								this.knockBackResist = 0.3f * Main.knockBackMultiplier;
							}
							else
							{
								this.knockBackResist = 0.75f * Main.knockBackMultiplier;
							}
							this.ai[1] = this.ai[1] + 1f;
							if (this.ai[1] >= 400f)
							{
								this.ai[1] = 0f;
								this.ai[0] = 1f;
							}
							if (!this.justHit && this.velocity.X != this.oldVelocity.X)
							{
								NPC nPC137 = this;
								nPC137.direction = nPC137.direction * -1;
							}
							if (this.velocity.Y == 0f && Main.player[this.target].position.Y < this.position.Y + (float)this.height)
							{
								if (this.direction <= 0)
								{
									x1 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16);
									x = x1 - 3;
								}
								else
								{
									x = (int)(((double)this.position.X + (double)this.width * 0.5) / 16);
									x1 = x + 3;
								}
								int y138 = (int)((this.position.Y + (float)this.height + 2f) / 16f) - 1;
								int num478 = y138 + 4;
								bool flag99 = false;
								for (int b3 = x; b3 <= x1; b3++)
								{
									for (int c3 = y138; c3 <= num478; c3++)
									{
										if (Main.tile[b3, c3] != null && Main.tile[b3, c3].nactive() && Main.tileSolid[Main.tile[b3, c3].type])
										{
											flag99 = true;
										}
									}
								}
								if (!flag99)
								{
									NPC nPC138 = this;
									nPC138.direction = nPC138.direction * -1;
									this.velocity.X = 0.1f * (float)this.direction;
								}
							}
							if (this.type < 496 || this.type > 497)
							{
								float single301 = 1f;
								if (single300 < 400f)
								{
									if (this.velocity.X < -single301 || this.velocity.X > single301)
									{
										if (this.velocity.Y == 0f)
										{
											NPC nPC139 = this;
											nPC139.velocity = nPC139.velocity * 0.8f;
											return;
										}
									}
									else if (this.velocity.X < single301 && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > single301)
										{
											this.velocity.X = single301;
											return;
										}
									}
									else if (this.velocity.X > -single301 && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -single301)
										{
											this.velocity.X = -single301;
											return;
										}
									}
								}
								else if (this.velocity.X < -1.5f || this.velocity.X > 1.5f)
								{
									if (this.velocity.Y == 0f)
									{
										NPC nPC140 = this;
										nPC140.velocity = nPC140.velocity * 0.8f;
										return;
									}
								}
								else if (this.velocity.X < 1.5f && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > 1.5f)
									{
										this.velocity.X = 1.5f;
										return;
									}
								}
								else if (this.velocity.X > -1.5f && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -1.5f)
									{
										this.velocity.X = -1.5f;
										return;
									}
								}
							}
							else
							{
								float single302 = 0.5f;
								if (this.velocity.X < -single302 || this.velocity.X > single302)
								{
									if (this.velocity.Y == 0f)
									{
										NPC nPC141 = this;
										nPC141.velocity = nPC141.velocity * 0.8f;
										return;
									}
								}
								else if (this.velocity.X < single302 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > single302)
									{
										this.velocity.X = single302;
										return;
									}
								}
								else if (this.velocity.X > -single302 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -single302)
									{
										this.velocity.X = -single302;
										return;
									}
								}
							}
						}
						else if (this.ai[0] != 1f)
						{
							if (this.ai[0] == 3f)
							{
								if (this.type == 154 && Main.rand.Next(3) < 2)
								{
									Vector2 vector2143 = new Vector2(this.position.X, this.position.Y);
									int num479 = this.width;
									int num480 = this.height;
									skyBlue = new Color();
									int num481 = Dust.NewDust(vector2143, num479, num480, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 1.5f);
									Main.dust[num481].noGravity = true;
									Dust dust49 = Main.dust[num481];
									dust49.velocity = dust49.velocity * 0.2f;
								}
								if (Main.expertMode)
								{
									if (this.type < 496 || this.type > 497)
									{
										this.damage = (int)((double)(this.defDamage * 2) * 0.9);
									}
									else
									{
										this.damage = (int)((double)this.defDamage * 1.5 * 0.9);
									}
								}
								else if (this.type < 496 || this.type > 497)
								{
									this.damage = this.defDamage * 2;
								}
								else
								{
									this.damage = (int)((double)this.defDamage * 1.5);
								}
								this.defense = this.defDefense * 2;
								this.ai[1] = this.ai[1] + 1f;
								if (this.ai[1] != 1f)
								{
									if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
									{
										this.velocity.X = this.velocity.X * 0.8f;
										this.ai[3] = 0f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y + 0.2f;
										}
									}
									if (this.ai[3] != 0f)
									{
										this.velocity.X = this.ai[3];
										this.velocity.Y = this.velocity.Y - 0.22f;
									}
									if (this.ai[1] >= 90f)
									{
										this.noGravity = false;
										this.ai[1] = 0f;
										this.ai[0] = 4f;
									}
								}
								else
								{
									this.netUpdate = true;
									this.TargetClosest(true);
									this.ai[2] = this.ai[2] + 0.3f;
									NPC nPC142 = this;
									nPC142.rotation = nPC142.rotation + this.ai[2] * (float)this.direction;
									this.ai[1] = this.ai[1] + 1f;
									bool flag100 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
									float single303 = 10f;
									if (!flag100)
									{
										single303 = 6f;
									}
									if (this.type >= 496 && this.type <= 497)
									{
										single303 = single303 * 0.75f;
									}
									Vector2 vector2144 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float x139 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2144.X;
									float single304 = Math.Abs(x139) * 0.2f;
									if (this.directionY > 0)
									{
										single304 = 0f;
									}
									float y139 = Main.player[this.target].position.Y - vector2144.Y - single304;
									float single305 = (float)Math.Sqrt((double)(x139 * x139 + y139 * y139));
									this.netUpdate = true;
									single305 = single303 / single305;
									x139 = x139 * single305;
									y139 = y139 * single305;
									if (!flag100)
									{
										y139 = -10f;
									}
									this.velocity.X = x139;
									this.velocity.Y = y139;
									this.ai[3] = this.velocity.X;
								}
								if (this.wet && this.directionY < 0)
								{
									this.velocity.Y = this.velocity.Y - 0.3f;
								}
								NPC nPC143 = this;
								nPC143.rotation = nPC143.rotation + this.ai[2] * (float)this.direction;
								return;
							}
							if (this.ai[0] != 4f)
							{
								if (this.ai[0] == 6f)
								{
									this.damage = (int)((float)(this.defDamage * 2) * Main.damageMultiplier);
									this.defense = this.defDefense * 2;
									this.knockBackResist = 0f;
									if (Main.rand.Next(3) < 2)
									{
										Vector2 center29 = base.Center - new Vector2(30f);
										skyBlue = new Color();
										int num482 = Dust.NewDust(center29, 60, 60, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 1.5f);
										Main.dust[num482].noGravity = true;
										Dust dust50 = Main.dust[num482];
										dust50.velocity = dust50.velocity * 0.2f;
										Main.dust[num482].fadeIn = 1f;
									}
									this.ai[1] = this.ai[1] + 1f;
									if (this.ai[3] > 0f)
									{
										if (this.ai[3] == 1f)
										{
											Vector2 center30 = base.Center - new Vector2(50f);
											for (int d3 = 0; d3 < 32; d3++)
											{
												skyBlue = new Color();
												int num483 = Dust.NewDust(center30, 100, 100, 6, 0f, 0f, 100, skyBlue, 2.5f);
												Main.dust[num483].noGravity = true;
												Dust dust51 = Main.dust[num483];
												dust51.velocity = dust51.velocity * 3f;
												skyBlue = new Color();
												num483 = Dust.NewDust(center30, 100, 100, 6, 0f, 0f, 100, skyBlue, 1.5f);
												Dust dust52 = Main.dust[num483];
												dust52.velocity = dust52.velocity * 2f;
												Main.dust[num483].noGravity = true;
											}
											for (int e3 = 0; e3 < 4; e3++)
											{
												Vector2 vector2145 = (center30 + new Vector2((float)(50 * Main.rand.Next(100)) / 100f, (float)(50 * Main.rand.Next(100)) / 100f)) - (Vector2.One * 10f);
												vector24 = new Vector2();
												int num484 = Gore.NewGore(vector2145, vector24, Main.rand.Next(61, 64), 1f);
												Gore gore = Main.gore[num484];
												gore.velocity = gore.velocity * 0.3f;
												Main.gore[num484].velocity.X = Main.gore[num484].velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
												Main.gore[num484].velocity.Y = Main.gore[num484].velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
											}
										}
										for (int f3 = 0; f3 < 5; f3++)
										{
											Vector2 vector2146 = this.position;
											int num485 = this.width;
											int num486 = this.height;
											skyBlue = new Color();
											int num487 = Dust.NewDust(vector2146, num485, num486, 31, 0f, 0f, 100, skyBlue, 1.5f);
											Main.dust[num487].velocity = Main.dust[num487].velocity * Main.rand.NextFloat();
										}
										this.ai[3] = this.ai[3] + 1f;
										if (this.ai[3] >= 10f)
										{
											this.ai[3] = 0f;
										}
									}
									if (this.ai[1] != 1f)
									{
										if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
										{
											this.velocity.X = this.velocity.X * 0.9f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
										}
										if (this.ai[2] == 0f || this.ai[1] >= 1200f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 5f;
										}
									}
									else
									{
										this.netUpdate = true;
										this.TargetClosest(true);
										bool flag101 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										float single306 = 16f;
										if (!flag101)
										{
											single306 = 10f;
										}
										Vector2 vector2147 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float x140 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2147.X;
										float single307 = Math.Abs(x140) * 0.2f;
										if (this.directionY > 0)
										{
											single307 = 0f;
										}
										float y140 = Main.player[this.target].position.Y - vector2147.Y - single307;
										float single308 = (float)Math.Sqrt((double)(x140 * x140 + y140 * y140));
										this.netUpdate = true;
										single308 = single306 / single308;
										x140 = x140 * single308;
										y140 = y140 * single308;
										if (!flag101)
										{
											y140 = -12f;
										}
										this.velocity.X = x140;
										this.velocity.Y = y140;
									}
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									NPC nPC144 = this;
									nPC144.rotation = nPC144.rotation + MathHelper.Clamp(this.velocity.X / 10f * (float)this.direction, -0.314159274f, 0.314159274f);
									return;
								}
								if (this.ai[0] == 5f)
								{
									this.rotation = 0f;
									this.velocity.X = 0f;
									if (this.type < 496 || this.type > 497)
									{
										this.ai[1] = this.ai[1] + 1f;
									}
									else
									{
										this.ai[1] = this.ai[1] + 0.5f;
									}
									if (this.ai[1] >= 30f)
									{
										this.TargetClosest(true);
										this.netUpdate = true;
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
									if (this.wet)
									{
										this.ai[0] = 3f;
										this.ai[1] = 0f;
										return;
									}
								}
							}
							else
							{
								if (this.wet && this.directionY < 0)
								{
									this.velocity.Y = this.velocity.Y - 0.3f;
								}
								this.velocity.X = this.velocity.X * 0.96f;
								if (this.ai[2] > 0f)
								{
									this.ai[2] = this.ai[2] - 0.01f;
									NPC nPC145 = this;
									nPC145.rotation = nPC145.rotation + this.ai[2] * (float)this.direction;
								}
								else if (this.velocity.Y >= 0f)
								{
									this.rotation = 0f;
								}
								if (this.ai[2] <= 0f && (this.velocity.Y == 0f || this.wet))
								{
									this.netUpdate = true;
									this.rotation = 0f;
									this.ai[2] = 0f;
									this.ai[1] = 0f;
									this.ai[0] = 5f;
									return;
								}
							}
						}
						else
						{
							this.velocity.X = this.velocity.X * 0.5f;
							if (this.type < 496 || this.type > 497)
							{
								this.ai[1] = this.ai[1] + 1f;
							}
							else
							{
								this.ai[1] = this.ai[1] + 0.5f;
							}
							if (this.ai[1] >= 30f)
							{
								this.netUpdate = true;
								this.TargetClosest(true);
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.ai[0] = 3f;
								if (this.type == 417)
								{
									this.ai[0] = 6f;
									this.ai[2] = (float)Main.rand.Next(2, 5);
									return;
								}
							}
						}
					}
					else if (this.aiStyle == 40)
					{
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						float single309 = 2f;
						float single310 = 0.08f;
						if (this.type == 531)
						{
							single309 = 4f;
							single310 = 0.16f;
						}
						Vector2 x141 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float x142 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
						float y141 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
						x142 = (float)((int)(x142 / 8f) * 8);
						y141 = (float)((int)(y141 / 8f) * 8);
						x141.X = (float)((int)(x141.X / 8f) * 8);
						x141.Y = (float)((int)(x141.Y / 8f) * 8);
						x142 = x142 - x141.X;
						y141 = y141 - x141.Y;
						float single311 = (float)Math.Sqrt((double)(x142 * x142 + y141 * y141));
						if (single311 != 0f)
						{
							single311 = single309 / single311;
							x142 = x142 * single311;
							y141 = y141 * single311;
						}
						else
						{
							x142 = this.velocity.X;
							y141 = this.velocity.Y;
						}
						if (Main.player[this.target].dead)
						{
							x142 = (float)this.direction * single309 / 2f;
							y141 = -single309 / 2f;
						}
						this.spriteDirection = -1;
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							if (this.velocity.X < x142)
							{
								this.velocity.X = this.velocity.X + single310;
								if (this.velocity.X < 0f && x142 > 0f)
								{
									this.velocity.X = this.velocity.X + single310;
								}
							}
							else if (this.velocity.X > x142)
							{
								this.velocity.X = this.velocity.X - single310;
								if (this.velocity.X > 0f && x142 < 0f)
								{
									this.velocity.X = this.velocity.X - single310;
								}
							}
							if (this.velocity.Y < y141)
							{
								this.velocity.Y = this.velocity.Y + single310;
								if (this.velocity.Y < 0f && y141 > 0f)
								{
									this.velocity.Y = this.velocity.Y + single310;
								}
							}
							else if (this.velocity.Y > y141)
							{
								this.velocity.Y = this.velocity.Y - single310;
								if (this.velocity.Y > 0f && y141 < 0f)
								{
									this.velocity.Y = this.velocity.Y - single310;
								}
							}
							this.rotation = (float)Math.Atan2((double)y141, (double)x142);
						}
						else
						{
							this.ai[0] = this.ai[0] + 1f;
							if (this.ai[0] <= 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.023f;
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.023f;
							}
							if (this.ai[0] < -100f || this.ai[0] > 100f)
							{
								this.velocity.X = this.velocity.X + 0.023f;
							}
							else
							{
								this.velocity.X = this.velocity.X - 0.023f;
							}
							if (this.ai[0] > 200f)
							{
								this.ai[0] = -200f;
							}
							this.velocity.X = this.velocity.X + x142 * 0.007f;
							this.velocity.Y = this.velocity.Y + y141 * 0.007f;
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
							if ((double)this.velocity.X > 1.5)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if ((double)this.velocity.X < -1.5)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y * 0.9f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y * 0.9f;
							}
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							if (this.velocity.Y > 3f)
							{
								this.velocity.Y = 3f;
							}
							if (this.velocity.Y < -3f)
							{
								this.velocity.Y = -3f;
							}
						}
						if (this.type == 531)
						{
							NPC nPC146 = this;
							nPC146.rotation = nPC146.rotation + 1.57079637f;
						}
						float single312 = 0.5f;
						if (this.collideX)
						{
							this.netUpdate = true;
							this.velocity.X = this.oldVelocity.X * -single312;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
							{
								this.velocity.X = 2f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
							{
								this.velocity.X = -2f;
							}
						}
						if (this.collideY)
						{
							this.netUpdate = true;
							this.velocity.Y = this.oldVelocity.Y * -single312;
							if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = 2f;
							}
							if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = -2f;
							}
						}
						if ((this.velocity.X > 0f && this.oldVelocity.X < 0f || this.velocity.X < 0f && this.oldVelocity.X > 0f || this.velocity.Y > 0f && this.oldVelocity.Y < 0f || this.velocity.Y < 0f && this.oldVelocity.Y > 0f) && !this.justHit)
						{
							this.netUpdate = true;
						}
						if (Main.netMode != 1)
						{
							if (Main.netMode != 1 && Main.expertMode && this.target >= 0 && (this.type == 163 || this.type == 238) && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.localAI[0] = this.localAI[0] + 1f;
								if (this.justHit)
								{
									this.localAI[0] = this.localAI[0] - (float)Main.rand.Next(20, 60);
									if (this.localAI[0] < 0f)
									{
										this.localAI[0] = 0f;
									}
								}
								if (this.localAI[0] > (float)Main.rand.Next(180, 900))
								{
									this.localAI[0] = 0f;
									Vector2 center31 = Main.player[this.target].Center - base.Center;
									center31.Normalize();
									center31 = center31 * 8f;
									Projectile.NewProjectile(base.Center.X, base.Center.Y, center31.X, center31.Y, 472, 18, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							int x143 = (int)base.Center.X / 16;
							int y142 = (int)base.Center.Y / 16;
							bool flag102 = false;
							for (int g3 = x143 - 1; g3 <= x143 + 1; g3++)
							{
								for (int h3 = y142 - 1; h3 <= y142 + 1; h3++)
								{
									if (Main.tile[g3, h3] == null)
									{
										return;
									}
									if (Main.tile[g3, h3].wall > 0)
									{
										flag102 = true;
									}
								}
							}
							if (!flag102)
							{
								if (this.type == 237)
								{
									this.Transform(236);
									return;
								}
								if (this.type == 238)
								{
									this.Transform(163);
									return;
								}
								if (this.type == 240)
								{
									this.Transform(239);
									return;
								}
								if (this.type == 531)
								{
									this.Transform(530);
									return;
								}
								this.Transform(164);
								return;
							}
						}
					}
					else if (this.aiStyle == 41)
					{
						if (this.ai[2] > 1f)
						{
							this.ai[2] = this.ai[2] - 1f;
						}
						if (this.ai[2] == 0f)
						{
							this.ai[0] = -100f;
							this.ai[2] = 1f;
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
						}
						if (this.type == 378)
						{
							Vector2 vector2148 = new Vector2(-6f, -10f);
							if (this.ai[1] != 5f && Main.rand.Next(3) == 0)
							{
								Vector2 center32 = (base.Center + vector2148) - (Vector2.One * 5f);
								skyBlue = new Color();
								int num488 = Dust.NewDust(center32, 4, 4, 6, 0f, 0f, 0, skyBlue, 1f);
								Main.dust[num488].scale = 1.5f;
								Main.dust[num488].noGravity = true;
								Main.dust[num488].velocity = (Main.dust[num488].velocity * 0.25f) + (Vector2.Normalize(vector2148) * 1f);
								Dust dust53 = Main.dust[num488];
								Vector2 vector2149 = Main.dust[num488].velocity;
								double num489 = (double)(-1.57079637f * (float)this.direction);
								vector24 = new Vector2();
								dust53.velocity = vector2149.RotatedBy(num489, vector24);
							}
							if (this.ai[1] == 5f)
							{
								this.velocity = Vector2.Zero;
								this.position.X = this.position.X + (float)(this.width / 2);
								this.position.Y = this.position.Y + (float)(this.height / 2);
								this.width = 160;
								this.height = 160;
								this.position.X = this.position.X - (float)(this.width / 2);
								this.position.Y = this.position.Y - (float)(this.height / 2);
								this.dontTakeDamage = true;
								for (int i4 = 0; i4 < 8; i4++)
								{
									Vector2 vector2150 = new Vector2(this.position.X, this.position.Y);
									int num490 = this.width;
									int num491 = this.height;
									skyBlue = new Color();
									Dust.NewDust(vector2150, num490, num491, 31, 0f, 0f, 100, skyBlue, 1.5f);
								}
								for (int j4 = 0; j4 < 32; j4++)
								{
									Vector2 vector2151 = new Vector2(this.position.X, this.position.Y);
									int num492 = this.width;
									int num493 = this.height;
									skyBlue = new Color();
									int num494 = Dust.NewDust(vector2151, num492, num493, 6, 0f, 0f, 100, skyBlue, 2.5f);
									Main.dust[num494].noGravity = true;
									Dust dust54 = Main.dust[num494];
									dust54.velocity = dust54.velocity * 3f;
									Vector2 vector2152 = new Vector2(this.position.X, this.position.Y);
									int num495 = this.width;
									int num496 = this.height;
									skyBlue = new Color();
									num494 = Dust.NewDust(vector2152, num495, num496, 6, 0f, 0f, 100, skyBlue, 1.5f);
									Dust dust55 = Main.dust[num494];
									dust55.velocity = dust55.velocity * 2f;
									Main.dust[num494].noGravity = true;
								}
								for (int k4 = 0; k4 < 2; k4++)
								{
									Vector2 vector2153 = (this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f)) - (Vector2.One * 10f);
									vector24 = new Vector2();
									int num497 = Gore.NewGore(vector2153, vector24, Main.rand.Next(61, 64), 1f);
									Gore gore1 = Main.gore[num497];
									gore1.velocity = gore1.velocity * 0.3f;
									Main.gore[num497].velocity.X = Main.gore[num497].velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
									Main.gore[num497].velocity.Y = Main.gore[num497].velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
								}
								if (this.ai[2] == 1f)
								{
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
									this.life = -1;
									this.HitEffect(0, 10);
									this.active = false;
								}
								return;
							}
						}
						if (this.type == 378 && this.ai[1] != 5f)
						{
							if (this.wet || Vector2.Distance(base.Center, Main.player[this.target].Center) < 64f)
							{
								this.ai[1] = 5f;
								this.ai[2] = 3f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.wet && this.type != 177)
						{
							if (this.collideX)
							{
								NPC nPC147 = this;
								nPC147.direction = nPC147.direction * -this.direction;
								this.spriteDirection = this.direction;
							}
							if (this.collideY)
							{
								this.TargetClosest(true);
								if (this.oldVelocity.Y >= 0f)
								{
									this.velocity.Y = this.velocity.Y - 2f;
								}
								else
								{
									this.velocity.Y = 5f;
								}
								this.spriteDirection = this.direction;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.3f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						if (this.velocity.Y == 0f)
						{
							if (this.ai[3] == this.position.X)
							{
								NPC nPC148 = this;
								nPC148.direction = nPC148.direction * -1;
								this.ai[2] = 300f;
							}
							this.ai[3] = 0f;
							this.velocity.X = this.velocity.X * 0.8f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if (this.type != 177)
							{
								this.ai[0] = this.ai[0] + 5f;
							}
							else
							{
								this.ai[0] = this.ai[0] + 2f;
							}
							Vector2 vector2154 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x144 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2154.X;
							float y143 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2154.Y;
							float single313 = (float)Math.Sqrt((double)(x144 * x144 + y143 * y143));
							float single314 = 400f / single313;
							single314 = (this.type != 177 ? single314 * 10f : single314 * 5f);
							if (single314 > 30f)
							{
								single314 = 30f;
							}
							this.ai[0] = this.ai[0] + (float)((int)single314);
							if (this.ai[0] >= 0f)
							{
								this.netUpdate = true;
								if (this.ai[2] == 1f)
								{
									this.TargetClosest(true);
								}
								if (this.type == 177)
								{
									if (this.ai[1] != 2f)
									{
										this.velocity.Y = -7.5f;
										this.velocity.X = this.velocity.X + (float)(4 * this.direction);
										if (single313 < 350f && single313 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -120f;
										this.ai[1] = this.ai[1] + 1f;
									}
									else
									{
										this.velocity.Y = -11.5f;
										this.velocity.X = this.velocity.X + 2f * (float)this.direction;
										if (single313 < 350f && single313 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -200f;
										this.ai[1] = 0f;
										this.ai[3] = this.position.X;
									}
								}
								else if (this.ai[1] != 3f)
								{
									this.velocity.Y = -5f;
									this.velocity.X = this.velocity.X + (float)(5 * this.direction);
									if (single313 < 350f && single313 > 200f)
									{
										this.velocity.X = this.velocity.X + (float)this.direction;
									}
									this.ai[0] = -120f;
									this.ai[1] = this.ai[1] + 1f;
								}
								else
								{
									this.velocity.Y = -9f;
									this.velocity.X = this.velocity.X + (float)(3 * this.direction);
									if (single313 < 350f && single313 > 200f)
									{
										this.velocity.X = this.velocity.X + (float)this.direction;
									}
									this.ai[0] = -200f;
									this.ai[1] = 0f;
									this.ai[3] = this.position.X;
								}
							}
							else if (this.ai[0] >= -30f)
							{
								this.aiAction = 1;
							}
							this.spriteDirection = this.direction;
							return;
						}
						if (this.target < 255)
						{
							if (this.type == 177)
							{
								bool flag103 = false;
								if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									flag103 = true;
									this.velocity.X = this.velocity.X * 0.92f;
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
										this.velocity.Y = this.velocity.Y + 0.1f;
									}
								}
								if (!flag103 && (this.direction == 1 && this.velocity.X < 4f || this.direction == -1 && this.velocity.X > -4f))
								{
									if ((this.direction != -1 || (double)this.velocity.X >= 0.1) && (this.direction != 1 || (double)this.velocity.X <= -0.1))
									{
										this.velocity.X = this.velocity.X * 0.93f;
										return;
									}
									this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
									return;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 3f || this.direction == -1 && this.velocity.X > -3f)
							{
								if ((this.direction != -1 || (double)this.velocity.X >= 0.1) && (this.direction != 1 || (double)this.velocity.X <= -0.1))
								{
									this.velocity.X = this.velocity.X * 0.93f;
									return;
								}
								this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
								return;
							}
						}
					}
					else if (this.aiStyle == 42)
					{
						this.TargetClosest(true);
						if (this.ai[0] != 0f)
						{
							this.ai[0] = this.ai[0] + 1f;
							if (this.ai[0] >= 21f)
							{
								this.ai[0] = 21f;
								this.Transform(196);
								return;
							}
						}
						else
						{
							if (this.target >= 0)
							{
								Vector2 vector2155 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float x145 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2155.X;
								float y144 = Main.player[this.target].position.Y - vector2155.Y;
								if ((float)Math.Sqrt((double)(x145 * x145 + y144 * y144)) < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.ai[0] = 1f;
								}
							}
							if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.life != this.lifeMax)
							{
								this.ai[0] = 1f;
								return;
							}
						}
					}
					else if (this.aiStyle == 43)
					{
						int num498 = 0;
						for (int l4 = 0; l4 < 255; l4++)
						{
							if (Main.player[l4].active && !Main.player[l4].dead && (base.Center - Main.player[l4].Center).Length() < 1000f)
							{
								num498++;
							}
						}
						if (Main.expertMode)
						{
							int num499 = (int)(20f * (1f - (float)this.life / (float)this.lifeMax));
							this.defense = this.defDefense + num499;
						}
						if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
						{
							this.TargetClosest(true);
						}
						if (Main.player[this.target].dead && Main.expertMode)
						{
							if ((double)this.position.Y < Main.worldSurface * 16 + 2000)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
							}
							if (this.position.X >= (float)(Main.maxTilesX * 8))
							{
								this.velocity.X = this.velocity.X + 0.04f;
							}
							else
							{
								this.velocity.X = this.velocity.X - 0.04f;
							}
							if (this.timeLeft > 10)
							{
								this.timeLeft = 10;
								return;
							}
						}
						else if (this.ai[0] == -1f)
						{
							if (Main.netMode != 1)
							{
								float single315 = this.ai[1];
								do
								{
									num3 = Main.rand.Next(3);
									if (num3 != 1)
									{
										if (num3 != 2)
										{
											continue;
										}
										num3 = 3;
									}
									else
									{
										num3 = 2;
									}
								}
								while ((float)num3 == single315);
								this.ai[0] = (float)num3;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								return;
							}
						}
						else if (this.ai[0] == 0f)
						{
							int num500 = 2;
							if (Main.expertMode)
							{
								if (this.life < this.lifeMax / 2)
								{
									num500++;
								}
								if (this.life < this.lifeMax / 3)
								{
									num500++;
								}
								if (this.life < this.lifeMax / 5)
								{
									num500++;
								}
							}
							if (this.ai[1] > (float)(2 * num500) && this.ai[1] % 2f == 0f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
								this.netUpdate = true;
								return;
							}
							if (this.ai[1] % 2f == 0f)
							{
								this.TargetClosest(true);
								if (Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 20f)
								{
									this.localAI[0] = 1f;
									this.ai[1] = this.ai[1] + 1f;
									this.ai[2] = 0f;
									float single316 = 12f;
									if (Main.expertMode)
									{
										single316 = 16f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											single316 = single316 + 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											single316 = single316 + 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											single316 = single316 + 2f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											single316 = single316 + 2f;
										}
									}
									Vector2 vector2156 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float x146 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2156.X;
									float y145 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2156.Y;
									float single317 = (float)Math.Sqrt((double)(x146 * x146 + y145 * y145));
									single317 = single316 / single317;
									this.velocity.X = x146 * single317;
									this.velocity.Y = y145 * single317;
									this.spriteDirection = this.direction;
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									return;
								}
								this.localAI[0] = 0f;
								float single318 = 12f;
								float single319 = 0.15f;
								if (Main.expertMode)
								{
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										single318 = single318 + 1f;
										single319 = single319 + 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										single318 = single318 + 1f;
										single319 = single319 + 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.25)
									{
										single318 = single318 + 2f;
										single319 = single319 + 0.05f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										single318 = single318 + 2f;
										single319 = single319 + 0.1f;
									}
								}
								if (this.position.Y + (float)(this.height / 2) >= Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))
								{
									this.velocity.Y = this.velocity.Y - single319;
								}
								else
								{
									this.velocity.Y = this.velocity.Y + single319;
								}
								if (this.velocity.Y < -12f)
								{
									this.velocity.Y = -single318;
								}
								if (this.velocity.Y > 12f)
								{
									this.velocity.Y = single318;
								}
								if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
								{
									this.velocity.X = this.velocity.X + 0.15f * (float)this.direction;
								}
								else if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) >= 300f)
								{
									this.velocity.X = this.velocity.X * 0.8f;
								}
								else
								{
									this.velocity.X = this.velocity.X - 0.15f * (float)this.direction;
								}
								if (this.velocity.X < -16f)
								{
									this.velocity.X = -16f;
								}
								if (this.velocity.X > 16f)
								{
									this.velocity.X = 16f;
								}
								this.spriteDirection = this.direction;
								return;
							}
							if (this.velocity.X >= 0f)
							{
								this.direction = 1;
							}
							else
							{
								this.direction = -1;
							}
							this.spriteDirection = this.direction;
							int num501 = 600;
							if (Main.expertMode)
							{
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									num501 = 300;
								}
								else if ((double)this.life < (double)this.lifeMax * 0.25)
								{
									num501 = 450;
								}
								else if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									num501 = 500;
								}
								else if ((double)this.life < (double)this.lifeMax * 0.75)
								{
									num501 = 550;
								}
							}
							int num502 = 1;
							if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
							{
								num502 = -1;
							}
							if (this.direction == num502 && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > (float)num501)
							{
								this.ai[2] = 1f;
							}
							if (this.ai[2] != 1f)
							{
								this.localAI[0] = 1f;
								return;
							}
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							this.localAI[0] = 0f;
							NPC nPC149 = this;
							nPC149.velocity = nPC149.velocity * 0.9f;
							float single320 = 0.1f;
							if (Main.expertMode)
							{
								if (this.life < this.lifeMax / 2)
								{
									NPC nPC150 = this;
									nPC150.velocity = nPC150.velocity * 0.9f;
									single320 = single320 + 0.05f;
								}
								if (this.life < this.lifeMax / 3)
								{
									NPC nPC151 = this;
									nPC151.velocity = nPC151.velocity * 0.9f;
									single320 = single320 + 0.05f;
								}
								if (this.life < this.lifeMax / 5)
								{
									NPC nPC152 = this;
									nPC152.velocity = nPC152.velocity * 0.9f;
									single320 = single320 + 0.05f;
								}
							}
							if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < single320)
							{
								this.ai[2] = 0f;
								this.ai[1] = this.ai[1] + 1f;
								return;
							}
						}
						else if (this.ai[0] == 2f)
						{
							this.TargetClosest(true);
							this.spriteDirection = this.direction;
							float single321 = 12f;
							float single322 = 0.07f;
							if (Main.expertMode)
							{
								single322 = 0.1f;
							}
							Vector2 vector2157 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x147 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2157.X;
							float y146 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector2157.Y;
							float single323 = (float)Math.Sqrt((double)(x147 * x147 + y146 * y146));
							if (single323 < 200f)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.netUpdate = true;
								return;
							}
							single323 = single321 / single323;
							if (this.velocity.X < x147)
							{
								this.velocity.X = this.velocity.X + single322;
								if (this.velocity.X < 0f && x147 > 0f)
								{
									this.velocity.X = this.velocity.X + single322;
								}
							}
							else if (this.velocity.X > x147)
							{
								this.velocity.X = this.velocity.X - single322;
								if (this.velocity.X > 0f && x147 < 0f)
								{
									this.velocity.X = this.velocity.X - single322;
								}
							}
							if (this.velocity.Y < y146)
							{
								this.velocity.Y = this.velocity.Y + single322;
								if (this.velocity.Y < 0f && y146 > 0f)
								{
									this.velocity.Y = this.velocity.Y + single322;
									return;
								}
							}
							else if (this.velocity.Y > y146)
							{
								this.velocity.Y = this.velocity.Y - single322;
								if (this.velocity.Y > 0f && y146 < 0f)
								{
									this.velocity.Y = this.velocity.Y - single322;
									return;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							this.localAI[0] = 0f;
							this.TargetClosest(true);
							Vector2 vector2158 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
							Vector2 vector2159 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x148 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2159.X;
							float y147 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2159.Y;
							float single324 = (float)Math.Sqrt((double)(x148 * x148 + y147 * y147));
							this.ai[1] = this.ai[1] + 1f;
							if (Main.expertMode)
							{
								this.ai[1] = this.ai[1] + (float)(num498 / 2);
								if ((double)this.life < (double)this.lifeMax * 0.75)
								{
									this.ai[1] = this.ai[1] + 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] = this.ai[1] + 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.25)
								{
									this.ai[1] = this.ai[1] + 0.25f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.1)
								{
									this.ai[1] = this.ai[1] + 0.25f;
								}
							}
							bool flag104 = false;
							if (this.ai[1] > 40f)
							{
								this.ai[1] = 0f;
								this.ai[2] = this.ai[2] + 1f;
								flag104 = true;
							}
							if (Collision.CanHit(vector2158, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && flag104)
							{
								Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
								if (Main.netMode != 1)
								{
									int num503 = Main.rand.Next(210, 212);
									int num504 = NPC.NewNPC((int)vector2158.X, (int)vector2158.Y, num503, 0, 0f, 0f, 0f, 0f, 255);
									Main.npc[num504].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
									Main.npc[num504].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
									Main.npc[num504].localAI[0] = 60f;
									Main.npc[num504].netUpdate = true;
								}
							}
							if (single324 > 400f || !Collision.CanHit(new Vector2(vector2158.X, vector2158.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float single325 = 14f;
								float single326 = 0.1f;
								vector2159 = vector2158;
								x148 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2159.X;
								y147 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2159.Y;
								single324 = (float)Math.Sqrt((double)(x148 * x148 + y147 * y147));
								single324 = single325 / single324;
								if (this.velocity.X < x148)
								{
									this.velocity.X = this.velocity.X + single326;
									if (this.velocity.X < 0f && x148 > 0f)
									{
										this.velocity.X = this.velocity.X + single326;
									}
								}
								else if (this.velocity.X > x148)
								{
									this.velocity.X = this.velocity.X - single326;
									if (this.velocity.X > 0f && x148 < 0f)
									{
										this.velocity.X = this.velocity.X - single326;
									}
								}
								if (this.velocity.Y < y147)
								{
									this.velocity.Y = this.velocity.Y + single326;
									if (this.velocity.Y < 0f && y147 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single326;
									}
								}
								else if (this.velocity.Y > y147)
								{
									this.velocity.Y = this.velocity.Y - single326;
									if (this.velocity.Y > 0f && y147 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single326;
									}
								}
							}
							else
							{
								NPC nPC153 = this;
								nPC153.velocity = nPC153.velocity * 0.9f;
							}
							this.spriteDirection = this.direction;
							if (this.ai[2] > 5f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 1f;
								this.netUpdate = true;
								return;
							}
						}
						else if (this.ai[0] == 3f)
						{
							float single327 = 4f;
							float single328 = 0.05f;
							if (Main.expertMode)
							{
								single328 = 0.075f;
								single327 = 6f;
							}
							Vector2 vector2160 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
							Vector2 vector2161 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float x149 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2161.X;
							float y148 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector2161.Y;
							float single329 = (float)Math.Sqrt((double)(x149 * x149 + y148 * y148));
							this.ai[1] = this.ai[1] + 1f;
							bool flag105 = false;
							if (!Main.expertMode)
							{
								if (this.ai[1] % 40f == 39f)
								{
									flag105 = true;
								}
							}
							else if ((double)this.life < (double)this.lifeMax * 0.1)
							{
								if (this.ai[1] % 15f == 14f)
								{
									flag105 = true;
								}
							}
							else if (this.life < this.lifeMax / 3)
							{
								if (this.ai[1] % 25f == 24f)
								{
									flag105 = true;
								}
							}
							else if (this.life < this.lifeMax / 2)
							{
								if (this.ai[1] % 30f == 29f)
								{
									flag105 = true;
								}
							}
							else if (this.ai[1] % 35f == 34f)
							{
								flag105 = true;
							}
							if (flag105 && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(vector2160, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
								if (Main.netMode != 1)
								{
									float single330 = 8f;
									if (Main.expertMode)
									{
										single330 = single330 + 2f;
									}
									if (Main.expertMode && (double)this.life < (double)this.lifeMax * 0.1)
									{
										single330 = single330 + 3f;
									}
									float x150 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2160.X + (float)Main.rand.Next(-80, 81);
									float y149 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2160.Y + (float)Main.rand.Next(-40, 41);
									float single331 = (float)Math.Sqrt((double)(x150 * x150 + y149 * y149));
									single331 = single330 / single331;
									x150 = x150 * single331;
									y149 = y149 * single331;
									int num505 = 11;
									int num506 = 55;
									int num507 = Projectile.NewProjectile(vector2160.X, vector2160.Y, x150, y149, num506, num505, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num507].timeLeft = 300;
								}
							}
							if (!Collision.CanHit(new Vector2(vector2160.X, vector2160.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								single327 = 14f;
								single328 = 0.1f;
								vector2161 = vector2160;
								x149 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2161.X;
								y148 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2161.Y;
								single329 = (float)Math.Sqrt((double)(x149 * x149 + y148 * y148));
								single329 = single327 / single329;
								if (this.velocity.X < x149)
								{
									this.velocity.X = this.velocity.X + single328;
									if (this.velocity.X < 0f && x149 > 0f)
									{
										this.velocity.X = this.velocity.X + single328;
									}
								}
								else if (this.velocity.X > x149)
								{
									this.velocity.X = this.velocity.X - single328;
									if (this.velocity.X > 0f && x149 < 0f)
									{
										this.velocity.X = this.velocity.X - single328;
									}
								}
								if (this.velocity.Y < y148)
								{
									this.velocity.Y = this.velocity.Y + single328;
									if (this.velocity.Y < 0f && y148 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single328;
									}
								}
								else if (this.velocity.Y > y148)
								{
									this.velocity.Y = this.velocity.Y - single328;
									if (this.velocity.Y > 0f && y148 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single328;
									}
								}
							}
							else if (single329 > 100f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								single329 = single327 / single329;
								if (this.velocity.X < x149)
								{
									this.velocity.X = this.velocity.X + single328;
									if (this.velocity.X < 0f && x149 > 0f)
									{
										this.velocity.X = this.velocity.X + single328 * 2f;
									}
								}
								else if (this.velocity.X > x149)
								{
									this.velocity.X = this.velocity.X - single328;
									if (this.velocity.X > 0f && x149 < 0f)
									{
										this.velocity.X = this.velocity.X - single328 * 2f;
									}
								}
								if (this.velocity.Y < y148)
								{
									this.velocity.Y = this.velocity.Y + single328;
									if (this.velocity.Y < 0f && y148 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single328 * 2f;
									}
								}
								else if (this.velocity.Y > y148)
								{
									this.velocity.Y = this.velocity.Y - single328;
									if (this.velocity.Y > 0f && y148 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single328 * 2f;
									}
								}
							}
							if (this.ai[1] > 800f)
							{
								this.ai[0] = -1f;
								this.ai[1] = 3f;
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.aiStyle == 44)
					{
						this.noGravity = true;
						if (this.collideX)
						{
							if (this.oldVelocity.X <= 0f)
							{
								this.direction = 1;
							}
							else
							{
								this.direction = -1;
							}
							this.velocity.X = (float)this.direction;
						}
						if (this.collideY)
						{
							if (this.oldVelocity.Y <= 0f)
							{
								this.directionY = 1;
							}
							else
							{
								this.directionY = -1;
							}
							this.velocity.Y = (float)this.directionY;
						}
						int num508 = this.target;
						int num509 = this.direction;
						if (this.target == 255 || Main.player[this.target].dead || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
						{
							this.ai[0] = 90f;
							this.TargetClosest(true);
						}
						else if (this.ai[0] > 0f)
						{
							this.ai[0] = this.ai[0] - 1f;
							this.TargetClosest(true);
						}
						if (this.netUpdate && num508 == this.target && num509 == this.direction)
						{
							this.netUpdate = false;
						}
						float single332 = 0.05f;
						float single333 = 0.01f;
						float single334 = 3f;
						float single335 = 1f;
						float single336 = 30f;
						float single337 = 100f;
						float single338 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
						float y150 = Main.player[this.target].position.Y - (float)(this.height / 2);
						if (this.type == 509)
						{
							single332 = 0.09f;
							single333 = 0.03f;
							single334 = 5f;
							single335 = 2f;
							single336 = 40f;
							single337 = 150f;
							y150 = Main.player[this.target].Center.Y - (float)(this.height / 2);
							this.rotation = this.velocity.X * 0.1f;
							for (int m4 = 0; m4 < 200; m4++)
							{
								if (m4 != this.whoAmI && Main.npc[m4].active && Main.npc[m4].type == this.type && Math.Abs(this.position.X - Main.npc[m4].position.X) + Math.Abs(this.position.Y - Main.npc[m4].position.Y) < (float)this.width)
								{
									if (this.position.X >= Main.npc[m4].position.X)
									{
										this.velocity.X = this.velocity.X + 0.05f;
									}
									else
									{
										this.velocity.X = this.velocity.X - 0.05f;
									}
									if (this.position.Y >= Main.npc[m4].position.Y)
									{
										this.velocity.Y = this.velocity.Y + 0.05f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - 0.05f;
									}
								}
							}
						}
						if (this.ai[0] <= 0f)
						{
							single334 = single334 * 0.8f;
							single332 = single332 * 0.7f;
							y150 = base.Center.Y + (float)(this.directionY * 1000);
							if (this.velocity.X < 0f)
							{
								this.direction = -1;
							}
							else if (this.velocity.X > 0f || this.direction == 0)
							{
								this.direction = 1;
							}
						}
						if (single338 > single336)
						{
							if (this.direction == -1 && this.velocity.X > -single334)
							{
								this.velocity.X = this.velocity.X - single332;
								if (this.velocity.X > single334)
								{
									this.velocity.X = this.velocity.X - single332;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X - single332 / 2f;
								}
								if (this.velocity.X < -single334)
								{
									this.velocity.X = -single334;
								}
							}
							else if (this.direction == 1 && this.velocity.X < single334)
							{
								this.velocity.X = this.velocity.X + single332;
								if (this.velocity.X < -single334)
								{
									this.velocity.X = this.velocity.X + single332;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X + single332 / 2f;
								}
								if (this.velocity.X > single334)
								{
									this.velocity.X = single334;
								}
							}
						}
						if (single338 > single337)
						{
							y150 = y150 - single337 / 2f;
						}
						if (this.position.Y >= y150)
						{
							this.velocity.Y = this.velocity.Y - single333;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - single333;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y + single333;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + single333;
							}
						}
						if (this.velocity.Y < -single335)
						{
							this.velocity.Y = -single335;
						}
						if (this.velocity.Y > single335)
						{
							this.velocity.Y = single335;
							return;
						}
					}
					else if (this.aiStyle != 45)
					{
						if (this.aiStyle == 46)
						{
							this.noTileCollide = true;
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								return;
							}
							float single339 = 12f;
							Vector2 vector2162 = new Vector2(base.Center.X, base.Center.Y);
							float x151 = Main.npc[NPC.golemBoss].Center.X - vector2162.X;
							float y151 = Main.npc[NPC.golemBoss].Center.Y - vector2162.Y;
							y151 = y151 - 57f;
							x151 = x151 - 3f;
							float single340 = (float)Math.Sqrt((double)(x151 * x151 + y151 * y151));
							if (single340 >= 20f)
							{
								single340 = single339 / single340;
								this.velocity.X = x151 * single340;
								this.velocity.Y = y151 * single340;
								this.rotation = (float)this.velocity.X * 0.1f;
							}
							else
							{
								this.rotation = 0f;
								this.velocity.X = x151;
								this.velocity.Y = y151;
							}
							if (this.alpha > 0)
							{
								NPC nPC154 = this;
								nPC154.alpha = nPC154.alpha - 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 30f;
							}
							if (this.ai[0] == 0f)
							{
								this.ai[1] = this.ai[1] + 1f;
								int num510 = 300;
								if (this.ai[1] < 20f || this.ai[1] > (float)(num510 - 20))
								{
									this.localAI[0] = 1f;
								}
								else
								{
									this.localAI[0] = 0f;
								}
								if (this.ai[1] >= (float)num510)
								{
									this.TargetClosest(true);
									this.ai[1] = 0f;
									Vector2 vector2163 = new Vector2(base.Center.X, base.Center.Y + 10f);
									float single341 = 8f;
									float x152 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2163.X;
									float y152 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2163.Y;
									float single342 = (float)Math.Sqrt((double)(x152 * x152 + y152 * y152));
									single342 = single341 / single342;
									x152 = x152 * single342;
									y152 = y152 * single342;
									int num511 = 18;
									int num512 = 258;
									if (Main.netMode != 1)
									{
										Projectile.NewProjectile(vector2163.X, vector2163.Y, x152, y152, num512, num511, 0f, Main.myPlayer, 0f, 0f);
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.TargetClosest(true);
								Vector2 x153 = new Vector2(base.Center.X, base.Center.Y + 10f);
								if (Main.player[this.target].Center.X < base.Center.X - (float)this.width)
								{
									this.localAI[1] = -1f;
									x153.X = x153.X - 40f;
								}
								else if (Main.player[this.target].Center.X <= base.Center.X + (float)this.width)
								{
									this.localAI[1] = 0f;
								}
								else
								{
									this.localAI[1] = 1f;
									x153.X = x153.X + 40f;
								}
								this.ai[1] = this.ai[1] + 1f;
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.ai[1] = this.ai[1] + 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.ai[1] = this.ai[1] + 1f;
								}
								int num513 = 300;
								if (this.ai[1] < 20f || this.ai[1] > (float)(num513 - 20))
								{
									this.localAI[0] = 1f;
								}
								else
								{
									this.localAI[0] = 0f;
								}
								if (this.ai[1] >= (float)num513)
								{
									this.TargetClosest(true);
									this.ai[1] = 0f;
									float single343 = 8f;
									float x154 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - x153.X;
									float y153 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - x153.Y;
									float single344 = (float)Math.Sqrt((double)(x154 * x154 + y153 * y153));
									single344 = single343 / single344;
									x154 = x154 * single344;
									y153 = y153 * single344;
									int num514 = 24;
									int num515 = 258;
									if (Main.netMode != 1)
									{
										Projectile.NewProjectile(x153.X, x153.Y, x154, y153, num515, num514, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								this.ai[2] = this.ai[2] + 1f;
								if (this.life < this.lifeMax / 3)
								{
									this.ai[2] = this.ai[2] + 1f;
								}
								if (this.life < this.lifeMax / 4)
								{
									this.ai[2] = this.ai[2] + 1f;
								}
								if (this.life < this.lifeMax / 5)
								{
									this.ai[2] = this.ai[2] + 1f;
								}
								if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
								{
									this.ai[2] = this.ai[2] + 4f;
								}
								if (this.ai[2] > (float)(60 + Main.rand.Next(600)))
								{
									this.ai[2] = 0f;
									int num516 = 28;
									int num517 = 259;
									if (this.localAI[1] == 0f)
									{
										for (int n4 = 0; n4 < 2; n4++)
										{
											x153 = new Vector2(base.Center.X, base.Center.Y - 22f);
											if (n4 != 0)
											{
												x153.X = x153.X + 18f;
											}
											else
											{
												x153.X = x153.X - 18f;
											}
											float single345 = 11f;
											float x155 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - x153.X;
											float y154 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - x153.Y;
											float single346 = (float)Math.Sqrt((double)(x155 * x155 + y154 * y154));
											single346 = single345 / single346;
											x155 = x155 * single346;
											y154 = y154 * single346;
											x153.X = x153.X + x155 * 3f;
											x153.Y = x153.Y + y154 * 3f;
											if (Main.netMode != 1)
											{
												int num518 = Projectile.NewProjectile(x153.X, x153.Y, x155, y154, num517, num516, 0f, Main.myPlayer, 0f, 0f);
												Main.projectile[num518].timeLeft = 300;
											}
										}
									}
									else if (this.localAI[1] != 0f)
									{
										x153 = new Vector2(base.Center.X, base.Center.Y - 22f);
										if (this.localAI[1] == -1f)
										{
											x153.X = x153.X - 30f;
										}
										else if (this.localAI[1] == 1f)
										{
											x153.X = x153.X + 30f;
										}
										float single347 = 12f;
										float x156 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - x153.X;
										float y155 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - x153.Y;
										float single348 = (float)Math.Sqrt((double)(x156 * x156 + y155 * y155));
										single348 = single347 / single348;
										x156 = x156 * single348;
										y155 = y155 * single348;
										x153.X = x153.X + x156 * 3f;
										x153.Y = x153.Y + y155 * 3f;
										if (Main.netMode != 1)
										{
											int num519 = Projectile.NewProjectile(x153.X, x153.Y, x156, y155, num517, num516, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num519].timeLeft = 300;
										}
									}
								}
							}
							if (this.life < this.lifeMax / 2)
							{
								this.ai[0] = 1f;
								return;
							}
							this.ai[0] = 0f;
							return;
						}
						if (this.aiStyle == 47)
						{
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								return;
							}
							if (this.alpha > 0)
							{
								NPC nPC155 = this;
								nPC155.alpha = nPC155.alpha - 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 0f;
							}
							if (this.ai[0] == 0f)
							{
								this.noTileCollide = true;
								float single349 = 14f;
								if (this.life < this.lifeMax / 2)
								{
									single349 = single349 + 3f;
								}
								if (this.life < this.lifeMax / 4)
								{
									single349 = single349 + 3f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									single349 = single349 + 8f;
								}
								Vector2 vector2164 = new Vector2(base.Center.X, base.Center.Y);
								float x157 = Main.npc[NPC.golemBoss].Center.X - vector2164.X;
								float y156 = Main.npc[NPC.golemBoss].Center.Y - vector2164.Y;
								y156 = y156 - 9f;
								x157 = (this.type != 247 ? x157 + 78f : x157 - 84f);
								float single350 = (float)Math.Sqrt((double)(x157 * x157 + y156 * y156));
								if (single350 >= 12f + single349)
								{
									single350 = single349 / single350;
									this.velocity.X = x157 * single350;
									this.velocity.Y = y156 * single350;
									this.rotation = (float)Math.Atan2((double)(-this.velocity.Y), (double)(-this.velocity.X));
									if (this.type == 247)
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
										return;
									}
								}
								else
								{
									this.rotation = 0f;
									this.velocity.X = x157;
									this.velocity.Y = y156;
									this.ai[1] = this.ai[1] + 1f;
									if (this.life < this.lifeMax / 2)
									{
										this.ai[1] = this.ai[1] + 1f;
									}
									if (this.life < this.lifeMax / 4)
									{
										this.ai[1] = this.ai[1] + 1f;
									}
									if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
									{
										this.ai[1] = this.ai[1] + 10f;
									}
									if (this.ai[1] >= 60f)
									{
										this.TargetClosest(true);
										if ((this.type != 247 || base.Center.X + 100f <= Main.player[this.target].Center.X) && (this.type != 248 || base.Center.X - 100f >= Main.player[this.target].Center.X))
										{
											this.ai[1] = 0f;
											return;
										}
										this.ai[1] = 0f;
										this.ai[0] = 1f;
										return;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.noTileCollide = true;
								this.collideX = false;
								this.collideY = false;
								float single351 = 12f;
								if (this.life < this.lifeMax / 2)
								{
									single351 = single351 + 4f;
								}
								if (this.life < this.lifeMax / 4)
								{
									single351 = single351 + 4f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									single351 = single351 + 10f;
								}
								Vector2 vector2165 = new Vector2(base.Center.X, base.Center.Y);
								float x158 = Main.player[this.target].Center.X - vector2165.X;
								float y157 = Main.player[this.target].Center.Y - vector2165.Y;
								float single352 = (float)Math.Sqrt((double)(x158 * x158 + y157 * y157));
								single352 = single351 / single352;
								this.velocity.X = x158 * single352;
								this.velocity.Y = y157 * single352;
								this.ai[0] = 2f;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)(-this.velocity.Y), (double)(-this.velocity.X));
									return;
								}
							}
							else if (this.ai[0] == 2f)
							{
								if (Math.Abs(this.velocity.X) <= Math.Abs(this.velocity.Y))
								{
									if (this.velocity.Y > 0f && base.Center.Y > Main.player[this.target].Center.Y)
									{
										this.noTileCollide = false;
									}
									if (this.velocity.Y < 0f && base.Center.Y < Main.player[this.target].Center.Y)
									{
										this.noTileCollide = false;
									}
								}
								else
								{
									if (this.velocity.X > 0f && base.Center.X > Main.player[this.target].Center.X)
									{
										this.noTileCollide = false;
									}
									if (this.velocity.X < 0f && base.Center.X < Main.player[this.target].Center.X)
									{
										this.noTileCollide = false;
									}
								}
								Vector2 vector2166 = new Vector2(base.Center.X, base.Center.Y);
								float x159 = Main.npc[NPC.golemBoss].Center.X - vector2166.X;
								float y158 = Main.npc[NPC.golemBoss].Center.Y - vector2166.Y;
								x159 = x159 + Main.npc[NPC.golemBoss].velocity.X;
								y158 = y158 + Main.npc[NPC.golemBoss].velocity.Y;
								y158 = y158 - 9f;
								x159 = (this.type != 247 ? x159 + 78f : x159 - 84f);
								float single353 = (float)Math.Sqrt((double)(x159 * x159 + y158 * y158));
								if (Main.npc[NPC.golemBoss].life >= Main.npc[NPC.golemBoss].lifeMax)
								{
									bool flag106 = this.justHit;
									if (flag106)
									{
										int num520 = 0;
										while (num520 < 200)
										{
											if (!Main.npc[num520].active || Main.npc[num520].type != 246)
											{
												num520++;
											}
											else
											{
												if (Main.npc[num520].life >= Main.npc[num520].lifeMax / 2)
												{
													break;
												}
												if (this.knockBackResist == 0f)
												{
													flag106 = false;
												}
												this.knockBackResist = 0f;
												break;
											}
										}
									}
									if (single353 > 600f || this.collideX || this.collideY || flag106)
									{
										this.noTileCollide = true;
										this.ai[0] = 0f;
										return;
									}
								}
								else
								{
									this.knockBackResist = 0f;
									if (single353 > 700f || this.collideX || this.collideY)
									{
										this.noTileCollide = true;
										this.ai[0] = 0f;
										return;
									}
								}
							}
							else if (this.ai[0] == 3f)
							{
								this.noTileCollide = true;
								float single354 = 12f;
								float single355 = 0.4f;
								Vector2 vector2167 = new Vector2(base.Center.X, base.Center.Y);
								float x160 = Main.player[this.target].Center.X - vector2167.X;
								float y159 = Main.player[this.target].Center.Y - vector2167.Y;
								float single356 = (float)Math.Sqrt((double)(x160 * x160 + y159 * y159));
								single356 = single354 / single356;
								x160 = x160 * single356;
								y159 = y159 * single356;
								if (this.velocity.X < x160)
								{
									this.velocity.X = this.velocity.X + single355;
									if (this.velocity.X < 0f && x160 > 0f)
									{
										this.velocity.X = this.velocity.X + single355 * 2f;
									}
								}
								else if (this.velocity.X > x160)
								{
									this.velocity.X = this.velocity.X - single355;
									if (this.velocity.X > 0f && x160 < 0f)
									{
										this.velocity.X = this.velocity.X - single355 * 2f;
									}
								}
								if (this.velocity.Y < y159)
								{
									this.velocity.Y = this.velocity.Y + single355;
									if (this.velocity.Y < 0f && y159 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single355 * 2f;
									}
								}
								else if (this.velocity.Y > y159)
								{
									this.velocity.Y = this.velocity.Y - single355;
									if (this.velocity.Y > 0f && y159 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single355 * 2f;
									}
								}
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)(-this.velocity.Y), (double)(-this.velocity.X));
									return;
								}
							}
						}
						else if (this.aiStyle == 48)
						{
							bool flag107 = false;
							if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.noTileCollide = false;
							}
							else
							{
								this.noTileCollide = true;
								flag107 = true;
							}
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
								return;
							}
							this.TargetClosest(true);
							float single357 = 7f;
							float single358 = 0.05f;
							Vector2 vector2168 = new Vector2(base.Center.X, base.Center.Y);
							float x161 = Main.player[this.target].Center.X - vector2168.X;
							float y160 = Main.player[this.target].Center.Y - vector2168.Y - 300f;
							float single359 = (float)Math.Sqrt((double)(x161 * x161 + y160 * y160));
							single359 = single357 / single359;
							x161 = x161 * single359;
							y160 = y160 * single359;
							if (this.velocity.X < x161)
							{
								this.velocity.X = this.velocity.X + single358;
								if (this.velocity.X < 0f && x161 > 0f)
								{
									this.velocity.X = this.velocity.X + single358;
								}
							}
							else if (this.velocity.X > x161)
							{
								this.velocity.X = this.velocity.X - single358;
								if (this.velocity.X > 0f && x161 < 0f)
								{
									this.velocity.X = this.velocity.X - single358;
								}
							}
							if (this.velocity.Y < y160)
							{
								this.velocity.Y = this.velocity.Y + single358;
								if (this.velocity.Y < 0f && y160 > 0f)
								{
									this.velocity.Y = this.velocity.Y + single358;
								}
							}
							else if (this.velocity.Y > y160)
							{
								this.velocity.Y = this.velocity.Y - single358;
								if (this.velocity.Y > 0f && y160 < 0f)
								{
									this.velocity.Y = this.velocity.Y - single358;
								}
							}
							this.ai[1] = this.ai[1] + 1f;
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
							{
								this.ai[1] = this.ai[1] + 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
							{
								this.ai[1] = this.ai[1] + 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
							{
								this.ai[1] = this.ai[1] + 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
							{
								this.ai[1] = this.ai[1] + 1f;
							}
							int num521 = 360;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num521 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (flag107)
							{
								this.ai[1] = 20f;
							}
							if (this.ai[1] >= (float)num521)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								Vector2 vector2169 = new Vector2(base.Center.X, base.Center.Y - 10f);
								float single360 = 8f;
								int num522 = 20;
								int num523 = 258;
								float x162 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2169.X;
								float y161 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2169.Y;
								float single361 = (float)Math.Sqrt((double)(x162 * x162 + y161 * y161));
								single361 = single360 / single361;
								x162 = x162 * single361;
								y161 = y161 * single361;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector2169.X, vector2169.Y, x162, y161, num523, num522, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							this.ai[2] = this.ai[2] + 1f;
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.25)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.5)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 6)
							{
								this.ai[2] = this.ai[2] + 1f;
							}
							if (!Collision.CanHit(Main.npc[NPC.golemBoss].Center, 1, 1, Main.player[this.target].Center, 1, 1))
							{
								this.ai[2] = this.ai[2] + 4f;
							}
							if (this.ai[2] > (float)(100 + Main.rand.Next(4800)))
							{
								this.ai[2] = 0f;
								for (int o4 = 0; o4 < 2; o4++)
								{
									Vector2 y162 = new Vector2(base.Center.X, base.Center.Y - 50f);
									if (o4 == 0)
									{
										y162.X = y162.X - 14f;
									}
									else if (o4 == 1)
									{
										y162.X = y162.X + 14f;
									}
									float single362 = 11f;
									int num524 = 24;
									int num525 = 259;
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.5)
									{
										num524++;
										single362 = single362 + 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
									{
										num524++;
										single362 = single362 + 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.3)
									{
										num524++;
										single362 = single362 + 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
									{
										num524++;
										single362 = single362 + 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
									{
										num524++;
										single362 = single362 + 0.25f;
									}
									float x163 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y162.X;
									float y163 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y162.Y;
									float single363 = (float)Math.Sqrt((double)(x163 * x163 + y163 * y163));
									single363 = single362 / single363;
									x163 = x163 * single363;
									y163 = y163 * single363;
									y162.X = y162.X + x163 * 3f;
									y162.Y = y162.Y + y163 * 3f;
									if (Main.netMode != 1)
									{
										int num526 = Projectile.NewProjectile(y162.X, y162.Y, x163, y163, num525, num524, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num526].timeLeft = 300;
									}
								}
								return;
							}
						}
						else if (this.aiStyle != 49)
						{
							if (this.aiStyle == 50)
							{
								if (this.timeLeft > 5)
								{
									this.timeLeft = 5;
								}
								this.noTileCollide = true;
								this.velocity.Y = this.velocity.Y + 0.02f;
								if (this.velocity.Y < 0f && !Main.expertMode)
								{
									this.velocity.Y = this.velocity.Y * 0.99f;
								}
								if (this.velocity.Y > 1f)
								{
									this.velocity.Y = 1f;
								}
								this.TargetClosest(true);
								if (this.position.X + (float)this.width < Main.player[this.target].position.X)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									if (Main.expertMode && this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (Main.expertMode)
									{
										this.velocity.X = this.velocity.X + 0.1f;
									}
								}
								else if (this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									if (Main.expertMode && this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (Main.expertMode)
									{
										this.velocity.X = this.velocity.X + 0.1f;
									}
								}
								if (this.velocity.X > 5f || this.velocity.X < -5f)
								{
									this.velocity.X = this.velocity.X * 0.97f;
								}
								this.rotation = this.velocity.X * 0.2f;
								return;
							}
							if (this.aiStyle == 51)
							{
								bool flag108 = false;
								bool flag109 = false;
								this.TargetClosest(true);
								if (Main.player[this.target].dead)
								{
									flag109 = true;
									flag108 = true;
								}
								if (Main.netMode != 1 && Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)6000)
								{
									this.active = false;
									this.life = 0;
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
									}
								}
								NPC.plantBoss = this.whoAmI;
								if (this.localAI[0] == 0f && Main.netMode != 1)
								{
									this.localAI[0] = 1f;
									NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
									NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
									NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 263, this.whoAmI, 0f, 0f, 0f, 0f, 255);
								}
								int[] numArray2 = new int[3];
								float x164 = 0f;
								float y164 = 0f;
								int num527 = 0;
								for (int p4 = 0; p4 < 200; p4++)
								{
									if (Main.npc[p4].active && Main.npc[p4].aiStyle == 52)
									{
										x164 = x164 + Main.npc[p4].Center.X;
										y164 = y164 + Main.npc[p4].Center.Y;
										numArray2[num527] = p4;
										num527++;
										if (num527 > 2)
										{
											break;
										}
									}
								}
								x164 = x164 / (float)num527;
								y164 = y164 / (float)num527;
								float single364 = 2.5f;
								float single365 = 0.025f;
								if (this.life < this.lifeMax / 2)
								{
									single364 = 5f;
									single365 = 0.05f;
								}
								if (this.life < this.lifeMax / 4)
								{
									single364 = 7f;
								}
								if (!Main.player[this.target].ZoneJungle || (double)Main.player[this.target].position.Y < Main.worldSurface * 16 || Main.player[this.target].position.Y > (float)((Main.maxTilesY - 200) * 16))
								{
									flag108 = true;
									single364 = single364 + 8f;
									single365 = 0.15f;
								}
								if (Main.expertMode)
								{
									single364 = single364 + 1f;
									single364 = single364 * 1.1f;
									single365 = single365 + 0.01f;
									single365 = single365 * 1.1f;
								}
								Vector2 vector2170 = new Vector2(x164, y164);
								float x165 = Main.player[this.target].Center.X - vector2170.X;
								float y165 = Main.player[this.target].Center.Y - vector2170.Y;
								if (flag109)
								{
									y165 = y165 * -1f;
									x165 = x165 * -1f;
									single364 = single364 + 8f;
								}
								float single366 = (float)Math.Sqrt((double)(x165 * x165 + y165 * y165));
								int num528 = 500;
								if (flag108)
								{
									num528 = num528 + 350;
								}
								if (Main.expertMode)
								{
									num528 = num528 + 150;
								}
								if (single366 >= (float)num528)
								{
									single366 = (float)num528 / single366;
									x165 = x165 * single366;
									y165 = y165 * single366;
								}
								x164 = x164 + x165;
								y164 = y164 + y165;
								vector2170 = new Vector2(base.Center.X, base.Center.Y);
								x165 = x164 - vector2170.X;
								y165 = y164 - vector2170.Y;
								single366 = (float)Math.Sqrt((double)(x165 * x165 + y165 * y165));
								if (single366 >= single364)
								{
									single366 = single364 / single366;
									x165 = x165 * single366;
									y165 = y165 * single366;
								}
								else
								{
									x165 = this.velocity.X;
									y165 = this.velocity.Y;
								}
								if (this.velocity.X < x165)
								{
									this.velocity.X = this.velocity.X + single365;
									if (this.velocity.X < 0f && x165 > 0f)
									{
										this.velocity.X = this.velocity.X + single365 * 2f;
									}
								}
								else if (this.velocity.X > x165)
								{
									this.velocity.X = this.velocity.X - single365;
									if (this.velocity.X > 0f && x165 < 0f)
									{
										this.velocity.X = this.velocity.X - single365 * 2f;
									}
								}
								if (this.velocity.Y < y165)
								{
									this.velocity.Y = this.velocity.Y + single365;
									if (this.velocity.Y < 0f && y165 > 0f)
									{
										this.velocity.Y = this.velocity.Y + single365 * 2f;
									}
								}
								else if (this.velocity.Y > y165)
								{
									this.velocity.Y = this.velocity.Y - single365;
									if (this.velocity.Y > 0f && y165 < 0f)
									{
										this.velocity.Y = this.velocity.Y - single365 * 2f;
									}
								}
								Vector2 vector2171 = new Vector2(base.Center.X, base.Center.Y);
								float x166 = Main.player[this.target].Center.X - vector2171.X;
								float y166 = Main.player[this.target].Center.Y - vector2171.Y;
								this.rotation = (float)Math.Atan2((double)y166, (double)x166) + 1.57f;
								if (this.life <= this.lifeMax / 2)
								{
									this.defense = 10;
									this.damage = (int)(70f * Main.damageMultiplier);
									if (flag108)
									{
										NPC nPC156 = this;
										nPC156.defense = nPC156.defense * 4;
										NPC nPC157 = this;
										nPC157.damage = nPC157.damage * 2;
									}
									if (Main.netMode != 1)
									{
										if (this.localAI[0] == 1f)
										{
											this.localAI[0] = 2f;
											for (int q4 = 0; q4 < 8; q4++)
											{
												NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
											}
											if (Main.expertMode)
											{
												for (int r4 = 0; r4 < 200; r4++)
												{
													if (Main.npc[r4].active && Main.npc[r4].aiStyle == 52)
													{
														for (int s4 = 0; s4 < 3; s4++)
														{
															int num529 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
															Main.npc[num529].ai[3] = (float)(r4 + 1);
														}
													}
												}
											}
										}
										else if (Main.expertMode && Main.rand.Next(60) == 0)
										{
											int num530 = 0;
											for (int t4 = 0; t4 < 200; t4++)
											{
												if (Main.npc[t4].active && Main.npc[t4].type == 264 && Main.npc[t4].ai[3] == 0f)
												{
													num530++;
												}
											}
											if (num530 < 8 && Main.rand.Next((num530 + 1) * 10) <= 1)
											{
												NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 264, this.whoAmI, 0f, 0f, 0f, 0f, 255);
											}
										}
									}
									if (this.localAI[2] == 0f)
									{
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 378, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 379, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 380, this.scale);
										this.localAI[2] = 1f;
									}
									this.localAI[1] = this.localAI[1] + 1f;
									if ((double)this.life < (double)this.lifeMax * 0.4)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.3)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.2)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] = this.localAI[1] + 1f;
									}
									if (this.localAI[1] >= 350f)
									{
										float single367 = 8f;
										Vector2 vector2172 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float x167 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2172.X + (float)Main.rand.Next(-10, 11);
										float single368 = Math.Abs(x167 * 0.2f);
										float y167 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector2172.Y + (float)Main.rand.Next(-10, 11);
										if (y167 > 0f)
										{
											single368 = 0f;
										}
										y167 = y167 - single368;
										float single369 = (float)Math.Sqrt((double)(x167 * x167 + y167 * y167));
										single369 = single367 / single369;
										x167 = x167 * single369;
										y167 = y167 * single369;
										int num531 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 265, 0, 0f, 0f, 0f, 0f, 255);
										Main.npc[num531].velocity.X = x167;
										Main.npc[num531].velocity.Y = y167;
										Main.npc[num531].netUpdate = true;
										this.localAI[1] = 0f;
										return;
									}
								}
								else
								{
									this.defense = 36;
									this.damage = (int)(50f * Main.damageMultiplier);
									if (flag108)
									{
										NPC nPC158 = this;
										nPC158.defense = nPC158.defense * 2;
										NPC nPC159 = this;
										nPC159.damage = nPC159.damage * 2;
									}
									if (Main.netMode != 1)
									{
										this.localAI[1] = this.localAI[1] + 1f;
										if ((double)this.life < (double)this.lifeMax * 0.9)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.8)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.7)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.6)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if (flag108)
										{
											this.localAI[1] = this.localAI[1] + 3f;
										}
										if (Main.expertMode)
										{
											this.localAI[1] = this.localAI[1] + 1f;
										}
										if (Main.expertMode && this.justHit && Main.rand.Next(2) == 0)
										{
											this.localAI[3] = 1f;
										}
										if (this.localAI[1] > 80f)
										{
											this.localAI[1] = 0f;
											bool flag110 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
											if (this.localAI[3] > 0f)
											{
												flag110 = true;
												this.localAI[3] = 0f;
											}
											if (flag110)
											{
												Vector2 x168 = new Vector2(base.Center.X, base.Center.Y);
												float single370 = 15f;
												if (Main.expertMode)
												{
													single370 = 17f;
												}
												float x169 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - x168.X;
												float y168 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - x168.Y;
												float single371 = (float)Math.Sqrt((double)(x169 * x169 + y168 * y168));
												single371 = single370 / single371;
												x169 = x169 * single371;
												y168 = y168 * single371;
												int num532 = 22;
												int num533 = 275;
												int num534 = 4;
												int num535 = 8;
												if (Main.expertMode)
												{
													num534 = 2;
													num535 = 6;
												}
												if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(num534) == 0)
												{
													num532 = 27;
													this.localAI[1] = -30f;
													num533 = 276;
												}
												else if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(num535) == 0)
												{
													num532 = 31;
													this.localAI[1] = -120f;
													num533 = 277;
												}
												if (flag108)
												{
													num532 = num532 * 2;
												}
												if (Main.expertMode)
												{
													num532 = (int)((double)num532 * 0.9);
												}
												x168.X = x168.X + x169 * 3f;
												x168.Y = x168.Y + y168 * 3f;
												int num536 = Projectile.NewProjectile(x168.X, x168.Y, x169, y168, num533, num532, 0f, Main.myPlayer, 0f, 0f);
												if (num533 != 277)
												{
													Main.projectile[num536].timeLeft = 300;
													return;
												}
											}
										}
									}
								}
							}
							else if (this.aiStyle == 52)
							{
								bool flag111 = false;
								bool flag112 = false;
								if (NPC.plantBoss < 0)
								{
									this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
									this.netUpdate = true;
									return;
								}
								if (Main.player[Main.npc[NPC.plantBoss].target].dead)
								{
									flag112 = true;
								}
								if (NPC.plantBoss != -1 && !Main.player[Main.npc[NPC.plantBoss].target].ZoneJungle || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16 || Main.player[Main.npc[NPC.plantBoss].target].position.Y > (float)((Main.maxTilesY - 200) * 16) || flag112)
								{
									this.localAI[0] = this.localAI[0] - 4f;
									flag111 = true;
								}
								if (Main.netMode == 1)
								{
									if (this.ai[0] == 0f)
									{
										this.ai[0] = (float)((int)(base.Center.X / 16f));
									}
									if (this.ai[1] == 0f)
									{
										this.ai[1] = (float)((int)(base.Center.X / 16f));
									}
								}
								if (Main.netMode != 1)
								{
									if (this.ai[0] == 0f || this.ai[1] == 0f)
									{
										this.localAI[0] = 0f;
									}
									this.localAI[0] = this.localAI[0] - 1f;
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										this.localAI[0] = this.localAI[0] - 2f;
									}
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
									{
										this.localAI[0] = this.localAI[0] - 2f;
									}
									if (flag111)
									{
										this.localAI[0] = this.localAI[0] - 6f;
									}
									if (!flag112 && this.localAI[0] <= 0f && this.ai[0] != 0f)
									{
										for (int u4 = 0; u4 < 200; u4++)
										{
											if (u4 != this.whoAmI && Main.npc[u4].active && Main.npc[u4].type == this.type && (Main.npc[u4].velocity.X != 0f || Main.npc[u4].velocity.Y != 0f))
											{
												this.localAI[0] = (float)Main.rand.Next(60, 300);
											}
										}
									}
									if (this.localAI[0] <= 0f)
									{
										this.localAI[0] = (float)Main.rand.Next(300, 600);
										bool flag113 = false;
										int num537 = 0;
										while (!flag113 && num537 <= 1000)
										{
											num537++;
											int x170 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.X / 16f);
											int y169 = (int)(Main.player[Main.npc[NPC.plantBoss].target].Center.Y / 16f);
											if (this.ai[0] == 0f)
											{
												x170 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.X + Main.npc[NPC.plantBoss].Center.X) / 32f);
												y169 = (int)((Main.player[Main.npc[NPC.plantBoss].target].Center.Y + Main.npc[NPC.plantBoss].Center.Y) / 32f);
											}
											if (flag112)
											{
												x170 = (int)Main.npc[NPC.plantBoss].position.X / 16;
												y169 = (int)(Main.npc[NPC.plantBoss].position.Y + 400f) / 16;
											}
											int num538 = 20;
											num538 = num538 + (int)(100f * ((float)num537 / 1000f));
											int num539 = x170 + Main.rand.Next(-num538, num538 + 1);
											int num540 = y169 + Main.rand.Next(-num538, num538 + 1);
											if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2 && Main.rand.Next(6) == 0)
											{
												this.TargetClosest(true);
												int x171 = (int)(Main.player[this.target].Center.X / 16f);
												int y170 = (int)(Main.player[this.target].Center.Y / 16f);
												if (Main.tile[x171, y170].wall > 0)
												{
													num539 = x171;
													num540 = y170;
												}
											}
											try
											{
												if (WorldGen.SolidTile(num539, num540) || Main.tile[num539, num540].wall > 0 && (num537 > 500 || Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2))
												{
													flag113 = true;
													this.ai[0] = (float)num539;
													this.ai[1] = (float)num540;
													this.netUpdate = true;
												}
											}
											catch (Exception ex)
											{
#if DEBUG
												Console.WriteLine(ex);
												System.Diagnostics.Debugger.Break();

#endif
											}
										}
									}
								}
								if (this.ai[0] > 0f && this.ai[1] > 0f)
								{
									float single372 = 6f;
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										single372 = 8f;
									}
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
									{
										single372 = 10f;
									}
									if (Main.expertMode)
									{
										single372 = single372 + 1f;
									}
									if (Main.expertMode && Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										single372 = single372 + 1f;
									}
									if (flag111)
									{
										single372 = single372 * 2f;
									}
									if (flag112)
									{
										single372 = single372 * 2f;
									}
									Vector2 vector2173 = new Vector2(base.Center.X, base.Center.Y);
									float x172 = this.ai[0] * 16f - 8f - vector2173.X;
									float y171 = this.ai[1] * 16f - 8f - vector2173.Y;
									float single373 = (float)Math.Sqrt((double)(x172 * x172 + y171 * y171));
									if (single373 >= 12f + single372)
									{
										single373 = single372 / single373;
										this.velocity.X = x172 * single373;
										this.velocity.Y = y171 * single373;
									}
									else
									{
										this.velocity.X = x172;
										this.velocity.Y = y171;
									}
									Vector2 vector2174 = new Vector2(base.Center.X, base.Center.Y);
									float x173 = Main.npc[NPC.plantBoss].Center.X - vector2174.X;
									float y172 = Main.npc[NPC.plantBoss].Center.Y - vector2174.Y;
									this.rotation = (float)Math.Atan2((double)y172, (double)x173) - 1.57f;
									return;
								}
							}
							else if (this.aiStyle == 53)
							{
								if (NPC.plantBoss < 0)
								{
									this.StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
									this.netUpdate = true;
									return;
								}
								int num541 = NPC.plantBoss;
								if (this.ai[3] > 0f)
								{
									num541 = (int)this.ai[3] - 1;
								}
								if (Main.netMode != 1)
								{
									this.localAI[0] = this.localAI[0] - 1f;
									if (this.localAI[0] <= 0f)
									{
										this.localAI[0] = (float)Main.rand.Next(120, 480);
										this.ai[0] = (float)Main.rand.Next(-100, 101);
										this.ai[1] = (float)Main.rand.Next(-100, 101);
										this.netUpdate = true;
									}
								}
								this.TargetClosest(true);
								float single374 = 0.2f;
								float single375 = 200f;
								if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.25)
								{
									single375 = single375 + 100f;
								}
								if ((double)Main.npc[NPC.plantBoss].life < (double)Main.npc[NPC.plantBoss].lifeMax * 0.1)
								{
									single375 = single375 + 100f;
								}
								if (Main.expertMode)
								{
									float single376 = 1f - (float)this.life / (float)this.lifeMax;
									single375 = single375 + single376 * 300f;
									single374 = single374 + 0.3f;
								}
								if (!Main.npc[num541].active || NPC.plantBoss < 0)
								{
									this.active = false;
									return;
								}
								float x174 = Main.npc[num541].position.X + (float)(Main.npc[num541].width / 2);
								float y173 = Main.npc[num541].position.Y + (float)(Main.npc[num541].height / 2);
								Vector2 vector2175 = new Vector2(x174, y173);
								float single377 = x174 + this.ai[0];
								float single378 = y173 + this.ai[1];
								float x175 = single377 - vector2175.X;
								float y174 = single378 - vector2175.Y;
								float single379 = (float)Math.Sqrt((double)(x175 * x175 + y174 * y174));
								single379 = single375 / single379;
								x175 = x175 * single379;
								y174 = y174 * single379;
								if (this.position.X < x174 + x175)
								{
									this.velocity.X = this.velocity.X + single374;
									if (this.velocity.X < 0f && x175 > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								else if (this.position.X > x174 + x175)
								{
									this.velocity.X = this.velocity.X - single374;
									if (this.velocity.X > 0f && x175 < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								if (this.position.Y < y173 + y174)
								{
									this.velocity.Y = this.velocity.Y + single374;
									if (this.velocity.Y < 0f && y174 > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
								}
								else if (this.position.Y > y173 + y174)
								{
									this.velocity.Y = this.velocity.Y - single374;
									if (this.velocity.Y > 0f && y174 < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
								}
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
								if (x175 > 0f)
								{
									this.spriteDirection = 1;
									this.rotation = (float)Math.Atan2((double)y174, (double)x175);
								}
								if (x175 < 0f)
								{
									this.spriteDirection = -1;
									this.rotation = (float)Math.Atan2((double)y174, (double)x175) + 3.14f;
									return;
								}
							}
							else if (this.aiStyle == 54)
							{
								NPC.crimsonBoss = this.whoAmI;
								if (Main.netMode != 1 && this.localAI[0] == 0f)
								{
									this.localAI[0] = 1f;
									for (int v4 = 0; v4 < 20; v4++)
									{
										float x176 = base.Center.X;
										float y175 = base.Center.Y;
										x176 = x176 + (float)Main.rand.Next(-this.width, this.width);
										y175 = y175 + (float)Main.rand.Next(-this.height, this.height);
										int num542 = NPC.NewNPC((int)x176, (int)y175, 267, 0, 0f, 0f, 0f, 0f, 255);
										Main.npc[num542].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
										Main.npc[num542].netUpdate = true;
									}
								}
								if (Main.netMode != 1)
								{
									this.TargetClosest(true);
									if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)6000)
									{
										this.active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
										}
									}
								}
								if (this.ai[0] >= 0f)
								{
									this.TargetClosest(true);
									Vector2 vector2176 = new Vector2(base.Center.X, base.Center.Y);
									float x177 = Main.player[this.target].Center.X - vector2176.X;
									float y176 = Main.player[this.target].Center.Y - vector2176.Y;
									float single380 = (float)Math.Sqrt((double)(x177 * x177 + y176 * y176));
									float single381 = 1f;
									if (single380 >= single381)
									{
										single380 = single381 / single380;
										this.velocity.X = x177 * single380;
										this.velocity.Y = y176 * single380;
									}
									else
									{
										this.velocity.X = x177;
										this.velocity.Y = y176;
									}
									if (this.ai[0] == 0f)
									{
										if (Main.netMode != 1)
										{
											int num543 = 0;
											for (int w4 = 0; w4 < 200; w4++)
											{
												if (Main.npc[w4].active && Main.npc[w4].type == 267)
												{
													num543++;
												}
											}
											if (num543 == 0)
											{
												this.ai[0] = -1f;
												this.localAI[1] = 0f;
												this.alpha = 0;
												this.netUpdate = true;
											}
											this.localAI[1] = this.localAI[1] + 1f;
											if (this.localAI[1] >= (float)(120 + Main.rand.Next(300)))
											{
												this.localAI[1] = 0f;
												this.TargetClosest(true);
												int num544 = 0;
												do
												{
													num544++;
													int x178 = (int)Main.player[this.target].Center.X / 16;
													int y177 = (int)Main.player[this.target].Center.Y / 16;
													x178 = x178 + Main.rand.Next(-50, 51);
													y177 = y177 + Main.rand.Next(-50, 51);
													if (WorldGen.SolidTile(x178, y177) || !Collision.CanHit(new Vector2((float)(x178 * 16), (float)(y177 * 16)), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
													{
														continue;
													}
													this.ai[0] = 1f;
													this.ai[1] = (float)x178;
													this.ai[2] = (float)y177;
													this.netUpdate = true;
													return;
												}
												while (num544 <= 100);
												return;
											}
										}
									}
									else if (this.ai[0] == 1f)
									{
										NPC nPC160 = this;
										nPC160.alpha = nPC160.alpha + 5;
										if (this.alpha >= 255)
										{
											Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
											this.alpha = 255;
											this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
											this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
											this.ai[0] = 2f;
											return;
										}
									}
									else if (this.ai[0] == 2f)
									{
										NPC nPC161 = this;
										nPC161.alpha = nPC161.alpha - 5;
										if (this.alpha <= 0)
										{
											this.alpha = 0;
											this.ai[0] = 0f;
											return;
										}
									}
								}
								else
								{
									if (this.localAI[2] == 0f)
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										this.localAI[2] = 1f;
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 392, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 393, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 394, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 395, 1f);
										for (int x410 = 0; x410 < 20; x410++)
										{
											Vector2 vector2177 = this.position;
											int num545 = this.width;
											int num546 = this.height;
											skyBlue = new Color();
											Dust.NewDust(vector2177, num545, num546, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, skyBlue, 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									this.dontTakeDamage = false;
									this.knockBackResist = 0.5f;
									if (Main.expertMode)
									{
										NPC nPC162 = this;
										nPC162.knockBackResist = nPC162.knockBackResist * Main.expertKnockBack;
									}
									this.TargetClosest(true);
									Vector2 vector2178 = new Vector2(base.Center.X, base.Center.Y);
									float x179 = Main.player[this.target].Center.X - vector2178.X;
									float y178 = Main.player[this.target].Center.Y - vector2178.Y;
									float single382 = (float)Math.Sqrt((double)(x179 * x179 + y178 * y178));
									single382 = 8f / single382;
									x179 = x179 * single382;
									y178 = y178 * single382;
									this.velocity.X = (this.velocity.X * 50f + x179) / 51f;
									this.velocity.Y = (this.velocity.Y * 50f + y178) / 51f;
									if (this.ai[0] != -1f)
									{
										if (this.ai[0] == -2f)
										{
											NPC nPC163 = this;
											nPC163.velocity = nPC163.velocity * 0.9f;
											if (Main.netMode == 0)
											{
												this.ai[3] = this.ai[3] + 25f;
											}
											else
											{
												this.ai[3] = this.ai[3] + 15f;
											}
											if (this.ai[3] >= 255f)
											{
												this.ai[3] = 255f;
												this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
												this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
												Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
												this.ai[0] = -3f;
												this.netUpdate = true;
												this.netSpam = 0;
											}
											this.alpha = (int)this.ai[3];
											return;
										}
										if (this.ai[0] == -3f)
										{
											if (Main.netMode == 0)
											{
												this.ai[3] = this.ai[3] - 25f;
											}
											else
											{
												this.ai[3] = this.ai[3] - 15f;
											}
											if (this.ai[3] <= 0f)
											{
												this.ai[3] = 0f;
												this.ai[0] = -1f;
												this.netUpdate = true;
												this.netSpam = 0;
											}
											this.alpha = (int)this.ai[3];
											return;
										}
									}
									else if (Main.netMode != 1)
									{
										this.localAI[1] = this.localAI[1] + 1f;
										if (this.justHit)
										{
											this.localAI[1] = this.localAI[1] - (float)Main.rand.Next(5);
										}
										int num547 = 60 + Main.rand.Next(120);
										if (Main.netMode != 0)
										{
											num547 = num547 + Main.rand.Next(30, 90);
										}
										if (this.localAI[1] >= (float)num547)
										{
											this.localAI[1] = 0f;
											this.TargetClosest(true);
											int num548 = 0;
											do
											{
												num548++;
												int x180 = (int)Main.player[this.target].Center.X / 16;
												int y179 = (int)Main.player[this.target].Center.Y / 16;
												x180 = (Main.rand.Next(2) != 0 ? x180 - Main.rand.Next(7, 13) : x180 + Main.rand.Next(7, 13));
												y179 = (Main.rand.Next(2) != 0 ? y179 - Main.rand.Next(7, 13) : y179 + Main.rand.Next(7, 13));
												if (WorldGen.SolidTile(x180, y179))
												{
													continue;
												}
												this.ai[3] = 0f;
												this.ai[0] = -2f;
												this.ai[1] = (float)x180;
												this.ai[2] = (float)y179;
												this.netUpdate = true;
												this.netSpam = 0;
												return;
											}
											while (num548 <= 100);
											return;
										}
									}
								}
							}
							else if (this.aiStyle != 55)
							{
								if (this.aiStyle == 56)
								{
									this.TargetClosest(true);
									Vector2 vector2179 = new Vector2(base.Center.X, base.Center.Y);
									float x181 = Main.player[this.target].Center.X - vector2179.X;
									float y180 = Main.player[this.target].Center.Y - vector2179.Y;
									float single383 = (float)Math.Sqrt((double)(x181 * x181 + y180 * y180));
									single383 = 12f / single383;
									x181 = x181 * single383;
									y180 = y180 * single383;
									this.velocity.X = (this.velocity.X * 100f + x181) / 101f;
									this.velocity.Y = (this.velocity.Y * 100f + y180) / 101f;
									this.rotation = (float)Math.Atan2((double)y180, (double)x181) - 1.57f;
									Vector2 vector2180 = this.position;
									int num549 = this.width;
									int num550 = this.height;
									skyBlue = new Color();
									int num551 = Dust.NewDust(vector2180, num549, num550, 180, 0f, 0f, 0, skyBlue, 1f);
									Dust dust56 = Main.dust[num551];
									dust56.velocity = dust56.velocity * 0.1f;
									Main.dust[num551].scale = 1.3f;
									Main.dust[num551].noGravity = true;
									return;
								}
								if (this.aiStyle != 57)
								{
									if (this.aiStyle == 58)
									{
										this.localAI[0] = this.localAI[0] + 1f;
										if (this.localAI[0] > 6f)
										{
											this.localAI[0] = 0f;
											this.localAI[1] = this.localAI[1] + 1f;
											if (this.localAI[1] > 4f)
											{
												this.localAI[1] = 0f;
											}
										}
										if (Main.netMode != 1)
										{
											this.localAI[2] = this.localAI[2] + 1f;
											if (this.localAI[2] > 300f)
											{
												this.ai[3] = (float)Main.rand.Next(3);
												this.localAI[2] = 0f;
											}
											else if (this.ai[3] == 0f && this.localAI[2] % 30f == 0f && this.localAI[2] > 30f)
											{
												float single384 = 5f;
												Vector2 vector2181 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												if (!WorldGen.SolidTile((int)vector2181.X / 16, (int)vector2181.Y / 16))
												{
													float x182 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2181.X;
													float y181 = Main.player[this.target].position.Y - vector2181.Y;
													x182 = x182 + (float)Main.rand.Next(-50, 51);
													y181 = y181 + (float)Main.rand.Next(50, 201);
													y181 = y181 * 0.2f;
													float single385 = (float)Math.Sqrt((double)(x182 * x182 + y181 * y181));
													single385 = single384 / single385;
													x182 = x182 * single385;
													y181 = y181 * single385;
													x182 = x182 * (1f + (float)Main.rand.Next(-30, 31) * 0.01f);
													y181 = y181 * (1f + (float)Main.rand.Next(-30, 31) * 0.01f);
													Projectile.NewProjectile(vector2181.X, vector2181.Y, x182, y181, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
												}
											}
										}
										if (this.ai[0] == 0f && Main.netMode != 1)
										{
											this.TargetClosest(true);
											this.ai[0] = 1f;
											int num552 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
											Main.npc[num552].ai[0] = -1f;
											Main.npc[num552].ai[1] = (float)this.whoAmI;
											Main.npc[num552].target = this.target;
											Main.npc[num552].netUpdate = true;
											num552 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI, 0f, 0f, 0f, 0f, 255);
											Main.npc[num552].ai[0] = 1f;
											Main.npc[num552].ai[1] = (float)this.whoAmI;
											Main.npc[num552].ai[3] = 150f;
											Main.npc[num552].target = this.target;
											Main.npc[num552].netUpdate = true;
										}
										if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
										{
											this.TargetClosest(true);
											if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
											{
												this.ai[1] = 2f;
											}
										}
										if (Main.dayTime)
										{
											this.velocity.Y = this.velocity.Y + 0.3f;
											this.velocity.X = this.velocity.X * 0.9f;
										}
										else if (this.ai[1] == 0f)
										{
											this.ai[2] = this.ai[2] + 1f;
											if (this.ai[2] >= 300f)
											{
												if (this.ai[3] == 1f)
												{
													this.ai[2] = 0f;
													this.ai[1] = 1f;
													this.TargetClosest(true);
													this.netUpdate = true;
												}
												else
												{
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
											}
											Vector2 vector2182 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float x183 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2182.X;
											float y182 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector2182.Y;
											float single386 = (float)Math.Sqrt((double)(x183 * x183 + y182 * y182));
											float single387 = 6f;
											if (this.ai[3] == 1f)
											{
												if (single386 > 900f)
												{
													single387 = 12f;
												}
												else if (single386 > 600f)
												{
													single387 = 10f;
												}
												else if (single386 > 300f)
												{
													single387 = 8f;
												}
											}
											if (single386 > 50f)
											{
												single386 = single387 / single386;
												this.velocity.X = (this.velocity.X * 14f + x183 * single386) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + y182 * single386) / 15f;
											}
										}
										else if (this.ai[1] == 1f)
										{
											this.ai[2] = this.ai[2] + 1f;
											if (this.ai[2] >= 600f || this.ai[3] != 1f)
											{
												this.ai[2] = 0f;
												this.ai[1] = 0f;
											}
											Vector2 vector2183 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float x184 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2183.X;
											float y183 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2183.Y;
											float single388 = (float)Math.Sqrt((double)(x184 * x184 + y183 * y183));
											single388 = 16f / single388;
											this.velocity.X = (this.velocity.X * 49f + x184 * single388) / 50f;
											this.velocity.Y = (this.velocity.Y * 49f + y183 * single388) / 50f;
										}
										else if (this.ai[1] == 2f)
										{
											this.ai[1] = 3f;
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.95f;
											}
											this.velocity.X = this.velocity.X * 0.95f;
											if (this.timeLeft > 500)
											{
												this.timeLeft = 500;
											}
										}
										this.rotation = this.velocity.X * -0.02f;
										return;
									}
									if (this.aiStyle == 59)
									{
										this.spriteDirection = -(int)this.ai[0];
										if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 58)
										{
											this.ai[2] = this.ai[2] + 10f;
											if (this.ai[2] > 50f || Main.netMode != 2)
											{
												this.life = -1;
												this.HitEffect(0, 10);
												this.active = false;
											}
										}
										if (Main.netMode != 1 && Main.npc[(int)this.ai[1]].ai[3] == 2f)
										{
											this.localAI[1] = this.localAI[1] + 1f;
											if (this.localAI[1] > 90f)
											{
												this.localAI[1] = 0f;
												float single389 = 0.01f;
												Vector2 vector2184 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float x185 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2184.X;
												float y184 = Main.player[this.target].position.Y - vector2184.Y;
												float single390 = (float)Math.Sqrt((double)(x185 * x185 + y184 * y184));
												single390 = single389 / single390;
												x185 = x185 * single390;
												y184 = y184 * single390;
												Projectile.NewProjectile(base.Center.X, base.Center.Y, x185, y184, 329, 60, 0f, Main.myPlayer, this.rotation, (float)this.spriteDirection);
											}
										}
										if (Main.dayTime)
										{
											this.velocity.Y = this.velocity.Y + 0.3f;
											this.velocity.X = this.velocity.X * 0.9f;
											return;
										}
										if (this.ai[2] == 0f || this.ai[2] == 3f)
										{
											if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											this.ai[3] = this.ai[3] + 1f;
											if (this.ai[3] >= 180f)
											{
												this.ai[2] = this.ai[2] + 1f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
											Vector2 vector2185 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float x186 = (Main.player[this.target].Center.X + Main.npc[(int)this.ai[1]].Center.X) / 2f;
											float y185 = (Main.player[this.target].Center.Y + Main.npc[(int)this.ai[1]].Center.Y) / 2f;
											x186 = x186 + (-170f * this.ai[0] - vector2185.X);
											y185 = y185 + (90f - vector2185.Y);
											if (Math.Abs(Main.player[this.target].Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(Main.player[this.target].Center.Y - Main.npc[(int)this.ai[1]].Center.Y) > 700f)
											{
												x186 = Main.npc[(int)this.ai[1]].Center.X - 170f * this.ai[0] - vector2185.X;
												y185 = Main.npc[(int)this.ai[1]].Center.Y + 90f - vector2185.Y;
											}
											float single391 = (float)Math.Sqrt((double)(x186 * x186 + y185 * y185));
											float single392 = 6f;
											if (single391 > 1000f)
											{
												single392 = 21f;
											}
											else if (single391 > 800f)
											{
												single392 = 18f;
											}
											else if (single391 > 600f)
											{
												single392 = 15f;
											}
											else if (single391 > 400f)
											{
												single392 = 12f;
											}
											else if (single391 > 200f)
											{
												single392 = 9f;
											}
											if (this.ai[0] < 0f && base.Center.X > Main.npc[(int)this.ai[1]].Center.X)
											{
												x186 = x186 - 4f;
											}
											if (this.ai[0] > 0f && base.Center.X < Main.npc[(int)this.ai[1]].Center.X)
											{
												x186 = x186 + 4f;
											}
											single391 = single392 / single391;
											this.velocity.X = (this.velocity.X * 14f + x186 * single391) / 15f;
											this.velocity.Y = (this.velocity.Y * 14f + y185 * single391) / 15f;
											single391 = (float)Math.Sqrt((double)(x186 * x186 + y185 * y185));
											if (single391 > 20f)
											{
												this.rotation = (float)Math.Atan2((double)y185, (double)x186) + 1.57f;
												return;
											}
										}
										else if (this.ai[2] == 1f)
										{
											Vector2 vector2186 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float x187 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2186.X;
											float y186 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2186.Y;
											float single393 = (float)Math.Sqrt((double)(x187 * x187 + y186 * y186));
											this.rotation = (float)Math.Atan2((double)y186, (double)x187) + 1.57f;
											this.velocity.X = this.velocity.X * 0.95f;
											this.velocity.Y = this.velocity.Y - 0.3f;
											if (this.velocity.Y < -14f)
											{
												this.velocity.Y = -14f;
											}
											if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
											{
												this.TargetClosest(true);
												this.ai[2] = 2f;
												vector2186 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												x187 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2186.X;
												y186 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2186.Y;
												single393 = (float)Math.Sqrt((double)(x187 * x187 + y186 * y186));
												single393 = 18f / single393;
												this.velocity.X = x187 * single393;
												this.velocity.Y = y186 * single393;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[2] == 2f)
										{
											float single394 = Math.Abs(base.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(base.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
											if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f || single394 > 800f)
											{
												this.ai[2] = 3f;
												return;
											}
										}
										else if (this.ai[2] == 4f)
										{
											Vector2 vector2187 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float x188 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector2187.X;
											float y187 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector2187.Y;
											float single395 = (float)Math.Sqrt((double)(x188 * x188 + y187 * y187));
											this.rotation = (float)Math.Atan2((double)y187, (double)x188) + 1.57f;
											this.velocity.Y = this.velocity.Y * 0.95f;
											this.velocity.X = this.velocity.X + 0.3f * -this.ai[0];
											if (this.velocity.X < -14f)
											{
												this.velocity.X = -14f;
											}
											if (this.velocity.X > 14f)
											{
												this.velocity.X = 14f;
											}
											if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
											{
												this.TargetClosest(true);
												this.ai[2] = 5f;
												vector2187 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												x188 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2187.X;
												y187 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector2187.Y;
												single395 = (float)Math.Sqrt((double)(x188 * x188 + y187 * y187));
												single395 = 17f / single395;
												this.velocity.X = x188 * single395;
												this.velocity.Y = y187 * single395;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[2] == 5f)
										{
											float single396 = Math.Abs(base.Center.X - Main.npc[(int)this.ai[1]].Center.X) + Math.Abs(base.Center.Y - Main.npc[(int)this.ai[1]].Center.Y);
											if (this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) || this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) || single396 > 800f)
											{
												this.ai[2] = 0f;
												return;
											}
										}
									}
									else if (this.aiStyle == 60)
									{
										if (Main.dayTime)
										{
											if (this.velocity.X <= 0f)
											{
												this.velocity.X = this.velocity.X - 0.25f;
											}
											else
											{
												this.velocity.X = this.velocity.X + 0.25f;
											}
											this.velocity.Y = this.velocity.Y - 0.1f;
											this.rotation = this.velocity.X * 0.05f;
										}
										else if (this.ai[0] == 0f)
										{
											if (this.ai[2] == 0f)
											{
												this.TargetClosest(true);
												if (base.Center.X >= Main.player[this.target].Center.X)
												{
													this.ai[2] = -1f;
												}
												else
												{
													this.ai[2] = 1f;
												}
											}
											this.TargetClosest(true);
											int num553 = 800;
											float single397 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
											if (base.Center.X < Main.player[this.target].Center.X && this.ai[2] < 0f && single397 > (float)num553)
											{
												this.ai[2] = 0f;
											}
											if (base.Center.X > Main.player[this.target].Center.X && this.ai[2] > 0f && single397 > (float)num553)
											{
												this.ai[2] = 0f;
											}
											float single398 = 0.45f;
											float single399 = 7f;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												single398 = 0.55f;
												single399 = 8f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												single398 = 0.7f;
												single399 = 10f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												single398 = 0.8f;
												single399 = 11f;
											}
											this.velocity.X = this.velocity.X + this.ai[2] * single398;
											if (this.velocity.X > single399)
											{
												this.velocity.X = single399;
											}
											if (this.velocity.X < -single399)
											{
												this.velocity.X = -single399;
											}
											float y188 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
											if (y188 < 150f)
											{
												this.velocity.Y = this.velocity.Y - 0.2f;
											}
											if (y188 > 200f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
											if (this.velocity.Y > 8f)
											{
												this.velocity.Y = 8f;
											}
											if (this.velocity.Y < -8f)
											{
												this.velocity.Y = -8f;
											}
											this.rotation = this.velocity.X * 0.05f;
											if ((single397 < 500f || this.ai[3] < 0f) && this.position.Y < Main.player[this.target].position.Y)
											{
												this.ai[3] = this.ai[3] + 1f;
												int num554 = 13;
												if ((double)this.life < (double)this.lifeMax * 0.75)
												{
													num554 = 12;
												}
												if ((double)this.life < (double)this.lifeMax * 0.5)
												{
													num554 = 11;
												}
												if ((double)this.life < (double)this.lifeMax * 0.25)
												{
													num554 = 10;
												}
												num554++;
												if (this.ai[3] > (float)num554)
												{
													this.ai[3] = (float)(-num554);
												}
												if (this.ai[3] == 0f && Main.netMode != 1)
												{
													Vector2 vector2188 = new Vector2(base.Center.X, base.Center.Y);
													float x189 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2188.X;
													float y189 = Main.player[this.target].Center.Y - vector2188.Y;
													float single400 = (float)Math.Sqrt((double)(x189 * x189 + y189 * y189));
													float single401 = 6f;
													if ((double)this.life < (double)this.lifeMax * 0.75)
													{
														single401 = 7f;
													}
													if ((double)this.life < (double)this.lifeMax * 0.5)
													{
														single401 = 8f;
													}
													if ((double)this.life < (double)this.lifeMax * 0.25)
													{
														single401 = 9f;
													}
													single400 = single401 / single400;
													x189 = x189 * single400;
													y189 = y189 * single400;
													Projectile.NewProjectile(vector2188.X, vector2188.Y, x189, y189, 348, 42, 0f, Main.myPlayer, 0f, 0f);
												}
											}
											else if (this.ai[3] < 0f)
											{
												this.ai[3] = this.ai[3] + 1f;
											}
											if (Main.netMode != 1)
											{
												this.ai[1] = this.ai[1] + (float)Main.rand.Next(1, 4);
												if (this.ai[1] > 800f && single397 < 600f)
												{
													this.ai[0] = -1f;
												}
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.TargetClosest(true);
											float single402 = 0.15f;
											float single403 = 7f;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												single402 = 0.17f;
												single403 = 8f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												single402 = 0.2f;
												single403 = 9f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												single402 = 0.25f;
												single403 = 10f;
											}
											single402 = single402 - 0.05f;
											single403 = single403 - 1f;
											if (base.Center.X < Main.player[this.target].Center.X)
											{
												this.velocity.X = this.velocity.X + single402;
												if (this.velocity.X < 0f)
												{
													this.velocity.X = this.velocity.X * 0.98f;
												}
											}
											if (base.Center.X > Main.player[this.target].Center.X)
											{
												this.velocity.X = this.velocity.X - single402;
												if (this.velocity.X > 0f)
												{
													this.velocity.X = this.velocity.X * 0.98f;
												}
											}
											if (this.velocity.X > single403 || this.velocity.X < -single403)
											{
												this.velocity.X = this.velocity.X * 0.95f;
											}
											float y190 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
											if (y190 < 180f)
											{
												this.velocity.Y = this.velocity.Y - 0.1f;
											}
											if (y190 > 200f)
											{
												this.velocity.Y = this.velocity.Y + 0.1f;
											}
											if (this.velocity.Y > 6f)
											{
												this.velocity.Y = 6f;
											}
											if (this.velocity.Y < -6f)
											{
												this.velocity.Y = -6f;
											}
											this.rotation = this.velocity.X * 0.01f;
											if (Main.netMode != 1)
											{
												this.ai[3] = this.ai[3] + 1f;
												int num555 = 15;
												if ((double)this.life < (double)this.lifeMax * 0.75)
												{
													num555 = 14;
												}
												if ((double)this.life < (double)this.lifeMax * 0.5)
												{
													num555 = 12;
												}
												if ((double)this.life < (double)this.lifeMax * 0.25)
												{
													num555 = 10;
												}
												if ((double)this.life < (double)this.lifeMax * 0.1)
												{
													num555 = 8;
												}
												num555 = num555 + 3;
												if (this.ai[3] >= (float)num555)
												{
													this.ai[3] = 0f;
													Vector2 vector2189 = new Vector2(base.Center.X, this.position.Y + (float)this.height - 14f);
													if (!WorldGen.SolidTile((int)(vector2189.X / 16f), (int)(vector2189.Y / 16f)))
													{
														float y191 = this.velocity.Y;
														if (y191 < 0f)
														{
															y191 = 0f;
														}
														y191 = y191 + 3f;
														float x190 = this.velocity.X * 0.25f;
														Projectile.NewProjectile(vector2189.X, vector2189.Y, x190, y191, 349, 37, 0f, Main.myPlayer, (float)Main.rand.Next(5), 0f);
													}
												}
											}
											if (Main.netMode != 1)
											{
												this.ai[1] = this.ai[1] + (float)Main.rand.Next(1, 4);
												if (this.ai[1] > 600f)
												{
													this.ai[0] = -1f;
												}
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.TargetClosest(true);
											Vector2 vector2190 = new Vector2(base.Center.X, base.Center.Y - 20f);
											float single404 = (float)Main.rand.Next(-1000, 1001);
											float single405 = (float)Main.rand.Next(-1000, 1001);
											float single406 = (float)Math.Sqrt((double)(single404 * single404 + single405 * single405));
											float single407 = 15f;
											NPC nPC164 = this;
											nPC164.velocity = nPC164.velocity * 0.95f;
											single406 = single407 / single406;
											single404 = single404 * single406;
											single405 = single405 * single406;
											NPC nPC165 = this;
											nPC165.rotation = nPC165.rotation + 0.2f;
											vector2190.X = vector2190.X + single404 * 4f;
											vector2190.Y = vector2190.Y + single405 * 4f;
											this.ai[3] = this.ai[3] + 1f;
											int num556 = 7;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num556--;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num556 = num556 - 2;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num556 = num556 - 3;
											}
											if ((double)this.life < (double)this.lifeMax * 0.1)
											{
												num556 = num556 - 4;
											}
											if (this.ai[3] > (float)num556)
											{
												this.ai[3] = 0f;
												Projectile.NewProjectile(vector2190.X, vector2190.Y, single404, single405, 349, 35, 0f, Main.myPlayer, 0f, 0f);
											}
											if (Main.netMode != 1)
											{
												this.ai[1] = this.ai[1] + (float)Main.rand.Next(1, 4);
												if (this.ai[1] > 500f)
												{
													this.ai[0] = -1f;
												}
											}
										}
										if (this.ai[0] == -1f)
										{
											int num557 = Main.rand.Next(3);
											this.TargetClosest(true);
											if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 1000f)
											{
												num557 = 0;
											}
											this.ai[0] = (float)num557;
											this.ai[1] = 0f;
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											return;
										}
									}
									else if (this.aiStyle == 61)
									{
										float single408 = 2f;
										this.noGravity = true;
										this.noTileCollide = true;
										if (!Main.dayTime)
										{
											this.TargetClosest(true);
										}
										bool flag114 = false;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											single408 = 3f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											single408 = 4f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											single408 = 5f;
										}
										if (Main.dayTime)
										{
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											single408 = 8f;
											if (this.velocity.X == 0f)
											{
												this.velocity.X = 0.1f;
											}
										}
										else if (this.ai[0] == 0f)
										{
											this.ai[1] = this.ai[1] + 1f;
											if (this.ai[1] >= 300f && Main.netMode != 1)
											{
												this.TargetClosest(true);
												this.ai[1] = 0f;
												this.ai[0] = 1f;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.ai[1] = this.ai[1] + 1f;
											flag114 = true;
											int num558 = 16;
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num558 = 8;
											}
											else if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num558 = 11;
											}
											else if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num558 = 14;
											}
											if (this.ai[1] % (float)num558 == 0f)
											{
												Vector2 vector2191 = new Vector2(base.Center.X + (float)(this.direction * 50), base.Center.Y + (float)Main.rand.Next(15, 36));
												float x191 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2191.X;
												float y192 = Main.player[this.target].Center.Y - vector2191.Y;
												x191 = x191 + (float)Main.rand.Next(-40, 41);
												y192 = y192 + (float)Main.rand.Next(-40, 41);
												float single409 = (float)Math.Sqrt((double)(x191 * x191 + y192 * y192));
												single409 = 15f / single409;
												x191 = x191 * single409;
												y192 = y192 * single409;
												x191 = x191 * (1f + (float)Main.rand.Next(-20, 21) * 0.015f);
												y192 = y192 * (1f + (float)Main.rand.Next(-20, 21) * 0.015f);
												Projectile.NewProjectile(vector2191.X, vector2191.Y, x191, y192, 180, 36, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] > 240f)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
											}
										}
										if (Main.netMode != 1)
										{
											int num559 = 600;
											int num560 = 1200;
											int num561 = 2700;
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num559 = (int)((double)num559 * 0.5);
												num560 = (int)((double)num560 * 0.5);
												num561 = (int)((double)num561 * 0.5);
											}
											else if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num559 = (int)((double)num559 * 0.75);
												num560 = (int)((double)num560 * 0.75);
												num561 = (int)((double)num561 * 0.75);
											}
											else if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num559 = (int)((double)num559 * 0.9);
												num560 = (int)((double)num560 * 0.9);
												num561 = (int)((double)num561 * 0.9);
											}
											if (Main.rand.Next(num559) == 0)
											{
												Vector2 vector2192 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
												float single410 = (float)(Main.rand.Next(1, 100) * this.direction);
												float single411 = 1f;
												float single412 = (float)Math.Sqrt((double)(single410 * single410 + single411 * single411));
												single412 = 1f / single412;
												single410 = single410 * single412;
												single411 = single411 * single412;
												Projectile.NewProjectile(vector2192.X, vector2192.Y, single410, single411, 352, 80, 0f, Main.myPlayer, 0f, 0f);
											}
											if (Main.rand.Next(num560) == 0)
											{
												this.localAI[1] = 1f;
											}
											if (this.localAI[1] >= 1f)
											{
												this.localAI[1] = this.localAI[1] + 1f;
												if (this.localAI[1] % (float)12 == 0f)
												{
													Vector2 vector2193 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
													float x192 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2193.X;
													float y193 = Main.player[this.target].Center.Y - vector2193.Y;
													x192 = x192 + (float)Main.rand.Next(-50, 51);
													y193 = y193 + (float)Main.rand.Next(-50, 51);
													float single413 = (float)Math.Sqrt((double)(x192 * x192 + y193 * y193));
													single413 = 12.5f / single413;
													x192 = x192 * single413;
													y193 = y193 * single413;
													x192 = x192 * (1f + (float)Main.rand.Next(-20, 21) * 0.015f);
													y193 = y193 * (1f + (float)Main.rand.Next(-20, 21) * 0.015f);
													Projectile.NewProjectile(vector2193.X, vector2193.Y, x192, y193, 350, 42, 0f, Main.myPlayer, 0f, 0f);
												}
												if (this.localAI[1] >= 100f)
												{
													this.localAI[1] = 0f;
												}
											}
											if (Main.rand.Next(num561) == 0)
											{
												this.localAI[2] = 2f;
											}
											if (this.localAI[2] > 0f)
											{
												this.localAI[2] = this.localAI[2] + 1f;
												if (this.localAI[2] % (float)9 == 0f)
												{
													Vector2 vector2194 = new Vector2(base.Center.X - (float)(this.direction * 24), base.Center.Y - 64f);
													float single414 = (float)Main.rand.Next(-100, 101);
													float single415 = -300f;
													float single416 = (float)Math.Sqrt((double)(single414 * single414 + single415 * single415));
													single416 = 11f / single416;
													single414 = single414 * single416;
													single415 = single415 * single416;
													single414 = single414 * (1f + (float)Main.rand.Next(-20, 21) * 0.01f);
													single415 = single415 * (1f + (float)Main.rand.Next(-20, 21) * 0.01f);
													Projectile.NewProjectile(vector2194.X, vector2194.Y, single414, single415, 351, 50, 0f, Main.myPlayer, 0f, 0f);
												}
												if (this.localAI[2] >= 100f)
												{
													this.localAI[2] = 0f;
												}
											}
										}
										if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 50f)
										{
											flag114 = true;
										}
										if (!flag114)
										{
											if (this.direction > 0)
											{
												this.velocity.X = (this.velocity.X * 20f + single408) / 21f;
											}
											if (this.direction < 0)
											{
												this.velocity.X = (this.velocity.X * 20f - single408) / 21f;
											}
										}
										else
										{
											this.velocity.X = this.velocity.X * 0.9f;
											if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
											{
												this.velocity.X = 0f;
											}
										}
										int num562 = 80;
										int num563 = 20;
										Vector2 vector2195 = new Vector2(base.Center.X - (float)(num562 / 2), this.position.Y + (float)this.height - (float)num563);
										bool flag115 = false;
										if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
										{
											flag115 = true;
										}
										if (flag115)
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
										else if (!Collision.SolidCollision(vector2195, num562, num563))
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = 0f;
											}
											if ((double)this.velocity.Y >= 0.1)
											{
												this.velocity.Y = this.velocity.Y + 0.5f;
											}
											else
											{
												this.velocity.Y = this.velocity.Y + 0.025f;
											}
										}
										else
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = 0f;
											}
											if ((double)this.velocity.Y <= -0.2)
											{
												this.velocity.Y = this.velocity.Y - 0.2f;
											}
											else
											{
												this.velocity.Y = this.velocity.Y - 0.025f;
											}
											if (this.velocity.Y < -4f)
											{
												this.velocity.Y = -4f;
											}
										}
										if (this.velocity.Y > 10f)
										{
											this.velocity.Y = 10f;
											return;
										}
									}
									else if (this.aiStyle != 62)
									{
										if (this.aiStyle == 63)
										{
											this.TargetClosest(true);
											float single417 = 11f;
											Vector2 vector2196 = new Vector2(base.Center.X + (float)(this.direction * 20), base.Center.Y + 6f);
											float x193 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2196.X;
											float y194 = Main.player[this.target].Center.Y - vector2196.Y;
											float single418 = (float)Math.Sqrt((double)(x193 * x193 + y194 * y194));
											float single419 = single417 / single418;
											x193 = x193 * single419;
											y194 = y194 * single419;
											if (Main.dayTime)
											{
												x193 = -x193;
												y194 = -y194;
											}
											this.ai[0] = this.ai[0] - 1f;
											if (single418 < 200f || this.ai[0] > 0f)
											{
												if (single418 < 200f)
												{
													this.ai[0] = 20f;
												}
												if (this.velocity.X >= 0f)
												{
													this.direction = 1;
												}
												else
												{
													this.direction = -1;
												}
												NPC nPC166 = this;
												nPC166.rotation = nPC166.rotation + (float)this.direction * 0.3f;
												return;
											}
											this.velocity.X = (this.velocity.X * 50f + x193) / 51f;
											this.velocity.Y = (this.velocity.Y * 50f + y194) / 51f;
											if (single418 < 350f)
											{
												this.velocity.X = (this.velocity.X * 10f + x193) / 11f;
												this.velocity.Y = (this.velocity.Y * 10f + y194) / 11f;
											}
											if (single418 < 300f)
											{
												this.velocity.X = (this.velocity.X * 7f + x193) / 8f;
												this.velocity.Y = (this.velocity.Y * 7f + y194) / 8f;
											}
											this.rotation = this.velocity.X * 0.15f;
											return;
										}
										if (this.aiStyle == 64)
										{
											float single420 = this.ai[0];
											float single421 = this.ai[1];
											if (Main.netMode != 1)
											{
												this.localAI[0] = this.localAI[0] - 1f;
												if (this.ai[3] == 0f)
												{
													this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
												}
												if (this.localAI[0] <= 0f)
												{
													this.TargetClosest(true);
													this.localAI[0] = (float)Main.rand.Next(60, 180);
													float single422 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
													if (single422 <= 700f || this.localAI[3] != 0f)
													{
														this.localAI[3] = 1f;
														float single423 = (float)Main.rand.Next(5, 151) * 0.01f;
														int num564 = Main.rand.Next(-100, 101);
														int num565 = Main.rand.Next(-100, 101);
														float single424 = single423 / (float)Math.Sqrt((double)(num564 * num564 + num565 * num565));
														single420 = (float)num564 * single424;
														single421 = (float)num565 * single424;
													}
													else
													{
														float single425 = (float)Main.rand.Next(50, 151) * 0.01f;
														if (single422 > 1000f)
														{
															single425 = (float)Main.rand.Next(150, 201) * 0.01f;
														}
														else if (single422 > 850f)
														{
															single425 = (float)Main.rand.Next(100, 151) * 0.01f;
														}
														int num566 = this.direction * Main.rand.Next(100, 251);
														int num567 = Main.rand.Next(-50, 51);
														if (this.position.Y > Main.player[this.target].position.Y - 100f)
														{
															num567 = num567 - Main.rand.Next(100, 251);
														}
														float single426 = single425 / (float)Math.Sqrt((double)(num566 * num566 + num567 * num567));
														single420 = (float)num566 * single426;
														single421 = (float)num567 * single426;
													}
													this.netUpdate = true;
												}
											}
											this.scale = this.ai[3];
											if (this.localAI[2] > 0f)
											{
												int x194 = (int)base.Center.X / 16;
												int y195 = (int)base.Center.Y / 16;
												if (this.localAI[2] > 3f)
												{
													if (this.type != 358)
													{
														Lighting.AddLight(x194, y195, 0.109500006f * this.scale, 0.15f * this.scale, 0.0615f * this.scale);
													}
													else
													{
														Lighting.AddLight(x194, y195, 0.101249993f * this.scale, 0.21374999f * this.scale, 0.225f * this.scale);
													}
												}
												this.localAI[2] = this.localAI[2] - 1f;
											}
											else if (this.localAI[1] <= 0f)
											{
												this.localAI[1] = (float)Main.rand.Next(30, 180);
												if (!Main.dayTime || (double)(this.position.Y / 16f) > Main.worldSurface + 10)
												{
													this.localAI[2] = (float)Main.rand.Next(10, 30);
												}
											}
											else
											{
												this.localAI[1] = this.localAI[1] - 1f;
											}
											int num568 = 80;
											this.velocity.X = (this.velocity.X * (float)(num568 - 1) + single420) / (float)num568;
											this.velocity.Y = (this.velocity.Y * (float)(num568 - 1) + single421) / (float)num568;
											if (this.velocity.Y > 0f)
											{
												int num569 = 4;
												int x195 = (int)base.Center.X / 16;
												int y196 = (int)base.Center.Y / 16;
												for (int y410 = y196; y410 < y196 + num569; y410++)
												{
													if (Main.tile[x195, y410] != null && (Main.tile[x195, y410].nactive() && Main.tileSolid[Main.tile[x195, y410].type] || Main.tile[x195, y410].liquid > 0))
													{
														single421 = single421 * -1f;
														if (this.velocity.Y > 0f)
														{
															this.velocity.Y = this.velocity.Y * 0.9f;
														}
													}
												}
											}
											if (this.velocity.Y < 0f)
											{
												int num570 = 30;
												bool flag116 = false;
												int x196 = (int)base.Center.X / 16;
												int y197 = (int)base.Center.Y / 16;
												for (int a4 = y197; a4 < y197 + num570; a4++)
												{
													if (Main.tile[x196, a4] != null && Main.tile[x196, a4].nactive() && Main.tileSolid[Main.tile[x196, a4].type])
													{
														flag116 = true;
													}
												}
												if (!flag116)
												{
													single421 = single421 * -1f;
													if (this.velocity.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
											if (this.collideX)
											{
												single420 = (this.velocity.X >= 0f ? -Math.Abs(single420) : Math.Abs(single420));
												this.velocity.X = this.velocity.X * -0.2f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											if (this.velocity.X > 0f)
											{
												this.direction = 1;
											}
											this.ai[0] = single420;
											this.ai[1] = single421;
											return;
										}
										if (this.aiStyle == 65)
										{
											float single427 = this.ai[0];
											float single428 = this.ai[1];
											if (Main.netMode != 1)
											{
												if (this.ai[2] == 0f)
												{
													int num571 = 0;
													int num572 = 4;
													int num573 = 6;
													int num574 = 3;
													int num575 = 7;
													int num576 = 2;
													int num577 = 1;
													int num578 = 5;
													int num579 = Main.rand.Next(100);
													if (num579 == 0)
													{
														num579 = num578;
													}
													else if (num579 < 3)
													{
														num579 = num577;
													}
													else if (num579 < 9)
													{
														num579 = num576;
													}
													else if (num579 < 19)
													{
														num579 = num575;
													}
													else if (num579 < 34)
													{
														num579 = num574;
													}
													else if (num579 >= 53)
													{
														num579 = (num579 >= 75 ? num571 : num572);
													}
													else
													{
														num579 = num573;
													}
													this.ai[2] = (float)(1 + num579);
												}
												if (this.ai[3] == 0f)
												{
													this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
												}
												this.localAI[0] = this.localAI[0] - 1f;
												if (this.localAI[0] <= 0f)
												{
													this.TargetClosest(true);
													this.localAI[0] = (float)Main.rand.Next(90, 240);
													float single429 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
													if (single429 <= 700f || this.localAI[3] != 0f)
													{
														this.localAI[3] = 1f;
														float single430 = (float)Main.rand.Next(26, 301) * 0.01f;
														int num580 = Main.rand.Next(-100, 101);
														int num581 = Main.rand.Next(-100, 101);
														float single431 = single430 / (float)Math.Sqrt((double)(num580 * num580 + num581 * num581));
														single427 = (float)num580 * single431;
														single428 = (float)num581 * single431;
													}
													else
													{
														float single432 = (float)Main.rand.Next(50, 151) * 0.01f;
														if (single429 > 1000f)
														{
															single432 = (float)Main.rand.Next(150, 201) * 0.01f;
														}
														else if (single429 > 850f)
														{
															single432 = (float)Main.rand.Next(100, 151) * 0.01f;
														}
														int num582 = this.direction * Main.rand.Next(100, 251);
														int num583 = Main.rand.Next(-50, 51);
														if (this.position.Y > Main.player[this.target].position.Y - 100f)
														{
															num583 = num583 - Main.rand.Next(100, 251);
														}
														float single433 = single432 / (float)Math.Sqrt((double)(num582 * num582 + num583 * num583));
														single427 = (float)num582 * single433;
														single428 = (float)num583 * single433;
													}
													this.netUpdate = true;
												}
											}
											this.scale = this.ai[3];
											int num584 = 60;
											this.velocity.X = (this.velocity.X * (float)(num584 - 1) + single427) / (float)num584;
											this.velocity.Y = (this.velocity.Y * (float)(num584 - 1) + single428) / (float)num584;
											if (this.velocity.Y > 0f)
											{
												int num585 = 3;
												int x197 = (int)base.Center.X / 16;
												int y198 = (int)base.Center.Y / 16;
												for (int b4 = y198; b4 < y198 + num585; b4++)
												{
													if (Main.tile[x197, b4] != null && (Main.tile[x197, b4].nactive() && Main.tileSolid[Main.tile[x197, b4].type] || Main.tile[x197, b4].liquid > 0))
													{
														single428 = single428 * -1f;
														if (this.velocity.Y > 0f)
														{
															this.velocity.Y = this.velocity.Y * 0.9f;
														}
													}
												}
											}
											if (this.velocity.Y < 0f)
											{
												int num586 = 30;
												bool flag117 = false;
												int x198 = (int)base.Center.X / 16;
												int y199 = (int)base.Center.Y / 16;
												for (int c4 = y199; c4 < y199 + num586; c4++)
												{
													if (Main.tile[x198, c4] != null && Main.tile[x198, c4].nactive() && Main.tileSolid[Main.tile[x198, c4].type])
													{
														flag117 = true;
													}
												}
												if (!flag117)
												{
													single428 = single428 * -1f;
													if (this.velocity.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
											if (this.collideX)
											{
												single427 = (this.velocity.X >= 0f ? -Math.Abs(single427) : Math.Abs(single427));
												this.velocity.X = this.velocity.X * -0.2f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											if (this.velocity.X > 0f)
											{
												this.direction = 1;
											}
											this.ai[0] = single427;
											this.ai[1] = single428;
											if (this.type == 356)
											{
												this.catchItem = (short)(1994f + this.ai[2] - 1f);
												return;
											}
										}
										else if (this.aiStyle == 66)
										{
											if (this.type == 484)
											{
												float single434 = (float)Main.rand.Next(90, 111) * 0.01f;
												single434 = single434 * ((Main.essScale + 0.5f) / 2f);
												Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f * single434, 0.1f * single434, 0.25f * single434);
											}
											if (this.type == 357 || this.type == 448 || this.type >= 484 && this.type <= 487)
											{
												if (this.localAI[2] >= 90f)
												{
													this.friendly = false;
												}
												else
												{
													this.localAI[2] = this.localAI[2] + 1f;
												}
											}
											if (this.velocity.Y == 0f)
											{
												if (this.ai[0] != 1f)
												{
													this.velocity.X = 0f;
												}
												else
												{
													if (this.direction == 0)
													{
														this.TargetClosest(true);
													}
													if (this.collideX)
													{
														NPC nPC167 = this;
														nPC167.direction = nPC167.direction * -1;
													}
													float single435 = 0.2f;
													if (this.type == 485)
													{
														single435 = 0.25f;
													}
													if (this.type == 486)
													{
														single435 = 0.325f;
													}
													if (this.type == 487)
													{
														single435 = 0.4f;
													}
													this.velocity.X = single435 * (float)this.direction;
													if (this.type == 374)
													{
														this.velocity.X = this.velocity.X * 3f;
													}
												}
												if (Main.netMode != 1)
												{
													this.localAI[1] = this.localAI[1] - 1f;
													if (this.localAI[1] <= 0f)
													{
														if (this.ai[0] != 1f)
														{
															this.ai[0] = 1f;
															this.localAI[1] = (float)Main.rand.Next(600, 1800);
														}
														else
														{
															this.ai[0] = 0f;
															this.localAI[1] = (float)Main.rand.Next(300, 900);
														}
														this.netUpdate = true;
													}
												}
											}
											if (this.type == 374)
											{
												this.spriteDirection = this.direction;
												bool flag118 = false;
												int num587 = 0;
												while (num587 < 255)
												{
													Player player3 = Main.player[num587];
													if (!player3.active || player3.dead || Vector2.Distance(player3.Center, base.Center) > 160f)
													{
														num587++;
													}
													else
													{
														flag118 = true;
														break;
													}
												}
												int num588 = 90;
												if (flag118 && this.ai[1] < (float)num588)
												{
													this.ai[1] = this.ai[1] + 1f;
												}
												if (this.ai[1] == (float)num588 && Main.netMode != 1)
												{
													this.position.Y = this.position.Y + 16f;
													this.Transform(375);
													this.netUpdate = true;
													return;
												}
											}
										}
										else if (this.aiStyle == 67)
										{
											if (this.type == 359)
											{
												if (this.ai[3] != 0f)
												{
													this.scale = this.ai[3];
													int num589 = (int)(12f * this.scale);
													int num590 = (int)(12f * this.scale);
													if (num589 != this.width)
													{
														this.position.X = this.position.X + (float)(this.width / 2) - (float)num589 - 2f;
														this.width = num589;
													}
													if (num590 != this.height)
													{
														this.position.Y = this.position.Y + (float)this.height - (float)num590;
														this.height = num590;
													}
												}
												if (this.ai[3] == 0f && Main.netMode != 1)
												{
													this.ai[3] = (float)Main.rand.Next(80, 111) * 0.01f;
													this.netUpdate = true;
												}
											}
											if (this.type == 360)
											{
												Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.1f, 0.2f, 0.7f);
											}
											float single436 = 0.3f;
											if (this.type == 360)
											{
												single436 = 0.6f;
											}
											if (this.ai[0] == 0f)
											{
												this.TargetClosest(true);
												this.directionY = 1;
												this.ai[0] = 1f;
												if (this.direction > 0)
												{
													this.spriteDirection = 1;
												}
											}
											bool flag119 = false;
											if (Main.netMode != 1)
											{
												if (this.ai[2] == 0f && Main.rand.Next(7200) == 0)
												{
													this.ai[2] = 2f;
													this.netUpdate = true;
												}
												if (this.collideX || this.collideY)
												{
													this.localAI[3] = 0f;
												}
												else
												{
													this.localAI[3] = this.localAI[3] + 1f;
													if (this.localAI[3] > 5f)
													{
														this.ai[2] = 2f;
														this.netUpdate = true;
													}
												}
											}
											if (this.ai[2] > 0f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 1f;
												this.directionY = 1;
												if (this.velocity.Y <= single436)
												{
													this.rotation = 0f;
												}
												else
												{
													NPC nPC168 = this;
													nPC168.rotation = nPC168.rotation + (float)this.direction * 0.1f;
												}
												this.spriteDirection = this.direction;
												this.velocity.X = single436 * (float)this.direction;
												this.noGravity = false;
												int x199 = (int)(base.Center.X + (float)(this.width / 2 * -this.direction)) / 16;
												int y200 = (int)(this.position.Y + (float)this.height + 8f) / 16;
												if (Main.tile[x199, y200] != null && !Main.tile[x199, y200].topSlope() && this.collideY)
												{
													this.ai[2] = this.ai[2] - 1f;
												}
												y200 = (int)(this.position.Y + (float)this.height - 4f) / 16;
												x199 = (int)(base.Center.X + (float)(this.width / 2 * this.direction)) / 16;
												if (Main.tile[x199, y200] != null && Main.tile[x199, y200].bottomSlope())
												{
													NPC nPC169 = this;
													nPC169.direction = nPC169.direction * -1;
												}
												if (this.collideX && this.velocity.Y == 0f)
												{
													flag119 = true;
													this.ai[2] = 0f;
													this.directionY = -1;
													this.ai[1] = 1f;
												}
												if (this.velocity.Y == 0f)
												{
													if (this.localAI[1] != this.position.X)
													{
														this.localAI[2] = 0f;
														this.localAI[1] = this.position.X;
													}
													else
													{
														this.localAI[2] = this.localAI[2] + 1f;
														if (this.localAI[2] > 10f)
														{
															this.direction = 1;
															this.velocity.X = (float)this.direction * single436;
															this.localAI[2] = 0f;
														}
													}
												}
											}
											if (this.ai[2] == 0f)
											{
												this.noGravity = true;
												if (this.ai[1] != 0f)
												{
													if (this.collideX)
													{
														this.ai[0] = 2f;
													}
													if (!this.collideX && this.ai[0] == 2f)
													{
														this.directionY = -this.directionY;
														this.ai[1] = 0f;
														this.ai[0] = 1f;
													}
													if (this.collideY)
													{
														this.direction = -this.direction;
														this.ai[1] = 0f;
													}
												}
												else
												{
													if (this.collideY)
													{
														this.ai[0] = 2f;
													}
													if (!this.collideY && this.ai[0] == 2f)
													{
														this.direction = -this.direction;
														this.ai[1] = 1f;
														this.ai[0] = 1f;
													}
													if (this.collideX)
													{
														this.directionY = -this.directionY;
														this.ai[1] = 1f;
													}
												}
												if (!flag119)
												{
													float single437 = this.rotation;
													if (this.directionY < 0)
													{
														if (this.direction < 0)
														{
															if (this.collideX)
															{
																this.rotation = 1.57f;
																this.spriteDirection = -1;
															}
															else if (this.collideY)
															{
																this.rotation = 3.14f;
																this.spriteDirection = 1;
															}
														}
														else if (this.collideY)
														{
															this.rotation = 3.14f;
															this.spriteDirection = -1;
														}
														else if (this.collideX)
														{
															this.rotation = 4.71f;
															this.spriteDirection = 1;
														}
													}
													else if (this.direction < 0)
													{
														if (this.collideY)
														{
															this.rotation = 0f;
															this.spriteDirection = -1;
														}
														else if (this.collideX)
														{
															this.rotation = 1.57f;
															this.spriteDirection = 1;
														}
													}
													else if (this.collideX)
													{
														this.rotation = 4.71f;
														this.spriteDirection = -1;
													}
													else if (this.collideY)
													{
														this.rotation = 0f;
														this.spriteDirection = 1;
													}
													float single438 = this.rotation;
													this.rotation = single437;
													if ((double)this.rotation > 6.28)
													{
														NPC nPC170 = this;
														nPC170.rotation = nPC170.rotation - 6.28f;
													}
													if (this.rotation < 0f)
													{
														NPC nPC171 = this;
														nPC171.rotation = nPC171.rotation + 6.28f;
													}
													float single439 = Math.Abs(this.rotation - single438);
													float single440 = 0.1f;
													if (this.rotation > single438)
													{
														if ((double)single439 <= 3.14)
														{
															NPC nPC172 = this;
															nPC172.rotation = nPC172.rotation - single440;
															if (this.rotation < single438)
															{
																this.rotation = single438;
															}
														}
														else
														{
															NPC nPC173 = this;
															nPC173.rotation = nPC173.rotation + single440;
														}
													}
													if (this.rotation < single438)
													{
														if ((double)single439 <= 3.14)
														{
															NPC nPC174 = this;
															nPC174.rotation = nPC174.rotation + single440;
															if (this.rotation > single438)
															{
																this.rotation = single438;
															}
														}
														else
														{
															NPC nPC175 = this;
															nPC175.rotation = nPC175.rotation - single440;
														}
													}
												}
												this.velocity.X = single436 * (float)this.direction;
												this.velocity.Y = single436 * (float)this.directionY;
												return;
											}
										}
										else if (this.aiStyle == 68)
										{
											this.noGravity = true;
											if (this.ai[0] == 0f)
											{
												this.noGravity = false;
												int num591 = this.direction;
												int num592 = this.target;
												this.TargetClosest(true);
												if (num592 >= 0 && num591 != 0)
												{
													this.direction = num591;
												}
												if (this.wet)
												{
													float single441 = 2f;
													this.velocity.X = (this.velocity.X * 19f + single441 * (float)this.direction) / 20f;
													int x200 = (int)(base.Center.X + (float)((this.width / 2 + 8) * this.direction)) / 16;
													int y201 = (int)(base.Center.Y / 16f);
													int y202 = (int)(this.position.Y / 16f);
													int y203 = (int)((this.position.Y + (float)this.height) / 16f);
													if (Main.tile[x200, y201] == null)
													{
														Main.tile[x200, y201] = new Tile();
													}
													if (Main.tile[x200, y203] == null)
													{
														Main.tile[x200, y203] = new Tile();
													}
													if (WorldGen.SolidTile(x200, y201) || WorldGen.SolidTile(x200, y202) || WorldGen.SolidTile(x200, y203) || Main.tile[x200, y203].liquid == 0)
													{
														NPC nPC176 = this;
														nPC176.direction = nPC176.direction * -1;
													}
													this.spriteDirection = this.direction;
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.5f;
													}
													this.noGravity = true;
													x200 = (int)(base.Center.X / 16f);
													y201 = (int)(base.Center.Y / 16f);
													float y204 = this.position.Y + (float)this.height;
													if (Main.tile[x200, y201 - 1] == null)
													{
														Main.tile[x200, y201 - 1] = new Tile();
													}
													if (Main.tile[x200, y201] == null)
													{
														Main.tile[x200, y201] = new Tile();
													}
													if (Main.tile[x200, y201 + 1] == null)
													{
														Main.tile[x200, y201 + 1] = new Tile();
													}
													if (Main.tile[x200, y201 - 1].liquid > 0)
													{
														y204 = (float)(y201 * 16);
														y204 = y204 - (float)(Main.tile[x200, y201 - 1].liquid / 16);
													}
													else if (Main.tile[x200, y201].liquid > 0)
													{
														y204 = (float)((y201 + 1) * 16);
														y204 = y204 - (float)(Main.tile[x200, y201].liquid / 16);
													}
													else if (Main.tile[x200, y201 + 1].liquid > 0)
													{
														y204 = (float)((y201 + 2) * 16);
														y204 = y204 - (float)(Main.tile[x200, y201 + 1].liquid / 16);
													}
													y204 = y204 - 6f;
													if (base.Center.Y <= y204)
													{
														this.velocity.Y = y204 - base.Center.Y;
													}
													else
													{
														this.velocity.Y = this.velocity.Y - 0.1f;
														if (this.velocity.Y < -8f)
														{
															this.velocity.Y = -8f;
														}
														if (base.Center.Y + this.velocity.Y < y204)
														{
															this.velocity.Y = y204 - base.Center.Y;
														}
													}
												}
												if (Main.netMode != 1)
												{
													if (!this.wet)
													{
														this.ai[0] = 1f;
														this.netUpdate = true;
														this.direction = -this.direction;
														return;
													}
													Rectangle rectangle13 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
													Rectangle rectangle14 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
													if (rectangle14.Intersects(rectangle13) || this.life < this.lifeMax)
													{
														this.ai[0] = 1f;
														this.velocity.Y = this.velocity.Y - 6f;
														this.netUpdate = true;
														this.direction = -this.direction;
														return;
													}
												}
											}
											else if (!Main.player[this.target].dead)
											{
												bool flag120 = false;
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 300f)
												{
													flag120 = true;
												}
												if (!flag120)
												{
													if (this.collideX)
													{
														NPC nPC177 = this;
														nPC177.direction = nPC177.direction * -1;
														this.velocity.X = this.oldVelocity.X * -0.5f;
														if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
														{
															this.velocity.X = 2f;
														}
														if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
														{
															this.velocity.X = -2f;
														}
													}
													if (this.collideY)
													{
														this.velocity.Y = this.oldVelocity.Y * -0.5f;
														if (this.velocity.Y > 0f && this.velocity.Y < 1f)
														{
															this.velocity.Y = 1f;
														}
														if (this.velocity.Y < 0f && this.velocity.Y > -1f)
														{
															this.velocity.Y = -1f;
														}
													}
													if (this.direction == -1 && this.velocity.X > -3f)
													{
														this.velocity.X = this.velocity.X - 0.1f;
														if (this.velocity.X > 3f)
														{
															this.velocity.X = this.velocity.X - 0.1f;
														}
														else if (this.velocity.X > 0f)
														{
															this.velocity.X = this.velocity.X - 0.05f;
														}
														if (this.velocity.X < -3f)
														{
															this.velocity.X = -3f;
														}
													}
													else if (this.direction == 1 && this.velocity.X < 3f)
													{
														this.velocity.X = this.velocity.X + 0.1f;
														if (this.velocity.X < -3f)
														{
															this.velocity.X = this.velocity.X + 0.1f;
														}
														else if (this.velocity.X < 0f)
														{
															this.velocity.X = this.velocity.X + 0.05f;
														}
														if (this.velocity.X > 3f)
														{
															this.velocity.X = 3f;
														}
													}
													int x201 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
													int y205 = (int)((this.position.Y + (float)this.height) / 16f);
													bool flag121 = true;
													int num593 = 15;
													bool flag122 = false;
													int num594 = y205;
													while (num594 < y205 + num593)
													{
														if (Main.tile[x201, num594] == null)
														{
															Main.tile[x201, num594] = new Tile();
														}
														if ((!Main.tile[x201, num594].nactive() || !Main.tileSolid[Main.tile[x201, num594].type]) && Main.tile[x201, num594].liquid <= 0)
														{
															num594++;
														}
														else
														{
															if (num594 < y205 + 5)
															{
																flag122 = true;
															}
															flag121 = false;
															break;
														}
													}
													if (!flag121)
													{
														this.velocity.Y = this.velocity.Y - 0.1f;
													}
													else
													{
														this.velocity.Y = this.velocity.Y + 0.1f;
													}
													if (flag122)
													{
														this.velocity.Y = this.velocity.Y - 0.2f;
													}
													if (this.velocity.Y > 3f)
													{
														this.velocity.Y = 3f;
													}
													if (this.velocity.Y < -4f)
													{
														this.velocity.Y = -4f;
														return;
													}
												}
												else if (this.velocity.Y == 0f || this.collideY || this.wet)
												{
													this.velocity.X = 0f;
													this.velocity.Y = 0f;
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													if (Main.netMode != 1)
													{
														if ((this.type == 363 || this.type == 365) && !this.wet)
														{
															int num595 = this.direction;
															this.Transform(this.type - 1);
															this.TargetClosest(true);
															this.direction = num595;
															this.ai[0] = 0f;
															this.ai[1] = (float)(200 + Main.rand.Next(200));
														}
														this.netUpdate = true;
														return;
													}
												}
												else
												{
													this.velocity.X = this.velocity.X * 0.98f;
													this.velocity.Y = this.velocity.Y + 0.1f;
													if (this.velocity.Y > 2f)
													{
														this.velocity.Y = 2f;
														return;
													}
												}
											}
										}
										else if (this.aiStyle == 69)
										{
											bool flag123 = Main.expertMode;
											float single442 = (flag123 ? 0.6f * Main.damageMultiplier : 1f);
											bool flag124 = (double)this.life <= (double)this.lifeMax * 0.5;
											bool flag125 = (!flag123 ? false : (double)this.life <= (double)this.lifeMax * 0.15);
											bool flag126 = this.ai[0] > 4f;
											bool flag127 = this.ai[0] > 9f;
											bool flag128 = this.ai[3] < 10f;
											if (flag127)
											{
												this.damage = (int)((float)this.defDamage * 1.1f * single442);
												this.defense = 0;
											}
											else if (!flag126)
											{
												this.damage = this.defDamage;
												this.defense = this.defDefense;
											}
											else
											{
												this.damage = (int)((float)this.defDamage * 1.2f * single442);
												this.defense = (int)((float)this.defDefense * 0.8f);
											}
											int num596 = (flag123 ? 40 : 60);
											float single443 = (flag123 ? 0.55f : 0.45f);
											float single444 = (flag123 ? 8.5f : 7.5f);
											if (flag127)
											{
												single443 = 0.7f;
												single444 = 12f;
												num596 = 30;
											}
											else if (flag126 && flag128)
											{
												single443 = (flag123 ? 0.6f : 0.5f);
												single444 = (flag123 ? 10f : 8f);
												num596 = (flag123 ? 40 : 20);
											}
											else if (flag128 && !flag126 && !flag127)
											{
												num596 = 30;
											}
											int num597 = (flag123 ? 28 : 30);
											float single445 = (flag123 ? 17f : 16f);
											if (flag127)
											{
												num597 = 25;
												single445 = 27f;
											}
											else if (flag128 && flag126)
											{
												num597 = (flag123 ? 27 : 30);
												if (flag123)
												{
													single445 = 21f;
												}
											}
											int num598 = 80;
											int num599 = 4;
											float single446 = 0.3f;
											float single447 = 5f;
											int num600 = 90;
											int num601 = 180;
											int num602 = 180;
											int num603 = 30;
											int num604 = 120;
											int num605 = 4;
											float single448 = 6f;
											float single449 = 20f;
											float single450 = 6.28318548f / (float)(num604 / 2);
											int num606 = 75;
											Vector2 center33 = base.Center;
											Player player4 = Main.player[this.target];
											if (this.target < 0 || this.target == 255 || player4.dead || !player4.active)
											{
												this.TargetClosest(true);
												player4 = Main.player[this.target];
												this.netUpdate = true;
											}
											if (player4.dead || Vector2.Distance(player4.Center, center33) > 2400f)
											{
												this.velocity.Y = this.velocity.Y - 0.4f;
												if (this.timeLeft > 10)
												{
													this.timeLeft = 10;
												}
												if (this.ai[0] <= 4f)
												{
													this.ai[0] = 0f;
												}
												else
												{
													this.ai[0] = 5f;
												}
												this.ai[2] = 0f;
											}
											if (player4.position.Y < 800f || (double)player4.position.Y > Main.worldSurface * 16)
											{
												flag4 = true;
											}
											else
											{
												flag4 = (player4.position.X <= 6400f ? false : player4.position.X < (float)(Main.maxTilesX * 16 - 6400));
											}
											if (flag4)
											{
												num596 = 20;
												this.damage = this.defDamage * 2;
												this.defense = this.defDefense * 2;
												this.ai[3] = 0f;
												single445 = single445 + 6f;
											}
											if (this.localAI[0] == 0f)
											{
												this.localAI[0] = 1f;
												this.alpha = 255;
												this.rotation = 0f;
												if (Main.netMode != 1)
												{
													this.ai[0] = -1f;
													this.netUpdate = true;
												}
											}
											float single451 = (float)Math.Atan2((double)(player4.Center.Y - center33.Y), (double)(player4.Center.X - center33.X));
											if (this.spriteDirection == 1)
											{
												single451 = single451 + 3.14159274f;
											}
											if (single451 < 0f)
											{
												single451 = single451 + 6.28318548f;
											}
											if (single451 > 6.28318548f)
											{
												single451 = single451 - 6.28318548f;
											}
											if (this.ai[0] == -1f)
											{
												single451 = 0f;
											}
											if (this.ai[0] == 3f)
											{
												single451 = 0f;
											}
											if (this.ai[0] == 4f)
											{
												single451 = 0f;
											}
											if (this.ai[0] == 8f)
											{
												single451 = 0f;
											}
											float single452 = 0.04f;
											if (this.ai[0] == 1f || this.ai[0] == 6f)
											{
												single452 = 0f;
											}
											if (this.ai[0] == 7f)
											{
												single452 = 0f;
											}
											if (this.ai[0] == 3f)
											{
												single452 = 0.01f;
											}
											if (this.ai[0] == 4f)
											{
												single452 = 0.01f;
											}
											if (this.ai[0] == 8f)
											{
												single452 = 0.01f;
											}
											if (this.rotation < single451)
											{
												if ((double)(single451 - this.rotation) <= 3.14159265358979)
												{
													NPC nPC178 = this;
													nPC178.rotation = nPC178.rotation + single452;
												}
												else
												{
													NPC nPC179 = this;
													nPC179.rotation = nPC179.rotation - single452;
												}
											}
											if (this.rotation > single451)
											{
												if ((double)(this.rotation - single451) <= 3.14159265358979)
												{
													NPC nPC180 = this;
													nPC180.rotation = nPC180.rotation - single452;
												}
												else
												{
													NPC nPC181 = this;
													nPC181.rotation = nPC181.rotation + single452;
												}
											}
											if (this.rotation > single451 - single452 && this.rotation < single451 + single452)
											{
												this.rotation = single451;
											}
											if (this.rotation < 0f)
											{
												NPC nPC182 = this;
												nPC182.rotation = nPC182.rotation + 6.28318548f;
											}
											if (this.rotation > 6.28318548f)
											{
												NPC nPC183 = this;
												nPC183.rotation = nPC183.rotation - 6.28318548f;
											}
											if (this.rotation > single451 - single452 && this.rotation < single451 + single452)
											{
												this.rotation = single451;
											}
											if (this.ai[0] != -1f && this.ai[0] < 9f)
											{
												if (!Collision.SolidCollision(this.position, this.width, this.height))
												{
													NPC nPC184 = this;
													nPC184.alpha = nPC184.alpha - 15;
												}
												else
												{
													NPC nPC185 = this;
													nPC185.alpha = nPC185.alpha + 15;
												}
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.alpha > 150)
												{
													this.alpha = 150;
												}
											}
											if (this.ai[0] == -1f)
											{
												NPC nPC186 = this;
												nPC186.velocity = nPC186.velocity * 0.98f;
												int num607 = Math.Sign(player4.Center.X - center33.X);
												if (num607 != 0)
												{
													this.direction = num607;
													this.spriteDirection = -this.direction;
												}
												if (this.ai[2] > 20f)
												{
													this.velocity.Y = -2f;
													NPC nPC187 = this;
													nPC187.alpha = nPC187.alpha - 5;
													if (Collision.SolidCollision(this.position, this.width, this.height))
													{
														NPC nPC188 = this;
														nPC188.alpha = nPC188.alpha + 15;
													}
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													if (this.alpha > 150)
													{
														this.alpha = 150;
													}
												}
												if (this.ai[2] == (float)(num600 - 30))
												{
													int num608 = 36;
													for (int d4 = 0; d4 < num608; d4++)
													{
														Vector2 vector2197 = ((Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height)) * 0.75f) * 0.5f;
														double num609 = (double)((float)(d4 - (num608 / 2 - 1)) * 6.28318548f / (float)num608);
														vector24 = new Vector2();
														vector2197 = vector2197.RotatedBy(num609, vector24) + base.Center;
														Vector2 center34 = vector2197 - base.Center;
														Vector2 vector2198 = vector2197 + center34;
														skyBlue = new Color();
														int num610 = Dust.NewDust(vector2198, 0, 0, 172, center34.X * 2f, center34.Y * 2f, 100, skyBlue, 1.4f);
														Main.dust[num610].noGravity = true;
														Main.dust[num610].noLight = true;
														Main.dust[num610].velocity = Vector2.Normalize(center34) * 3f;
													}
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num606)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 0f && !player4.dead)
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((center33 - player4.Center).X));
												}
												Vector2 center35 = (player4.Center + new Vector2(this.ai[1], -200f)) - center33;
												Vector2 vector2199 = Vector2.Normalize(center35 - this.velocity) * single444;
												if (this.velocity.X < vector2199.X)
												{
													this.velocity.X = this.velocity.X + single443;
													if (this.velocity.X < 0f && vector2199.X > 0f)
													{
														this.velocity.X = this.velocity.X + single443;
													}
												}
												else if (this.velocity.X > vector2199.X)
												{
													this.velocity.X = this.velocity.X - single443;
													if (this.velocity.X > 0f && vector2199.X < 0f)
													{
														this.velocity.X = this.velocity.X - single443;
													}
												}
												if (this.velocity.Y < vector2199.Y)
												{
													this.velocity.Y = this.velocity.Y + single443;
													if (this.velocity.Y < 0f && vector2199.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + single443;
													}
												}
												else if (this.velocity.Y > vector2199.Y)
												{
													this.velocity.Y = this.velocity.Y - single443;
													if (this.velocity.Y > 0f && vector2199.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - single443;
													}
												}
												int num611 = Math.Sign(player4.Center.X - center33.X);
												if (num611 != 0)
												{
													if (this.ai[2] == 0f && num611 != this.direction)
													{
														NPC nPC189 = this;
														nPC189.rotation = nPC189.rotation + 3.14159274f;
													}
													this.direction = num611;
													if (this.spriteDirection != -this.direction)
													{
														NPC nPC190 = this;
														nPC190.rotation = nPC190.rotation + 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num596)
												{
													int num612 = 0;
													num6 = (int)this.ai[3];
													switch (num6)
													{
														case 0:
														case 1:
														case 2:
														case 3:
														case 4:
														case 5:
														case 6:
														case 7:
														case 8:
														case 9:
														{
															num612 = 1;
															break;
														}
														case 10:
														{
															this.ai[3] = 1f;
															num612 = 2;
															break;
														}
														case 11:
														{
															this.ai[3] = 0f;
															num612 = 3;
															break;
														}
													}
													if (flag124)
													{
														num612 = 4;
													}
													if (num612 == 1)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.velocity = Vector2.Normalize(player4.Center - center33) * single445;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num611 != 0)
														{
															this.direction = num611;
															if (this.spriteDirection == 1)
															{
																NPC nPC191 = this;
																nPC191.rotation = nPC191.rotation + 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
													}
													else if (num612 == 2)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num612 == 3)
													{
														this.ai[0] = 3f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num612 == 4)
													{
														this.ai[0] = 4f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 1f)
											{
												int num613 = 7;
												for (int e4 = 0; e4 < num613; e4++)
												{
													Vector2 vector2200 = (Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height)) * 0.75f;
													double num614 = (double)(e4 - (num613 / 2 - 1)) * 3.14159265358979 / (double)((float)num613);
													vector24 = new Vector2();
													vector2200 = vector2200.RotatedBy(num614, vector24) + center33;
													Vector2 rotationVector21 = ((float)(Main.rand.NextDouble() * 3.14159274101257) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
													Vector2 vector2201 = vector2200 + rotationVector21;
													skyBlue = new Color();
													int num615 = Dust.NewDust(vector2201, 0, 0, 172, rotationVector21.X * 2f, rotationVector21.Y * 2f, 100, skyBlue, 1.4f);
													Main.dust[num615].noGravity = true;
													Main.dust[num615].noLight = true;
													Dust dust57 = Main.dust[num615];
													dust57.velocity = dust57.velocity / 4f;
													Dust dust58 = Main.dust[num615];
													dust58.velocity = dust58.velocity - this.velocity;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num597)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = this.ai[3] + 2f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 2f)
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((center33 - player4.Center).X));
												}
												Vector2 center36 = (player4.Center + new Vector2(this.ai[1], -200f)) - center33;
												Vector2 vector2202 = Vector2.Normalize(center36 - this.velocity) * single447;
												if (this.velocity.X < vector2202.X)
												{
													this.velocity.X = this.velocity.X + single446;
													if (this.velocity.X < 0f && vector2202.X > 0f)
													{
														this.velocity.X = this.velocity.X + single446;
													}
												}
												else if (this.velocity.X > vector2202.X)
												{
													this.velocity.X = this.velocity.X - single446;
													if (this.velocity.X > 0f && vector2202.X < 0f)
													{
														this.velocity.X = this.velocity.X - single446;
													}
												}
												if (this.velocity.Y < vector2202.Y)
												{
													this.velocity.Y = this.velocity.Y + single446;
													if (this.velocity.Y < 0f && vector2202.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + single446;
													}
												}
												else if (this.velocity.Y > vector2202.Y)
												{
													this.velocity.Y = this.velocity.Y - single446;
													if (this.velocity.Y > 0f && vector2202.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - single446;
													}
												}
												if (this.ai[2] == 0f)
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												if (this.ai[2] % (float)num599 == 0f)
												{
													Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
													if (Main.netMode != 1)
													{
														Vector2 vector2203 = ((Vector2.Normalize(player4.Center - center33) * (float)(this.width + 20)) / 2f) + center33;
														NPC.NewNPC((int)vector2203.X, (int)vector2203.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
													}
												}
												int num616 = Math.Sign(player4.Center.X - center33.X);
												if (num616 != 0)
												{
													this.direction = num616;
													if (this.spriteDirection != -this.direction)
													{
														NPC nPC192 = this;
														nPC192.rotation = nPC192.rotation + 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num598)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 3f)
											{
												NPC nPC193 = this;
												nPC193.velocity = nPC193.velocity * 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num600 - 30))
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 9);
												}
												if (Main.netMode != 1 && this.ai[2] == (float)(num600 - 30))
												{
													Vector2 rotationVector22 = (((this.rotation.ToRotationVector2() * Vector2.UnitX * (float)this.direction) * (float)(this.width + 20)) / 2f) + center33;
													Projectile.NewProjectile(rotationVector22.X, rotationVector22.Y, (float)(this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
													Projectile.NewProjectile(rotationVector22.X, rotationVector22.Y, (float)(-this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num600)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 4f)
											{
												NPC nPC194 = this;
												nPC194.velocity = nPC194.velocity * 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num601 - 60))
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num601)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 5f && !player4.dead)
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((center33 - player4.Center).X));
												}
												Vector2 center37 = (player4.Center + new Vector2(this.ai[1], -200f)) - center33;
												Vector2 vector2204 = Vector2.Normalize(center37 - this.velocity) * single444;
												if (this.velocity.X < vector2204.X)
												{
													this.velocity.X = this.velocity.X + single443;
													if (this.velocity.X < 0f && vector2204.X > 0f)
													{
														this.velocity.X = this.velocity.X + single443;
													}
												}
												else if (this.velocity.X > vector2204.X)
												{
													this.velocity.X = this.velocity.X - single443;
													if (this.velocity.X > 0f && vector2204.X < 0f)
													{
														this.velocity.X = this.velocity.X - single443;
													}
												}
												if (this.velocity.Y < vector2204.Y)
												{
													this.velocity.Y = this.velocity.Y + single443;
													if (this.velocity.Y < 0f && vector2204.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + single443;
													}
												}
												else if (this.velocity.Y > vector2204.Y)
												{
													this.velocity.Y = this.velocity.Y - single443;
													if (this.velocity.Y > 0f && vector2204.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - single443;
													}
												}
												int num617 = Math.Sign(player4.Center.X - center33.X);
												if (num617 != 0)
												{
													if (this.ai[2] == 0f && num617 != this.direction)
													{
														NPC nPC195 = this;
														nPC195.rotation = nPC195.rotation + 3.14159274f;
													}
													this.direction = num617;
													if (this.spriteDirection != -this.direction)
													{
														NPC nPC196 = this;
														nPC196.rotation = nPC196.rotation + 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num596)
												{
													int num618 = 0;
													num6 = (int)this.ai[3];
													switch (num6)
													{
														case 0:
														case 1:
														case 2:
														case 3:
														case 4:
														case 5:
														{
															num618 = 1;
															break;
														}
														case 6:
														{
															this.ai[3] = 1f;
															num618 = 2;
															break;
														}
														case 7:
														{
															this.ai[3] = 0f;
															num618 = 3;
															break;
														}
													}
													if (flag125)
													{
														num618 = 4;
													}
													if (num618 == 1)
													{
														this.ai[0] = 6f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.velocity = Vector2.Normalize(player4.Center - center33) * single445;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num617 != 0)
														{
															this.direction = num617;
															if (this.spriteDirection == 1)
															{
																NPC nPC197 = this;
																nPC197.rotation = nPC197.rotation + 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
													}
													else if (num618 == 2)
													{
														this.velocity = Vector2.Normalize(player4.Center - center33) * single449;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num617 != 0)
														{
															this.direction = num617;
															if (this.spriteDirection == 1)
															{
																NPC nPC198 = this;
																nPC198.rotation = nPC198.rotation + 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
														this.ai[0] = 7f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num618 == 3)
													{
														this.ai[0] = 8f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num618 == 4)
													{
														this.ai[0] = 9f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 6f)
											{
												int num619 = 7;
												for (int f4 = 0; f4 < num619; f4++)
												{
													Vector2 vector2205 = (Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height)) * 0.75f;
													double num620 = (double)(f4 - (num619 / 2 - 1)) * 3.14159265358979 / (double)((float)num619);
													vector24 = new Vector2();
													vector2205 = vector2205.RotatedBy(num620, vector24) + center33;
													Vector2 rotationVector23 = ((float)(Main.rand.NextDouble() * 3.14159274101257) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
													Vector2 vector2206 = vector2205 + rotationVector23;
													skyBlue = new Color();
													int num621 = Dust.NewDust(vector2206, 0, 0, 172, rotationVector23.X * 2f, rotationVector23.Y * 2f, 100, skyBlue, 1.4f);
													Main.dust[num621].noGravity = true;
													Main.dust[num621].noLight = true;
													Dust dust59 = Main.dust[num621];
													dust59.velocity = dust59.velocity / 4f;
													Dust dust60 = Main.dust[num621];
													dust60.velocity = dust60.velocity - this.velocity;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num597)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = this.ai[3] + 2f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 7f)
											{
												if (this.ai[2] == 0f)
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												if (this.ai[2] % (float)num605 == 0f)
												{
													Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
													if (Main.netMode != 1)
													{
														Vector2 vector2207 = ((Vector2.Normalize(this.velocity) * (float)(this.width + 20)) / 2f) + center33;
														int num622 = NPC.NewNPC((int)vector2207.X, (int)vector2207.Y + 45, 371, 0, 0f, 0f, 0f, 0f, 255);
														Main.npc[num622].target = this.target;
														NPC nPC199 = Main.npc[num622];
														Vector2 vector2208 = Vector2.Normalize(this.velocity);
														double num623 = (double)(1.57079637f * (float)this.direction);
														vector24 = new Vector2();
														nPC199.velocity = vector2208.RotatedBy(num623, vector24) * single448;
														Main.npc[num622].netUpdate = true;
														Main.npc[num622].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
													}
												}
												Vector2 vector2209 = this.velocity;
												double num624 = (double)(-single450 * (float)this.direction);
												vector24 = new Vector2();
												this.velocity = vector2209.RotatedBy(num624, vector24);
												NPC nPC200 = this;
												nPC200.rotation = nPC200.rotation - single450 * (float)this.direction;
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num604)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 8f)
											{
												NPC nPC201 = this;
												nPC201.velocity = nPC201.velocity * 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num600 - 30))
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												if (Main.netMode != 1 && this.ai[2] == (float)(num600 - 30))
												{
													Projectile.NewProjectile(center33.X, center33.Y, 0f, 0f, 385, 0, 0f, Main.myPlayer, 1f, (float)(this.target + 1));
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num600)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 9f)
											{
												if (this.ai[2] < (float)(num602 - 90))
												{
													if (!Collision.SolidCollision(this.position, this.width, this.height))
													{
														NPC nPC202 = this;
														nPC202.alpha = nPC202.alpha - 15;
													}
													else
													{
														NPC nPC203 = this;
														nPC203.alpha = nPC203.alpha + 15;
													}
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													if (this.alpha > 150)
													{
														this.alpha = 150;
													}
												}
												else if (this.alpha < 255)
												{
													NPC nPC204 = this;
													nPC204.alpha = nPC204.alpha + 4;
													if (this.alpha > 255)
													{
														this.alpha = 255;
													}
												}
												NPC nPC205 = this;
												nPC205.velocity = nPC205.velocity * 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num602 - 60))
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num602)
												{
													this.ai[0] = 10f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 10f && !player4.dead)
											{
												this.dontTakeDamage = false;
												this.chaseable = false;
												if (this.alpha < 255)
												{
													NPC nPC206 = this;
													nPC206.alpha = nPC206.alpha + 25;
													if (this.alpha > 255)
													{
														this.alpha = 255;
													}
												}
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(360 * Math.Sign((center33 - player4.Center).X));
												}
												Vector2 center38 = (player4.Center + new Vector2(this.ai[1], -200f)) - center33;
												Vector2 vector2210 = Vector2.Normalize(center38 - this.velocity) * single444;
												this.SimpleFlyMovement(vector2210, single443);
												int num625 = Math.Sign(player4.Center.X - center33.X);
												if (num625 != 0)
												{
													if (this.ai[2] == 0f && num625 != this.direction)
													{
														NPC nPC207 = this;
														nPC207.rotation = nPC207.rotation + 3.14159274f;
														for (int g4 = 0; g4 < (int)this.oldPos.Length; g4++)
														{
															this.oldPos[g4] = Vector2.Zero;
														}
													}
													this.direction = num625;
													if (this.spriteDirection != -this.direction)
													{
														NPC nPC208 = this;
														nPC208.rotation = nPC208.rotation + 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num596)
												{
													int num626 = 0;
													num6 = (int)this.ai[3];
													switch (num6)
													{
														case 0:
														case 2:
														case 3:
														case 5:
														case 6:
														case 7:
														{
															num626 = 1;
															break;
														}
														case 1:
														case 4:
														case 8:
														{
															num626 = 2;
															break;
														}
													}
													if (num626 == 1)
													{
														this.ai[0] = 11f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.velocity = Vector2.Normalize(player4.Center - center33) * single445;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num625 != 0)
														{
															this.direction = num625;
															if (this.spriteDirection == 1)
															{
																NPC nPC209 = this;
																nPC209.rotation = nPC209.rotation + 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
													}
													else if (num626 == 2)
													{
														this.ai[0] = 12f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num626 == 3)
													{
														this.ai[0] = 13f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 11f)
											{
												this.dontTakeDamage = false;
												this.chaseable = true;
												NPC nPC210 = this;
												nPC210.alpha = nPC210.alpha - 25;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												int num627 = 7;
												for (int h4 = 0; h4 < num627; h4++)
												{
													Vector2 vector2211 = (Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height)) * 0.75f;
													double num628 = (double)(h4 - (num627 / 2 - 1)) * 3.14159265358979 / (double)((float)num627);
													vector24 = new Vector2();
													vector2211 = vector2211.RotatedBy(num628, vector24) + center33;
													Vector2 rotationVector24 = ((float)(Main.rand.NextDouble() * 3.14159274101257) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
													Vector2 vector2212 = vector2211 + rotationVector24;
													skyBlue = new Color();
													int num629 = Dust.NewDust(vector2212, 0, 0, 172, rotationVector24.X * 2f, rotationVector24.Y * 2f, 100, skyBlue, 1.4f);
													Main.dust[num629].noGravity = true;
													Main.dust[num629].noLight = true;
													Dust dust61 = Main.dust[num629];
													dust61.velocity = dust61.velocity / 4f;
													Dust dust62 = Main.dust[num629];
													dust62.velocity = dust62.velocity - this.velocity;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num597)
												{
													this.ai[0] = 10f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = this.ai[3] + 1f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 12f)
											{
												this.dontTakeDamage = true;
												this.chaseable = false;
												if (this.alpha < 255)
												{
													NPC nPC211 = this;
													nPC211.alpha = nPC211.alpha + 17;
													if (this.alpha > 255)
													{
														this.alpha = 255;
													}
												}
												NPC nPC212 = this;
												nPC212.velocity = nPC212.velocity * 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num603 / 2))
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												if (Main.netMode != 1 && this.ai[2] == (float)(num603 / 2))
												{
													if (this.ai[1] == 0f)
													{
														this.ai[1] = (float)(300 * Math.Sign((center33 - player4.Center).X));
													}
													Vector2 center39 = player4.Center + new Vector2(-this.ai[1], -200f);
													Vector2 vector2213 = center39;
													vector24 = vector2213;
													base.Center = vector2213;
													center33 = vector24;
													int num630 = Math.Sign(player4.Center.X - center33.X);
													if (num630 != 0)
													{
														if (this.ai[2] == 0f && num630 != this.direction)
														{
															NPC nPC213 = this;
															nPC213.rotation = nPC213.rotation + 3.14159274f;
															for (int i5 = 0; i5 < (int)this.oldPos.Length; i5++)
															{
																this.oldPos[i5] = Vector2.Zero;
															}
														}
														this.direction = num630;
														if (this.spriteDirection != -this.direction)
														{
															NPC nPC214 = this;
															nPC214.rotation = nPC214.rotation + 3.14159274f;
														}
														this.spriteDirection = -this.direction;
													}
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num603)
												{
													this.ai[0] = 10f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = this.ai[3] + 1f;
													if (this.ai[3] >= 9f)
													{
														this.ai[3] = 0f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 13f)
											{
												if (this.ai[2] == 0f)
												{
													Main.PlaySound(29, (int)center33.X, (int)center33.Y, 20);
												}
												Vector2 vector2214 = this.velocity;
												double num631 = (double)(-single450 * (float)this.direction);
												vector24 = new Vector2();
												this.velocity = vector2214.RotatedBy(num631, vector24);
												NPC nPC215 = this;
												nPC215.rotation = nPC215.rotation - single450 * (float)this.direction;
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= (float)num604)
												{
													this.ai[0] = 10f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = this.ai[3] + 1f;
													this.netUpdate = true;
													return;
												}
											}
										}
										else if (this.aiStyle == 70)
										{
											if (this.target == 255)
											{
												this.TargetClosest(true);
												this.ai[3] = (float)Main.rand.Next(80, 121) / 100f;
												float single453 = (float)Main.rand.Next(165, 265) / 15f;
												this.velocity = Vector2.Normalize((Main.player[this.target].Center - base.Center) + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * single453;
												this.netUpdate = true;
											}
											Vector2 vector2215 = Vector2.Normalize(Main.player[this.target].Center - base.Center);
											this.velocity = ((this.velocity * 40f) + (vector2215 * 20f)) / 41f;
											this.scale = this.ai[3];
											NPC nPC216 = this;
											nPC216.alpha = nPC216.alpha - 30;
											if (this.alpha < 50)
											{
												this.alpha = 50;
											}
											this.alpha = 50;
											this.velocity.X = (this.velocity.X * 50f + Main.windSpeed * 2f + (float)Main.rand.Next(-10, 11) * 0.1f) / 51f;
											this.velocity.Y = (this.velocity.Y * 50f + -0.25f + (float)Main.rand.Next(-10, 11) * 0.2f) / 51f;
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y - 0.04f;
											}
											if (this.ai[0] == 0f)
											{
												int num632 = 40;
												Rectangle rect = this.getRect();
												rect.X = rect.X - (num632 + this.width / 2);
												rect.Y = rect.Y - (num632 + this.height / 2);
												rect.Width = rect.Width + num632 * 2;
												rect.Height = rect.Height + num632 * 2;
												int num633 = 0;
												while (num633 < 255)
												{
													Player player5 = Main.player[num633];
													if (!player5.active || player5.dead || !rect.Intersects(player5.getRect()))
													{
														num633++;
													}
													else
													{
														this.ai[0] = 1f;
														this.ai[1] = 4f;
														this.netUpdate = true;
														break;
													}
												}
											}
											if (this.ai[0] == 0f)
											{
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 150f)
												{
													this.ai[0] = 1f;
													this.ai[1] = 4f;
												}
											}
											if (this.ai[0] == 1f)
											{
												this.ai[1] = this.ai[1] - 1f;
												if (this.ai[1] <= 0f)
												{
													this.life = 0;
													this.HitEffect(0, 10);
													this.active = false;
													return;
												}
											}
											if (this.justHit || this.ai[0] == 1f)
											{
												this.dontTakeDamage = true;
												this.position = base.Center;
												int num634 = 100;
												num6 = num634;
												this.height = num634;
												this.width = num6;
												this.position = new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2));
												if (this.timeLeft > 3)
												{
													this.timeLeft = 3;
													return;
												}
											}
										}
										else if (this.aiStyle == 71)
										{
											this.noTileCollide = true;
											int num635 = 90;
											if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
											{
												this.TargetClosest(false);
												this.direction = 1;
												this.netUpdate = true;
											}
											if (this.ai[0] == 0f)
											{
												this.ai[1] = this.ai[1] + 1f;
												int num636 = this.type;
												this.noGravity = true;
												this.dontTakeDamage = true;
												this.velocity.Y = this.ai[3];
												if (this.type == 373)
												{
													float single454 = 0.104719758f;
													float single455 = this.ai[2];
													float single456 = (float)(Math.Cos((double)(single454 * this.localAI[1])) - 0.5) * single455;
													this.position.X = this.position.X - single456 * (float)(-this.direction);
													this.localAI[1] = this.localAI[1] + 1f;
													single456 = (float)(Math.Cos((double)(single454 * this.localAI[1])) - 0.5) * single455;
													this.position.X = this.position.X + single456 * (float)(-this.direction);
													if (Math.Abs(Math.Cos((double)(single454 * this.localAI[1])) - 0.5) > 0.25)
													{
														this.spriteDirection = (Math.Cos((double)(single454 * this.localAI[1])) - 0.5 >= 0 ? -1 : 1);
													}
													this.rotation = this.velocity.Y * (float)this.spriteDirection * 0.1f;
													if ((double)this.rotation < -0.2)
													{
														this.rotation = -0.2f;
													}
													if ((double)this.rotation > 0.2)
													{
														this.rotation = 0.2f;
													}
													NPC nPC217 = this;
													nPC217.alpha = nPC217.alpha - 6;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
												}
												if (this.ai[1] >= (float)num635)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													if (!Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[1] = 1f;
													}
													Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19);
													this.TargetClosest(true);
													this.spriteDirection = this.direction;
													Vector2 center40 = Main.player[this.target].Center - base.Center;
													center40.Normalize();
													this.velocity = center40 * 16f;
													this.rotation = this.velocity.ToRotation();
													if (this.direction == -1)
													{
														this.rotation = this.rotation + 3.14159274f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 1f)
											{
												this.noGravity = true;
												if (Collision.SolidCollision(this.position, this.width, this.height))
												{
													NPC nPC218 = this;
													nPC218.alpha = nPC218.alpha - 15;
													if (this.alpha < 150)
													{
														this.alpha = 150;
													}
												}
												else if (this.ai[1] < 1f)
												{
													this.ai[1] = 1f;
												}
												if (this.ai[1] >= 1f)
												{
													NPC nPC219 = this;
													nPC219.alpha = nPC219.alpha - 60;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													this.dontTakeDamage = false;
													this.ai[1] = this.ai[1] + 1f;
													if (Collision.SolidCollision(this.position, this.width, this.height))
													{
														Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
														this.life = 0;
														this.HitEffect(0, 10);
														this.active = false;
														return;
													}
												}
												if (this.ai[1] >= 60f)
												{
													this.noGravity = false;
												}
												this.rotation = this.velocity.ToRotation();
												if (this.direction == -1)
												{
													this.rotation = this.rotation + 3.14159274f;
													return;
												}
											}
										}
										else if (this.aiStyle == 72)
										{
											if (this.type == 384)
											{
												int num637 = (int)this.ai[0];
												if (!Main.npc[num637].active || Main.npc[num637].type != 383)
												{
													this.life = 0;
													this.HitEffect(0, 10);
													this.active = false;
													return;
												}
												this.velocity = Vector2.Zero;
												this.position = Main.npc[num637].Center;
												this.position.X = this.position.X - (float)(this.width / 2);
												this.position.Y = this.position.Y - (float)(this.height / 2);
												this.gfxOffY = Main.npc[num637].gfxOffY;
												Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.1f, 0.5f, 0.7f);
												return;
											}
										}
										else if (this.aiStyle == 73)
										{
											this.TargetClosest(false);
											this.spriteDirection = this.direction;
											this.velocity.X = this.velocity.X * 0.93f;
											if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
											{
												this.velocity.X = 0f;
											}
											if (this.type == 387)
											{
												float single457 = 120f;
												float single458 = 60f;
												if (this.ai[1] < single457)
												{
													this.ai[1] = this.ai[1] + 1f;
													if (this.ai[1] <= 60f)
													{
														this.alpha = 255;
													}
													else
													{
														float single459 = (this.ai[1] - single458) / (single457 - single458);
														this.alpha = (int)((1f - single459) * 255f);
													}
													this.dontTakeDamage = true;
													this.frameCounter = 0;
													this.frame.Y = 0;
													float single460 = this.ai[1] / single458;
													Vector2 vector2216 = new Vector2(0f, -30f);
													double num638 = (double)(single460 * 1.5f * 6.28318548f);
													vector24 = new Vector2();
													vector2216 = vector2216.RotatedBy(num638, vector24) * new Vector2(1f, 0.4f);
													for (int j5 = 0; j5 < 4; j5++)
													{
														Vector2 unitY2 = Vector2.Zero;
														float single461 = 1f;
														if (j5 == 0)
														{
															unitY2 = Vector2.UnitY * -15f;
															single461 = 0.15f;
														}
														if (j5 == 1)
														{
															unitY2 = Vector2.UnitY * -5f;
															single461 = 0.3f;
														}
														if (j5 == 2)
														{
															unitY2 = Vector2.UnitY * 5f;
															single461 = 0.6f;
														}
														if (j5 == 3)
														{
															unitY2 = Vector2.UnitY * 20f;
															single461 = 0.45f;
														}
														Vector2 center41 = base.Center;
														skyBlue = new Color();
														int num639 = Dust.NewDust(center41, 0, 0, 226, 0f, 0f, 100, skyBlue, 0.5f);
														Main.dust[num639].noGravity = true;
														Main.dust[num639].position = (base.Center + (vector2216 * single461)) + unitY2;
														Main.dust[num639].velocity = Vector2.Zero;
														vector2216 = vector2216 * -1f;
														Vector2 center42 = base.Center;
														skyBlue = new Color();
														num639 = Dust.NewDust(center42, 0, 0, 226, 0f, 0f, 100, skyBlue, 0.5f);
														Main.dust[num639].noGravity = true;
														Main.dust[num639].position = (base.Center + (vector2216 * single461)) + unitY2;
														Main.dust[num639].velocity = Vector2.Zero;
													}
													Lighting.AddLight((int)base.Center.X / 16, (int)(base.Center.Y - 10f) / 16, 0.1f * single460, 0.5f * single460, 0.7f * single460);
													return;
												}
												Lighting.AddLight((int)base.Center.X / 16, (int)(base.Center.Y - 10f) / 16, 0.1f, 0.5f, 0.7f);
												this.dontTakeDamage = false;
											}
											if (this.ai[0] < 60f)
											{
												this.ai[0] = this.ai[0] + 1f;
											}
											if (this.justHit)
											{
												this.ai[0] = -30f;
											}
											if (this.ai[0] == 60f)
											{
												this.ai[0] = -120f;
												Vector2 center43 = Main.player[this.target].Center;
												Vector2 center44 = base.Center - (Vector2.UnitY * 10f);
												Vector2 unitY3 = center43 - center44;
												unitY3.X = unitY3.X + (float)Main.rand.Next(-100, 101);
												unitY3.Y = unitY3.Y + (float)Main.rand.Next(-100, 101);
												unitY3.X = unitY3.X * ((float)Main.rand.Next(70, 131) * 0.01f);
												unitY3.Y = unitY3.Y * ((float)Main.rand.Next(70, 131) * 0.01f);
												unitY3.Normalize();
												if (float.IsNaN(unitY3.X) || float.IsNaN(unitY3.Y))
												{
													unitY3 = -Vector2.UnitY;
												}
												unitY3 = unitY3 * 14f;
												int num640 = 35;
												if (Main.expertMode && this.type >= 381 && this.type <= 392)
												{
													num640 = (int)((double)num640 * 0.8);
												}
												Projectile.NewProjectile(center44.X, center44.Y, unitY3.X, unitY3.Y, 435, num640, 0f, Main.myPlayer, 0f, 0f);
												return;
											}
										}
										else if (this.aiStyle == 74)
										{
											this.TargetClosest(false);
											this.rotation = this.velocity.ToRotation();
											if (Math.Sign(this.velocity.X) != 0)
											{
												this.spriteDirection = -Math.Sign(this.velocity.X);
											}
											if (this.rotation < -1.57079637f)
											{
												NPC nPC220 = this;
												nPC220.rotation = nPC220.rotation + 3.14159274f;
											}
											if (this.rotation > 1.57079637f)
											{
												NPC nPC221 = this;
												nPC221.rotation = nPC221.rotation - 3.14159274f;
											}
											if (this.type == 418)
											{
												this.spriteDirection = Math.Sign(this.velocity.X);
											}
											float single462 = 0.4f;
											float single463 = 10f;
											float single464 = 200f;
											float single465 = 750f;
											float single466 = 30f;
											float single467 = 30f;
											float single468 = 0.95f;
											int num641 = 50;
											float single469 = 14f;
											float single470 = 30f;
											float single471 = 100f;
											float single472 = 20f;
											float single473 = 0f;
											float single474 = 7f;
											bool flag129 = true;
											if (this.type == 418)
											{
												single462 = 0.3f;
												single463 = 8f;
												single464 = 300f;
												single465 = 800f;
												single466 = 60f;
												single467 = 5f;
												single468 = 0.8f;
												num641 = 0;
												single469 = 10f;
												single470 = 30f;
												single471 = 150f;
												single472 = 60f;
												single473 = 0.333333343f;
												single474 = 8f;
												flag129 = false;
											}
											single473 = single473 * single472;
											if (Main.expertMode)
											{
												single462 = single462 * Main.expertKnockBack;
											}
											if (this.type == 388 && this.ai[0] != 3f)
											{
												Vector2 vector2217 = this.position;
												int num642 = this.width;
												int num643 = this.height;
												skyBlue = new Color();
												int num644 = Dust.NewDust(vector2217, num642, num643, 226, 0f, 0f, 100, skyBlue, 0.5f);
												Main.dust[num644].noGravity = true;
												Main.dust[num644].velocity = this.velocity / 5f;
												Vector2 x202 = new Vector2(-10f, 10f);
												if (this.spriteDirection == 1)
												{
													x202.X = x202.X * -1f;
												}
												double num645 = (double)this.rotation;
												vector24 = new Vector2();
												x202 = x202.RotatedBy(num645, vector24);
												Main.dust[num644].position = base.Center + x202;
											}
											if (this.type == 418)
											{
												int num646 = (this.ai[0] == 2f ? 2 : 1);
												int num647 = (this.ai[0] == 2f ? 30 : 20);
												for (int k5 = 0; k5 < 2; k5++)
												{
													if (Main.rand.Next(3) < num646)
													{
														Vector2 center45 = base.Center - new Vector2((float)num647);
														skyBlue = new Color();
														int num648 = Dust.NewDust(center45, num647 * 2, num647 * 2, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 1.5f);
														Main.dust[num648].noGravity = true;
														Dust dust63 = Main.dust[num648];
														dust63.velocity = dust63.velocity * 0.2f;
														Main.dust[num648].fadeIn = 1f;
													}
												}
											}
											if (this.ai[0] == 0f)
											{
												this.knockBackResist = single462;
												float single475 = single463;
												Vector2 center46 = base.Center;
												Vector2 center47 = Main.player[this.target].Center;
												Vector2 vector2218 = center47 - center46;
												Vector2 unitY4 = vector2218 - (Vector2.UnitY * single464);
												float single476 = vector2218.Length();
												vector2218 = Vector2.Normalize(vector2218) * single475;
												unitY4 = Vector2.Normalize(unitY4) * single475;
												bool flag130 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
												float single477 = 8f;
												flag130 = (!flag130 || vector2218.ToRotation() <= 3.14159274f / single477 ? false : vector2218.ToRotation() < 3.14159274f - 3.14159274f / single477);
												if (single476 > single465 || !flag130)
												{
													this.velocity.X = (this.velocity.X * (single466 - 1f) + unitY4.X) / single466;
													this.velocity.Y = (this.velocity.Y * (single466 - 1f) + unitY4.Y) / single466;
												}
												else
												{
													this.ai[0] = 1f;
													this.ai[2] = vector2218.X;
													this.ai[3] = vector2218.Y;
													this.netUpdate = true;
												}
											}
											else if (this.ai[0] == 1f)
											{
												this.knockBackResist = 0f;
												NPC nPC222 = this;
												nPC222.velocity = nPC222.velocity * single468;
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= single467)
												{
													this.ai[0] = 2f;
													this.ai[1] = 0f;
													this.netUpdate = true;
													Vector2 vector2219 = new Vector2(this.ai[2], this.ai[3]) + (new Vector2((float)Main.rand.Next(-num641, num641 + 1), (float)Main.rand.Next(-num641, num641 + 1)) * 0.04f);
													vector2219.Normalize();
													vector2219 = vector2219 * single469;
													this.velocity = vector2219;
												}
												if (this.type == 388 && Main.rand.Next(4) == 0)
												{
													Vector2 vector2220 = this.position;
													int num649 = this.width;
													int num650 = this.height;
													skyBlue = new Color();
													int num651 = Dust.NewDust(vector2220, num649, num650, 226, 0f, 0f, 100, skyBlue, 0.5f);
													Main.dust[num651].noGravity = true;
													Dust dust64 = Main.dust[num651];
													dust64.velocity = dust64.velocity * 2f;
													Main.dust[num651].velocity = (Main.dust[num651].velocity / 2f) + Vector2.Normalize(Main.dust[num651].position - base.Center);
												}
											}
											else if (this.ai[0] == 2f)
											{
												this.knockBackResist = 0f;
												float single478 = single470;
												this.ai[1] = this.ai[1] + 1f;
												bool flag131 = (Vector2.Distance(base.Center, Main.player[this.target].Center) <= single471 ? false : base.Center.Y > Main.player[this.target].Center.Y);
												if ((this.ai[1] < single478 || !flag131) && this.velocity.Length() >= single474)
												{
													Vector2 center48 = base.Center;
													Vector2 center49 = Main.player[this.target].Center;
													Vector2 vector2221 = center49 - center48;
													vector2221.Normalize();
													if (vector2221.HasNaNs())
													{
														vector2221 = new Vector2((float)this.direction, 0f);
													}
													this.velocity = ((this.velocity * (single472 - 1f)) + (vector2221 * (this.velocity.Length() + single473))) / single472;
												}
												else
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													NPC nPC223 = this;
													nPC223.velocity = nPC223.velocity / 2f;
													this.netUpdate = true;
													if (this.type == 418)
													{
														this.ai[1] = 45f;
														this.ai[0] = 4f;
													}
												}
												if (flag129 && Collision.SolidCollision(this.position, this.width, this.height))
												{
													this.ai[0] = 3f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													this.netUpdate = true;
												}
											}
											else if (this.ai[0] == 4f)
											{
												this.ai[1] = this.ai[1] - 3f;
												if (this.ai[1] <= 0f)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.netUpdate = true;
												}
												NPC nPC224 = this;
												nPC224.velocity = nPC224.velocity * 0.95f;
											}
											if (flag129 && this.ai[0] != 3f && Vector2.Distance(base.Center, Main.player[this.target].Center) < 64f)
											{
												this.ai[0] = 3f;
												this.ai[1] = 0f;
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
											if (this.ai[0] == 3f)
											{
												this.position = base.Center;
												int num652 = 192;
												num6 = num652;
												this.height = num652;
												this.width = num6;
												this.position.X = this.position.X - (float)(this.width / 2);
												this.position.Y = this.position.Y - (float)(this.height / 2);
												this.velocity = Vector2.Zero;
												this.damage = (int)(80f * Main.damageMultiplier);
												this.alpha = 255;
												Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.2f, 0.7f, 1.1f);
												for (int l5 = 0; l5 < 10; l5++)
												{
													Vector2 vector2222 = this.position;
													int num653 = this.width;
													int num654 = this.height;
													skyBlue = new Color();
													int num655 = Dust.NewDust(vector2222, num653, num654, 31, 0f, 0f, 100, skyBlue, 1.5f);
													Dust dust65 = Main.dust[num655];
													dust65.velocity = dust65.velocity * 1.4f;
													Main.dust[num655].position = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f)) + base.Center;
												}
												for (int m5 = 0; m5 < 40; m5++)
												{
													Vector2 vector2223 = this.position;
													int num656 = this.width;
													int num657 = this.height;
													skyBlue = new Color();
													int num658 = Dust.NewDust(vector2223, num656, num657, 226, 0f, 0f, 100, skyBlue, 0.5f);
													Main.dust[num658].noGravity = true;
													Dust dust66 = Main.dust[num658];
													dust66.velocity = dust66.velocity * 2f;
													Main.dust[num658].position = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f)) + base.Center;
													Main.dust[num658].velocity = (Main.dust[num658].velocity / 2f) + Vector2.Normalize(Main.dust[num658].position - base.Center);
													if (Main.rand.Next(2) == 0)
													{
														Vector2 vector2224 = this.position;
														int num659 = this.width;
														int num660 = this.height;
														skyBlue = new Color();
														num658 = Dust.NewDust(vector2224, num659, num660, 226, 0f, 0f, 100, skyBlue, 0.9f);
														Main.dust[num658].noGravity = true;
														Dust dust67 = Main.dust[num658];
														dust67.velocity = dust67.velocity * 1.2f;
														Main.dust[num658].position = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f)) + base.Center;
														Main.dust[num658].velocity = (Main.dust[num658].velocity / 2f) + Vector2.Normalize(Main.dust[num658].position - base.Center);
													}
													if (Main.rand.Next(4) == 0)
													{
														Vector2 vector2225 = this.position;
														int num661 = this.width;
														int num662 = this.height;
														skyBlue = new Color();
														num658 = Dust.NewDust(vector2225, num661, num662, 226, 0f, 0f, 100, skyBlue, 0.7f);
														Dust dust68 = Main.dust[num658];
														dust68.velocity = dust68.velocity * 1.2f;
														Main.dust[num658].position = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * ((float)Main.rand.NextDouble() * 96f)) + base.Center;
														Main.dust[num658].velocity = (Main.dust[num658].velocity / 2f) + Vector2.Normalize(Main.dust[num658].position - base.Center);
													}
												}
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 3f)
												{
													Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
													this.life = 0;
													this.HitEffect(0, 10);
													this.active = false;
													return;
												}
											}
										}
										else if (this.aiStyle == 75)
										{
											int num663 = -1;
											Vector2 zero4 = Vector2.Zero;
											int num664 = 0;
											if (this.type == 390)
											{
												if (this.localAI[0] == 0f && Main.netMode != 1)
												{
													this.localAI[0] = 1f;
													int num665 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 391, this.whoAmI, 0f, 0f, 0f, 0f, 255);
													this.ai[0] = (float)num665;
													this.netUpdate = true;
												}
												int num666 = (int)this.ai[0];
												if (Main.npc[num666].active && Main.npc[num666].type == 391)
												{
													if (this.timeLeft < 60)
													{
														this.timeLeft = 60;
													}
													num663 = num666;
													zero4 = Vector2.UnitY * -14f;
												}
											}
											if (this.type == 416)
											{
												if (this.localAI[0] == 0f && Main.netMode != 1)
												{
													this.localAI[0] = 1f;
													int num667 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 415, this.whoAmI, 0f, 0f, 0f, 0f, 255);
													this.ai[0] = (float)num667;
													this.netUpdate = true;
												}
												int num668 = (int)this.ai[0];
												if (Main.npc[num668].active && Main.npc[num668].type == 415)
												{
													if (this.timeLeft < 60)
													{
														this.timeLeft = 60;
													}
													num663 = num668;
													zero4 = new Vector2((float)(-Main.npc[num668].spriteDirection * 10), -30f);
												}
											}
											else if (this.type == 392)
											{
												int num669 = (int)this.ai[0];
												if (Main.npc[num669].active && Main.npc[num669].type == 395)
												{
													if (this.timeLeft < 60)
													{
														this.timeLeft = 60;
													}
													num663 = num669;
													zero4 = Vector2.UnitY * 2f;
													zero4 = zero4 * Main.npc[num669].scale;
													float single479 = Main.npc[num669].rotation;
													double num670 = (double)single479;
													vector24 = new Vector2();
													zero4 = zero4.RotatedBy(num670, vector24);
													this.rotation = single479;
													if (Main.netMode != 1)
													{
														bool flag132 = true;
														if (Main.npc[num669].ai[0] >= 1f || Main.npc[num669].ai[0] < 0f)
														{
															flag132 = false;
														}
														if (flag132)
														{
															for (int n5 = 0; n5 < 2; n5++)
															{
																if (Main.npc[(int)this.localAI[n5]].active && Main.npc[(int)this.localAI[n5]].type == 393)
																{
																	flag132 = false;
																}
															}
															for (int o5 = 2; o5 < 4; o5++)
															{
																if (Main.npc[(int)this.localAI[o5]].active && Main.npc[(int)this.localAI[o5]].type == 394)
																{
																	flag132 = false;
																}
															}
														}
														if (flag132)
														{
															Main.npc[num669].ai[0] = 1f;
															Main.npc[num669].ai[1] = 0f;
															Main.npc[num669].ai[2] = 0f;
															Main.npc[num669].ai[3] = 0f;
															Main.npc[num669].netUpdate = true;
														}
													}
												}
											}
											else if (this.type == 393)
											{
												int num671 = (int)this.ai[0];
												if (Main.npc[num671].active && Main.npc[num671].type == 395)
												{
													if (this.timeLeft < 60)
													{
														this.timeLeft = 60;
													}
													num663 = num671;
													zero4 = (Vector2.UnitY * 29f) + ((this.ai[1] == 1f ? Vector2.UnitX : -Vector2.UnitX) * 60f);
													zero4 = zero4 * Main.npc[num671].scale;
													float single480 = Main.npc[num671].rotation;
													double num672 = (double)single480;
													vector24 = new Vector2();
													zero4 = zero4.RotatedBy(num672, vector24);
													this.rotation = single480;
												}
											}
											else if (this.type == 394)
											{
												int num673 = (int)this.ai[0];
												if (Main.npc[num673].active && Main.npc[num673].type == 395)
												{
													if (this.timeLeft < 60)
													{
														this.timeLeft = 60;
													}
													num663 = num673;
													zero4 = (Vector2.UnitY * -13f) + ((this.ai[1] == 1f ? Vector2.UnitX : -Vector2.UnitX) * 49f);
													zero4 = zero4 * Main.npc[num673].scale;
													float single481 = Main.npc[num673].rotation;
													double num674 = (double)single481;
													vector24 = new Vector2();
													zero4 = zero4.RotatedBy(num674, vector24);
													this.rotation = single481;
													num664 = (this.ai[1] == 1f ? 1 : -1);
												}
											}
											else if (this.type == 492)
											{
												int num675 = (int)this.ai[0];
												if (Main.npc[num675].active && Main.npc[num675].type == 491)
												{
													if (this.timeLeft < 60)
													{
														this.timeLeft = 60;
													}
													num663 = num675;
													zero4 = new Vector2((-122f + 68f * this.ai[1]) * (float)((Main.npc[num675].spriteDirection == 1 ? -1 : 1)), -6f);
													zero4 = zero4 * Main.npc[num675].scale;
													float single482 = Main.npc[num675].rotation;
													double num676 = (double)single482;
													vector24 = new Vector2();
													zero4 = zero4.RotatedBy(num676, vector24);
													this.rotation = single482;
												}
											}
											if (num663 == -1)
											{
												if (this.type == 390)
												{
													this.Transform(382);
													return;
												}
												if (this.type == 416)
												{
													this.Transform(518);
													return;
												}
												this.life = 0;
												this.HitEffect(0, 10);
												this.active = false;
												return;
											}
											NPC nPC225 = Main.npc[num663];
											this.velocity = Vector2.Zero;
											this.position = nPC225.Center;
											this.position.X = this.position.X - (float)(this.width / 2);
											this.position.Y = this.position.Y - (float)(this.height / 2);
											NPC nPC226 = this;
											nPC226.position = nPC226.position + zero4;
											this.gfxOffY = nPC225.gfxOffY;
											this.direction = nPC225.direction;
											if (num664 != 0)
											{
												this.spriteDirection = num664;
											}
											else
											{
												this.spriteDirection = nPC225.spriteDirection;
											}
											if (this.type == 390)
											{
												this.timeLeft = nPC225.timeLeft;
												this.velocity = nPC225.velocity;
												this.target = nPC225.target;
												if (this.ai[1] < 60f)
												{
													this.ai[1] = this.ai[1] + 1f;
												}
												if (this.justHit)
												{
													this.ai[1] = -30f;
												}
												int num677 = 438;
												int num678 = 30;
												float single483 = 7f;
												if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													Vector2 center50 = Main.player[this.target].Center - base.Center;
													Vector2 vector2226 = Vector2.Normalize(center50);
													float single484 = center50.Length();
													float single485 = 700f;
													if (this.type == 214)
													{
														single485 = 550f;
													}
													if (this.type == 215)
													{
														single485 = 800f;
													}
													if (single484 < single485)
													{
														if (this.ai[1] != 60f || Math.Sign(center50.X) != this.direction)
														{
															float single486 = this.ai[2];
															this.velocity.X = this.velocity.X * 0.5f;
															this.ai[2] = 3f;
															if (Math.Abs(vector2226.Y) > Math.Abs(vector2226.X) * 2f)
															{
																if (vector2226.Y <= 0f)
																{
																	this.ai[2] = 5f;
																}
																else
																{
																	this.ai[2] = 1f;
																}
															}
															else if (Math.Abs(vector2226.X) > Math.Abs(vector2226.Y) * 2f)
															{
																this.ai[2] = 3f;
															}
															else if (vector2226.Y <= 0f)
															{
																this.ai[2] = 4f;
															}
															else
															{
																this.ai[2] = 2f;
															}
															if (this.ai[2] != single486)
															{
																this.netUpdate = true;
															}
														}
														else
														{
															this.ai[1] = -60f;
															Vector2 center51 = Main.player[this.target].Center;
															Vector2 center52 = base.Center - (Vector2.UnitY * 4f);
															Vector2 unitY5 = center51 - center52;
															unitY5.X = unitY5.X + (float)Main.rand.Next(-50, 51);
															unitY5.Y = unitY5.Y + (float)Main.rand.Next(-50, 51);
															unitY5.X = unitY5.X * ((float)Main.rand.Next(80, 121) * 0.01f);
															unitY5.Y = unitY5.Y * ((float)Main.rand.Next(80, 121) * 0.01f);
															unitY5.Normalize();
															if (float.IsNaN(unitY5.X) || float.IsNaN(unitY5.Y))
															{
																unitY5 = -Vector2.UnitY;
															}
															unitY5 = unitY5 * single483;
															Projectile.NewProjectile(center52.X, center52.Y, unitY5.X, unitY5.Y, num677, num678, 0f, Main.myPlayer, 0f, 0f);
															this.netUpdate = true;
														}
													}
												}
											}
											if (this.type == 492)
											{
												this.timeLeft = nPC225.timeLeft;
												this.velocity = nPC225.velocity;
												if (this.ai[3] < 240f)
												{
													this.ai[3] = this.ai[3] + 1f;
												}
												if (this.ai[3] == 2f)
												{
													this.TargetClosest(false);
												}
												if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
												{
													if (this.ai[2] != 0f)
													{
														this.netUpdate = true;
													}
													this.ai[2] = 0f;
												}
												else
												{
													Vector2 center53 = Main.player[this.target].Center - base.Center;
													Vector2.Normalize(center53);
													if (this.ai[3] < 240f)
													{
														float single487 = this.ai[2];
														float[] singleArray13 = new float[8];
														for (int p5 = 0; p5 < (int)singleArray13.Length; p5++)
														{
															Vector2 center54 = base.Center;
															Vector2 unitY6 = Vector2.UnitY;
															double num679 = (double)((float)p5 * -0.7853982f);
															vector24 = new Vector2();
															singleArray13[p5] = Vector2.Distance(center54 + (unitY6.RotatedBy(num679, vector24) * 50f), Main.player[this.target].Center);
														}
														int num680 = 0;
														for (int q5 = 1; q5 < (int)singleArray13.Length; q5++)
														{
															if (singleArray13[num680] > singleArray13[q5])
															{
																num680 = q5;
															}
														}
														this.ai[2] = (float)(num680 + 1);
														if (this.spriteDirection == 1)
														{
															this.ai[2] = 9f - this.ai[2];
														}
														if (this.ai[2] != single487)
														{
															this.netUpdate = true;
														}
													}
													else
													{
														this.ai[3] = 0f;
														Vector2 center55 = Main.player[this.target].Center;
														Vector2 center56 = base.Center;
														Vector2 unitY7 = Vector2.Normalize(center55 - center56);
														if (float.IsNaN(unitY7.X) || float.IsNaN(unitY7.Y))
														{
															unitY7 = Vector2.UnitY;
														}
														unitY7 = unitY7 * 14f;
														unitY7 = unitY7 + (Vector2.UnitY * -5f);
														if (Main.netMode != 1)
														{
															Projectile.NewProjectile(center56.X, center56.Y, unitY7.X, unitY7.Y, 240, 30, 0f, Main.myPlayer, 0f, 0f);
														}
														this.netUpdate = true;
													}
												}
											}
											if (this.type == 394)
											{
												this.timeLeft = nPC225.timeLeft;
												int num681 = 50;
												if (Main.expertMode)
												{
													num681 = 37;
												}
												this.ai[3] = nPC225.ai[3];
												float single488 = 440f;
												float single489 = 140f;
												if (this.ai[3] >= single488 && this.ai[3] < single488 + single489 && (this.ai[3] - single488) % 20f == 0f)
												{
													if (Main.netMode != 1)
													{
														Vector2 unitX2 = (float)num664 * Vector2.UnitX;
														vector24 = new Vector2();
														unitX2 = unitX2.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
														unitX2 = unitX2 * 8f;
														Vector2 unitX3 = ((((float)num664 * Vector2.UnitX) * 36f) + base.Center) + (Vector2.UnitY * 8f);
														Projectile.NewProjectile(unitX3.X, unitX3.Y, unitX2.X, unitX2.Y, 448, num681, 0f, Main.myPlayer, 0f, 20f);
													}
													Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
												}
											}
											if (this.type == 393)
											{
												this.timeLeft = nPC225.timeLeft;
												int num682 = 35;
												if (Main.expertMode)
												{
													num682 = 30;
												}
												this.ai[3] = nPC225.ai[3];
												float single490 = 280f;
												float single491 = 140f;
												bool flag133 = (this.ai[3] < single490 ? false : this.ai[3] < single490 + single491);
												if (!flag133)
												{
													this.TargetClosest(false);
													Player player6 = Main.player[this.target];
													Vector2 unitY8 = player6.Center - base.Center;
													if (unitY8.Y < 0f)
													{
														unitY8.Y = 0f;
													}
													unitY8.Normalize();
													if (float.IsNaN(unitY8.X) || float.IsNaN(unitY8.Y))
													{
														unitY8 = Vector2.UnitY;
													}
													this.ai[2] = unitY8.ToRotation();
												}
												if (flag133 && (this.ai[3] - single490) % 6f == 0f)
												{
													if (Main.netMode != 1)
													{
														Vector2 rotationVector25 = this.ai[2].ToRotationVector2();
														double num683 = (Main.rand.NextDouble() - 0.5) * 0.785398185253143 / 3;
														vector24 = new Vector2();
														rotationVector25 = rotationVector25.RotatedBy(num683, vector24);
														rotationVector25 = rotationVector25 * 16f;
														Vector2 center57 = base.Center + (rotationVector25 * 1f);
														Projectile.NewProjectile(center57.X, center57.Y, rotationVector25.X, rotationVector25.Y, 449, num682, 0f, Main.myPlayer, 0f, 0f);
													}
													Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 12);
												}
											}
											if (this.type == 392)
											{
												this.timeLeft = nPC225.timeLeft;
												int num684 = 70;
												if (Main.expertMode)
												{
													num684 = 50;
												}
												this.ai[3] = nPC225.ai[3];
												float single492 = 20f;
												float single493 = 240f;
												bool flag134 = (this.ai[3] < single492 || this.ai[3] >= single492 + single493 ? false : nPC225.ai[0] == 0f);
												if (flag134 && this.ai[3] - single492 == 0f)
												{
													if (Main.netMode != 1)
													{
														Vector2 center58 = base.Center;
														Projectile.NewProjectile(center58.X, center58.Y, 0f, 0f, 447, num684, 0f, Main.myPlayer, (float)(this.whoAmI + 1), 0f);
													}
													Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 12);
												}
												flag134 = false;
												int num685 = 1000;
												int num686 = 1000;
												int num687 = 450;
												int num688 = 30;
												if (Main.expertMode)
												{
													num688 = 25;
												}
												if (nPC225.ai[0] == 2f)
												{
													flag134 = true;
													num686 = 120;
													num685 = 120;
												}
												if (!flag134)
												{
													single492 = 280f;
													single493 = 120f;
													if (flag134)
													{
														flag3 = true;
													}
													else
													{
														flag3 = (this.ai[3] < single492 ? false : this.ai[3] < single492 + single493);
													}
													flag134 = flag3;
													if (flag134)
													{
														num686 = 90;
														num685 = 60;
													}
												}
												if (!flag134)
												{
													single492 = 440f;
													single493 = 140f;
													if (flag134)
													{
														flag2 = true;
													}
													else
													{
														flag2 = (this.ai[3] < single492 ? false : this.ai[3] < single492 + single493);
													}
													flag134 = flag2;
													if (flag134)
													{
														num686 = 60;
														num685 = 90;
													}
												}
												bool flag135 = true;
												bool flag136 = true;
												bool flag137 = true;
												bool flag138 = true;
												if (Main.npc[(int)this.localAI[0]].active && Main.npc[(int)this.localAI[0]].type == 393)
												{
													flag135 = false;
												}
												if (Main.npc[(int)this.localAI[1]].active && Main.npc[(int)this.localAI[1]].type == 393)
												{
													flag136 = false;
												}
												if (Main.npc[(int)this.localAI[2]].active && Main.npc[(int)this.localAI[2]].type == 394)
												{
													flag137 = false;
												}
												if (Main.npc[(int)this.localAI[3]].active && Main.npc[(int)this.localAI[3]].type == 394)
												{
													flag138 = false;
												}
												if (flag134)
												{
													if (flag135 && Main.rand.Next(num685) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 vector2227 = new Vector2(-1f * (float)Main.rand.NextDouble() * 3f, 1f);
															vector24 = new Vector2();
															vector2227 = vector2227.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
															vector2227 = vector2227 * 3f;
															Vector2 unitX4 = (((-1f * Vector2.UnitX) * (float)Main.rand.Next(50, 70)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(30, 45));
															Projectile.NewProjectile(unitX4.X, unitX4.Y, vector2227.X, vector2227.Y, num687, num688, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
													if (flag136 && Main.rand.Next(num685) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 vector2228 = new Vector2(1f * (float)Main.rand.NextDouble() * 3f, 1f);
															vector24 = new Vector2();
															vector2228 = vector2228.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
															vector2228 = vector2228 * 3f;
															Vector2 unitX5 = (((1f * Vector2.UnitX) * (float)Main.rand.Next(50, 70)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(30, 45));
															Projectile.NewProjectile(unitX5.X, unitX5.Y, vector2228.X, vector2228.Y, num687, num688, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
												}
												if (flag134)
												{
													if (flag137 && Main.rand.Next(num686) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 vector2229 = new Vector2(-1f * (float)Main.rand.NextDouble() * 2f, -1f);
															vector24 = new Vector2();
															vector2229 = vector2229.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
															vector2229 = vector2229 * 3f;
															Vector2 unitX6 = (((-1f * Vector2.UnitX) * (float)Main.rand.Next(30, 60)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(-30, -10));
															Projectile.NewProjectile(unitX6.X, unitX6.Y, vector2229.X, vector2229.Y, num687, num688, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
													if (flag138 && Main.rand.Next(num686) == 0)
													{
														if (Main.netMode != 1)
														{
															Vector2 vector2230 = new Vector2(1f * (float)Main.rand.NextDouble() * 2f, -1f);
															vector24 = new Vector2();
															vector2230 = vector2230.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
															vector2230 = vector2230 * 3f;
															Vector2 unitX7 = (((1f * Vector2.UnitX) * (float)Main.rand.Next(30, 60)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(-30, -10));
															Projectile.NewProjectile(unitX7.X, unitX7.Y, vector2230.X, vector2230.Y, num687, num688, 0f, Main.myPlayer, 0f, 0f);
														}
														Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 39);
													}
												}
												if (flag135 && Main.rand.Next(8) == 0)
												{
													Vector2 unitX8 = (((-1f * Vector2.UnitX) * (float)Main.rand.Next(50, 70)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(15, 30));
													num10 = (Main.rand.Next(4) != 0 ? 31 : 228);
													skyBlue = new Color();
													int num689 = Dust.NewDust(unitX8, 4, 16, num10, 0f, 0f, 100, skyBlue, 1.2f);
													Dust dust69 = Main.dust[num689];
													Vector2 vector2231 = new Vector2(-1f * (float)Main.rand.NextDouble() * 3f, 1f);
													vector24 = new Vector2();
													dust69.velocity = vector2231.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
													Dust dust70 = Main.dust[num689];
													dust70.velocity = dust70.velocity * 0.5f;
													Main.dust[num689].velocity.Y = -Math.Abs(Main.dust[num689].velocity.Y);
												}
												if (flag136 && Main.rand.Next(8) == 0)
												{
													Vector2 unitX9 = ((Vector2.UnitX * (float)Main.rand.Next(50, 70)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(15, 30));
													num9 = (Main.rand.Next(4) != 0 ? 31 : 228);
													skyBlue = new Color();
													int num690 = Dust.NewDust(unitX9, 4, 16, num9, 0f, 0f, 100, skyBlue, 1.2f);
													Dust dust71 = Main.dust[num690];
													Vector2 vector2232 = new Vector2((float)Main.rand.NextDouble() * 3f, 1f);
													vector24 = new Vector2();
													dust71.velocity = vector2232.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
													Dust dust72 = Main.dust[num690];
													dust72.velocity = dust72.velocity * 0.5f;
													Main.dust[num690].velocity.Y = -Math.Abs(Main.dust[num690].velocity.Y);
												}
												if (flag137 && Main.rand.Next(8) == 0)
												{
													Vector2 unitX10 = (((-1f * Vector2.UnitX) * (float)Main.rand.Next(30, 60)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(-30, -10));
													num8 = (Main.rand.Next(4) != 0 ? 31 : 228);
													skyBlue = new Color();
													int num691 = Dust.NewDust(unitX10, 4, 16, num8, 0f, 0f, 100, skyBlue, 1.2f);
													Dust dust73 = Main.dust[num691];
													Vector2 vector2233 = new Vector2(-1f * (float)Main.rand.NextDouble() * 2f, 1f);
													vector24 = new Vector2();
													dust73.velocity = vector2233.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
													Dust dust74 = Main.dust[num691];
													dust74.velocity = dust74.velocity * 0.5f;
													Main.dust[num691].velocity.Y = -Math.Abs(Main.dust[num691].velocity.Y);
												}
												if (flag138 && Main.rand.Next(8) == 0)
												{
													Vector2 unitX11 = ((Vector2.UnitX * (float)Main.rand.Next(30, 60)) + base.Center) + (Vector2.UnitY * (float)Main.rand.Next(-30, -10));
													num7 = (Main.rand.Next(4) != 0 ? 31 : 228);
													skyBlue = new Color();
													int num692 = Dust.NewDust(unitX11, 4, 16, num7, 0f, 0f, 100, skyBlue, 1.2f);
													Dust dust75 = Main.dust[num692];
													Vector2 vector2234 = new Vector2((float)Main.rand.NextDouble() * 2f, 1f);
													vector24 = new Vector2();
													dust75.velocity = vector2234.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.785398185253143, vector24);
													Dust dust76 = Main.dust[num692];
													dust76.velocity = dust76.velocity * 0.5f;
													Main.dust[num692].velocity.Y = -Math.Abs(Main.dust[num692].velocity.Y);
													return;
												}
											}
										}
										else if (this.aiStyle == 76)
										{
											if (this.localAI[3] == 0f && Main.netMode != 1 && this.type == 395)
											{
												this.localAI[3] = 1f;
												int[] numArray3 = new int[4];
												int num693 = 0;
												for (int r5 = 0; r5 < 2; r5++)
												{
													int num694 = NPC.NewNPC((int)base.Center.X + r5 * 300 - 150, (int)base.Center.Y, 393, this.whoAmI, 0f, 0f, 0f, 0f, 255);
													Main.npc[num694].ai[1] = (float)r5;
													Main.npc[num694].netUpdate = true;
													int num695 = num693;
													num693 = num695 + 1;
													numArray3[num695] = num694;
												}
												for (int s5 = 0; s5 < 2; s5++)
												{
													int num696 = NPC.NewNPC((int)base.Center.X + s5 * 300 - 150, (int)base.Center.Y, 394, this.whoAmI, 0f, 0f, 0f, 0f, 255);
													Main.npc[num696].ai[1] = (float)s5;
													Main.npc[num696].netUpdate = true;
													int num697 = num693;
													num693 = num697 + 1;
													numArray3[num697] = num696;
												}
												int num698 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 392, this.whoAmI, 0f, 0f, 0f, 0f, 255);
												Main.npc[num698].ai[0] = (float)this.whoAmI;
												Main.npc[num698].netUpdate = true;
												for (int t5 = 0; t5 < 4; t5++)
												{
													Main.npc[numArray3[t5]].ai[0] = (float)this.whoAmI;
												}
												for (int u5 = 0; u5 < 4; u5++)
												{
													Main.npc[num698].localAI[u5] = (float)numArray3[u5];
												}
											}
											Vector2 center59 = base.Center;
											Player player7 = Main.player[this.target];
											if (this.target < 0 || this.target == 255 || player7.dead || !player7.active)
											{
												this.TargetClosest(true);
												player7 = Main.player[this.target];
												this.netUpdate = true;
											}
											if ((player7.dead || Vector2.Distance(player7.Center, center59) > 3200f) && this.ai[0] != 1f)
											{
												if (this.ai[0] == 0f)
												{
													this.ai[0] = -1f;
												}
												if (this.ai[0] == 2f)
												{
													this.ai[0] = -2f;
												}
												this.netUpdate = true;
											}
											if (this.ai[0] == -1f || this.ai[0] == -2f)
											{
												this.velocity.Y = this.velocity.Y - 0.4f;
												if (this.timeLeft > 10)
												{
													this.timeLeft = 10;
												}
												if (!player7.dead)
												{
													this.timeLeft = 300;
													if (this.ai[0] == -2f)
													{
														this.ai[0] = 2f;
													}
													if (this.ai[0] == 0f)
													{
														this.ai[0] = 0f;
													}
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] != 0f)
											{
												if (this.ai[0] == 1f)
												{
													this.dontTakeDamage = false;
													NPC nPC227 = this;
													nPC227.velocity = nPC227.velocity * 0.96f;
													float single494 = 150f;
													this.ai[1] = this.ai[1] + 1f;
													if (this.ai[1] >= single494)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														this.rotation = 0f;
														this.netUpdate = true;
														return;
													}
													if (this.ai[1] < 40f)
													{
														Vector2 unitY9 = Vector2.UnitY;
														double num699 = (double)(this.ai[1] / 40f * 6.28318548f);
														vector24 = new Vector2();
														this.rotation = unitY9.RotatedBy(num699, vector24).Y * 0.2f;
														return;
													}
													if (this.ai[1] < 80f)
													{
														Vector2 unitY10 = Vector2.UnitY;
														double num700 = (double)(this.ai[1] / 20f * 6.28318548f);
														vector24 = new Vector2();
														this.rotation = unitY10.RotatedBy(num700, vector24).Y * 0.3f;
														return;
													}
													if (this.ai[1] >= 120f)
													{
														this.rotation = (this.ai[1] - 120f) / 30f * 6.28318548f;
														return;
													}
													Vector2 unitY11 = Vector2.UnitY;
													double num701 = (double)(this.ai[1] / 10f * 6.28318548f);
													vector24 = new Vector2();
													this.rotation = unitY11.RotatedBy(num701, vector24).Y * 0.4f;
													return;
												}
												if (this.ai[0] == 2f)
												{
													int num702 = 100;
													float single495 = 3600f;
													float single496 = 120f;
													float single497 = 60f;
													int num703 = 0;
													if (this.ai[3] % single496 >= single497)
													{
														num703 = 1;
													}
													int num704 = num703;
													num703 = 0;
													this.ai[3] = this.ai[3] + 1f;
													if (this.ai[3] % single496 >= single497)
													{
														num703 = 1;
													}
													if (num703 != num704)
													{
														if (num703 == 1)
														{
															this.ai[2] = (float)((Math.Sign((player7.Center - center59).X) == 1 ? 1 : -1));
															if (Main.netMode != 1)
															{
																Vector2 center60 = base.Center;
																Projectile.NewProjectile(center60.X, center60.Y, 0f, 0f, 447, num702, 0f, Main.myPlayer, (float)(this.whoAmI + 1), 0f);
															}
															Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 12);
														}
														this.netUpdate = true;
													}
													if (this.ai[3] >= single495)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.ai[3] = 0f;
														this.netUpdate = true;
													}
													else if (num703 != 0)
													{
														int x203 = (int)base.Center.X / 16;
														int y206 = (int)(this.position.Y + (float)this.height) / 16;
														int num705 = 0;
														if ((!Main.tile[x203, y206].nactive() || !Main.tileSolid[Main.tile[x203, y206].type] ? true : Main.tileSolidTop[Main.tile[x203, y206].type]))
														{
															while (num705 < 150 && y206 + num705 < Main.maxTilesY)
															{
																int num706 = y206 + num705;
																if ((!Main.tile[x203, num706].nactive() || !Main.tileSolid[Main.tile[x203, num706].type] ? true : Main.tileSolidTop[Main.tile[x203, num706].type]))
																{
																	num705++;
																}
																else
																{
																	num705--;
																	break;
																}
															}
														}
														else
														{
															num705 = 1;
														}
														float single498 = (float)(num705 * 16);
														if (single498 >= 250f)
														{
															this.velocity.Y = this.velocity.Y * 0.95f;
														}
														else
														{
															float single499 = -4f;
															if (-single499 > single498)
															{
																single499 = -single498;
															}
															this.velocity.Y = MathHelper.Lerp(this.velocity.Y, single499, 0.05f);
														}
														this.velocity.X = 8f * this.ai[2];
													}
													else
													{
														Vector2 center61 = (player7.Center + new Vector2(this.ai[2] * 350f, -250f)) - center59;
														center61.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, center61 * 16f, 0.1f);
													}
													this.rotation = 0f;
													return;
												}
											}
											else
											{
												int num707 = 0;
												int num708 = 0;
												if (this.ai[3] >= 580f)
												{
													num707 = 0;
												}
												else if (this.ai[3] >= 440f)
												{
													num707 = 5;
												}
												else if (this.ai[3] >= 420f)
												{
													num707 = 4;
												}
												else if (this.ai[3] >= 280f)
												{
													num707 = 3;
												}
												else if (this.ai[3] >= 260f)
												{
													num707 = 2;
												}
												else if (this.ai[3] >= 20f)
												{
													num707 = 1;
												}
												this.ai[3] = this.ai[3] + 1f;
												if (this.ai[3] >= 600f)
												{
													this.ai[3] = 0f;
												}
												num708 = num707;
												if (this.ai[3] >= 580f)
												{
													num707 = 0;
												}
												else if (this.ai[3] >= 440f)
												{
													num707 = 5;
												}
												else if (this.ai[3] >= 420f)
												{
													num707 = 4;
												}
												else if (this.ai[3] >= 280f)
												{
													num707 = 3;
												}
												else if (this.ai[3] >= 260f)
												{
													num707 = 2;
												}
												else if (this.ai[3] >= 20f)
												{
													num707 = 1;
												}
												if (num707 != num708)
												{
													if (num707 == 0)
													{
														this.ai[2] = 0f;
													}
													if (num707 == 1)
													{
														this.ai[2] = (float)((Math.Sign((player7.Center - center59).X) == 1 ? 1 : -1));
													}
													if (num707 == 2)
													{
														this.ai[2] = 0f;
													}
													this.netUpdate = true;
												}
												if (num707 == 0)
												{
													if (this.ai[2] == 0f)
													{
														this.ai[2] = (float)(-600 * Math.Sign((center59 - player7.Center).X));
													}
													Vector2 center62 = (player7.Center + new Vector2(this.ai[2], -250f)) - center59;
													if (center62.Length() >= 50f)
													{
														center62.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, center62 * 16f, 0.1f);
													}
													else
													{
														this.ai[3] = 19f;
													}
												}
												if (num707 == 1)
												{
													int x204 = (int)base.Center.X / 16;
													int y207 = (int)(this.position.Y + (float)this.height) / 16;
													int num709 = 0;
													if ((!Main.tile[x204, y207].nactive() || !Main.tileSolid[Main.tile[x204, y207].type] ? true : Main.tileSolidTop[Main.tile[x204, y207].type]))
													{
														while (num709 < 150 && y207 + num709 < Main.maxTilesY)
														{
															int num710 = y207 + num709;
															if ((!Main.tile[x204, num710].nactive() || !Main.tileSolid[Main.tile[x204, num710].type] ? true : Main.tileSolidTop[Main.tile[x204, num710].type]))
															{
																num709++;
															}
															else
															{
																num709--;
																break;
															}
														}
													}
													else
													{
														num709 = 1;
													}
													float single500 = (float)(num709 * 16);
													if (single500 >= 250f)
													{
														this.velocity.Y = this.velocity.Y * 0.95f;
													}
													else
													{
														float single501 = -4f;
														if (-single501 > single500)
														{
															single501 = -single500;
														}
														this.velocity.Y = MathHelper.Lerp(this.velocity.Y, single501, 0.05f);
													}
													this.velocity.X = 3.5f * this.ai[2];
												}
												if (num707 == 2)
												{
													if (this.ai[2] == 0f)
													{
														this.ai[2] = (float)(300 * Math.Sign((center59 - player7.Center).X));
													}
													Vector2 center63 = (player7.Center + new Vector2(this.ai[2], -170f)) - center59;
													int x205 = (int)base.Center.X / 16;
													int y208 = (int)(this.position.Y + (float)this.height) / 16;
													int num711 = 0;
													if ((!Main.tile[x205, y208].nactive() || !Main.tileSolid[Main.tile[x205, y208].type] ? true : Main.tileSolidTop[Main.tile[x205, y208].type]))
													{
														while (num711 < 150 && y208 + num711 < Main.maxTilesY)
														{
															int num712 = y208 + num711;
															if ((!Main.tile[x205, num712].nactive() || !Main.tileSolid[Main.tile[x205, num712].type] ? true : Main.tileSolidTop[Main.tile[x205, num712].type]))
															{
																num711++;
															}
															else
															{
																num711--;
																break;
															}
														}
													}
													else
													{
														num711 = 1;
													}
													float single502 = (float)(num711 * 16);
													float single503 = 170f;
													if (single502 < single503)
													{
														center63.Y = center63.Y - (single503 - single502);
													}
													if (center63.Length() >= 70f)
													{
														center63.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, center63 * 20f, 0.1f);
													}
													else
													{
														this.ai[3] = 279f;
													}
												}
												else if (num707 == 3)
												{
													float single504 = 0.85f;
													int x206 = (int)base.Center.X / 16;
													int y209 = (int)(this.position.Y + (float)this.height) / 16;
													int num713 = 0;
													if ((!Main.tile[x206, y209].nactive() || !Main.tileSolid[Main.tile[x206, y209].type] ? true : Main.tileSolidTop[Main.tile[x206, y209].type]))
													{
														while (num713 < 150 && y209 + num713 < Main.maxTilesY)
														{
															int num714 = y209 + num713;
															if ((!Main.tile[x206, num714].nactive() || !Main.tileSolid[Main.tile[x206, num714].type] ? true : Main.tileSolidTop[Main.tile[x206, num714].type]))
															{
																num713++;
															}
															else
															{
																num713--;
																break;
															}
														}
													}
													else
													{
														num713 = 1;
													}
													float single505 = (float)(num713 * 16);
													if (single505 >= 170f)
													{
														this.velocity.Y = this.velocity.Y * single504;
													}
													else
													{
														float single506 = -4f;
														if (-single506 > single505)
														{
															single506 = -single505;
														}
														this.velocity.Y = MathHelper.Lerp(this.velocity.Y, single506, 0.05f);
													}
													this.velocity.X = this.velocity.X * single504;
												}
												if (num707 == 4)
												{
													Vector2 center64 = (player7.Center + new Vector2(0f, -250f)) - center59;
													if (center64.Length() < 50f)
													{
														this.ai[3] = 439f;
														return;
													}
													center64.Normalize();
													this.velocity = Vector2.Lerp(this.velocity, center64 * 16f, 0.1f);
													return;
												}
												if (num707 == 5)
												{
													NPC nPC228 = this;
													nPC228.velocity = nPC228.velocity * 0.85f;
													return;
												}
											}
										}
										else if (this.aiStyle == 77)
										{
											if (this.ai[0] != -1f && this.ai[0] != 2f && Main.rand.Next(200) == 0)
											{
												Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, Main.rand.Next(93, 100));
											}
											if (this.localAI[3] == 0f)
											{
												this.netUpdate = true;
												this.localAI[3] = 1f;
												this.ai[0] = -1f;
											}
											if (this.ai[0] == -1f)
											{
												this.dontTakeDamage = true;
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] == 30f)
												{
													Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, 92);
												}
												if (this.ai[1] < 60f)
												{
													MoonlordDeathDrama.RequestLight(this.ai[1] / 30f, base.Center);
												}
												if (this.ai[1] == 60f)
												{
													this.ai[1] = 0f;
													this.ai[0] = 0f;
													if (Main.netMode != 1 && this.type == 398)
													{
														this.ai[2] = (float)Main.rand.Next(3);
														this.ai[2] = 0f;
														this.netUpdate = true;
														int[] numArray4 = new int[3];
														int num715 = 0;
														for (int v5 = 0; v5 < 2; v5++)
														{
															int num716 = NPC.NewNPC((int)base.Center.X + v5 * 800 - 400, (int)base.Center.Y - 100, 397, this.whoAmI, 0f, 0f, 0f, 0f, 255);
															Main.npc[num716].ai[2] = (float)v5;
															Main.npc[num716].netUpdate = true;
															int num717 = num715;
															num715 = num717 + 1;
															numArray4[num717] = num716;
														}
														int num718 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y - 400, 396, this.whoAmI, 0f, 0f, 0f, 0f, 255);
														Main.npc[num718].netUpdate = true;
														int num719 = num715;
														num715 = num719 + 1;
														numArray4[num719] = num718;
														for (int w5 = 0; w5 < 3; w5++)
														{
															Main.npc[numArray4[w5]].ai[3] = (float)this.whoAmI;
														}
														for (int x510 = 0; x510 < 3; x510++)
														{
															this.localAI[x510] = (float)numArray4[x510];
														}
													}
												}
											}
											if (this.ai[0] == 0f)
											{
												this.dontTakeDamage = true;
												this.TargetClosest(false);
												Vector2 center65 = (Main.player[this.target].Center - base.Center) + new Vector2(0f, 130f);
												if (center65.Length() > 20f)
												{
													Vector2 vector2235 = Vector2.Normalize(center65 - this.velocity) * 8f;
													Vector2 vector2236 = this.velocity;
													this.SimpleFlyMovement(vector2235, 0.5f);
													this.velocity = Vector2.Lerp(this.velocity, vector2236, 0.5f);
												}
												if (Main.netMode != 1)
												{
													bool flag139 = false;
													if (this.localAI[0] < 0f || this.localAI[1] < 0f || this.localAI[2] < 0f)
													{
														flag139 = true;
													}
													else if (!Main.npc[(int)this.localAI[0]].active || Main.npc[(int)this.localAI[0]].type != 397)
													{
														flag139 = true;
													}
													else if (!Main.npc[(int)this.localAI[1]].active || Main.npc[(int)this.localAI[1]].type != 397)
													{
														flag139 = true;
													}
													else if (!Main.npc[(int)this.localAI[2]].active || Main.npc[(int)this.localAI[2]].type != 396)
													{
														flag139 = true;
													}
													if (flag139)
													{
														this.life = 0;
														this.HitEffect(0, 10);
														this.active = false;
													}
													bool flag140 = true;
													if (Main.npc[(int)this.localAI[0]].ai[0] != -2f)
													{
														flag140 = false;
													}
													if (Main.npc[(int)this.localAI[1]].ai[0] != -2f)
													{
														flag140 = false;
													}
													if (Main.npc[(int)this.localAI[2]].ai[0] != -2f)
													{
														flag140 = false;
													}
													if (flag140)
													{
														this.ai[0] = 1f;
														this.dontTakeDamage = false;
														this.netUpdate = true;
													}
												}
											}
											else if (this.ai[0] == 1f)
											{
												this.dontTakeDamage = false;
												this.TargetClosest(false);
												Vector2 center66 = (Main.player[this.target].Center - base.Center) + new Vector2(0f, 130f);
												if (center66.Length() > 20f)
												{
													Vector2 vector2237 = Vector2.Normalize(center66 - this.velocity) * 8f;
													Vector2 vector2238 = this.velocity;
													this.SimpleFlyMovement(vector2237, 0.5f);
													this.velocity = Vector2.Lerp(this.velocity, vector2238, 0.5f);
												}
											}
											else if (this.ai[0] == 2f)
											{
												this.dontTakeDamage = true;
												Vector2 vector2239 = new Vector2((float)this.direction, -0.5f);
												this.velocity = Vector2.Lerp(this.velocity, vector2239, 0.98f);
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] < 60f)
												{
													MoonlordDeathDrama.RequestLight(this.ai[1] / 60f, base.Center);
												}
												if (this.ai[1] == 60f)
												{
													for (int y510 = 0; y510 < 1000; y510++)
													{
														Projectile projectile = Main.projectile[y510];
														if (projectile.active && (projectile.type == 456 || projectile.type == 462 || projectile.type == 455 || projectile.type == 452 || projectile.type == 454))
														{
															projectile.Kill();
														}
													}
													for (int a5 = 0; a5 < 200; a5++)
													{
														NPC nPC229 = Main.npc[a5];
														if (nPC229.active && nPC229.type == 400)
														{
															nPC229.HitEffect(0, 9999);
															nPC229.active = false;
														}
													}
												}
												if (this.ai[1] % 3f == 0f && this.ai[1] < 580f && this.ai[1] > 60f)
												{
													Vector2 vector2240 = Utils.RandomVector2(Main.rand, -1f, 1f);
													if (vector2240 != Vector2.Zero)
													{
														vector2240.Normalize();
													}
													vector2240 = vector2240 * (20f + Main.rand.NextFloat() * 400f);
													bool flag141 = true;
													Point point3 = (base.Center + vector2240).ToTileCoordinates();
													if (!WorldGen.InWorld(point3.X, point3.Y, 0))
													{
														flag141 = false;
													}
													if (flag141 && WorldGen.SolidTile(point3.X, point3.Y))
													{
														flag141 = false;
													}
													float single507 = (float)Main.rand.Next(6, 19);
													float single508 = 6.28318548f / single507;
													float single509 = 6.28318548f * Main.rand.NextFloat();
													float single510 = 1f + Main.rand.NextFloat() * 2f;
													float single511 = 1f + Main.rand.NextFloat();
													float single512 = 0.4f + Main.rand.NextFloat();
													Random random3 = Main.rand;
													numArray = new int[] { 31, 229 };
													int num720 = Utils.SelectRandom<int>(random3, numArray);
													for (float b5 = 0f; b5 < this.ai[1] / 60f; b5 = b5 + 1f)
													{
														Vector2 vector2241 = Utils.RandomVector2(Main.rand, -1f, 1f);
														if (vector2241 != Vector2.Zero)
														{
															vector2241.Normalize();
														}
														vector2241 = vector2241 * (20f + Main.rand.NextFloat() * 800f);
														Vector2 center67 = base.Center + vector2241;
														Point tileCoordinates4 = center67.ToTileCoordinates();
														bool flag142 = true;
														if (!WorldGen.InWorld(tileCoordinates4.X, tileCoordinates4.Y, 0))
														{
															flag142 = false;
														}
														if (flag142 && WorldGen.SolidTile(tileCoordinates4.X, tileCoordinates4.Y))
														{
															flag142 = false;
														}
														if (flag142)
														{
															Dust[] dustArray9 = Main.dust;
															skyBlue = new Color();
															Dust unitY12 = dustArray9[Dust.NewDust(center67, 0, 0, num720, 0f, 0f, 0, skyBlue, 1f)];
															unitY12.noGravity = true;
															unitY12.position = center67;
															unitY12.velocity = (-Vector2.UnitY * single510) * (Main.rand.NextFloat() * 0.9f + 1.6f);
															unitY12.fadeIn = single512;
															unitY12.scale = single511;
														}
													}
												}
												if (this.ai[1] % 15f == 0f && this.ai[1] < 480f && this.ai[1] >= 90f && Main.netMode != 1)
												{
													Vector2 vector2242 = Utils.RandomVector2(Main.rand, -1f, 1f);
													if (vector2242 != Vector2.Zero)
													{
														vector2242.Normalize();
													}
													vector2242 = vector2242 * (20f + Main.rand.NextFloat() * 400f);
													bool flag143 = true;
													Vector2 center68 = base.Center + vector2242;
													Point point4 = center68.ToTileCoordinates();
													if (!WorldGen.InWorld(point4.X, point4.Y, 0))
													{
														flag143 = false;
													}
													if (flag143 && WorldGen.SolidTile(point4.X, point4.Y))
													{
														flag143 = false;
													}
													if (flag143)
													{
														float directionInt4 = (float)(Main.rand.Next(4) < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
														Vector2 vector2243 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f);
														double num721 = (double)directionInt4;
														vector24 = new Vector2();
														Vector2 vector2244 = vector2243.RotatedBy(num721, vector24) * 6f;
														Projectile.NewProjectile(center68.X, center68.Y, vector2244.X, vector2244.Y, 622, 0, 0f, Main.myPlayer, 0f, 0f);
													}
												}
												if (this.ai[1] == 1f)
												{
													Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 61);
												}
												if (this.ai[1] >= 480f)
												{
													MoonlordDeathDrama.RequestLight((this.ai[1] - 480f) / 120f, base.Center);
												}
												if (this.ai[1] >= 600f)
												{
													this.life = 0;
													this.HitEffect(0, 1337);
													this.checkDead();
													return;
												}
											}
											else if (this.ai[0] == 3f)
											{
												this.dontTakeDamage = true;
												Vector2 vector2245 = new Vector2((float)this.direction, -0.5f);
												this.velocity = Vector2.Lerp(this.velocity, vector2245, 0.98f);
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] < 60f)
												{
													MoonlordDeathDrama.RequestLight(this.ai[1] / 40f, base.Center);
												}
												if (this.ai[1] == 40f)
												{
													for (int c5 = 0; c5 < 1000; c5++)
													{
														Projectile projectile1 = Main.projectile[c5];
														if (projectile1.active && (projectile1.type == 456 || projectile1.type == 462 || projectile1.type == 455 || projectile1.type == 452 || projectile1.type == 454))
														{
															projectile1.active = false;
															NetMessage.SendData(27, -1, -1, "", c5, 0f, 0f, 0f, 0, 0, 0);
														}
													}
													for (int d5 = 0; d5 < 200; d5++)
													{
														NPC nPC230 = Main.npc[d5];
														if (nPC230.active && nPC230.type == 400)
														{
															nPC230.active = false;
															if (Main.netMode != 1)
															{
																NetMessage.SendData(23, -1, -1, "", nPC230.whoAmI, 0f, 0f, 0f, 0, 0, 0);
															}
														}
													}
													for (int e5 = 0; e5 < 500; e5++)
													{
														Gore gore2 = Main.gore[e5];
														if (gore2.active && gore2.type >= 619 && gore2.type <= 622)
														{
															gore2.active = false;
														}
													}
												}
												if (this.ai[1] == 60f)
												{
													for (int f5 = 0; f5 < 200; f5++)
													{
														NPC nPC231 = Main.npc[f5];
														if (nPC231.active && (nPC231.type == 400 || nPC231.type == 397 || nPC231.type == 396))
														{
															nPC231.active = false;
															if (Main.netMode != 1)
															{
																NetMessage.SendData(23, -1, -1, "", nPC231.whoAmI, 0f, 0f, 0f, 0, 0, 0);
															}
														}
													}
													this.active = false;
													NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
													NPC.LunarApocalypseIsUp = false;
													if (Main.netMode == 2)
													{
														NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
													}
													return;
												}
											}
											bool flag144 = false;
											if (Main.player[this.target].active && !Main.player[this.target].dead)
											{
												flag144 = true;
											}
											if (!flag144)
											{
												int num722 = 0;
												while (num722 < 255)
												{
													if (!Main.player[num722].active || Main.player[num722].dead)
													{
														num722++;
													}
													else
													{
														flag144 = true;
														break;
													}
												}
											}
											if (!flag144)
											{
												this.ai[0] = 3f;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.aiStyle == 78)
										{
											NPC.InitializeMoonLordAttacks();
											if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
											{
												this.life = 0;
												this.HitEffect(0, 10);
												this.active = false;
											}
											bool flag145 = this.ai[2] == 0f;
											float directionInt5 = (float)(-flag145.ToDirectionInt());
											this.spriteDirection = (int)directionInt5;
											this.dontTakeDamage = this.frameCounter >= 21;
											Vector2 vector2246 = new Vector2(30f, 66f);
											float single513 = 0f;
											float moonLordAttacksArray = 0f;
											bool flag146 = true;
											int num723 = 0;
											if (this.ai[0] != -2f)
											{
												float single514 = this.ai[0];
												this.ai[1] = this.ai[1] + 1f;
												int num724 = (int)Main.npc[(int)this.ai[3]].ai[2];
												int num725 = (flag145 ? 0 : 1);
												int num726 = 0;
												int num727 = 0;
												while (num726 < 5)
												{
													moonLordAttacksArray = (float)NPC.MoonLordAttacksArray[num724, num725, 1, num726];
													if (moonLordAttacksArray + (float)num727 > this.ai[1])
													{
														break;
													}
													num727 = num727 + (int)moonLordAttacksArray;
													num726++;
												}
												if (num726 == 5)
												{
													num726 = 0;
													this.ai[1] = 0f;
													moonLordAttacksArray = (float)NPC.MoonLordAttacksArray[num724, num725, 1, num726];
													num727 = 0;
												}
												this.ai[0] = (float)NPC.MoonLordAttacksArray[num724, num725, 0, num726];
												single513 = (float)((int)this.ai[1] - num727);
												if (this.ai[0] != single514)
												{
													this.netUpdate = true;
												}
											}
											if (this.ai[0] == -2f)
											{
												this.damage = 80;
												num723 = 0;
												this.dontTakeDamage = true;
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 32f)
												{
													this.ai[1] = 0f;
												}
												if (this.ai[1] < 0f)
												{
													this.ai[1] = 0f;
												}
												Vector2 center69 = Main.npc[(int)this.ai[3]].Center;
												Vector2 vector2247 = center69 + new Vector2(350f * directionInt5, -100f);
												Vector2 center70 = vector2247 - base.Center;
												if (center70.Length() > 20f)
												{
													center70.Normalize();
													center70 = center70 * 6f;
													Vector2 vector2248 = this.velocity;
													if (center70 != Vector2.Zero)
													{
														this.SimpleFlyMovement(center70, 0.3f);
													}
													this.velocity = Vector2.Lerp(vector2248, this.velocity, 0.5f);
												}
											}
											else if (this.ai[0] == 0f)
											{
												num723 = 3;
												this.localAI[1] = this.localAI[1] - 0.05f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
												Vector2 center71 = Main.npc[(int)this.ai[3]].Center;
												Vector2 vector2249 = center71 + new Vector2(350f * directionInt5, -100f);
												Vector2 center72 = vector2249 - base.Center;
												if (center72.Length() > 20f)
												{
													center72.Normalize();
													center72 = center72 * 6f;
													Vector2 vector2250 = this.velocity;
													if (center72 != Vector2.Zero)
													{
														this.SimpleFlyMovement(center72, 0.3f);
													}
													this.velocity = Vector2.Lerp(vector2250, this.velocity, 0.5f);
												}
											}
											else if (this.ai[0] == 1f)
											{
												num723 = 0;
												int num728 = 7;
												int num729 = 4;
												if (single513 >= (float)(num728 * num729 * 2))
												{
													this.localAI[1] = this.localAI[1] - 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
												}
												else if (single513 < (float)(num728 * num729))
												{
													this.localAI[1] = this.localAI[1] + 0.02f;
													if (this.localAI[1] > 0.75f)
													{
														this.localAI[1] = 0.75f;
													}
													float single515 = 6.28318548f * (single513 % (float)(num728 * num729)) / (float)(num728 * num729) - 1.57079637f;
													this.localAI[0] = (new Vector2((float)Math.Cos((double)single515) * vector2246.X, (float)Math.Sin((double)single515) * vector2246.Y)).ToRotation();
												}
												else
												{
													this.localAI[1] = this.localAI[1] + 0.05f;
													if (this.localAI[1] > 0.75f)
													{
														this.localAI[1] = 0.75f;
													}
													float single516 = 6.28318548f * (single513 % (float)(num728 * num729)) / (float)(num728 * num729) - 1.57079637f;
													this.localAI[0] = (new Vector2((float)Math.Cos((double)single516) * vector2246.X, (float)Math.Sin((double)single516) * vector2246.Y)).ToRotation();
													if (single513 % (float)num729 == 0f)
													{
														Vector2 vector2251 = new Vector2(1f * -directionInt5, 3f);
														Vector2 vector2252 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector2246 * this.localAI[1]);
														Vector2 center73 = (base.Center + ((Vector2.Normalize(vector2252) * vector2246.Length()) * 0.4f)) + vector2251;
														Vector2 vector2253 = Vector2.Normalize(vector2252) * 8f;
														float single517 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * directionInt5;
														Projectile.NewProjectile(center73.X, center73.Y, vector2253.X, vector2253.Y, 452, 30, 0f, Main.myPlayer, 0f, single517);
													}
												}
											}
											else if (this.ai[0] == 2f)
											{
												this.localAI[1] = this.localAI[1] - 0.05f;
												if (this.localAI[1] < 0f)
												{
													this.localAI[1] = 0f;
												}
												Vector2 center74 = Main.npc[(int)this.ai[3]].Center;
												Vector2 vector2254 = new Vector2(220f * directionInt5, -60f) + center74;
												vector2254 = vector2254 + new Vector2(directionInt5 * 100f, -50f);
												Vector2 vector2255 = new Vector2(400f * directionInt5, -60f);
												if (single513 < 30f)
												{
													Vector2 center75 = vector2254 - base.Center;
													if (center75 != Vector2.Zero)
													{
														Vector2 vector2256 = center75;
														vector2256.Normalize();
														this.velocity = Vector2.SmoothStep(this.velocity, vector2256 * Math.Min(8f, center75.Length()), 0.2f);
													}
												}
												else if (single513 < 210f)
												{
													num723 = 1;
													int num730 = (int)single513 - 30;
													if (num730 % 30 == 0 && Main.netMode != 1)
													{
														Vector2 x207 = new Vector2(5f * directionInt5, -8f);
														int num731 = num730 / 30;
														x207.X = x207.X + ((float)num731 - 3.5f) * directionInt5 * 3f;
														x207.Y = x207.Y + ((float)num731 - 4.5f) * 1f;
														x207 = x207 * 1.2f;
														Projectile.NewProjectile(base.Center.X, base.Center.Y, x207.X, x207.Y, 454, 50, 1f, Main.myPlayer, 0f, (float)this.whoAmI);
													}
													Vector2 vector2257 = Vector2.SmoothStep(vector2254, vector2254 + vector2255, (single513 - 30f) / 180f) - base.Center;
													if (vector2257 != Vector2.Zero)
													{
														Vector2 vector2258 = vector2257;
														vector2258.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, vector2258 * Math.Min(20f, vector2257.Length()), 0.5f);
													}
												}
												else if (single513 < 282f)
												{
													num723 = 0;
													NPC nPC232 = this;
													nPC232.velocity = nPC232.velocity * 0.9f;
												}
												else if (single513 < 287f)
												{
													num723 = 1;
													NPC nPC233 = this;
													nPC233.velocity = nPC233.velocity * 0.9f;
												}
												else if (single513 < 292f)
												{
													num723 = 2;
													NPC nPC234 = this;
													nPC234.velocity = nPC234.velocity * 0.9f;
												}
												else if (single513 >= 300f)
												{
													num723 = 3;
													Vector2 center76 = vector2254 - base.Center;
													if (center76 != Vector2.Zero)
													{
														Vector2 vector2259 = center76;
														vector2259.Normalize();
														this.velocity = Vector2.SmoothStep(this.velocity, vector2259 * Math.Min(8f, center76.Length()), 0.2f);
													}
												}
												else
												{
													num723 = 3;
													if (single513 == 292f && Main.netMode != 1)
													{
														int num732 = Player.FindClosest(this.position, this.width, this.height);
														Vector2 unitY13 = Vector2.Normalize(Main.player[num732].Center - (base.Center + (Vector2.UnitY * -350f)));
														if (float.IsNaN(unitY13.X) || float.IsNaN(unitY13.Y))
														{
															unitY13 = Vector2.UnitY;
														}
														unitY13 = unitY13 * 12f;
														for (int g5 = 0; g5 < 1000; g5++)
														{
															Projectile projectile2 = Main.projectile[g5];
															if (projectile2.active && projectile2.type == 454 && projectile2.ai[1] == (float)this.whoAmI && projectile2.ai[0] != -1f)
															{
																projectile2.ai[0] = -1f;
																projectile2.velocity = unitY13;
																projectile2.netUpdate = true;
															}
														}
													}
													Vector2 vector2260 = Vector2.SmoothStep(vector2254, vector2254 + vector2255, 1f - (single513 - 270f) / 30f) - base.Center;
													if (vector2260 != Vector2.Zero)
													{
														Vector2 vector2261 = vector2260;
														vector2261.Normalize();
														this.velocity = Vector2.Lerp(this.velocity, vector2261 * Math.Min(14f, vector2260.Length()), 0.1f);
													}
												}
											}
											else if (this.ai[0] == 3f)
											{
												if (single513 == 0f)
												{
													this.TargetClosest(false);
													this.netUpdate = true;
												}
												Vector2 center77 = (Main.player[this.target].Center + (Main.player[this.target].velocity * 20f)) - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(center77.ToRotation(), 0.5f);
												this.localAI[1] = this.localAI[1] + 0.05f;
												if (this.localAI[1] > 1f)
												{
													this.localAI[1] = 1f;
												}
												if (single513 == moonLordAttacksArray - 35f)
												{
													Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
												}
												if ((single513 == moonLordAttacksArray - 14f || single513 == moonLordAttacksArray - 7f || single513 == moonLordAttacksArray) && Main.netMode != 1)
												{
													Vector2 vector2262 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector2246 * this.localAI[1]);
													Vector2 vector2263 = Vector2.Normalize(center77) * 8f;
													Projectile.NewProjectile(base.Center.X + vector2262.X, base.Center.Y + vector2262.Y, vector2263.X, vector2263.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
												}
											}
											if (flag146)
											{
												Vector2 center78 = Main.npc[(int)this.ai[3]].Center;
												Vector2 vector2264 = new Vector2(220f * directionInt5, -60f) + center78;
												Vector2 vector2265 = vector2264 + new Vector2(directionInt5 * 110f, -150f);
												Vector2 vector2266 = vector2265 + new Vector2(directionInt5 * 370f, 150f);
												if (vector2265.X > vector2266.X)
												{
													Utils.Swap<float>(ref vector2265.X, ref vector2266.X);
												}
												if (vector2265.Y > vector2266.Y)
												{
													Utils.Swap<float>(ref vector2265.Y, ref vector2266.Y);
												}
												Vector2 vector2267 = Vector2.Clamp(base.Center + this.velocity, vector2265, vector2266);
												if (vector2267 != (base.Center + this.velocity))
												{
													base.Center = vector2267 - this.velocity;
												}
											}
											int num733 = num723 * 7;
											if ((double)num733 > this.frameCounter)
											{
												NPC nPC235 = this;
												nPC235.frameCounter = nPC235.frameCounter + 1;
											}
											if ((double)num733 < this.frameCounter)
											{
												NPC nPC236 = this;
												nPC236.frameCounter = nPC236.frameCounter - 1;
											}
											if (this.frameCounter < 0)
											{
												this.frameCounter = 0;
											}
											if (this.frameCounter > 21)
											{
												this.frameCounter = 21;
											}
											int num734 = 0;
											if (flag145)
											{
												num734 = 0;
											}
											if (num734 == 0)
											{
												return;
											}
											if (num734 != 1)
											{
												if (num734 == 2)
												{
													Vector2 vector2268 = new Vector2(30f, 66f);
													this.TargetClosest(false);
													Vector2 vector2269 = (Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY)) - base.Center;
													float single518 = vector2269.Length() / 200f;
													if (single518 > 1f)
													{
														single518 = 1f;
													}
													single518 = 1f - single518;
													single518 = single518 * 2f;
													if (single518 > 1f)
													{
														single518 = 1f;
													}
													this.localAI[0] = vector2269.ToRotation();
													this.localAI[1] = single518;
													this.localAI[1] = 1f;
													return;
												}
												if (num734 == 3)
												{
													int num735 = 7;
													int num736 = 4;
													this.ai[1] = this.ai[1] + 1f;
													if (this.ai[1] >= (float)(num735 * num736 * 10))
													{
														this.ai[1] = 0f;
														return;
													}
													if (this.ai[1] < (float)(num735 * num736))
													{
														this.localAI[1] = this.localAI[1] + 0.05f;
														if (this.localAI[1] > 0.75f)
														{
															this.localAI[1] = 0.75f;
														}
														float single519 = 6.28318548f * (this.ai[1] % (float)(num735 * num736)) / (float)(num735 * num736) - 1.57079637f;
														this.localAI[0] = (new Vector2((float)Math.Cos((double)single519) * vector2246.X, (float)Math.Sin((double)single519) * vector2246.Y)).ToRotation();
														if (this.ai[1] % (float)num736 == 0f)
														{
															Vector2 vector2270 = new Vector2(1f * -directionInt5, 3f);
															Vector2 vector2271 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector2246 * this.localAI[1]);
															Vector2 center79 = (base.Center + ((Vector2.Normalize(vector2271) * vector2246.Length()) * 0.4f)) + vector2270;
															Vector2 vector2272 = Vector2.Normalize(vector2271) * 8f;
															float single520 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * directionInt5;
															Projectile.NewProjectile(center79.X, center79.Y, vector2272.X, vector2272.Y, 452, 5, 0f, Main.myPlayer, 0f, single520);
															return;
														}
													}
													else
													{
														this.localAI[1] = this.localAI[1] - 0.07f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[1] = 0f;
															return;
														}
													}
												}
												else if (num734 == 4)
												{
													Vector2 center80 = Main.npc[(int)this.ai[3]].Center;
													Vector2 vector2273 = new Vector2(220f * directionInt5, -60f) + center80;
													vector2273 = vector2273 + new Vector2(directionInt5 * 100f, -50f);
													Vector2 vector2274 = new Vector2(400f * directionInt5, -60f);
													this.ai[1] = this.ai[1] + 1f;
													if (this.ai[1] < 30f)
													{
														Vector2 center81 = vector2273 - base.Center;
														if (center81 != Vector2.Zero)
														{
															Vector2 vector2275 = center81;
															vector2275.Normalize();
															this.velocity = Vector2.SmoothStep(this.velocity, vector2275 * Math.Min(8f, center81.Length()), 0.2f);
															return;
														}
													}
													else if (this.ai[1] >= 210f)
													{
														if (this.ai[1] < 270f)
														{
															NPC nPC237 = this;
															nPC237.velocity = nPC237.velocity * 0.9f;
															return;
														}
														if (this.ai[1] >= 300f)
														{
															this.ai[1] = 0f;
															return;
														}
														if (this.ai[1] == 270f && Main.netMode != 1)
														{
															int num737 = Player.FindClosest(this.position, this.width, this.height);
															Vector2 unitY14 = Vector2.Normalize(Main.player[num737].Center - (base.Center + (Vector2.UnitY * -350f)));
															if (float.IsNaN(unitY14.X) || float.IsNaN(unitY14.Y))
															{
																unitY14 = Vector2.UnitY;
															}
															unitY14 = unitY14 * 12f;
															for (int h5 = 0; h5 < 1000; h5++)
															{
																Projectile projectile3 = Main.projectile[h5];
																if (projectile3.active && projectile3.type == 454 && projectile3.ai[1] == (float)this.whoAmI && projectile3.ai[0] != -1f)
																{
																	projectile3.ai[0] = -1f;
																	projectile3.velocity = unitY14;
																	projectile3.netUpdate = true;
																}
															}
														}
														Vector2 vector2276 = Vector2.SmoothStep(vector2273, vector2273 + vector2274, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
														if (vector2276 != Vector2.Zero)
														{
															Vector2 vector2277 = vector2276;
															vector2277.Normalize();
															this.velocity = Vector2.Lerp(this.velocity, vector2277 * Math.Min(14f, vector2276.Length()), 0.1f);
															return;
														}
													}
													else
													{
														int num738 = (int)this.ai[1] - 30;
														if (num738 % 30 == 0 && Main.netMode != 1)
														{
															Vector2 x208 = new Vector2(5f * directionInt5, -8f);
															int num739 = num738 / 30;
															x208.X = x208.X + ((float)num739 - 3.5f) * directionInt5 * 3f;
															x208.Y = x208.Y + ((float)num739 - 4.5f) * 1f;
															x208 = x208 * 1.2f;
															Projectile.NewProjectile(base.Center.X, base.Center.Y, x208.X, x208.Y, 454, 1, 1f, Main.myPlayer, 0f, (float)this.whoAmI);
														}
														Vector2 vector2278 = Vector2.SmoothStep(vector2273, vector2273 + vector2274, (this.ai[1] - 30f) / 180f) - base.Center;
														if (vector2278 != Vector2.Zero)
														{
															Vector2 vector2279 = vector2278;
															vector2279.Normalize();
															this.velocity = Vector2.Lerp(this.velocity, vector2279 * Math.Min(4f, vector2278.Length()), 0.1f);
															return;
														}
													}
												}
												else if (num734 == 5)
												{
													this.dontTakeDamage = true;
													this.ai[1] = this.ai[1] + 1f;
													if (this.ai[1] >= 40f)
													{
														this.ai[1] = 0f;
														return;
													}
												}
											}
											else
											{
												if (this.ai[0] == 0f)
												{
													float single521 = this.ai[1] + 1f;
													single1 = single521;
													this.ai[1] = single521;
													if (single1 >= 20f)
													{
														this.ai[1] = 0f;
														this.ai[0] = 1f;
														this.netUpdate = true;
													}
													this.velocity = Vector2.UnitX * 4f;
													return;
												}
												if (this.ai[0] == 1f)
												{
													float single522 = this.ai[1] + 1f;
													single1 = single522;
													this.ai[1] = single522;
													if (single1 >= 20f)
													{
														this.ai[1] = 0f;
														this.ai[0] = 2f;
														this.netUpdate = true;
													}
													this.velocity = Vector2.UnitX * -4f;
													return;
												}
												if (this.ai[0] == 2f || this.ai[0] == 4f)
												{
													float single523 = this.ai[1] + 1f;
													single1 = single523;
													this.ai[1] = single523;
													if (single1 >= 20f)
													{
														this.ai[1] = 0f;
														this.ai[0] = this.ai[0] + 1f;
														this.netUpdate = true;
													}
													this.velocity = (Vector2.UnitY * -4f) * (float)((flag145 ? 1 : -1));
													return;
												}
												if (this.ai[0] == 3f || this.ai[0] == 5f)
												{
													float single524 = this.ai[1] + 1f;
													single1 = single524;
													this.ai[1] = single524;
													if (single1 >= 20f)
													{
														this.ai[1] = 0f;
														this.ai[0] = this.ai[0] + 1f;
														if (this.ai[0] == 6f)
														{
															this.ai[0] = 0f;
														}
														this.netUpdate = true;
													}
													this.velocity = (Vector2.UnitY * 4f) * (float)((flag145 ? 1 : -1));
													return;
												}
											}
										}
										else if (this.aiStyle != 79)
										{
											if (this.aiStyle == 80)
											{
												if (this.ai[0] == 0f)
												{
													if (this.collideX)
													{
														this.direction = 1 - this.direction;
													}
													this.velocity.X = 3f * (float)((this.direction == 0 ? -1 : 1));
													Point tileCoordinates5 = base.Center.ToTileCoordinates();
													int num740 = 30;
													int num741 = 0;
													while (num741 < 30)
													{
														if (!WorldGen.SolidTile(tileCoordinates5.X, tileCoordinates5.Y + num741))
														{
															num741++;
														}
														else
														{
															num740 = num741;
															break;
														}
													}
													if (num740 < 15)
													{
														this.velocity.Y = Math.Max(this.velocity.Y - 0.05f, -3.5f);
													}
													else if (num740 >= 20)
													{
														this.velocity.Y = Math.Min(this.velocity.Y + 0.05f, 1.5f);
													}
													else
													{
														this.velocity.Y = this.velocity.Y * 0.95f;
													}
													if (this.FindClosestPlayer(out single) == -1)
													{
														return;
													}
													if (single < 352f)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 1f)
												{
													this.ai[1] = this.ai[1] + 1f;
													NPC nPC238 = this;
													nPC238.velocity = nPC238.velocity * 0.95f;
													if (this.ai[1] >= 60f)
													{
														this.ai[1] = 0f;
														this.ai[0] = 2f;
														int num742 = this.FindClosestPlayer();
														if (num742 == -1)
														{
															this.ai[3] = 1f;
														}
														else
														{
															this.ai[3] = (Main.player[num742].Center.X > base.Center.X ? -1f : 1f);
														}
														this.netUpdate = true;
													}
												}
												else if (this.ai[0] == 2f)
												{
													this.noTileCollide = true;
													this.ai[1] = this.ai[1] + 1f;
													this.velocity.Y = Math.Max(this.velocity.Y - 0.1f, -10f);
													this.velocity.X = Math.Min(this.velocity.X + this.ai[3] * 0.05f, 4f);
													if (this.position.Y < (float)(-this.height) || this.ai[1] >= 180f)
													{
														Main.StartInvasion(4);
														this.active = false;
														this.ai[0] = 3f;
														this.netUpdate = true;
													}
												}
												skyBlue = Color.SkyBlue;
												Vector3 vector34 = skyBlue.ToVector3();
												if (this.ai[0] == 2f)
												{
													skyBlue = Color.Red;
													vector34 = skyBlue.ToVector3();
												}
												vector34 = vector34 * 0.65f;
												Lighting.AddLight(base.Center, vector34);
												return;
											}
											if (this.aiStyle != 81)
											{
												if (this.aiStyle == 82)
												{
													float single525 = 90f;
													Vector2 vector2280 = new Vector2(0f, 216f);
													int num743 = (int)Math.Abs(this.ai[0]) - 1;
													int num744 = (int)this.ai[1];
													if (!Main.npc[num743].active || Main.npc[num743].type != 396)
													{
														this.life = 0;
														this.HitEffect(0, 10);
														this.active = false;
														return;
													}
													this.ai[2] = this.ai[2] + 1f;
													if (this.ai[2] < single525)
													{
														this.velocity = Vector2.Zero;
														base.Center = Vector2.Lerp(Main.projectile[num744].Center, Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center + vector2280, this.ai[2] / single525);
														Vector2 unitY15 = (Vector2.UnitY * (float)(-this.height)) / 2f;
														for (int i6 = 0; i6 < 6; i6++)
														{
															Vector2 center82 = base.Center - (Vector2.One * 4f);
															double num745 = (double)((float)i6 * 6.28318548f / 6f);
															vector24 = new Vector2();
															Vector2 vector2281 = center82 + unitY15.RotatedBy(num745, vector24);
															skyBlue = new Color();
															int num746 = Dust.NewDust(vector2281, 0, 0, 229, 0f, 0f, 0, skyBlue, 1f);
															Main.dust[num746].velocity = -Vector2.UnitY;
															Main.dust[num746].noGravity = true;
															Main.dust[num746].scale = 0.7f;
															Main.dust[num746].customData = this;
														}
														unitY15 = (Vector2.UnitY * (float)(-this.height)) / 6f;
														for (int j6 = 0; j6 < 3; j6++)
														{
															Vector2 center83 = base.Center - (Vector2.One * 4f);
															double num747 = (double)((float)j6 * 6.28318548f / 6f);
															vector24 = new Vector2();
															Vector2 vector2282 = center83 + unitY15.RotatedBy(num747, vector24);
															skyBlue = new Color();
															int num748 = Dust.NewDust(vector2282, 0, 0, 229, 0f, -2f, 0, skyBlue, 1f);
															Main.dust[num748].noGravity = true;
															Main.dust[num748].scale = 1.5f;
															Main.dust[num748].customData = this;
														}
														return;
													}
													if (Main.netMode != 1)
													{
														int num749 = (int)Main.npc[num743].ai[3];
														int num750 = -1;
														int num751 = -1;
														int num752 = num743;
														for (int k6 = 0; k6 < 200; k6++)
														{
															if (Main.npc[k6].active && Main.npc[k6].ai[3] == (float)num749)
															{
																if (num750 == -1 && Main.npc[k6].type == 397 && Main.npc[k6].ai[2] == 0f)
																{
																	num750 = k6;
																}
																if (num751 == -1 && Main.npc[k6].type == 397 && Main.npc[k6].ai[2] == 1f)
																{
																	num751 = k6;
																}
																if (num750 != -1 && num751 != -1 && num752 != -1)
																{
																	break;
																}
															}
														}
														int num753 = 1000;
														int num754 = Main.npc[num749].lifeMax - Main.npc[num749].life;
														int num755 = Main.npc[num750].lifeMax - Main.npc[num750].life;
														int num756 = Main.npc[num751].lifeMax - Main.npc[num751].life;
														int num757 = Main.npc[num752].lifeMax - Main.npc[num752].life;
														if (num757 > 0 && num753 > 0)
														{
															int num758 = num757 - num753;
															if (num758 > 0)
															{
																num758 = 0;
															}
															int num759 = num753 + num758;
															num753 = num753 - num759;
															NPC nPC239 = Main.npc[num752];
															nPC239.life = nPC239.life + num759;
															NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num752].Center, new Vector2(50f)), num759, true);
														}
														if (num754 > 0 && num753 > 0)
														{
															int num760 = num754 - num753;
															if (num760 > 0)
															{
																num760 = 0;
															}
															int num761 = num753 + num760;
															num753 = num753 - num761;
															NPC nPC240 = Main.npc[num749];
															nPC240.life = nPC240.life + num761;
															NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num749].Center, new Vector2(50f)), num761, true);
														}
														if (num755 > 0 && num753 > 0)
														{
															int num762 = num755 - num753;
															if (num762 > 0)
															{
																num762 = 0;
															}
															int num763 = num753 + num762;
															num753 = num753 - num763;
															NPC nPC241 = Main.npc[num750];
															nPC241.life = nPC241.life + num763;
															NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num750].Center, new Vector2(50f)), num763, true);
														}
														if (num756 > 0 && num753 > 0)
														{
															int num764 = num756 - num753;
															if (num764 > 0)
															{
																num764 = 0;
															}
															int num765 = num753 + num764;
															num753 = num753 - num765;
															NPC nPC242 = Main.npc[num751];
															nPC242.life = nPC242.life + num765;
															NPC.HealEffect(Utils.CenteredRectangle(Main.npc[num751].Center, new Vector2(50f)), num765, true);
														}
													}
													this.life = 0;
													this.HitEffect(0, 10);
													this.active = false;
													return;
												}
												if (this.aiStyle != 83)
												{
													if (this.aiStyle == 84)
													{
														if (this.ai[0] != -1f && Main.rand.Next(1000) == 0)
														{
															Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(88, 92));
														}
														bool flag147 = Main.expertMode;
														bool flag148 = this.life <= this.lifeMax / 2;
														int num766 = 120;
														int num767 = 35;
														if (flag147)
														{
															num766 = 90;
															num767 = 25;
														}
														int num768 = 18;
														int num769 = 3;
														int num770 = 30;
														if (flag147)
														{
															num768 = 12;
															num769 = 4;
															num770 = 20;
														}
														int num771 = 80;
														int num772 = 45;
														if (flag147)
														{
															num771 = 40;
															num772 = 30;
														}
														int num773 = 20;
														int num774 = 2;
														if (flag147)
														{
															num773 = 30;
															num774 = 2;
														}
														int num775 = 20;
														int num776 = 3;
														bool flag149 = this.type == 439;
														bool flag150 = false;
														bool flag151 = false;
														if (flag148)
														{
															this.defense = (int)((float)this.defDefense * 0.65f);
														}
														if (!flag149)
														{
															if ((this.ai[3] < 0f || !Main.npc[(int)this.ai[3]].active ? true : Main.npc[(int)this.ai[3]].type != 439))
															{
																this.life = 0;
																this.HitEffect(0, 10);
																this.active = false;
																return;
															}
															this.ai[0] = Main.npc[(int)this.ai[3]].ai[0];
															this.ai[1] = Main.npc[(int)this.ai[3]].ai[1];
															if (this.ai[0] != 5f)
															{
																flag150 = true;
																flag151 = true;
															}
															else if (this.justHit)
															{
																this.life = 0;
																this.HitEffect(0, 10);
																this.active = false;
																NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
																NPC nPC243 = Main.npc[(int)this.ai[3]];
																nPC243.ai[0] = 6f;
																nPC243.ai[1] = 0f;
																nPC243.netUpdate = true;
															}
														}
														else if (this.ai[0] == 5f && this.ai[1] >= 120f && this.ai[1] < 420f && this.justHit)
														{
															this.ai[0] = 0f;
															this.ai[1] = 0f;
															this.ai[3] = this.ai[3] + 1f;
															this.velocity = Vector2.Zero;
															this.netUpdate = true;
															List<int> nums = new List<int>();
															for (int l6 = 0; l6 < 200; l6++)
															{
																if (Main.npc[l6].active && Main.npc[l6].type == 440 && Main.npc[l6].ai[3] == (float)this.whoAmI)
																{
																	nums.Add(l6);
																}
															}
															int num777 = 10;
															if (Main.expertMode)
															{
																num777 = 3;
															}
															foreach (int num778 in nums)
															{
																NPC nPC244 = Main.npc[num778];
																if (nPC244.localAI[1] != this.localAI[1] || num777 <= 0)
																{
																	if (num777 <= 0)
																	{
																		continue;
																	}
																	num777--;
																	nPC244.life = 0;
																	nPC244.HitEffect(0, 10);
																	nPC244.active = false;
																}
																else
																{
																	num777--;
																	nPC244.life = 0;
																	nPC244.HitEffect(0, 10);
																	nPC244.active = false;
																	NetMessage.SendData(23, -1, -1, "", num778, 0f, 0f, 0f, 0, 0, 0);
																}
															}
															Main.projectile[(int)this.ai[2]].ai[1] = -1f;
															Main.projectile[(int)this.ai[2]].netUpdate = true;
														}
														Vector2 center84 = base.Center;
														Player player8 = Main.player[this.target];
														if (this.target < 0 || this.target == 255 || player8.dead || !player8.active)
														{
															this.TargetClosest(false);
															player8 = Main.player[this.target];
															this.netUpdate = true;
														}
														if (player8.dead || Vector2.Distance(player8.Center, center84) > 5600f)
														{
															this.life = 0;
															this.HitEffect(0, 10);
															this.active = false;
															NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
															(new List<int>()).Add(this.whoAmI);
															for (int m6 = 0; m6 < 200; m6++)
															{
																if (Main.npc[m6].active && Main.npc[m6].type == 440 && Main.npc[m6].ai[3] == (float)this.whoAmI)
																{
																	Main.npc[m6].life = 0;
																	Main.npc[m6].HitEffect(0, 10);
																	Main.npc[m6].active = false;
																	NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0, 0, 0);
																}
															}
														}
														float single526 = this.ai[3];
														if (this.localAI[0] == 0f)
														{
															Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 89);
															this.localAI[0] = 1f;
															this.alpha = 255;
															this.rotation = 0f;
															if (Main.netMode != 1)
															{
																this.ai[0] = -1f;
																this.netUpdate = true;
															}
														}
														if (this.ai[0] == -1f)
														{
															NPC nPC245 = this;
															nPC245.alpha = nPC245.alpha - 5;
															if (this.alpha < 0)
															{
																this.alpha = 0;
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 420f)
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.netUpdate = true;
															}
															else if (this.ai[1] > 360f)
															{
																NPC nPC246 = this;
																nPC246.velocity = nPC246.velocity * 0.95f;
																if (this.localAI[2] != 13f)
																{
																	Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 105);
																}
																this.localAI[2] = 13f;
															}
															else if (this.ai[1] > 300f)
															{
																this.velocity = -Vector2.UnitY;
																this.localAI[2] = 10f;
															}
															else if (this.ai[1] <= 120f)
															{
																this.localAI[2] = 0f;
															}
															else
															{
																this.localAI[2] = 1f;
															}
															flag150 = true;
															flag151 = true;
														}
														if (this.ai[0] == 0f)
														{
															if (this.ai[1] == 0f)
															{
																this.TargetClosest(false);
															}
															this.localAI[2] = 10f;
															int num779 = Math.Sign(player8.Center.X - center84.X);
															if (num779 != 0)
															{
																int num780 = num779;
																num6 = num780;
																this.spriteDirection = num780;
																this.direction = num6;
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 40f && flag149)
															{
																int num781 = 0;
																if (!flag148)
																{
																	num6 = (int)this.ai[3];
																	switch (num6)
																	{
																		case 0:
																		{
																			num781 = 0;
																			break;
																		}
																		case 1:
																		{
																			num781 = 1;
																			break;
																		}
																		case 2:
																		{
																			num781 = 0;
																			break;
																		}
																		case 3:
																		{
																			num781 = 2;
																			break;
																		}
																		case 4:
																		{
																			num781 = 0;
																			break;
																		}
																		case 5:
																		{
																			num781 = 3;
																			break;
																		}
																		case 6:
																		{
																			num781 = 0;
																			break;
																		}
																		case 7:
																		{
																			num781 = 1;
																			break;
																		}
																		case 8:
																		{
																			num781 = 0;
																			break;
																		}
																		case 9:
																		{
																			num781 = 2;
																			break;
																		}
																		case 10:
																		{
																			num781 = 0;
																			break;
																		}
																		case 11:
																		{
																			num781 = 4;
																			this.ai[3] = -1f;
																			break;
																		}
																		default:
																		{
																			this.ai[3] = -1f;
																			break;
																		}
																	}
																}
																else
																{
																	num6 = (int)this.ai[3];
																	switch (num6)
																	{
																		case 0:
																		{
																			num781 = 0;
																			break;
																		}
																		case 1:
																		{
																			num781 = 1;
																			break;
																		}
																		case 2:
																		{
																			num781 = 0;
																			break;
																		}
																		case 3:
																		{
																			num781 = 5;
																			break;
																		}
																		case 4:
																		{
																			num781 = 0;
																			break;
																		}
																		case 5:
																		{
																			num781 = 3;
																			break;
																		}
																		case 6:
																		{
																			num781 = 0;
																			break;
																		}
																		case 7:
																		{
																			num781 = 5;
																			break;
																		}
																		case 8:
																		{
																			num781 = 0;
																			break;
																		}
																		case 9:
																		{
																			num781 = 2;
																			break;
																		}
																		case 10:
																		{
																			num781 = 0;
																			break;
																		}
																		case 11:
																		{
																			num781 = 3;
																			break;
																		}
																		case 12:
																		{
																			num781 = 0;
																			break;
																		}
																		case 13:
																		{
																			num781 = 4;
																			this.ai[3] = -1f;
																			break;
																		}
																		default:
																		{
																			this.ai[3] = -1f;
																			break;
																		}
																	}
																}
																int num782 = 6;
																if (this.life < this.lifeMax / 3)
																{
																	num782 = 4;
																}
																if (this.life < this.lifeMax / 4)
																{
																	num782 = 3;
																}
																if (flag147 && flag148 && Main.rand.Next(num782) == 0 && num781 != 0 && num781 != 4 && num781 != 5 && NPC.CountNPCS(523) < 10)
																{
																	num781 = 6;
																}
																if (num781 == 0)
																{
																	Vector2 center85 = (player8.Center + new Vector2(0f, -100f)) - center84;
																	float single527 = (float)Math.Ceiling((double)(center85.Length() / 50f));
																	if (single527 == 0f)
																	{
																		single527 = 1f;
																	}
																	List<int> nums1 = new List<int>();
																	int num783 = 0;
																	nums1.Add(this.whoAmI);
																	for (int n6 = 0; n6 < 200; n6++)
																	{
																		if (Main.npc[n6].active && Main.npc[n6].type == 440 && Main.npc[n6].ai[3] == (float)this.whoAmI)
																		{
																			nums1.Add(n6);
																		}
																	}
																	bool count = nums1.Count % 2 == 0;
																	foreach (int num784 in nums1)
																	{
																		NPC nPC247 = Main.npc[num784];
																		Vector2 center86 = nPC247.Center;
																		float single528 = (float)((num783 + count.ToInt() + 1) / 2) * 6.28318548f * 0.4f / (float)nums1.Count;
																		if (num783 % 2 == 1)
																		{
																			single528 = single528 * -1f;
																		}
																		if (nums1.Count == 1)
																		{
																			single528 = 0f;
																		}
																		Vector2 vector2283 = new Vector2(0f, -1f);
																		double num785 = (double)single528;
																		vector24 = new Vector2();
																		Vector2 vector2284 = vector2283.RotatedBy(num785, vector24) * new Vector2(300f, 200f);
																		Vector2 center87 = (player8.Center + vector2284) - center86;
																		nPC247.ai[0] = 1f;
																		nPC247.ai[1] = single527 * 2f;
																		nPC247.velocity = center87 / single527;
																		if (this.whoAmI >= nPC247.whoAmI)
																		{
																			NPC nPC248 = nPC247;
																			nPC248.position = nPC248.position - nPC247.velocity;
																		}
																		nPC247.netUpdate = true;
																		num783++;
																	}
																}
																if (num781 == 1)
																{
																	this.ai[0] = 3f;
																	this.ai[1] = 0f;
																}
																else if (num781 == 2)
																{
																	this.ai[0] = 2f;
																	this.ai[1] = 0f;
																}
																else if (num781 == 3)
																{
																	this.ai[0] = 4f;
																	this.ai[1] = 0f;
																}
																else if (num781 == 4)
																{
																	this.ai[0] = 5f;
																	this.ai[1] = 0f;
																}
																if (num781 == 5)
																{
																	this.ai[0] = 7f;
																	this.ai[1] = 0f;
																}
																if (num781 == 6)
																{
																	this.ai[0] = 8f;
																	this.ai[1] = 0f;
																}
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 1f)
														{
															flag150 = true;
															this.localAI[2] = 10f;
															if ((float)((int)this.ai[1]) % 2f != 0f && this.ai[1] != 1f)
															{
																NPC nPC249 = this;
																nPC249.position = nPC249.position - this.velocity;
															}
															this.ai[1] = this.ai[1] - 1f;
															if (this.ai[1] <= 0f)
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 2f)
														{
															this.localAI[2] = 11f;
															Vector2 vector2285 = Vector2.Normalize(player8.Center - center84);
															if (vector2285.HasNaNs())
															{
																vector2285 = new Vector2((float)this.direction, 0f);
															}
															if (this.ai[1] >= 4f && flag149 && (int)(this.ai[1] - 4f) % num766 == 0)
															{
																List<int> nums2 = new List<int>();
																for (int o6 = 0; o6 < 200; o6++)
																{
																	if (Main.npc[o6].active && Main.npc[o6].type == 440 && Main.npc[o6].ai[3] == (float)this.whoAmI)
																	{
																		nums2.Add(o6);
																	}
																}
																foreach (int num786 in nums2)
																{
																	NPC nPC250 = Main.npc[num786];
																	Vector2 center88 = nPC250.Center;
																	int num787 = Math.Sign(player8.Center.X - center88.X);
																	if (num787 != 0)
																	{
																		int num788 = num787;
																		num6 = num788;
																		nPC250.spriteDirection = num788;
																		nPC250.direction = num6;
																	}
																	if (Main.netMode == 1)
																	{
																		continue;
																	}
																	vector2285 = Vector2.Normalize((player8.Center - center88) + (player8.velocity * 20f));
																	if (vector2285.HasNaNs())
																	{
																		vector2285 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 vector2286 = center88 + new Vector2((float)(this.direction * 30), 12f);
																	for (int p6 = 0; p6 < 1; p6++)
																	{
																		Vector2 vector2287 = vector2285 * (6f + (float)Main.rand.NextDouble() * 4f);
																		vector2287 = vector2287.RotatedByRandom(0.523598790168762);
																		Projectile.NewProjectile(vector2286.X, vector2286.Y, vector2287.X, vector2287.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																	}
																}
																if (Main.netMode != 1)
																{
																	vector2285 = Vector2.Normalize((player8.Center - center84) + (player8.velocity * 20f));
																	if (vector2285.HasNaNs())
																	{
																		vector2285 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 center89 = base.Center + new Vector2((float)(this.direction * 30), 12f);
																	for (int q6 = 0; q6 < 1; q6++)
																	{
																		Vector2 vector2288 = vector2285 * 4f;
																		Projectile.NewProjectile(center89.X, center89.Y, vector2288.X, vector2288.Y, 464, num767, 0f, Main.myPlayer, 0f, 1f);
																	}
																}
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= (float)(4 + num766))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 3f)
														{
															this.localAI[2] = 11f;
															Vector2 vector2289 = Vector2.Normalize(player8.Center - center84);
															if (vector2289.HasNaNs())
															{
																vector2289 = new Vector2((float)this.direction, 0f);
															}
															if (this.ai[1] >= 4f && flag149 && (int)(this.ai[1] - 4f) % num768 == 0)
															{
																if ((int)(this.ai[1] - 4f) / num768 == 2)
																{
																	List<int> nums3 = new List<int>();
																	for (int r6 = 0; r6 < 200; r6++)
																	{
																		if (Main.npc[r6].active && Main.npc[r6].type == 440 && Main.npc[r6].ai[3] == (float)this.whoAmI)
																		{
																			nums3.Add(r6);
																		}
																	}
																	foreach (int num789 in nums3)
																	{
																		NPC nPC251 = Main.npc[num789];
																		Vector2 center90 = nPC251.Center;
																		int num790 = Math.Sign(player8.Center.X - center90.X);
																		if (num790 != 0)
																		{
																			int num791 = num790;
																			num6 = num791;
																			nPC251.spriteDirection = num791;
																			nPC251.direction = num6;
																		}
																		if (Main.netMode == 1)
																		{
																			continue;
																		}
																		vector2289 = Vector2.Normalize((player8.Center - center90) + (player8.velocity * 20f));
																		if (vector2289.HasNaNs())
																		{
																			vector2289 = new Vector2((float)this.direction, 0f);
																		}
																		Vector2 vector2290 = center90 + new Vector2((float)(this.direction * 30), 12f);
																		for (int s6 = 0; s6 < 1; s6++)
																		{
																			Vector2 vector2291 = vector2289 * (6f + (float)Main.rand.NextDouble() * 4f);
																			vector2291 = vector2291.RotatedByRandom(0.523598790168762);
																			Projectile.NewProjectile(vector2290.X, vector2290.Y, vector2291.X, vector2291.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																		}
																	}
																}
																int num792 = Math.Sign(player8.Center.X - center84.X);
																if (num792 != 0)
																{
																	int num793 = num792;
																	num6 = num793;
																	this.spriteDirection = num793;
																	this.direction = num6;
																}
																if (Main.netMode != 1)
																{
																	vector2289 = Vector2.Normalize((player8.Center - center84) + (player8.velocity * 20f));
																	if (vector2289.HasNaNs())
																	{
																		vector2289 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 center91 = base.Center + new Vector2((float)(this.direction * 30), 12f);
																	for (int t6 = 0; t6 < 1; t6++)
																	{
																		Vector2 vector2292 = vector2289 * (6f + (float)Main.rand.NextDouble() * 4f);
																		vector2292 = vector2292.RotatedByRandom(0.523598790168762);
																		Projectile.NewProjectile(center91.X, center91.Y, vector2292.X, vector2292.Y, 467, num770, 0f, Main.myPlayer, 0f, 0f);
																	}
																}
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= (float)(4 + num768 * num769))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 4f)
														{
															if (!flag149)
															{
																this.localAI[2] = 11f;
															}
															else
															{
																this.localAI[2] = 12f;
															}
															if (this.ai[1] == 20f && flag149)
															{
																List<int> nums4 = new List<int>();
																for (int u6 = 0; u6 < 200; u6++)
																{
																	if (Main.npc[u6].active && Main.npc[u6].type == 440 && Main.npc[u6].ai[3] == (float)this.whoAmI)
																	{
																		nums4.Add(u6);
																	}
																}
																foreach (int num794 in nums4)
																{
																	NPC nPC252 = Main.npc[num794];
																	Vector2 center92 = nPC252.Center;
																	int num795 = Math.Sign(player8.Center.X - center92.X);
																	if (num795 != 0)
																	{
																		int num796 = num795;
																		num6 = num796;
																		nPC252.spriteDirection = num796;
																		nPC252.direction = num6;
																	}
																	if (Main.netMode == 1)
																	{
																		continue;
																	}
																	Vector2 vector2293 = Vector2.Normalize((player8.Center - center92) + (player8.velocity * 20f));
																	if (vector2293.HasNaNs())
																	{
																		vector2293 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 vector2294 = center92 + new Vector2((float)(this.direction * 30), 12f);
																	for (int v6 = 0; v6 < 1; v6++)
																	{
																		Vector2 vector2295 = vector2293 * (6f + (float)Main.rand.NextDouble() * 4f);
																		vector2295 = vector2295.RotatedByRandom(0.523598790168762);
																		Projectile.NewProjectile(vector2294.X, vector2294.Y, vector2295.X, vector2295.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																	}
																}
																if ((int)(this.ai[1] - 20f) % num771 == 0)
																{
																	Projectile.NewProjectile(base.Center.X, base.Center.Y - 100f, 0f, 0f, 465, num772, 0f, Main.myPlayer, 0f, 0f);
																}
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= (float)(20 + num771))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 5f)
														{
															this.localAI[2] = 10f;
															Vector2 vector2296 = Vector2.Normalize(player8.Center - center84);
															if (vector2296.HasNaNs())
															{
																vector2296 = new Vector2((float)this.direction, 0f);
															}
															if (this.ai[1] >= 0f && this.ai[1] < 30f)
															{
																flag150 = true;
																flag151 = true;
																float single529 = (this.ai[1] - 0f) / 30f;
																this.alpha = (int)(single529 * 255f);
															}
															else if (this.ai[1] >= 30f && this.ai[1] < 90f)
															{
																if (this.ai[1] == 30f && Main.netMode != 1 && flag149)
																{
																	this.localAI[1] = this.localAI[1] + 1f;
																	Vector2 vector2297 = new Vector2(180f, 0f);
																	List<int> nums5 = new List<int>();
																	for (int w6 = 0; w6 < 200; w6++)
																	{
																		if (Main.npc[w6].active && Main.npc[w6].type == 440 && Main.npc[w6].ai[3] == (float)this.whoAmI)
																		{
																			nums5.Add(w6);
																		}
																	}
																	int count1 = 6 - nums5.Count;
																	if (count1 > 2)
																	{
																		count1 = 2;
																	}
																	int count2 = nums5.Count + count1 + 1;
																	float[] singleArray14 = new float[count2];
																	for (int x610 = 0; x610 < (int)singleArray14.Length; x610++)
																	{
																		Vector2 center93 = base.Center;
																		double num797 = (double)((float)x610 * 6.28318548f / (float)count2 - 1.57079637f);
																		vector24 = new Vector2();
																		singleArray14[x610] = Vector2.Distance(center93 + vector2297.RotatedBy(num797, vector24), player8.Center);
																	}
																	int num798 = 0;
																	for (int y610 = 1; y610 < (int)singleArray14.Length; y610++)
																	{
																		if (singleArray14[num798] > singleArray14[y610])
																		{
																			num798 = y610;
																		}
																	}
																	num798 = (num798 >= count2 / 2 ? num798 - count2 / 2 : num798 + count2 / 2);
																	int num799 = count1;
																	for (int a6 = 0; a6 < (int)singleArray14.Length; a6++)
																	{
																		if (num798 != a6)
																		{
																			Vector2 center94 = base.Center;
																			double num800 = (double)((float)a6 * 6.28318548f / (float)count2 - 1.57079637f);
																			vector24 = new Vector2();
																			Vector2 vector2298 = center94 + vector2297.RotatedBy(num800, vector24);
																			int num801 = num799;
																			num799 = num801 - 1;
																			if (num801 <= 0)
																			{
																				int item = nums5[-num799 - 1];
																				Main.npc[item].Center = vector2298;
																				NetMessage.SendData(23, -1, -1, "", item, 0f, 0f, 0f, 0, 0, 0);
																			}
																			else
																			{
																				int num802 = NPC.NewNPC((int)vector2298.X, (int)vector2298.Y + this.height / 2, 440, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																				Main.npc[num802].ai[3] = (float)this.whoAmI;
																				Main.npc[num802].netUpdate = true;
																				Main.npc[num802].localAI[1] = this.localAI[1];
																			}
																		}
																	}
																	this.ai[2] = (float)Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 490, 0, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
																	NPC nPC253 = this;
																	Vector2 center95 = nPC253.Center;
																	double num803 = (double)((float)num798 * 6.28318548f / (float)count2 - 1.57079637f);
																	vector24 = new Vector2();
																	nPC253.Center = center95 + vector2297.RotatedBy(num803, vector24);
																	this.netUpdate = true;
																	nums5.Clear();
																}
																flag150 = true;
																flag151 = true;
																this.alpha = 255;
																if (!flag149)
																{
																	Vector2 unitY16 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center;
																	unitY16 = unitY16 - base.Center;
																	if (unitY16 == Vector2.Zero)
																	{
																		unitY16 = -Vector2.UnitY;
																	}
																	unitY16.Normalize();
																	if (Math.Abs(unitY16.Y) < 0.77f)
																	{
																		this.localAI[2] = 11f;
																	}
																	else if (unitY16.Y >= 0f)
																	{
																		this.localAI[2] = 10f;
																	}
																	else
																	{
																		this.localAI[2] = 12f;
																	}
																	int num804 = Math.Sign(unitY16.X);
																	if (num804 != 0)
																	{
																		int num805 = num804;
																		num6 = num805;
																		this.spriteDirection = num805;
																		this.direction = num6;
																	}
																}
																else
																{
																	Vector2 unitY17 = Main.projectile[(int)this.ai[2]].Center;
																	unitY17 = unitY17 - base.Center;
																	if (unitY17 == Vector2.Zero)
																	{
																		unitY17 = -Vector2.UnitY;
																	}
																	unitY17.Normalize();
																	if (Math.Abs(unitY17.Y) < 0.77f)
																	{
																		this.localAI[2] = 11f;
																	}
																	else if (unitY17.Y >= 0f)
																	{
																		this.localAI[2] = 10f;
																	}
																	else
																	{
																		this.localAI[2] = 12f;
																	}
																	int num806 = Math.Sign(unitY17.X);
																	if (num806 != 0)
																	{
																		int num807 = num806;
																		num6 = num807;
																		this.spriteDirection = num807;
																		this.direction = num6;
																	}
																}
															}
															else if (this.ai[1] >= 90f && this.ai[1] < 120f)
															{
																flag150 = true;
																flag151 = true;
																float single530 = (this.ai[1] - 90f) / 30f;
																this.alpha = 255 - (int)(single530 * 255f);
															}
															else if (this.ai[1] >= 120f && this.ai[1] < 420f)
															{
																flag151 = true;
																this.alpha = 0;
																if (!flag149)
																{
																	Vector2 unitY18 = Main.projectile[(int)Main.npc[(int)this.ai[3]].ai[2]].Center;
																	unitY18 = unitY18 - base.Center;
																	if (unitY18 == Vector2.Zero)
																	{
																		unitY18 = -Vector2.UnitY;
																	}
																	unitY18.Normalize();
																	if (Math.Abs(unitY18.Y) < 0.77f)
																	{
																		this.localAI[2] = 11f;
																	}
																	else if (unitY18.Y >= 0f)
																	{
																		this.localAI[2] = 10f;
																	}
																	else
																	{
																		this.localAI[2] = 12f;
																	}
																	int num808 = Math.Sign(unitY18.X);
																	if (num808 != 0)
																	{
																		int num809 = num808;
																		num6 = num809;
																		this.spriteDirection = num809;
																		this.direction = num6;
																	}
																}
																else
																{
																	Vector2 unitY19 = Main.projectile[(int)this.ai[2]].Center;
																	unitY19 = unitY19 - base.Center;
																	if (unitY19 == Vector2.Zero)
																	{
																		unitY19 = -Vector2.UnitY;
																	}
																	unitY19.Normalize();
																	if (Math.Abs(unitY19.Y) < 0.77f)
																	{
																		this.localAI[2] = 11f;
																	}
																	else if (unitY19.Y >= 0f)
																	{
																		this.localAI[2] = 10f;
																	}
																	else
																	{
																		this.localAI[2] = 12f;
																	}
																	int num810 = Math.Sign(unitY19.X);
																	if (num810 != 0)
																	{
																		int num811 = num810;
																		num6 = num811;
																		this.spriteDirection = num811;
																		this.direction = num6;
																	}
																}
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 420f)
															{
																flag151 = true;
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 6f)
														{
															this.localAI[2] = 13f;
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 120f)
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 7f)
														{
															this.localAI[2] = 11f;
															Vector2 vector2299 = Vector2.Normalize(player8.Center - center84);
															if (vector2299.HasNaNs())
															{
																vector2299 = new Vector2((float)this.direction, 0f);
															}
															if (this.ai[1] >= 4f && flag149 && (int)(this.ai[1] - 4f) % num773 == 0)
															{
																if ((int)(this.ai[1] - 4f) / num773 == 2)
																{
																	List<int> nums6 = new List<int>();
																	for (int b6 = 0; b6 < 200; b6++)
																	{
																		if (Main.npc[b6].active && Main.npc[b6].type == 440 && Main.npc[b6].ai[3] == (float)this.whoAmI)
																		{
																			nums6.Add(b6);
																		}
																	}
																	foreach (int num812 in nums6)
																	{
																		NPC nPC254 = Main.npc[num812];
																		Vector2 center96 = nPC254.Center;
																		int num813 = Math.Sign(player8.Center.X - center96.X);
																		if (num813 != 0)
																		{
																			int num814 = num813;
																			num6 = num814;
																			nPC254.spriteDirection = num814;
																			nPC254.direction = num6;
																		}
																		if (Main.netMode == 1)
																		{
																			continue;
																		}
																		vector2299 = Vector2.Normalize((player8.Center - center96) + (player8.velocity * 20f));
																		if (vector2299.HasNaNs())
																		{
																			vector2299 = new Vector2((float)this.direction, 0f);
																		}
																		Vector2 vector2300 = center96 + new Vector2((float)(this.direction * 30), 12f);
																		for (int c6 = 0; (float)c6 < 5f; c6++)
																		{
																			Vector2 vector2301 = vector2299 * (6f + (float)Main.rand.NextDouble() * 4f);
																			vector2301 = vector2301.RotatedByRandom(1.25663709640503);
																			Projectile.NewProjectile(vector2300.X, vector2300.Y, vector2301.X, vector2301.Y, 468, 18, 0f, Main.myPlayer, 0f, 0f);
																		}
																	}
																}
																int num815 = Math.Sign(player8.Center.X - center84.X);
																if (num815 != 0)
																{
																	int num816 = num815;
																	num6 = num816;
																	this.spriteDirection = num816;
																	this.direction = num6;
																}
																if (Main.netMode != 1)
																{
																	vector2299 = Vector2.Normalize((player8.Center - center84) + (player8.velocity * 20f));
																	if (vector2299.HasNaNs())
																	{
																		vector2299 = new Vector2((float)this.direction, 0f);
																	}
																	Vector2 center97 = base.Center + new Vector2((float)(this.direction * 30), 12f);
																	float single531 = 8f;
																	float single532 = 0.251327425f;
																	for (int d6 = 0; (float)d6 < 5f; d6++)
																	{
																		Vector2 vector2302 = vector2299 * single531;
																		double num817 = (double)(single532 * (float)d6 - (1.2566371f - single532) / 2f);
																		vector24 = new Vector2();
																		vector2302 = vector2302.RotatedBy(num817, vector24);
																		float single533 = (Main.rand.NextFloat() - 0.5f) * 0.3f * 6.28318548f / 60f;
																		int num818 = NPC.NewNPC((int)center97.X, (int)center97.Y + 7, 522, 0, 0f, single533, vector2302.X, vector2302.Y, 255);
																		Main.npc[num818].velocity = vector2302;
																	}
																}
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= (float)(4 + num773 * num774))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] == 8f)
														{
															this.localAI[2] = 13f;
															if (this.ai[1] >= 4f && flag149 && (int)(this.ai[1] - 4f) % num775 == 0)
															{
																List<int> nums7 = new List<int>();
																for (int e6 = 0; e6 < 200; e6++)
																{
																	if (Main.npc[e6].active && Main.npc[e6].type == 440 && Main.npc[e6].ai[3] == (float)this.whoAmI)
																	{
																		nums7.Add(e6);
																	}
																}
																int count3 = nums7.Count + 1;
																if (count3 > 3)
																{
																	count3 = 3;
																}
																int num819 = Math.Sign(player8.Center.X - center84.X);
																if (num819 != 0)
																{
																	int num820 = num819;
																	num6 = num820;
																	this.spriteDirection = num820;
																	this.direction = num6;
																}
																if (Main.netMode != 1)
																{
																	for (int f6 = 0; f6 < count3; f6++)
																	{
																		Point point5 = base.Center.ToTileCoordinates();
																		Point tileCoordinates6 = Main.player[this.target].Center.ToTileCoordinates();
																		Vector2 center98 = Main.player[this.target].Center - base.Center;
																		int num821 = 20;
																		int num822 = 3;
																		int num823 = 7;
																		int num824 = 2;
																		int num825 = 0;
																		bool flag152 = false;
																		if (center98.Length() > 2000f)
																		{
																			flag152 = true;
																		}
																		while (!flag152 && num825 < 100)
																		{
																			num825++;
																			int num826 = Main.rand.Next(tileCoordinates6.X - num821, tileCoordinates6.X + num821 + 1);
																			int num827 = Main.rand.Next(tileCoordinates6.Y - num821, tileCoordinates6.Y + num821 + 1);
																			if (num827 >= tileCoordinates6.Y - num823 && num827 <= tileCoordinates6.Y + num823 && num826 >= tileCoordinates6.X - num823 && num826 <= tileCoordinates6.X + num823 || num827 >= point5.Y - num822 && num827 <= point5.Y + num822 && num826 >= point5.X - num822 && num826 <= point5.X + num822 || Main.tile[num826, num827].nactive())
																			{
																				continue;
																			}
																			bool flag153 = true;
																			if (flag153 && Collision.SolidTiles(num826 - num824, num826 + num824, num827 - num824, num827 + num824))
																			{
																				flag153 = false;
																			}
																			if (!flag153)
																			{
																				continue;
																			}
																			NPC.NewNPC(num826 * 16 + 8, num827 * 16 + 8, 523, 0, (float)this.whoAmI, 0f, 0f, 0f, 255);
																			flag152 = true;
																			break;
																		}
																	}
																}
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= (float)(4 + num775 * num776))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.ai[3] = this.ai[3] + 1f;
																this.velocity = Vector2.Zero;
																this.netUpdate = true;
															}
														}
														if (!flag149)
														{
															this.ai[3] = single526;
														}
														this.dontTakeDamage = flag150;
														this.chaseable = !flag151;
														return;
													}
													if (this.aiStyle == 85)
													{
														this.noTileCollide = false;
														if (this.ai[0] == 0f)
														{
															this.TargetClosest(true);
															if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																Vector2 center99 = Main.player[this.target].Center - base.Center;
																center99.Y = center99.Y - (float)(Main.player[this.target].height / 4);
																if (center99.Length() <= 800f)
																{
																	Vector2 center100 = base.Center;
																	center100.X = Main.player[this.target].Center.X;
																	Vector2 center101 = center100 - base.Center;
																	if (center101.Length() <= 8f || !Collision.CanHit(base.Center, 1, 1, center100, 1, 1))
																	{
																		center100 = base.Center;
																		center100.Y = Main.player[this.target].Center.Y;
																		center101 = center100 - base.Center;
																		if (center101.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center100, 1, 1))
																		{
																			this.ai[0] = 3f;
																			this.ai[1] = center100.X;
																			this.ai[2] = center100.Y;
																		}
																	}
																	else
																	{
																		this.ai[0] = 3f;
																		this.ai[1] = center100.X;
																		this.ai[2] = center100.Y;
																		Vector2 center102 = base.Center;
																		center102.Y = Main.player[this.target].Center.Y;
																		if (center101.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center102, 1, 1) && Collision.CanHit(center102, 1, 1, Main.player[this.target].position, 1, 1))
																		{
																			this.ai[0] = 3f;
																			this.ai[1] = center102.X;
																			this.ai[2] = center102.Y;
																		}
																	}
																	if (this.ai[0] == 0f)
																	{
																		this.localAI[0] = 0f;
																		center99.Normalize();
																		center99 = center99 * 0.5f;
																		NPC nPC255 = this;
																		nPC255.velocity = nPC255.velocity + center99;
																		this.ai[0] = 4f;
																		this.ai[1] = 0f;
																	}
																}
																else
																{
																	this.ai[0] = 2f;
																}
															}
															else
															{
																this.ai[0] = 1f;
															}
														}
														else if (this.ai[0] == 1f)
														{
															NPC nPC256 = this;
															nPC256.rotation = nPC256.rotation + (float)this.direction * 0.3f;
															Vector2 top = Main.player[this.target].Center - base.Center;
															if (this.type == 421)
															{
																top = Main.player[this.target].Top - base.Center;
															}
															float single534 = top.Length();
															float single535 = 5.5f + single534 / 100f;
															int num828 = 50;
															top.Normalize();
															top = top * single535;
															this.velocity = ((this.velocity * (float)(num828 - 1)) + top) / (float)num828;
															if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
															}
															if (this.type == 421 && single534 < 40f && Main.player[this.target].active && !Main.player[this.target].dead)
															{
																bool flag154 = true;
																int num829 = 0;
																while (num829 < 200)
																{
																	NPC nPC257 = Main.npc[num829];
																	if (!nPC257.active || nPC257.type != this.type || nPC257.ai[0] != 5f || nPC257.target != this.target)
																	{
																		num829++;
																	}
																	else
																	{
																		flag154 = false;
																		break;
																	}
																}
																if (flag154)
																{
																	base.Center = Main.player[this.target].Top;
																	this.velocity = Vector2.Zero;
																	this.ai[0] = 5f;
																	this.ai[1] = 0f;
																	this.netUpdate = true;
																}
															}
														}
														else if (this.ai[0] == 2f)
														{
															this.rotation = this.velocity.X * 0.1f;
															this.noTileCollide = true;
															Vector2 center103 = Main.player[this.target].Center - base.Center;
															float single536 = center103.Length();
															float single537 = 3f;
															int num830 = 3;
															center103.Normalize();
															center103 = center103 * single537;
															this.velocity = ((this.velocity * (float)(num830 - 1)) + center103) / (float)num830;
															if (single536 < 600f && !Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[0] = 0f;
															}
														}
														else if (this.ai[0] == 3f)
														{
															this.rotation = this.velocity.X * 0.1f;
															Vector2 vector2303 = new Vector2(this.ai[1], this.ai[2]);
															Vector2 center104 = vector2303 - base.Center;
															float single538 = center104.Length();
															float single539 = 2f;
															float single540 = 3f;
															center104.Normalize();
															center104 = center104 * single539;
															this.velocity = ((this.velocity * (single540 - 1f)) + center104) / single540;
															if (this.collideX || this.collideY)
															{
																this.ai[0] = 4f;
																this.ai[1] = 0f;
															}
															if (single538 < single539 || single538 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 0f;
															}
														}
														else if (this.ai[0] == 4f)
														{
															this.rotation = this.velocity.X * 0.1f;
															if (this.collideX)
															{
																this.velocity.X = this.velocity.X * -0.8f;
															}
															if (this.collideY)
															{
																this.velocity.Y = this.velocity.Y * -0.8f;
															}
															if (this.velocity.X == 0f && this.velocity.Y == 0f)
															{
																center = Main.player[this.target].Center - base.Center;
																center.Y = center.Y - (float)(Main.player[this.target].height / 4);
																center.Normalize();
																this.velocity = center * 0.1f;
															}
															float single541 = 2f;
															float single542 = 20f;
															center = this.velocity;
															center.Normalize();
															center = center * single541;
															this.velocity = ((this.velocity * (single542 - 1f)) + center) / single542;
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] > 180f)
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
															}
															if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 0f;
															}
															this.localAI[0] = this.localAI[0] + 1f;
															if (this.localAI[0] >= 5f && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
															{
																this.localAI[0] = 0f;
																Vector2 center105 = base.Center;
																center105.X = Main.player[this.target].Center.X;
																if (!Collision.CanHit(base.Center, 1, 1, center105, 1, 1) || !Collision.CanHit(base.Center, 1, 1, center105, 1, 1) || !Collision.CanHit(Main.player[this.target].Center, 1, 1, center105, 1, 1))
																{
																	center105 = base.Center;
																	center105.Y = Main.player[this.target].Center.Y;
																	if (Collision.CanHit(base.Center, 1, 1, center105, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center105, 1, 1))
																	{
																		this.ai[0] = 3f;
																		this.ai[1] = center105.X;
																		this.ai[2] = center105.Y;
																	}
																}
																else
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center105.X;
																	this.ai[2] = center105.Y;
																}
															}
														}
														else if (this.ai[0] == 5f)
														{
															Player player9 = Main.player[this.target];
															if (!player9.active || player9.dead)
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																this.netUpdate = true;
															}
															else
															{
																base.Center = (player9.gravDir == 1f ? player9.Top : player9.Bottom) + new Vector2((float)(player9.direction * 4), 0f);
																this.gfxOffY = player9.gfxOffY;
																this.velocity = Vector2.Zero;
																player9.AddBuff(163, 59, true);
															}
														}
														if (this.type == 405)
														{
															this.rotation = 0f;
															for (int g6 = 0; g6 < 200; g6++)
															{
																if (g6 != this.whoAmI && Main.npc[g6].active && Main.npc[g6].type == this.type && Math.Abs(this.position.X - Main.npc[g6].position.X) + Math.Abs(this.position.Y - Main.npc[g6].position.Y) < (float)this.width)
																{
																	if (this.position.X >= Main.npc[g6].position.X)
																	{
																		this.velocity.X = this.velocity.X + 0.05f;
																	}
																	else
																	{
																		this.velocity.X = this.velocity.X - 0.05f;
																	}
																	if (this.position.Y >= Main.npc[g6].position.Y)
																	{
																		this.velocity.Y = this.velocity.Y + 0.05f;
																	}
																	else
																	{
																		this.velocity.Y = this.velocity.Y - 0.05f;
																	}
																}
															}
															return;
														}
														if (this.type == 421)
														{
															this.hide = this.ai[0] == 5f;
															this.rotation = this.velocity.X * 0.1f;
															for (int h6 = 0; h6 < 200; h6++)
															{
																if (h6 != this.whoAmI && Main.npc[h6].active && Main.npc[h6].type == this.type && Math.Abs(this.position.X - Main.npc[h6].position.X) + Math.Abs(this.position.Y - Main.npc[h6].position.Y) < (float)this.width)
																{
																	if (this.position.X >= Main.npc[h6].position.X)
																	{
																		this.velocity.X = this.velocity.X + 0.05f;
																	}
																	else
																	{
																		this.velocity.X = this.velocity.X - 0.05f;
																	}
																	if (this.position.Y >= Main.npc[h6].position.Y)
																	{
																		this.velocity.Y = this.velocity.Y + 0.05f;
																	}
																	else
																	{
																		this.velocity.Y = this.velocity.Y - 0.05f;
																	}
																}
															}
															return;
														}
													}
													else if (this.aiStyle == 86)
													{
														if (this.alpha > 0)
														{
															NPC nPC258 = this;
															nPC258.alpha = nPC258.alpha - 30;
															if (this.alpha < 0)
															{
																this.alpha = 0;
															}
														}
														this.noGravity = true;
														this.noTileCollide = true;
														this.knockBackResist = 0f;
														for (int i7 = 0; i7 < 200; i7++)
														{
															if (i7 != this.whoAmI && Main.npc[i7].active && Main.npc[i7].type == this.type)
															{
																Vector2 center106 = Main.npc[i7].Center - base.Center;
																if (center106.Length() < 50f)
																{
																	center106.Normalize();
																	if (center106.X == 0f && center106.Y == 0f)
																	{
																		if (i7 <= this.whoAmI)
																		{
																			center106.X = -1f;
																		}
																		else
																		{
																			center106.X = 1f;
																		}
																	}
																	center106 = center106 * 0.4f;
																	NPC nPC259 = this;
																	nPC259.velocity = nPC259.velocity - center106;
																	NPC nPC260 = Main.npc[i7];
																	nPC260.velocity = nPC260.velocity + center106;
																}
															}
														}
														if (this.type == 472)
														{
															float single543 = 120f;
															if (this.localAI[0] < single543)
															{
																if (this.localAI[0] == 0f)
																{
																	Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
																	this.TargetClosest(true);
																	if (this.direction <= 0)
																	{
																		this.velocity.X = this.velocity.X - 2f;
																	}
																	else
																	{
																		this.velocity.X = this.velocity.X + 2f;
																	}
																	for (int j7 = 0; j7 < 20; j7++)
																	{
																		Vector2 center107 = base.Center;
																		center107.Y = center107.Y - 18f;
																		Vector2 vector2304 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
																		vector2304.Normalize();
																		vector2304 = vector2304 * ((float)Main.rand.Next(0, 100) * 0.1f);
																		center107 = center107 + vector2304;
																		vector2304.Normalize();
																		vector2304 = vector2304 * ((float)Main.rand.Next(50, 90) * 0.2f);
																		skyBlue = new Color();
																		int num831 = Dust.NewDust(center107, 1, 1, 27, 0f, 0f, 0, skyBlue, 1f);
																		Main.dust[num831].velocity = -vector2304 * 0.3f;
																		Main.dust[num831].alpha = 100;
																		if (Main.rand.Next(2) == 0)
																		{
																			Main.dust[num831].noGravity = true;
																			Dust dust77 = Main.dust[num831];
																			dust77.scale = dust77.scale + 0.3f;
																		}
																	}
																}
																this.localAI[0] = this.localAI[0] + 1f;
																float single544 = 1f - this.localAI[0] / single543;
																float single545 = single544 * 20f;
																for (int k7 = 0; (float)k7 < single545; k7++)
																{
																	if (Main.rand.Next(5) == 0)
																	{
																		Vector2 vector2305 = this.position;
																		int num832 = this.width;
																		int num833 = this.height;
																		skyBlue = new Color();
																		int num834 = Dust.NewDust(vector2305, num832, num833, 27, 0f, 0f, 0, skyBlue, 1f);
																		Main.dust[num834].alpha = 100;
																		Dust dust78 = Main.dust[num834];
																		dust78.velocity = dust78.velocity * 0.3f;
																		Dust dust79 = Main.dust[num834];
																		dust79.velocity = dust79.velocity + (this.velocity * 0.75f);
																		Main.dust[num834].noGravity = true;
																	}
																}
															}
														}
														if (this.type == 521 && this.localAI[0] < 120f)
														{
															if (this.localAI[0] == 0f)
															{
																Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
																this.TargetClosest(true);
																if (this.direction <= 0)
																{
																	this.velocity.X = this.velocity.X - 2f;
																}
																else
																{
																	this.velocity.X = this.velocity.X + 2f;
																}
															}
															this.localAI[0] = this.localAI[0] + 1f;
															int num835 = 10;
															for (int l7 = 0; l7 < 2; l7++)
															{
																Vector2 vector2306 = this.position - new Vector2((float)num835);
																skyBlue = new Color();
																int num836 = Dust.NewDust(vector2306, this.width + num835 * 2, this.height + num835 * 2, 228, 0f, 0f, 100, skyBlue, 2f);
																Main.dust[num836].noGravity = true;
																Main.dust[num836].noLight = true;
															}
														}
														if (this.ai[0] == 0f)
														{
															this.TargetClosest(true);
															this.ai[0] = 1f;
															this.ai[1] = (float)this.direction;
														}
														else if (this.ai[0] == 1f)
														{
															this.TargetClosest(true);
															float single546 = 0.3f;
															float single547 = 7f;
															float single548 = 4f;
															float single549 = 660f;
															float single550 = 4f;
															if (this.type == 521)
															{
																single546 = 0.7f;
																single547 = 14f;
																single549 = 500f;
																single548 = 6f;
																single550 = 3f;
															}
															this.velocity.X = this.velocity.X + this.ai[1] * single546;
															if (this.velocity.X > single547)
															{
																this.velocity.X = single547;
															}
															if (this.velocity.X < -single547)
															{
																this.velocity.X = -single547;
															}
															float y211 = Main.player[this.target].Center.Y - base.Center.Y;
															if (Math.Abs(y211) > single548)
															{
																single550 = 15f;
															}
															if (y211 > single548)
															{
																y211 = single548;
															}
															else if (y211 < -single548)
															{
																y211 = -single548;
															}
															this.velocity.Y = (this.velocity.Y * (single550 - 1f) + y211) / single550;
															if (this.ai[1] > 0f && Main.player[this.target].Center.X - base.Center.X < -single549 || this.ai[1] < 0f && Main.player[this.target].Center.X - base.Center.X > single549)
															{
																this.ai[0] = 2f;
																this.ai[1] = 0f;
																if (base.Center.Y + 20f <= Main.player[this.target].Center.Y)
																{
																	this.ai[1] = 1f;
																}
																else
																{
																	this.ai[1] = -1f;
																}
															}
														}
														else if (this.ai[0] == 2f)
														{
															float single551 = 0.4f;
															float single552 = 0.95f;
															float single553 = 5f;
															if (this.type == 521)
															{
																single551 = 0.3f;
																single553 = 7f;
																single552 = 0.9f;
															}
															this.velocity.Y = this.velocity.Y + this.ai[1] * single551;
															if (this.velocity.Length() > single553)
															{
																NPC nPC261 = this;
																nPC261.velocity = nPC261.velocity * single552;
															}
															if (this.velocity.X > -1f && this.velocity.X < 1f)
															{
																this.TargetClosest(true);
																this.ai[0] = 3f;
																this.ai[1] = (float)this.direction;
															}
														}
														else if (this.ai[0] == 3f)
														{
															float single554 = 0.4f;
															float single555 = 0.2f;
															float single556 = 5f;
															float single557 = 0.95f;
															if (this.type == 521)
															{
																single554 = 0.6f;
																single555 = 0.3f;
																single556 = 7f;
																single557 = 0.9f;
															}
															this.velocity.X = this.velocity.X + this.ai[1] * single554;
															if (base.Center.Y <= Main.player[this.target].Center.Y)
															{
																this.velocity.Y = this.velocity.Y + single555;
															}
															else
															{
																this.velocity.Y = this.velocity.Y - single555;
															}
															if (this.velocity.Length() > single556)
															{
																NPC nPC262 = this;
																nPC262.velocity = nPC262.velocity * single557;
															}
															if (this.velocity.Y > -1f && this.velocity.Y < 1f)
															{
																this.TargetClosest(true);
																this.ai[0] = 0f;
																this.ai[1] = (float)this.direction;
															}
														}
														if (this.type == 521)
														{
															int num837 = 10;
															for (int m7 = 0; m7 < 1; m7++)
															{
																Vector2 vector2307 = this.position - new Vector2((float)num837);
																skyBlue = new Color();
																int num838 = Dust.NewDust(vector2307, this.width + num837 * 2, this.height + num837 * 2, 228, 0f, 0f, 100, skyBlue, 2f);
																Main.dust[num838].noGravity = true;
																Main.dust[num838].noLight = true;
															}
															return;
														}
													}
													else if (this.aiStyle == 87)
													{
														this.knockBackResist = 0.2f * Main.knockBackMultiplier;
														this.dontTakeDamage = false;
														this.noTileCollide = false;
														this.noGravity = false;
														this.reflectingProjectiles = false;
														if (this.ai[0] != 7f && Main.player[this.target].dead)
														{
															this.TargetClosest(true);
															if (Main.player[this.target].dead)
															{
																this.ai[0] = 7f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
															}
														}
														if (this.ai[0] == 0f)
														{
															this.TargetClosest(true);
															Vector2 center108 = Main.player[this.target].Center - base.Center;
															if (this.velocity.X != 0f || this.velocity.Y > 100f || this.justHit || center108.Length() < 80f)
															{
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 1f)
														{
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] > 36f)
															{
																this.ai[0] = 2f;
																this.ai[1] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 2f)
														{
															if ((Main.player[this.target].Center - base.Center).Length() > 600f)
															{
																this.ai[0] = 5f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
															}
															if (this.velocity.Y != 0f)
															{
																this.knockBackResist = 0f;
																this.velocity.X = this.velocity.X * 0.99f;
																if (this.direction < 0 && this.velocity.X > -1f)
																{
																	this.velocity.X = -1f;
																}
																if (this.direction > 0 && this.velocity.X < 1f)
																{
																	this.velocity.X = 1f;
																}
															}
															else
															{
																this.TargetClosest(true);
																this.velocity.X = this.velocity.X * 0.85f;
																this.ai[1] = this.ai[1] + 1f;
																float single558 = 15f + 30f * ((float)this.life / (float)this.lifeMax);
																float single559 = 3f + 4f * (1f - (float)this.life / (float)this.lifeMax);
																float single560 = 4f;
																if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
																{
																	single560 = single560 + 2f;
																}
																if (this.ai[1] > single558)
																{
																	this.ai[3] = this.ai[3] + 1f;
																	if (this.ai[3] >= 3f)
																	{
																		this.ai[3] = 0f;
																		single560 = single560 * 2f;
																		single559 = single559 / 2f;
																	}
																	this.ai[1] = 0f;
																	this.velocity.Y = this.velocity.Y - single560;
																	this.velocity.X = single559 * (float)this.direction;
																}
															}
															this.ai[2] = this.ai[2] + 1f;
															if ((double)this.ai[2] > 210 && this.velocity.Y == 0f && Main.netMode != 1)
															{
																int num839 = Main.rand.Next(3);
																if (num839 == 0)
																{
																	this.ai[0] = 3f;
																}
																else if (num839 == 1)
																{
																	this.ai[0] = 4f;
																	this.noTileCollide = true;
																	this.velocity.Y = -8f;
																}
																else if (num839 != 2)
																{
																	this.ai[0] = 2f;
																}
																else
																{
																	this.ai[0] = 6f;
																}
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 3f)
														{
															this.velocity.X = this.velocity.X * 0.85f;
															this.dontTakeDamage = true;
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 180f)
															{
																this.ai[0] = 2f;
																this.ai[1] = 0f;
															}
															if (Main.expertMode)
															{
																this.ReflectProjectiles(base.Hitbox);
																this.reflectingProjectiles = true;
																return;
															}
														}
														else if (this.ai[0] == 4f)
														{
															this.noTileCollide = true;
															this.noGravity = true;
															this.knockBackResist = 0f;
															if (this.velocity.X >= 0f)
															{
																this.direction = 1;
															}
															else
															{
																this.direction = -1;
															}
															this.spriteDirection = this.direction;
															this.TargetClosest(true);
															Vector2 center109 = Main.player[this.target].Center;
															center109.Y = center109.Y - 350f;
															Vector2 center110 = center109 - base.Center;
															if (this.ai[2] != 1f)
															{
																if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 40f && base.Center.Y < Main.player[this.target].Center.Y - 300f)
																{
																	this.ai[1] = 0f;
																	this.ai[2] = 1f;
																	return;
																}
																center110.Normalize();
																center110 = center110 * 12f;
																this.velocity = ((this.velocity * 5f) + center110) / 6f;
																return;
															}
															this.ai[1] = this.ai[1] + 1f;
															center110 = Main.player[this.target].Center - base.Center;
															center110.Normalize();
															center110 = center110 * 8f;
															this.velocity = ((this.velocity * 4f) + center110) / 5f;
															if (this.ai[1] > 6f)
															{
																this.ai[1] = 0f;
																this.ai[0] = 4.1f;
																this.ai[2] = 0f;
																this.velocity = center110;
																return;
															}
														}
														else if (this.ai[0] != 4.1f)
														{
															if (this.ai[0] == 5f)
															{
																if (this.velocity.X <= 0f)
																{
																	this.direction = -1;
																}
																else
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.noTileCollide = true;
																this.noGravity = true;
																this.knockBackResist = 0f;
																Vector2 center111 = Main.player[this.target].Center - base.Center;
																center111.Y = center111.Y - 4f;
																if (center111.Length() < 200f && !Collision.SolidCollision(this.position, this.width, this.height))
																{
																	this.ai[0] = 2f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																}
																if (center111.Length() > 10f)
																{
																	center111.Normalize();
																	center111 = center111 * 10f;
																}
																this.velocity = ((this.velocity * 4f) + center111) / 5f;
																return;
															}
															if (this.ai[0] == 6f)
															{
																this.knockBackResist = 0f;
																if (this.velocity.Y != 0f)
																{
																	this.velocity.X = this.velocity.X * 0.98f;
																	if (this.direction < 0 && this.velocity.X > -8f)
																	{
																		this.velocity.X = -8f;
																	}
																	if (this.direction > 0 && this.velocity.X < 8f)
																	{
																		this.velocity.X = 8f;
																	}
																}
																else
																{
																	this.TargetClosest(true);
																	this.velocity.X = this.velocity.X * 0.8f;
																	this.ai[1] = this.ai[1] + 1f;
																	if (this.ai[1] > 5f)
																	{
																		this.ai[1] = 0f;
																		this.velocity.Y = this.velocity.Y - 4f;
																		if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y)
																		{
																			this.velocity.Y = this.velocity.Y - 1.25f;
																		}
																		if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 40f)
																		{
																			this.velocity.Y = this.velocity.Y - 1.5f;
																		}
																		if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 80f)
																		{
																			this.velocity.Y = this.velocity.Y - 1.75f;
																		}
																		if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 120f)
																		{
																			this.velocity.Y = this.velocity.Y - 2f;
																		}
																		if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 160f)
																		{
																			this.velocity.Y = this.velocity.Y - 2.25f;
																		}
																		if (Main.player[this.target].position.Y + (float)Main.player[this.target].height < base.Center.Y - 200f)
																		{
																			this.velocity.Y = this.velocity.Y - 2.5f;
																		}
																		if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
																		{
																			this.velocity.Y = this.velocity.Y - 2f;
																		}
																		this.velocity.X = (float)(12 * this.direction);
																		this.ai[2] = this.ai[2] + 1f;
																	}
																}
																if (this.ai[2] >= 3f && this.velocity.Y == 0f)
																{
																	this.ai[0] = 2f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																	return;
																}
															}
															else if (this.ai[0] == 7f)
															{
																this.damage = 0;
																this.life = this.lifeMax;
																this.defense = 9999;
																this.noTileCollide = true;
																NPC nPC263 = this;
																nPC263.alpha = nPC263.alpha + 7;
																if (this.alpha > 255)
																{
																	this.alpha = 255;
																}
																this.velocity.X = this.velocity.X * 0.98f;
																return;
															}
														}
														else
														{
															this.knockBackResist = 0f;
															if (this.ai[2] == 0f && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1) && !Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[2] = 1f;
															}
															if (this.position.Y + (float)this.height >= Main.player[this.target].position.Y || this.velocity.Y <= 0f)
															{
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] > 10f)
																{
																	this.ai[0] = 2f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																	if (Collision.SolidCollision(this.position, this.width, this.height))
																	{
																		this.ai[0] = 5f;
																	}
																}
															}
															else if (this.ai[2] == 0f)
															{
																this.noTileCollide = true;
																this.noGravity = true;
																this.knockBackResist = 0f;
															}
															this.velocity.Y = this.velocity.Y + 0.2f;
															if (this.velocity.Y > 16f)
															{
																this.velocity.Y = 16f;
																return;
															}
														}
													}
													else if (this.aiStyle == 88)
													{
														int num840 = 7;
														this.noTileCollide = false;
														this.noGravity = true;
														this.knockBackResist = 0.2f * Main.expertKnockBack;
														this.damage = this.defDamage;
														if (!Main.eclipse)
														{
															this.ai[0] = -1f;
														}
														else if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
														{
															this.TargetClosest(true);
															Vector2 center112 = Main.player[this.target].Center - base.Center;
															if (Main.player[this.target].dead || center112.Length() > 3000f)
															{
																this.ai[0] = -1f;
															}
														}
														else
														{
															Vector2 center113 = Main.player[this.target].Center - base.Center;
															if (this.ai[0] > 1f && center113.Length() > 1000f)
															{
																this.ai[0] = 1f;
															}
														}
														if (this.ai[0] == -1f)
														{
															Vector2 vector2308 = new Vector2(0f, -8f);
															this.velocity = ((this.velocity * 9f) + vector2308) / 10f;
															this.noTileCollide = true;
															this.dontTakeDamage = true;
															return;
														}
														if (this.ai[0] != 0f)
														{
															if (this.ai[0] == 1f)
															{
																this.collideX = false;
																this.collideY = false;
																this.noTileCollide = true;
																this.knockBackResist = 0f;
																if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
																{
																	this.TargetClosest(true);
																}
																if (this.velocity.X < 0f)
																{
																	this.direction = -1;
																}
																else if (this.velocity.X > 0f)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.rotation = (this.rotation * 9f + this.velocity.X * 0.08f) / 10f;
																Vector2 center114 = Main.player[this.target].Center - base.Center;
																if (center114.Length() < 300f && !Collision.SolidCollision(this.position, this.width, this.height))
																{
																	this.ai[0] = 0f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																}
																float single561 = 7f + center114.Length() / 100f;
																float single562 = 25f;
																center114.Normalize();
																center114 = center114 * single561;
																this.velocity = ((this.velocity * (single562 - 1f)) + center114) / single562;
																return;
															}
															if (this.ai[0] != 2f)
															{
																if (this.ai[0] == 3f)
																{
																	this.knockBackResist = 0f;
																	this.noTileCollide = true;
																	if (this.velocity.X >= 0f)
																	{
																		this.direction = 1;
																	}
																	else
																	{
																		this.direction = -1;
																	}
																	this.spriteDirection = this.direction;
																	this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
																	Vector2 center115 = Main.player[this.target].Center - base.Center;
																	center115.Y = center115.Y - 12f;
																	if (base.Center.X <= Main.player[this.target].Center.X)
																	{
																		center115.X = center115.X - 400f;
																	}
																	else
																	{
																		center115.X = center115.X + 400f;
																	}
																	if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 350f && Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) < 20f)
																	{
																		this.ai[0] = 3.1f;
																		this.ai[1] = 0f;
																	}
																	this.ai[1] = this.ai[1] + 0.0333333351f;
																	float single563 = 8f + this.ai[1];
																	float single564 = 4f;
																	center115.Normalize();
																	center115 = center115 * single563;
																	this.velocity = ((this.velocity * (single564 - 1f)) + center115) / single564;
																	return;
																}
																if (this.ai[0] != 3.1f)
																{
																	if (this.ai[0] == 3.2f)
																	{
																		this.damage = (int)((double)this.defDamage * 1.3);
																		this.collideX = false;
																		this.collideY = false;
																		this.knockBackResist = 0f;
																		this.noTileCollide = true;
																		this.ai[2] = this.ai[2] + 0.0333333351f;
																		this.velocity.X = (16f + this.ai[2]) * this.ai[1];
																		if (this.ai[1] > 0f && base.Center.X > Main.player[this.target].Center.X + 260f || this.ai[1] < 0f && base.Center.X < Main.player[this.target].Center.X - 260f)
																		{
																			if (!Collision.SolidCollision(this.position, this.width, this.height))
																			{
																				this.ai[0] = 0f;
																				this.ai[1] = 0f;
																				this.ai[2] = 0f;
																				this.ai[3] = 0f;
																			}
																			else if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) > 800f)
																			{
																				this.ai[0] = 1f;
																				this.ai[1] = 0f;
																				this.ai[2] = 0f;
																				this.ai[3] = 0f;
																			}
																		}
																		this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
																		return;
																	}
																	if (this.ai[0] == 4f)
																	{
																		this.ai[0] = 0f;
																		this.TargetClosest(true);
																		if (Main.netMode != 1)
																		{
																			this.ai[1] = -1f;
																			this.ai[2] = -1f;
																			for (int n7 = 0; n7 < 1000; n7++)
																			{
																				int x209 = (int)Main.player[this.target].Center.X / 16;
																				int y212 = (int)Main.player[this.target].Center.Y / 16;
																				int num841 = 30 + n7 / 50;
																				int num842 = 20 + n7 / 75;
																				x209 = x209 + Main.rand.Next(-num841, num841 + 1);
																				y212 = y212 + Main.rand.Next(-num842, num842 + 1);
																				if (!WorldGen.SolidTile(x209, y212))
																				{
																					while (!WorldGen.SolidTile(x209, y212) && (double)y212 < Main.worldSurface)
																					{
																						y212++;
																					}
																					if ((new Vector2((float)(x209 * 16 + 8), (float)(y212 * 16 + 8)) - Main.player[this.target].Center).Length() < 600f)
																					{
																						this.ai[0] = 4.1f;
																						this.ai[1] = (float)x209;
																						this.ai[2] = (float)y212;
																						break;
																					}
																				}
																			}
																		}
																		this.netUpdate = true;
																		return;
																	}
																	if (this.ai[0] == 4.1f)
																	{
																		if (this.velocity.X < -2f)
																		{
																			this.direction = -1;
																		}
																		else if (this.velocity.X > 2f)
																		{
																			this.direction = 1;
																		}
																		this.spriteDirection = this.direction;
																		this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
																		this.noTileCollide = true;
																		int num843 = (int)this.ai[1];
																		int num844 = (int)this.ai[2];
																		float single565 = (float)(num843 * 16 + 8);
																		float single566 = (float)(num844 * 16 - 20);
																		Vector2 center116 = new Vector2(single565, single566);
																		center116 = center116 - base.Center;
																		float single567 = 6f + center116.Length() / 150f;
																		if (single567 > 10f)
																		{
																			single567 = 10f;
																		}
																		float single568 = 10f;
																		if (center116.Length() < 10f)
																		{
																			this.ai[0] = 4.2f;
																		}
																		center116.Normalize();
																		center116 = center116 * single567;
																		this.velocity = ((this.velocity * (single568 - 1f)) + center116) / single568;
																		return;
																	}
																	if (this.ai[0] == 4.2f)
																	{
																		this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
																		this.knockBackResist = 0f;
																		this.noTileCollide = true;
																		int num845 = (int)this.ai[1];
																		int num846 = (int)this.ai[2];
																		float single569 = (float)(num845 * 16 + 8);
																		float single570 = (float)(num846 * 16 - 20);
																		Vector2 center117 = new Vector2(single569, single570);
																		center117 = center117 - base.Center;
																		float single571 = 4f;
																		float single572 = 2f;
																		if (Main.netMode != 1 && center117.Length() < 4f)
																		{
																			int num847 = 70;
																			if (Main.expertMode)
																			{
																				num847 = (int)((double)num847 * 0.75);
																			}
																			this.ai[3] = this.ai[3] + 1f;
																			if (this.ai[3] == (float)num847)
																			{
																				NPC.NewNPC(num845 * 16 + 8, num846 * 16, 478, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																			}
																			else if (this.ai[3] == (float)(num847 * 2))
																			{
																				this.ai[0] = 0f;
																				this.ai[1] = 0f;
																				this.ai[2] = 0f;
																				this.ai[3] = 0f;
																				if (NPC.CountNPCS(478) + NPC.CountNPCS(479) < num840 && Main.rand.Next(3) != 0)
																				{
																					this.ai[0] = 4f;
																				}
																				else if (Collision.SolidCollision(this.position, this.width, this.height))
																				{
																					this.ai[0] = 1f;
																				}
																			}
																		}
																		if (center117.Length() > single571)
																		{
																			center117.Normalize();
																			center117 = center117 * single571;
																		}
																		this.velocity = ((this.velocity * (single572 - 1f)) + center117) / single572;
																		return;
																	}
																}
																else
																{
																	this.knockBackResist = 0f;
																	this.noTileCollide = true;
																	this.rotation = (this.rotation * 4f + this.velocity.X * 0.07f) / 5f;
																	Vector2 center118 = Main.player[this.target].Center - base.Center;
																	center118.Y = center118.Y - 12f;
																	float single573 = 16f;
																	float single574 = 8f;
																	center118.Normalize();
																	center118 = center118 * single573;
																	this.velocity = ((this.velocity * (single574 - 1f)) + center118) / single574;
																	if (this.velocity.X >= 0f)
																	{
																		this.direction = 1;
																	}
																	else
																	{
																		this.direction = -1;
																	}
																	this.spriteDirection = this.direction;
																	this.ai[1] = this.ai[1] + 1f;
																	if (this.ai[1] > 10f)
																	{
																		this.velocity = center118;
																		if (this.velocity.X >= 0f)
																		{
																			this.direction = 1;
																		}
																		else
																		{
																			this.direction = -1;
																		}
																		this.ai[0] = 3.2f;
																		this.ai[1] = 0f;
																		this.ai[1] = (float)this.direction;
																		return;
																	}
																}
															}
															else
															{
																this.damage = (int)((double)this.defDamage * 0.5);
																this.knockBackResist = 0f;
																if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
																{
																	this.TargetClosest(true);
																	this.ai[0] = 0f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																}
																if (Main.player[this.target].Center.X - 10f < base.Center.X)
																{
																	this.direction = -1;
																}
																else if (Main.player[this.target].Center.X + 10f > base.Center.X)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.rotation = (this.rotation * 4f + this.velocity.X * 0.1f) / 5f;
																if (this.collideX)
																{
																	this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
																	if (this.velocity.X > 4f)
																	{
																		this.velocity.X = 4f;
																	}
																	if (this.velocity.X < -4f)
																	{
																		this.velocity.X = -4f;
																	}
																}
																if (this.collideY)
																{
																	this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
																	if (this.velocity.Y > 4f)
																	{
																		this.velocity.Y = 4f;
																	}
																	if (this.velocity.Y < -4f)
																	{
																		this.velocity.Y = -4f;
																	}
																}
																Vector2 center119 = Main.player[this.target].Center - base.Center;
																center119.Y = center119.Y - 20f;
																this.ai[2] = this.ai[2] + 0.0222222228f;
																if (Main.expertMode)
																{
																	this.ai[2] = this.ai[2] + 0.0166666675f;
																}
																float single575 = 4f + this.ai[2] + center119.Length() / 120f;
																float single576 = 20f;
																center119.Normalize();
																center119 = center119 * single575;
																this.velocity = ((this.velocity * (single576 - 1f)) + center119) / single576;
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] > 240f || !Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
																{
																	this.ai[0] = 0f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																	return;
																}
															}
														}
														else
														{
															this.TargetClosest(true);
															if (base.Center.X < Main.player[this.target].Center.X - 2f)
															{
																this.direction = 1;
															}
															if (base.Center.X > Main.player[this.target].Center.X + 2f)
															{
																this.direction = -1;
															}
															this.spriteDirection = this.direction;
															this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
															if (this.collideX)
															{
																this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
																if (this.velocity.X > 4f)
																{
																	this.velocity.X = 4f;
																}
																if (this.velocity.X < -4f)
																{
																	this.velocity.X = -4f;
																}
															}
															if (this.collideY)
															{
																this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
																if (this.velocity.Y > 4f)
																{
																	this.velocity.Y = 4f;
																}
																if (this.velocity.Y < -4f)
																{
																	this.velocity.Y = -4f;
																}
															}
															Vector2 center120 = Main.player[this.target].Center - base.Center;
															center120.Y = center120.Y - 200f;
															if (center120.Length() > 800f)
															{
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
															}
															else if (center120.Length() > 80f)
															{
																float single577 = 6f;
																float single578 = 30f;
																center120.Normalize();
																center120 = center120 * single577;
																this.velocity = ((this.velocity * (single578 - 1f)) + center120) / single578;
															}
															else if (this.velocity.Length() > 2f)
															{
																NPC nPC264 = this;
																nPC264.velocity = nPC264.velocity * 0.95f;
															}
															else if (this.velocity.Length() < 1f)
															{
																NPC nPC265 = this;
																nPC265.velocity = nPC265.velocity * 1.05f;
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.justHit)
															{
																this.ai[1] = this.ai[1] + (float)Main.rand.Next(10, 30);
															}
															if (this.ai[1] >= 180f && Main.netMode != 1)
															{
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
																this.netUpdate = true;
																while (this.ai[0] == 0f)
																{
																	int num848 = Main.rand.Next(3);
																	if (num848 == 0 && Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
																	{
																		this.ai[0] = 2f;
																	}
																	else if (num848 != 1)
																	{
																		if (num848 != 2 || NPC.CountNPCS(478) + NPC.CountNPCS(479) >= num840)
																		{
																			continue;
																		}
																		this.ai[0] = 4f;
																	}
																	else
																	{
																		this.ai[0] = 3f;
																	}
																}
																return;
															}
														}
													}
													else if (this.aiStyle == 89)
													{
														if (this.velocity.Y != 0f)
														{
															this.velocity.X = this.velocity.X * 0.99f;
															NPC x211 = this;
															x211.rotation = x211.rotation + this.velocity.X * 0.04f;
														}
														else
														{
															this.velocity.X = this.velocity.X * 0.9f;
															NPC x212 = this;
															x212.rotation = x212.rotation + this.velocity.X * 0.02f;
														}
														int num849 = 900;
														if (Main.expertMode)
														{
															num849 = 600;
														}
														if (this.justHit)
														{
															this.ai[0] = this.ai[0] - (float)Main.rand.Next(10, 21);
															if (!Main.expertMode)
															{
																this.ai[0] = this.ai[0] - (float)Main.rand.Next(10, 21);
															}
														}
														this.ai[0] = this.ai[0] + 1f;
														if (this.ai[0] >= (float)num849)
														{
															this.Transform(479);
														}
														if (Main.netMode != 1 && this.velocity.Y == 0f && (double)Math.Abs(this.velocity.X) < 0.2 && (double)this.ai[0] >= (double)num849 * 0.75)
														{
															float single579 = this.ai[0] - (float)num849 * 0.75f;
															single579 = single579 / ((float)num849 * 0.25f);
															if ((float)Main.rand.Next(-10, 120) < single579 * 100f)
															{
																this.velocity.Y = this.velocity.Y - (float)Main.rand.Next(20, 40) * 0.025f;
																this.velocity.X = this.velocity.X + (float)Main.rand.Next(-20, 20) * 0.025f;
																NPC nPC266 = this;
																nPC266.velocity = nPC266.velocity * (1f + single579 * 2f);
																this.netUpdate = true;
																return;
															}
														}
													}
													else if (this.aiStyle == 90)
													{
														this.noTileCollide = false;
														this.knockBackResist = 0.4f * Main.knockBackMultiplier;
														this.noGravity = true;
														this.rotation = (this.rotation * 9f + this.velocity.X * 0.1f) / 10f;
														if (!Main.eclipse)
														{
															if (this.timeLeft > 5)
															{
																this.timeLeft = 5;
															}
															this.velocity.Y = this.velocity.Y - 0.2f;
															if (this.velocity.Y < -8f)
															{
																this.velocity.Y = -8f;
															}
															this.noTileCollide = true;
															return;
														}
														if (this.ai[0] == 0f || this.ai[0] == 1f)
														{
															for (int o7 = 0; o7 < 200; o7++)
															{
																if (o7 != this.whoAmI && Main.npc[o7].active && Main.npc[o7].type == this.type)
																{
																	Vector2 center121 = Main.npc[o7].Center - base.Center;
																	if (center121.Length() < (float)(this.width + this.height))
																	{
																		center121.Normalize();
																		center121 = center121 * -0.1f;
																		NPC nPC267 = this;
																		nPC267.velocity = nPC267.velocity + center121;
																		NPC nPC268 = Main.npc[o7];
																		nPC268.velocity = nPC268.velocity - center121;
																	}
																}
															}
														}
														if (this.target < 0 || Main.player[this.target].dead || !Main.player[this.target].active)
														{
															this.TargetClosest(true);
															Vector2 center122 = Main.player[this.target].Center - base.Center;
															if (Main.player[this.target].dead || center122.Length() > 3000f)
															{
																this.ai[0] = -1f;
															}
														}
														else
														{
															Vector2 center123 = Main.player[this.target].Center - base.Center;
															if (this.ai[0] > 1f && center123.Length() > 1000f)
															{
																this.ai[0] = 1f;
															}
														}
														if (this.ai[0] == -1f)
														{
															Vector2 vector2309 = new Vector2(0f, -8f);
															this.velocity = ((this.velocity * 9f) + vector2309) / 10f;
															this.noTileCollide = true;
															this.dontTakeDamage = true;
															return;
														}
														if (this.ai[0] != 0f)
														{
															if (this.ai[0] == 1f)
															{
																this.collideX = false;
																this.collideY = false;
																this.noTileCollide = true;
																this.knockBackResist = 0f;
																if (this.target < 0 || !Main.player[this.target].active || Main.player[this.target].dead)
																{
																	this.TargetClosest(true);
																}
																if (this.velocity.X < 0f)
																{
																	this.direction = -1;
																}
																else if (this.velocity.X > 0f)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.rotation = (this.rotation * 9f + this.velocity.X * 0.08f) / 10f;
																Vector2 center124 = Main.player[this.target].Center - base.Center;
																if (center124.Length() < 300f && !Collision.SolidCollision(this.position, this.width, this.height))
																{
																	this.ai[0] = 0f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																}
																this.ai[2] = this.ai[2] + 0.0166666675f;
																float single580 = 5.5f + this.ai[2] + center124.Length() / 150f;
																float single581 = 35f;
																center124.Normalize();
																center124 = center124 * single580;
																this.velocity = ((this.velocity * (single581 - 1f)) + center124) / single581;
																return;
															}
															if (this.ai[0] == 2f)
															{
																if (this.velocity.X < 0f)
																{
																	this.direction = -1;
																}
																else if (this.velocity.X > 0f)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																this.rotation = (this.rotation * 7f + this.velocity.X * 0.1f) / 8f;
																this.knockBackResist = 0f;
																this.noTileCollide = true;
																Vector2 center125 = Main.player[this.target].Center - base.Center;
																center125.Y = center125.Y - 8f;
																float single582 = 9f;
																float single583 = 8f;
																center125.Normalize();
																center125 = center125 * single582;
																this.velocity = ((this.velocity * (single583 - 1f)) + center125) / single583;
																if (this.velocity.X >= 0f)
																{
																	this.direction = 1;
																}
																else
																{
																	this.direction = -1;
																}
																this.spriteDirection = this.direction;
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] > 10f)
																{
																	this.velocity = center125;
																	if (this.velocity.X >= 0f)
																	{
																		this.direction = 1;
																	}
																	else
																	{
																		this.direction = -1;
																	}
																	this.ai[0] = 2.1f;
																	this.ai[1] = 0f;
																	return;
																}
															}
															else if (this.ai[0] == 2.1f)
															{
																if (this.velocity.X < 0f)
																{
																	this.direction = -1;
																}
																else if (this.velocity.X > 0f)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
																NPC nPC269 = this;
																nPC269.velocity = nPC269.velocity * 1.01f;
																this.knockBackResist = 0f;
																this.noTileCollide = true;
																this.ai[1] = this.ai[1] + 1f;
																int num850 = 45;
																if (this.ai[1] > (float)num850)
																{
																	if (!Collision.SolidCollision(this.position, this.width, this.height))
																	{
																		this.ai[0] = 0f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		return;
																	}
																	if (this.ai[1] > (float)(num850 * 2))
																	{
																		this.ai[0] = 1f;
																		this.ai[1] = 0f;
																		this.ai[2] = 0f;
																		return;
																	}
																}
															}
														}
														else
														{
															this.TargetClosest(true);
															this.spriteDirection = this.direction;
															if (this.collideX)
															{
																this.velocity.X = this.velocity.X * (-this.oldVelocity.X * 0.5f);
																if (this.velocity.X > 4f)
																{
																	this.velocity.X = 4f;
																}
																if (this.velocity.X < -4f)
																{
																	this.velocity.X = -4f;
																}
															}
															if (this.collideY)
															{
																this.velocity.Y = this.velocity.Y * (-this.oldVelocity.Y * 0.5f);
																if (this.velocity.Y > 4f)
																{
																	this.velocity.Y = 4f;
																}
																if (this.velocity.Y < -4f)
																{
																	this.velocity.Y = -4f;
																}
															}
															Vector2 center126 = Main.player[this.target].Center - base.Center;
															if (center126.Length() > 800f)
															{
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
															}
															else if (center126.Length() > 200f)
															{
																float single584 = 5.5f + center126.Length() / 100f + this.ai[1] / 15f;
																float single585 = 40f;
																center126.Normalize();
																center126 = center126 * single584;
																this.velocity = ((this.velocity * (single585 - 1f)) + center126) / single585;
															}
															else if (this.velocity.Length() > 2f)
															{
																NPC nPC270 = this;
																nPC270.velocity = nPC270.velocity * 0.95f;
															}
															else if (this.velocity.Length() < 1f)
															{
																NPC nPC271 = this;
																nPC271.velocity = nPC271.velocity * 1.05f;
															}
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 90f)
															{
																this.ai[1] = 0f;
																this.ai[0] = 2f;
																return;
															}
														}
													}
													else if (this.aiStyle == 91)
													{
														this.noGravity = true;
														this.noTileCollide = false;
														this.dontTakeDamage = false;
														if (this.justHit && Main.netMode != 1 && Main.expertMode && Main.rand.Next(6) == 0)
														{
															this.netUpdate = true;
															this.ai[0] = -1f;
															this.ai[1] = 0f;
														}
														if (this.ai[0] == -1f)
														{
															this.dontTakeDamage = true;
															this.noGravity = false;
															this.velocity.X = this.velocity.X * 0.98f;
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] >= 120f)
															{
																float single586 = 0f;
																single1 = single586;
																this.ai[3] = single586;
																float single587 = single1;
																single1 = single587;
																this.ai[2] = single587;
																float single588 = single1;
																single1 = single588;
																this.ai[1] = single588;
																this.ai[0] = single1;
																return;
															}
														}
														else if (this.ai[0] == 0f)
														{
															this.TargetClosest(true);
															if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 1f;
																return;
															}
															Vector2 center127 = Main.player[this.target].Center - base.Center;
															center127.Y = center127.Y - (float)(Main.player[this.target].height / 4);
															if (center127.Length() > 800f)
															{
																this.ai[0] = 2f;
																return;
															}
															Vector2 center128 = base.Center;
															center128.X = Main.player[this.target].Center.X;
															Vector2 center129 = center128 - base.Center;
															if (center129.Length() <= 8f || !Collision.CanHit(base.Center, 1, 1, center128, 1, 1))
															{
																center128 = base.Center;
																center128.Y = Main.player[this.target].Center.Y;
																center129 = center128 - base.Center;
																if (center129.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center128, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center128.X;
																	this.ai[2] = center128.Y;
																}
															}
															else
															{
																this.ai[0] = 3f;
																this.ai[1] = center128.X;
																this.ai[2] = center128.Y;
																Vector2 center130 = base.Center;
																center130.Y = Main.player[this.target].Center.Y;
																if (center129.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center130, 1, 1) && Collision.CanHit(center130, 1, 1, Main.player[this.target].position, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center130.X;
																	this.ai[2] = center130.Y;
																}
															}
															if (this.ai[0] == 0f)
															{
																this.localAI[0] = 0f;
																center127.Normalize();
																center127 = center127 * 0.5f;
																NPC nPC272 = this;
																nPC272.velocity = nPC272.velocity + center127;
																this.ai[0] = 4f;
																this.ai[1] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 1f)
														{
															Vector2 center131 = Main.player[this.target].Center - base.Center;
															float single589 = 2f + center131.Length() / 200f;
															int num851 = 50;
															center131.Normalize();
															center131 = center131 * single589;
															this.velocity = ((this.velocity * (float)(num851 - 1)) + center131) / (float)num851;
															if (!Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 2f)
														{
															this.noTileCollide = true;
															Vector2 center132 = Main.player[this.target].Center - base.Center;
															float single590 = center132.Length();
															float single591 = 2f;
															int num852 = 4;
															center132.Normalize();
															center132 = center132 * single591;
															this.velocity = ((this.velocity * (float)(num852 - 1)) + center132) / (float)num852;
															if (single590 < 600f && !Collision.SolidCollision(this.position, this.width, this.height))
															{
																this.ai[0] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 3f)
														{
															Vector2 vector2310 = new Vector2(this.ai[1], this.ai[2]);
															Vector2 center133 = vector2310 - base.Center;
															float single592 = center133.Length();
															float single593 = 1f;
															float single594 = 3f;
															center133.Normalize();
															center133 = center133 * single593;
															this.velocity = ((this.velocity * (single594 - 1f)) + center133) / single594;
															if (this.collideX || this.collideY)
															{
																this.ai[0] = 4f;
																this.ai[1] = 0f;
															}
															if (single592 < single593 || single592 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 0f;
																return;
															}
														}
														else if (this.ai[0] == 4f)
														{
															if (this.collideX)
															{
																this.velocity.X = this.velocity.X * -0.8f;
															}
															if (this.collideY)
															{
																this.velocity.Y = this.velocity.Y * -0.8f;
															}
															if (this.velocity.X == 0f && this.velocity.Y == 0f)
															{
																y = Main.player[this.target].Center - base.Center;
																y.Y = y.Y - (float)(Main.player[this.target].height / 4);
																y.Normalize();
																this.velocity = y * 0.1f;
															}
															float single595 = 1.5f;
															float single596 = 20f;
															y = this.velocity;
															y.Normalize();
															y = y * single595;
															this.velocity = ((this.velocity * (single596 - 1f)) + y) / single596;
															this.ai[1] = this.ai[1] + 1f;
															if (this.ai[1] > 180f)
															{
																this.ai[0] = 0f;
																this.ai[1] = 0f;
															}
															if (Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1))
															{
																this.ai[0] = 0f;
															}
															this.localAI[0] = this.localAI[0] + 1f;
															if (this.localAI[0] >= 5f && !Collision.SolidCollision(this.position - new Vector2(10f, 10f), this.width + 20, this.height + 20))
															{
																this.localAI[0] = 0f;
																Vector2 center134 = base.Center;
																center134.X = Main.player[this.target].Center.X;
																if (Collision.CanHit(base.Center, 1, 1, center134, 1, 1) && Collision.CanHit(base.Center, 1, 1, center134, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center134, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center134.X;
																	this.ai[2] = center134.Y;
																	return;
																}
																center134 = base.Center;
																center134.Y = Main.player[this.target].Center.Y;
																if (Collision.CanHit(base.Center, 1, 1, center134, 1, 1) && Collision.CanHit(Main.player[this.target].Center, 1, 1, center134, 1, 1))
																{
																	this.ai[0] = 3f;
																	this.ai[1] = center134.X;
																	this.ai[2] = center134.Y;
																	return;
																}
															}
														}
													}
													else if (this.aiStyle != 92)
													{
														if (this.aiStyle == 93)
														{
															if (this.localAI[0] == 0f)
															{
																this.localAI[0] = 1f;
																for (int p7 = 0; p7 < 4; p7++)
																{
																	int num853 = NPC.NewNPC((int)base.Center.X + p7 * 40 - 150, (int)base.Center.Y, 492, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																	Main.npc[num853].netUpdate = true;
																	Main.npc[num853].ai[0] = (float)this.whoAmI;
																	Main.npc[num853].ai[1] = (float)p7;
																	Main.npc[num853].ai[3] = (float)(60 * p7);
																	Main.npc[num853].TargetClosest(false);
																	Main.npc[num853].timeLeft = 600;
																	this.ai[p7] = (float)num853;
																}
															}
															bool flag155 = true;
															for (int q7 = 0; q7 < 4; q7++)
															{
																if (this.ai[q7] >= 0f && (!Main.npc[(int)this.ai[q7]].active || Main.npc[(int)this.ai[q7]].type != 492))
																{
																	this.ai[q7] = -1f;
																	this.netUpdate = true;
																}
																else if (this.ai[q7] >= 0f)
																{
																	flag155 = false;
																}
															}
															if (flag155)
															{
																this.life = 0;
																this.HitEffect(9999, 10);
																this.checkDead();
																return;
															}
															if (Main.netMode != 1 && Main.rand.Next(300) == 0)
															{
																Vector2 vector2311 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(this.width - 70), (Main.rand.NextFloat() - 0.5f) * 20f - (float)(this.height / 2) - 20f);
																double num854 = (double)this.rotation;
																vector24 = new Vector2();
																Vector2 center135 = vector2311.RotatedBy(num854, vector24);
																center135 = center135 + base.Center;
																int x213 = (int)center135.X;
																int y213 = (int)center135.Y;
																Random random4 = Main.rand;
																numArray = new int[] { 213, 215, 214, 212 };
																int num855 = NPC.NewNPC(x213, y213, Utils.SelectRandom<int>(random4, numArray), 0, 0f, 0f, 0f, 0f, 255);
																Main.npc[num855].velocity = new Vector2((Main.rand.NextFloat() - 0.5f) * 5f, -8.01f) + this.velocity;
																Main.npc[num855].netUpdate = true;
																Main.npc[num855].timeLeft = 600;
															}
															float single597 = this.localAI[3] + 1f;
															single1 = single597;
															this.localAI[3] = single597;
															if (single1 >= 64f)
															{
																this.localAI[3] = 0f;
															}
															this.TargetClosest(true);
															int x214 = (int)base.Center.X / 16 + Math.Sign(this.velocity.X) * 10;
															int y214 = (int)(this.position.Y + (float)this.height) / 16;
															int num856 = 0;
															if ((!Main.tile[x214, y214].nactive() || !Main.tileSolid[Main.tile[x214, y214].type] ? true : Main.tileSolidTop[Main.tile[x214, y214].type]))
															{
																while (num856 < 150 && y214 + num856 < Main.maxTilesY)
																{
																	int num857 = y214 + num856;
																	if ((!Main.tile[x214, num857].nactive() || !Main.tileSolid[Main.tile[x214, num857].type] ? true : Main.tileSolidTop[Main.tile[x214, num857].type]))
																	{
																		num856++;
																	}
																	else
																	{
																		num856--;
																		break;
																	}
																}
															}
															else
															{
																num856 = 1;
															}
															float single598 = (float)(num856 * 16);
															if (single598 < 350f)
															{
																float single599 = single598 - 350f;
																if (single599 < -4f)
																{
																	single599 = -4f;
																}
																this.velocity.Y = MathHelper.Lerp(this.velocity.Y, single599, 0.05f);
															}
															else if (single598 <= 450f)
															{
																this.velocity.Y = this.velocity.Y * 0.95f;
															}
															else
															{
																float single600 = single598 - 350f;
																if (single600 > 4f)
																{
																	single600 = 4f;
																}
																this.velocity.Y = MathHelper.Lerp(this.velocity.Y, single600, 0.05f);
															}
															if (Math.Abs(Main.player[this.target].Center.X - base.Center.X) >= 300f && (Math.Abs(this.velocity.X) < 6f || Math.Sign(this.velocity.X) != this.direction))
															{
																this.velocity.X = this.velocity.X + (float)this.direction * 0.06f;
															}
															this.rotation = this.velocity.X * 0.025f;
															this.spriteDirection = -Math.Sign(this.velocity.X);
															for (int r7 = 0; r7 < 2; r7++)
															{
																if (Main.rand.Next(2) != 0)
																{
																	Vector2 vector2312 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(this.width - 70), (Main.rand.NextFloat() - 0.5f) * 20f + (float)(this.height / 2) + 10f);
																	double num858 = (double)this.rotation;
																	vector24 = new Vector2();
																	Vector2 vector2313 = vector2312.RotatedBy(num858, vector24);
																	Dust[] dustArray10 = Main.dust;
																	Vector2 center136 = base.Center;
																	skyBlue = new Color();
																	Dust zero5 = dustArray10[Dust.NewDust(center136, 0, 0, 228, 0f, 0f, 0, skyBlue, 1f)];
																	zero5.position = base.Center + vector2313;
																	zero5.velocity = Vector2.Zero;
																	zero5.noGravity = true;
																	zero5.noLight = true;
																	zero5.fadeIn = 1.5f;
																	zero5.scale = 0.5f;
																}
															}
															return;
														}
														if (this.aiStyle == 94)
														{
															if (this.ai[2] == 1f)
															{
																this.velocity = Vector2.UnitY * this.velocity.Length();
																if (this.velocity.Y < 0.25f)
																{
																	this.velocity.Y = this.velocity.Y + 0.02f;
																}
																if (this.velocity.Y > 0.25f)
																{
																	this.velocity.Y = this.velocity.Y - 0.02f;
																}
																this.dontTakeDamage = true;
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] > 120f)
																{
																	this.Opacity = 1f - (this.ai[1] - 120f) / 60f;
																}
																int num859 = 6;
																num6 = this.type;
																if (num6 <= 493)
																{
																	if (num6 == 422)
																	{
																		num859 = 229;
																	}
																	else if (num6 == 493)
																	{
																		num859 = 135;
																	}
																}
																else if (num6 == 507)
																{
																	num859 = 242;
																}
																else if (num6 == 517)
																{
																	num859 = 127;
																}
																if (Main.rand.Next(5) == 0 && this.ai[1] < 120f)
																{
																	for (int s7 = 0; s7 < 3; s7++)
																	{
																		Dust[] dustArray11 = Main.dust;
																		Vector2 left = base.Left;
																		int num860 = this.width;
																		int num861 = this.height / 2;
																		skyBlue = new Color();
																		Dust dust80 = dustArray11[Dust.NewDust(left, num860, num861, num859, 0f, 0f, 0, skyBlue, 1f)];
																		dust80.position = base.Center + (((Vector2.UnitY.RotatedByRandom(4.1887903213501) * new Vector2((float)this.width * 1.5f, (float)this.height * 1.1f)) * 0.8f) * (0.8f + Main.rand.NextFloat() * 0.2f));
																		dust80.velocity.X = 0f;
																		dust80.velocity.Y = -Math.Abs(dust80.velocity.Y - (float)s7 + this.velocity.Y - 4f) * 3f;
																		dust80.noGravity = true;
																		dust80.fadeIn = 1f;
																		dust80.scale = 1f + Main.rand.NextFloat() + (float)s7 * 0.3f;
																	}
																}
																if (this.ai[1] < 150f)
																{
																	for (int t7 = 0; t7 < 3; t7++)
																	{
																		if (Main.rand.Next(4) == 0)
																		{
																			Dust[] dustArray12 = Main.dust;
																			Vector2 top1 = base.Top + new Vector2((float)(-this.width) * (0.33f - 0.11f * (float)t7), -20f);
																			int num862 = (int)((float)this.width * (0.66f - 0.22f * (float)t7));
																			skyBlue = new Color();
																			Dust dust81 = dustArray12[Dust.NewDust(top1, num862, 20, num859, 0f, 0f, 0, skyBlue, 1f)];
																			dust81.velocity.X = 0f;
																			dust81.velocity.Y = -Math.Abs(dust81.velocity.Y - (float)t7 + this.velocity.Y - 4f) * (1f + this.ai[1] / 180f * 0.5f);
																			dust81.noGravity = true;
																			dust81.fadeIn = 1f;
																			dust81.scale = 1f + Main.rand.NextFloat() + (float)t7 * 0.3f;
																		}
																	}
																}
																if (Main.rand.Next(5) == 0 && this.ai[1] < 150f)
																{
																	for (int u7 = 0; u7 < 3; u7++)
																	{
																		Vector2 center137 = base.Center + (((Vector2.UnitY.RotatedByRandom(4.1887903213501) * new Vector2((float)this.width, (float)this.height)) * 0.7f) * Main.rand.NextFloat());
																		float single601 = 1f + Main.rand.NextFloat() * 2f + this.ai[1] / 180f * 4f;
																		for (int v7 = 0; v7 < 6; v7++)
																		{
																			Dust[] dustArray13 = Main.dust;
																			skyBlue = new Color();
																			Dust dust82 = dustArray13[Dust.NewDust(center137, 4, 4, num859, 0f, 0f, 0, skyBlue, 1f)];
																			dust82.position = center137;
																			dust82.velocity.X = dust82.velocity.X * single601;
																			dust82.velocity.Y = -Math.Abs(dust82.velocity.Y) * single601;
																			dust82.noGravity = true;
																			dust82.fadeIn = 1f;
																			dust82.scale = 1.5f + Main.rand.NextFloat() + (float)v7 * 0.13f;
																		}
																		Random random5 = Main.rand;
																		numArray = new int[] { 1, 18 };
																		Main.PlaySound(3, center137, Utils.SelectRandom<int>(random5, numArray));
																	}
																}
																if (Main.rand.Next(3) != 0 && this.ai[1] < 150f)
																{
																	Dust[] dustArray14 = Main.dust;
																	Vector2 left1 = base.Left;
																	int num863 = this.width;
																	int num864 = this.height / 2;
																	skyBlue = new Color();
																	Dust dust83 = dustArray14[Dust.NewDust(left1, num863, num864, 241, 0f, 0f, 0, skyBlue, 1f)];
																	dust83.position = base.Center + ((Vector2.UnitY.RotatedByRandom(4.1887903213501) * new Vector2((float)(this.width / 2), (float)(this.height / 2))) * (0.8f + Main.rand.NextFloat() * 0.2f));
																	dust83.velocity.X = 0f;
																	dust83.velocity.Y = Math.Abs(dust83.velocity.Y) * 0.25f;
																}
																if (this.ai[1] % 60f == 1f)
																{
																	Main.PlaySound(4, base.Center, 22);
																}
																if (this.ai[1] >= 180f)
																{
																	this.life = 0;
																	this.HitEffect(0, 1337);
																	this.checkDead();
																}
																return;
															}
															if (this.ai[3] > 0f)
															{
																bool shieldStrengthTowerVortex = this.dontTakeDamage;
																num6 = this.type;
																if (num6 <= 493)
																{
																	if (num6 == 422)
																	{
																		shieldStrengthTowerVortex = NPC.ShieldStrengthTowerVortex != 0;
																	}
																	else if (num6 == 493)
																	{
																		shieldStrengthTowerVortex = NPC.ShieldStrengthTowerStardust != 0;
																	}
																}
																else if (num6 == 507)
																{
																	shieldStrengthTowerVortex = NPC.ShieldStrengthTowerNebula != 0;
																}
																else if (num6 == 517)
																{
																	shieldStrengthTowerVortex = NPC.ShieldStrengthTowerSolar != 0;
																}
																if (shieldStrengthTowerVortex != this.dontTakeDamage)
																{
																	Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 58);
																}
																else if (this.ai[3] == 1f)
																{
																	Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3);
																}
																this.ai[3] = this.ai[3] + 1f;
																if (this.ai[3] > 120f)
																{
																	this.ai[3] = 0f;
																}
															}
															num6 = this.type;
															if (num6 <= 493)
															{
																if (num6 == 422)
																{
																	this.dontTakeDamage = NPC.ShieldStrengthTowerVortex != 0;
																}
																else if (num6 == 493)
																{
																	this.dontTakeDamage = NPC.ShieldStrengthTowerStardust != 0;
																}
															}
															else if (num6 == 507)
															{
																this.dontTakeDamage = NPC.ShieldStrengthTowerNebula != 0;
															}
															else if (num6 == 517)
															{
																this.dontTakeDamage = NPC.ShieldStrengthTowerSolar != 0;
															}
															this.TargetClosest(false);
															if (Main.player[this.target].Distance(base.Center) > 2000f)
															{
																this.localAI[0] = this.localAI[0] + 1f;
															}
															if (this.localAI[0] < 60f || Main.netMode == 1)
															{
																this.localAI[0] = 0f;
															}
															else
															{
																this.localAI[0] = 0f;
																this.netUpdate = true;
																this.life = (int)MathHelper.Clamp((float)(this.life + 200), 0f, (float)this.lifeMax);
															}
															this.velocity = new Vector2(0f, (float)Math.Sin((double)(6.28318548f * this.ai[0] / 300f)) * 0.5f);
															this.ai[0] = this.ai[0] + 1f;
															if (this.ai[0] >= 300f)
															{
																this.ai[0] = 0f;
															}
															if (this.type == 493)
															{
																if (Main.rand.Next(5) == 0)
																{
																	Dust[] dustArray15 = Main.dust;
																	Vector2 left2 = base.Left;
																	int num865 = this.width;
																	int num866 = this.height / 2;
																	skyBlue = new Color();
																	Dust dust84 = dustArray15[Dust.NewDust(left2, num865, num866, 241, 0f, 0f, 0, skyBlue, 1f)];
																	dust84.position = base.Center + ((Vector2.UnitY.RotatedByRandom(2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2))) * (0.8f + Main.rand.NextFloat() * 0.2f));
																	dust84.velocity.X = 0f;
																	dust84.velocity.Y = Math.Abs(dust84.velocity.Y) * 0.25f;
																}
																for (int w7 = 0; w7 < 3; w7++)
																{
																	if (Main.rand.Next(5) == 0)
																	{
																		Dust[] dustArray16 = Main.dust;
																		Vector2 top2 = base.Top + new Vector2((float)(-this.width) * (0.33f - 0.11f * (float)w7), -20f);
																		int num867 = (int)((float)this.width * (0.66f - 0.22f * (float)w7));
																		skyBlue = new Color();
																		Dust dust85 = dustArray16[Dust.NewDust(top2, num867, 20, 135, 0f, 0f, 0, skyBlue, 1f)];
																		dust85.velocity.X = 0f;
																		dust85.velocity.Y = -Math.Abs(dust85.velocity.Y - (float)w7 + this.velocity.Y - 4f) * 1f;
																		dust85.noGravity = true;
																		dust85.fadeIn = 1f;
																		dust85.scale = 1f + Main.rand.NextFloat() + (float)w7 * 0.3f;
																	}
																}
																if (this.ai[1] > 0f)
																{
																	this.ai[1] = this.ai[1] - 1f;
																}
																if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 400f)
																{
																	List<int> nums8 = new List<int>();
																	if (NPC.CountNPCS(405) + NPC.CountNPCS(406) < 2)
																	{
																		nums8.Add(405);
																	}
																	if (NPC.CountNPCS(402) < 2)
																	{
																		nums8.Add(402);
																	}
																	if (NPC.CountNPCS(407) < 1)
																	{
																		nums8.Add(407);
																	}
																	if (nums8.Count <= 0)
																	{
																		this.ai[1] = 30f;
																	}
																	else
																	{
																		int num868 = Utils.SelectRandom<int>(Main.rand, nums8.ToArray());
																		this.ai[1] = (float)(30 * Main.rand.Next(5, 16));
																		int num869 = Main.rand.Next(3, 6);
																		int num870 = Main.rand.Next(0, 4);
																		int num871 = 0;
																		List<Tuple<Vector2, int, int>> tuples = new List<Tuple<Vector2, int, int>>();
																		List<Vector2> vector2s = new List<Vector2>();
																		tuples.Add(Tuple.Create<Vector2, int, int>(base.Top - (Vector2.UnitY * 120f), num869, 0));
																		int num872 = 0;
																		int count4 = tuples.Count;
																		while (tuples.Count > 0)
																		{
																			Vector2 item1 = tuples[0].Item1;
																			int num873 = 1;
																			int num874 = 1;
																			if (num872 > 0 && num870 > 0 && (Main.rand.Next(3) != 0 || num872 == 1))
																			{
																				num874 = Main.rand.Next(Math.Max(1, tuples[0].Item2));
																				num873++;
																				num870--;
																			}
																			for (int x710 = 0; x710 < num873; x710++)
																			{
																				int item3 = tuples[0].Item3;
																				if (num872 == 0)
																				{
																					Random random6 = Main.rand;
																					numArray = new int[] { -1, 1 };
																					item3 = Utils.SelectRandom<int>(random6, numArray);
																				}
																				else if (x710 == 1)
																				{
																					item3 = item3 * -1;
																				}
																				float single602 = (num872 % 2 == 0 ? 0f : 3.14159274f) + (0.5f - Main.rand.NextFloat()) * 0.7853982f + (float)item3 * 0.7853982f * (float)(num872 % 2 == 0).ToDirectionInt();
																				float single603 = 100f + 50f * Main.rand.NextFloat();
																				int item2 = tuples[0].Item2;
																				if (x710 != 0)
																				{
																					item2 = num874;
																				}
																				if (num872 == 0)
																				{
																					single602 = (0.5f - Main.rand.NextFloat()) * 0.7853982f;
																					single603 = 100f + 100f * Main.rand.NextFloat();
																				}
																				Vector2 unitY20 = -Vector2.UnitY;
																				double num875 = (double)single602;
																				vector24 = new Vector2();
																				Vector2 zero6 = unitY20.RotatedBy(num875, vector24) * single603;
																				if (item2 - 1 < 0)
																				{
																					zero6 = Vector2.Zero;
																				}
																				num871 = Projectile.NewProjectile(item1.X, item1.Y, zero6.X, zero6.Y, 540, 0, 0f, Main.myPlayer, (float)(-num872) * 10f, 0.5f + Main.rand.NextFloat() * 0.5f);
																				vector2s.Add(item1 + zero6);
																				if (num872 < num869 && tuples[0].Item2 > 0)
																				{
																					tuples.Add(Tuple.Create<Vector2, int, int>(item1 + zero6, item2 - 1, item3));
																				}
																			}
																			tuples.Remove(tuples[0]);
																			int num876 = count4 - 1;
																			count4 = num876;
																			if (num876 != 0)
																			{
																				continue;
																			}
																			count4 = tuples.Count;
																			num872++;
																		}
																		Main.projectile[num871].localAI[0] = (float)num868;
																	}
																}
															}
															if (this.type == 507)
															{
																if (Main.rand.Next(5) == 0)
																{
																	Dust[] dustArray17 = Main.dust;
																	Vector2 left3 = base.Left;
																	int num877 = this.width;
																	int num878 = this.height / 2;
																	skyBlue = new Color();
																	Dust dust86 = dustArray17[Dust.NewDust(left3, num877, num878, 241, 0f, 0f, 0, skyBlue, 1f)];
																	dust86.position = base.Center + ((Vector2.UnitY.RotatedByRandom(2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2))) * (0.8f + Main.rand.NextFloat() * 0.2f));
																	dust86.velocity.X = 0f;
																	dust86.velocity.Y = Math.Abs(dust86.velocity.Y) * 0.25f;
																}
																for (int y710 = 0; y710 < 3; y710++)
																{
																	if (Main.rand.Next(5) == 0)
																	{
																		Dust[] dustArray18 = Main.dust;
																		Vector2 top3 = base.Top + new Vector2((float)(-this.width) * (0.33f - 0.11f * (float)y710), -20f);
																		int num879 = (int)((float)this.width * (0.66f - 0.22f * (float)y710));
																		skyBlue = new Color();
																		Dust black = dustArray18[Dust.NewDust(top3, num879, 20, 242, 0f, 0f, 0, skyBlue, 1f)];
																		black.velocity.X = 0f;
																		black.velocity.Y = -Math.Abs(black.velocity.Y - (float)y710 + this.velocity.Y - 4f) * 1f;
																		black.noGravity = true;
																		black.fadeIn = 1f;
																		black.color = Color.Black;
																		black.scale = 1f + Main.rand.NextFloat() + (float)y710 * 0.3f;
																	}
																}
															}
															if (this.type == 422)
															{
																if (Main.rand.Next(5) == 0)
																{
																	Dust[] dustArray19 = Main.dust;
																	Vector2 left4 = base.Left;
																	int num880 = this.width;
																	int num881 = this.height / 2;
																	skyBlue = new Color();
																	Dust dust87 = dustArray19[Dust.NewDust(left4, num880, num881, 241, 0f, 0f, 0, skyBlue, 1f)];
																	dust87.position = base.Center + ((Vector2.UnitY.RotatedByRandom(2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2))) * (0.8f + Main.rand.NextFloat() * 0.2f));
																	dust87.velocity.X = 0f;
																	dust87.velocity.Y = Math.Abs(dust87.velocity.Y) * 0.25f;
																}
																for (int a7 = 0; a7 < 3; a7++)
																{
																	if (Main.rand.Next(5) == 0)
																	{
																		Dust[] dustArray20 = Main.dust;
																		Vector2 top4 = base.Top + new Vector2((float)(-this.width) * (0.33f - 0.11f * (float)a7), -20f);
																		int num882 = (int)((float)this.width * (0.66f - 0.22f * (float)a7));
																		skyBlue = new Color();
																		Dust black1 = dustArray20[Dust.NewDust(top4, num882, 20, 229, 0f, 0f, 0, skyBlue, 1f)];
																		black1.velocity.X = 0f;
																		black1.velocity.Y = -Math.Abs(black1.velocity.Y - (float)a7 + this.velocity.Y - 4f) * 1f;
																		black1.noGravity = true;
																		black1.fadeIn = 1f;
																		black1.color = Color.Black;
																		black1.scale = 1f + Main.rand.NextFloat() + (float)a7 * 0.3f;
																	}
																}
																if (this.ai[1] > 0f)
																{
																	this.ai[1] = this.ai[1] - 1f;
																}
																if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 400f && NPC.CountNPCS(427) + NPC.CountNPCS(426) * 3 + NPC.CountNPCS(428) < 20)
																{
																	this.ai[1] = (float)(420 + Main.rand.Next(360));
																	Point point6 = base.Center.ToTileCoordinates();
																	Point tileCoordinates7 = Main.player[this.target].Center.ToTileCoordinates();
																	Vector2 center138 = Main.player[this.target].Center - base.Center;
																	int num883 = 20;
																	int num884 = 3;
																	int num885 = 8;
																	int num886 = 2;
																	int num887 = 0;
																	bool flag156 = false;
																	if (center138.Length() > 2000f)
																	{
																		flag156 = true;
																	}
																	do
																	{
																	Label1:
																		if (flag156 || num887 >= 100)
																		{
																			goto Label0;
																		}
																		num887++;
																		num4 = Main.rand.Next(tileCoordinates7.X - num883, tileCoordinates7.X + num883 + 1);
																		num5 = Main.rand.Next(tileCoordinates7.Y - num883, tileCoordinates7.Y + num883 + 1);
																		if ((num5 < tileCoordinates7.Y - num885 || num5 > tileCoordinates7.Y + num885 || num4 < tileCoordinates7.X - num885 || num4 > tileCoordinates7.X + num885) && (num5 < point6.Y - num884 || num5 > point6.Y + num884 || num4 < point6.X - num884 || num4 > point6.X + num884) && !Main.tile[num4, num5].nactive())
																		{
																			flag1 = true;
																			if (flag1 && Main.tile[num4, num5].lava())
																			{
																				flag1 = false;
																			}
																			if (flag1 && Collision.SolidTiles(num4 - num886, num4 + num886, num5 - num886, num5 + num886))
																			{
																				flag1 = false;
																			}
																			if (!flag1 || Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
																			{
																				continue;
																			}
																			flag1 = false;
																		}
																		else
																		{
																			goto Label1;
																		}
																	}
																	while (!flag1);
																	Projectile.NewProjectile((float)(num4 * 16 + 8), (float)(num5 * 16 + 8), 0f, 0f, 579, 0, 0f, Main.myPlayer, 0f, 0f);
																	flag156 = true;
																}
															}
														Label0:
															if (this.type == 517)
															{
																if (Main.rand.Next(5) == 0)
																{
																	Dust[] dustArray21 = Main.dust;
																	Vector2 left5 = base.Left;
																	int num888 = this.width;
																	int num889 = this.height / 2;
																	skyBlue = new Color();
																	Dust dust88 = dustArray21[Dust.NewDust(left5, num888, num889, 241, 0f, 0f, 0, skyBlue, 1f)];
																	dust88.position = base.Center + ((Vector2.UnitY.RotatedByRandom(2.09439516067505) * new Vector2((float)(this.width / 2), (float)(this.height / 2))) * (0.8f + Main.rand.NextFloat() * 0.2f));
																	dust88.velocity.X = 0f;
																	dust88.velocity.Y = Math.Abs(dust88.velocity.Y) * 0.25f;
																}
																for (int b7 = 0; b7 < 3; b7++)
																{
																	if (Main.rand.Next(5) == 0)
																	{
																		Dust[] dustArray22 = Main.dust;
																		Vector2 top5 = base.Top + new Vector2((float)(-this.width) * (0.33f - 0.11f * (float)b7), -20f);
																		int num890 = (int)((float)this.width * (0.66f - 0.22f * (float)b7));
																		skyBlue = new Color();
																		Dust dust89 = dustArray22[Dust.NewDust(top5, num890, 20, 6, 0f, 0f, 0, skyBlue, 1f)];
																		dust89.velocity.X = 0f;
																		dust89.velocity.Y = -Math.Abs(dust89.velocity.Y - (float)b7 + this.velocity.Y - 4f) * 1f;
																		dust89.noGravity = true;
																		dust89.fadeIn = 1f;
																		dust89.scale = 1f + Main.rand.NextFloat() + (float)b7 * 0.3f;
																	}
																}
																if (this.ai[1] > 0f)
																{
																	this.ai[1] = this.ai[1] - 1f;
																}
																if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[this.target].active && !Main.player[this.target].dead && base.Distance(Main.player[this.target].Center) < 1080f && Main.player[this.target].position.Y - this.position.Y < 700f)
																{
																	Vector2 top6 = (base.Top + new Vector2((float)(-this.width) * 0.33f, -20f)) + (new Vector2((float)this.width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0f, 1f));
																	Vector2 vector2314 = -Vector2.UnitY.RotatedByRandom(0.785398185253143) * (7f + Main.rand.NextFloat() * 5f);
																	int num891 = NPC.NewNPC((int)top6.X, (int)top6.Y, 519, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																	Main.npc[num891].velocity = vector2314;
																	Main.npc[num891].netUpdate = true;
																	this.ai[1] = 60f;
																	return;
																}
															}
														}
														else if (this.aiStyle == 95)
														{
															float single604 = 300f;
															if (this.velocity.Length() > 4f)
															{
																NPC nPC273 = this;
																nPC273.velocity = nPC273.velocity * 0.95f;
															}
															NPC nPC274 = this;
															nPC274.velocity = nPC274.velocity * 0.99f;
															this.ai[0] = this.ai[0] + 1f;
															this.scale = 1f + 0.3f * (this.ai[0] / single604);
															if (this.ai[0] >= single604)
															{
																if (Main.netMode != 1)
																{
																	this.Transform(405);
																}
																return;
															}
															NPC x215 = this;
															x215.rotation = x215.rotation + this.velocity.X * 0.1f;
															if (this.ai[0] > 20f)
															{
																Vector2 center139 = base.Center;
																int num892 = (int)(this.ai[0] / (single604 / 2f));
																for (int c7 = 0; c7 < num892 + 1; c7++)
																{
																	if (Main.rand.Next(2) != 0)
																	{
																		int num893 = 226;
																		float single605 = 0.4f;
																		if (c7 % 2 == 1)
																		{
																			num893 = 226;
																			single605 = 0.65f;
																		}
																		Vector2 rotationVector26 = center139 + (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (12f - (float)(num892 * 2)));
																		Vector2 one = rotationVector26 - (Vector2.One * 12f);
																		float x216 = this.velocity.X / 2f;
																		float y215 = this.velocity.Y / 2f;
																		skyBlue = new Color();
																		int num894 = Dust.NewDust(one, 24, 24, num893, x216, y215, 0, skyBlue, 1f);
																		Dust dust90 = Main.dust[num894];
																		dust90.position = dust90.position - new Vector2(2f);
																		Main.dust[num894].velocity = ((Vector2.Normalize(center139 - rotationVector26) * 1.5f) * (10f - (float)num892 * 2f)) / 10f;
																		Main.dust[num894].noGravity = true;
																		Main.dust[num894].scale = single605;
																		Main.dust[num894].customData = this;
																	}
																}
																return;
															}
														}
														else if (this.aiStyle == 96)
														{
															float single606 = 5f;
															float single607 = 0.15f;
															this.TargetClosest(true);
															Vector2 center140 = (Main.player[this.target].Center - base.Center) + new Vector2(0f, -250f);
															float single608 = center140.Length();
															if (single608 < 20f)
															{
																center140 = this.velocity;
															}
															else if (single608 < 40f)
															{
																center140.Normalize();
																center140 = center140 * (single606 * 0.35f);
															}
															else if (single608 >= 80f)
															{
																center140.Normalize();
																center140 = center140 * single606;
															}
															else
															{
																center140.Normalize();
																center140 = center140 * (single606 * 0.65f);
															}
															this.SimpleFlyMovement(center140, single607);
															this.rotation = this.velocity.X * 0.1f;
															float single609 = this.ai[0] + 1f;
															single1 = single609;
															this.ai[0] = single609;
															if (single1 >= 70f)
															{
																this.ai[0] = 0f;
																if (Main.netMode != 1)
																{
																	Vector2 zero7 = Vector2.Zero;
																	while (Math.Abs(zero7.X) < 1.5f)
																	{
																		zero7 = Vector2.UnitY.RotatedByRandom(1.57079637050629) * new Vector2(5f, 3f);
																	}
																	Projectile.NewProjectile(base.Center.X, base.Center.Y, zero7.X, zero7.Y, 539, 60, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
																	return;
																}
															}
														}
														else if (this.aiStyle == 97)
														{
															float single610 = 7f;
															int num895 = 480;
															if (this.localAI[2] < 180f)
															{
																this.localAI[2] = this.localAI[2] + 1f;
																if (Main.netMode != 1 && this.localAI[2] % 60f == 0f)
																{
																	Vector2 zero8 = Vector2.Zero;
																	while (Math.Abs(zero8.X) < 1.5f)
																	{
																		zero8 = Vector2.UnitY.RotatedByRandom(1.57079637050629) * new Vector2(4f, 2.5f);
																	}
																	Projectile.NewProjectile(base.Center.X, base.Center.Y, zero8.X, zero8.Y, 574, 0, 0f, Main.myPlayer, 0f, (float)this.whoAmI);
																}
															}
															if (this.localAI[1] == 1f)
															{
																this.localAI[1] = 0f;
																if (Main.rand.Next(4) == 0)
																{
																	this.ai[0] = (float)num895;
																}
															}
															this.TargetClosest(true);
															this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
															this.spriteDirection = -this.direction;
															Vector2 center141 = base.Center + new Vector2((float)(this.direction * 20), 6f);
															Vector2 center142 = Main.player[this.target].Center - center141;
															bool flag157 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
															bool flag158 = false;
															if (center142.Length() > 400f || !flag157)
															{
																Vector2 vector2315 = center142;
																if (vector2315.Length() > single610)
																{
																	vector2315.Normalize();
																	vector2315 = vector2315 * single610;
																}
																int num896 = 30;
																this.velocity = ((this.velocity * (float)(num896 - 1)) + vector2315) / (float)num896;
															}
															else
															{
																NPC nPC275 = this;
																nPC275.velocity = nPC275.velocity * 0.98f;
																flag158 = true;
															}
															if (this.ai[2] != 0f && this.ai[3] != 0f)
															{
																Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
																for (int d7 = 0; d7 < 20; d7++)
																{
																	Vector2 vector2316 = this.position;
																	int num897 = this.width;
																	int num898 = this.height;
																	skyBlue = new Color();
																	int num899 = Dust.NewDust(vector2316, num897, num898, 242, 0f, 0f, 0, skyBlue, 1f);
																	Dust dust91 = Main.dust[num899];
																	dust91.velocity = dust91.velocity * 3f;
																	Main.dust[num899].noGravity = true;
																	Main.dust[num899].scale = 2.5f;
																}
																base.Center = new Vector2(this.ai[2] * 16f, this.ai[3] * 16f);
																this.velocity = Vector2.Zero;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
																Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, 8);
																for (int e7 = 0; e7 < 20; e7++)
																{
																	Vector2 vector2317 = this.position;
																	int num900 = this.width;
																	int num901 = this.height;
																	skyBlue = new Color();
																	int num902 = Dust.NewDust(vector2317, num900, num901, 242, 0f, 0f, 0, skyBlue, 1f);
																	Dust dust92 = Main.dust[num902];
																	dust92.velocity = dust92.velocity * 3f;
																	Main.dust[num902].noGravity = true;
																	Main.dust[num902].scale = 2.5f;
																}
															}
															this.ai[0] = this.ai[0] + 1f;
															if (this.ai[0] >= (float)num895 && Main.netMode != 1)
															{
																this.ai[0] = 0f;
																Point point7 = base.Center.ToTileCoordinates();
																Point tileCoordinates8 = Main.player[this.target].Center.ToTileCoordinates();
																int num903 = 20;
																int num904 = 3;
																int num905 = 10;
																int num906 = 1;
																int num907 = 0;
																bool flag159 = false;
																if (center142.Length() > 2000f)
																{
																	flag159 = true;
																}
																while (!flag159 && num907 < 100)
																{
																	num907++;
																	int num908 = Main.rand.Next(tileCoordinates8.X - num903, tileCoordinates8.X + num903 + 1);
																	int num909 = Main.rand.Next(tileCoordinates8.Y - num903, tileCoordinates8.Y + num903 + 1);
																	if (num909 >= tileCoordinates8.Y - num905 && num909 <= tileCoordinates8.Y + num905 && num908 >= tileCoordinates8.X - num905 && num908 <= tileCoordinates8.X + num905 || num909 >= point7.Y - num904 && num909 <= point7.Y + num904 && num908 >= point7.X - num904 && num908 <= point7.X + num904 || Main.tile[num908, num909].nactive())
																	{
																		continue;
																	}
																	bool flag160 = true;
																	if (flag160 && Main.tile[num908, num909].lava())
																	{
																		flag160 = false;
																	}
																	if (flag160 && Collision.SolidTiles(num908 - num906, num908 + num906, num909 - num906, num909 + num906))
																	{
																		flag160 = false;
																	}
																	if (!flag160)
																	{
																		continue;
																	}
																	this.ai[1] = 20f;
																	this.ai[2] = (float)num908;
																	this.ai[3] = (float)num909;
																	flag159 = true;
																	break;
																}
																this.netUpdate = true;
															}
															if (flag158 && this.velocity.Length() < 2f && Main.netMode != 1)
															{
																this.localAI[0] = this.localAI[0] + 1f;
																if (this.localAI[0] >= 13f)
																{
																	return;
																}
															}
														}
														else if (this.aiStyle == 98)
														{
															this.noTileCollide = false;
															if (this.ai[0] == 0f)
															{
																this.TargetClosest(true);
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																this.ai[2] = 0f;
																this.ai[3] = 0f;
															}
															bool flag161 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].position, 1, 1);
															bool flag162 = true;
															if (!flag161 || Main.player[this.target].dead)
															{
																flag162 = false;
															}
															else
															{
																int x217 = (int)(Main.player[this.target].Center.X / 16f);
																int y216 = (int)(Main.player[this.target].Center.Y / 16f);
																for (int f7 = x217 - 2; f7 <= x217 + 2; f7++)
																{
																	for (int g7 = y216; g7 <= y216 + 25; g7++)
																	{
																		if (WorldGen.SolidTile2(f7, g7))
																		{
																			flag162 = false;
																		}
																	}
																}
															}
															if (this.ai[0] < 0f)
															{
																Vector2 center143 = Main.player[this.target].Center - base.Center;
																float single611 = center143.Length();
																if (this.ai[0] == -1f)
																{
																	center143.Normalize();
																	if (center143.HasNaNs())
																	{
																		center143 = new Vector2((float)this.direction, 0f);
																	}
																	float single612 = 8f + single611 / 100f;
																	float single613 = 12f;
																	if (Main.player[this.target].velocity.Length() > single613)
																	{
																		single613 = Main.player[this.target].velocity.Length();
																	}
																	if (single612 > single613)
																	{
																		single612 = single613;
																	}
																	center143 = center143 * single612;
																	float single614 = 10f;
																	this.velocity = ((this.velocity * (single614 - 1f)) + center143) / single614;
																	for (int h7 = 0; h7 < 200; h7++)
																	{
																		if (Main.npc[h7].active && Main.npc[h7].type == this.type && h7 != this.whoAmI)
																		{
																			Vector2 center144 = Main.npc[h7].Center - base.Center;
																			if (center144.Length() < 40f)
																			{
																				center144.Normalize();
																				center144 = center144 * 1f;
																				NPC nPC276 = this;
																				nPC276.velocity = nPC276.velocity - center144;
																			}
																		}
																	}
																	NPC x218 = this;
																	x218.rotation = x218.rotation + this.velocity.X * 0.03f;
																	if ((double)this.rotation < -6.2831)
																	{
																		NPC nPC277 = this;
																		nPC277.rotation = nPC277.rotation + 6.2831f;
																	}
																	if ((double)this.rotation > 6.2831)
																	{
																		NPC nPC278 = this;
																		nPC278.rotation = nPC278.rotation - 6.2831f;
																	}
																	if (this.velocity.X > 0f)
																	{
																		this.direction = 1;
																	}
																	else if (this.velocity.X < 0f)
																	{
																		this.direction = -1;
																	}
																	this.spriteDirection = this.direction;
																}
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] >= 60f && !flag162)
																{
																	this.ai[0] = 0f;
																}
															}
															else if (this.ai[0] == 2f)
															{
																NPC nPC279 = this;
																nPC279.rotation = nPC279.rotation * 0.92f;
																if ((double)Math.Abs(this.rotation) < 0.02)
																{
																	this.rotation = 0f;
																}
																if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) >= (float)300 || !Collision.CanHit(base.Center, 1, 1, Main.player[this.target].position, 1, 1))
																{
																	this.ai[0] = 0f;
																}
																else
																{
																	this.velocity.X = this.velocity.X * 0.96f;
																	this.velocity.Y = this.velocity.Y * 0.96f;
																	this.ai[1] = this.ai[1] + 1f;
																	if (this.ai[1] == 20f)
																	{
																		if (Main.netMode != 1)
																		{
																			NPC.NewNPC((int)base.Center.X, (int)base.Center.Y + 26, 516, 0, 0f, 0f, 0f, 0f, this.target);
																		}
																	}
																	else if (this.ai[1] >= 30f)
																	{
																		this.ai[1] = 0f;
																	}
																	for (int i8 = 0; i8 < 200; i8++)
																	{
																		if (Main.npc[i8].active && Main.npc[i8].type == this.type && i8 != this.whoAmI)
																		{
																			Vector2 center145 = Main.npc[i8].Center - base.Center;
																			if (center145.Length() < 100f)
																			{
																				center145.Normalize();
																				center145 = center145 * 0.1f;
																				NPC nPC280 = this;
																				nPC280.velocity = nPC280.velocity - center145;
																			}
																		}
																	}
																}
																if (Main.player[this.target].Center.X < base.Center.X)
																{
																	this.direction = -1;
																}
																else if (Main.player[this.target].Center.X > base.Center.X)
																{
																	this.direction = 1;
																}
																this.spriteDirection = this.direction;
															}
															if (this.ai[0] == 1f)
															{
																NPC nPC281 = this;
																nPC281.rotation = nPC281.rotation * 0.92f;
																if ((double)Math.Abs(this.rotation) < 0.02)
																{
																	this.rotation = 0f;
																}
																if (flag162)
																{
																	this.ai[0] = -1f;
																	this.ai[1] = 0f;
																	this.ai[2] = 0f;
																	this.ai[3] = 0f;
																}
																int num910 = 300;
																for (int j8 = 0; j8 < 200; j8++)
																{
																	if (Main.npc[j8].active && Main.npc[j8].type == this.type && j8 != this.whoAmI)
																	{
																		Vector2 center146 = Main.npc[j8].Center - base.Center;
																		if (center146.Length() < 50f)
																		{
																			center146.Normalize();
																			center146 = center146 * 0.1f;
																			NPC nPC282 = this;
																			nPC282.velocity = nPC282.velocity - center146;
																			this.velocity.X = this.velocity.X - center146.X * 1f;
																		}
																	}
																}
																int num911 = 800;
																float single615 = Math.Abs(base.Center.X - Main.player[this.target].Center.X);
																if (single615 >= (float)num910 || !flag161)
																{
																	if (this.collideX)
																	{
																		this.velocity.X = this.velocity.X * -0.5f;
																		this.ai[1] = 60f;
																		NPC nPC283 = this;
																		nPC283.direction = nPC283.direction * -1;
																	}
																	if (this.ai[1] > 0f)
																	{
																		this.ai[1] = this.ai[1] - 1f;
																	}
																	else if (flag161)
																	{
																		if (base.Center.X <= Main.player[this.target].Center.X)
																		{
																			this.direction = 1;
																		}
																		else
																		{
																			this.direction = -1;
																		}
																	}
																	else if (single615 > (float)num911)
																	{
																		if (base.Center.X <= Main.player[this.target].Center.X)
																		{
																			this.direction = 1;
																		}
																		else
																		{
																			this.direction = -1;
																		}
																	}
																	float single616 = 2f;
																	float single617 = 0.1f;
																	if (this.velocity.X <= single616 && this.velocity.X >= -single616)
																	{
																		this.velocity.X = this.velocity.X + (float)this.direction * single617;
																	}
																	else if (Math.Abs(this.velocity.X) >= single616 + single617 * 2f)
																	{
																		this.velocity.X = this.velocity.X * 0.99f;
																	}
																	else if (this.velocity.X >= 0f)
																	{
																		this.velocity.X = single616;
																	}
																	else
																	{
																		this.velocity.X = -single616;
																	}
																	this.spriteDirection = this.direction;
																}
																else
																{
																	this.ai[0] = 2f;
																	this.ai[1] = 0f;
																}
																if (this.collideY)
																{
																	this.ai[2] = 60f;
																	NPC nPC284 = this;
																	nPC284.directionY = nPC284.directionY * -1;
																	this.velocity.Y = this.velocity.Y * -0.5f;
																}
																if (this.ai[2] <= 0f)
																{
																	int y217 = (int)(base.Center.Y / 16f);
																	int x219 = (int)((base.Center.X - 8f) / 16f);
																	int num912 = 30;
																	int num913 = 15;
																	int num914 = 0;
																	for (int k8 = y217; k8 < y217 + num912; k8++)
																	{
																		int num915 = x219;
																		while (num915 <= x219 + 1)
																		{
																			if (WorldGen.SolidTile(num915, k8) || Main.tile[num915, k8].liquid > 0)
																			{
																				num914 = k8 - y217;
																				break;
																			}
																			else
																			{
																				num915++;
																			}
																		}
																		if (num914 != 0)
																		{
																			break;
																		}
																	}
																	if (num914 == 0)
																	{
																		this.directionY = 1;
																	}
																	else if (num914 < num913)
																	{
																		this.directionY = -1;
																	}
																}
																else
																{
																	this.ai[2] = this.ai[2] - 1f;
																}
																float single618 = 2f;
																float single619 = 0.1f;
																if (this.velocity.Y <= single618 && this.velocity.Y >= -single618)
																{
																	this.velocity.Y = this.velocity.Y + (float)this.directionY * single619;
																	return;
																}
																if (Math.Abs(this.velocity.Y) >= single618 + single619 * 2f)
																{
																	this.velocity.Y = this.velocity.Y * 0.99f;
																	return;
																}
																if (this.velocity.Y >= 0f)
																{
																	this.velocity.Y = single618;
																	return;
																}
																this.velocity.Y = -single618;
																return;
															}
														}
														else if (this.aiStyle == 99)
														{
															if (this.velocity.Y == 0f && this.ai[0] == 0f)
															{
																this.ai[0] = 1f;
																this.ai[1] = 0f;
																this.netUpdate = true;
																return;
															}
															if (this.ai[0] == 1f)
															{
																this.velocity = Vector2.Zero;
																this.position = this.oldPosition;
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] >= 5f)
																{
																	this.HitEffect(0, 9999);
																	this.active = false;
																}
																return;
															}
															this.velocity.Y = this.velocity.Y + 0.2f;
															if (this.velocity.Y > 12f)
															{
																this.velocity.Y = 12f;
															}
															this.rotation = this.velocity.ToRotation() - 1.57079637f;
															if (this.type == 519)
															{
																if (this.localAI[0] == 0f)
																{
																	this.localAI[0] = 1f;
																	for (int l8 = 0; l8 < 13; l8++)
																	{
																		Vector2 vector2318 = this.position;
																		int num916 = this.width;
																		int num917 = this.height;
																		skyBlue = new Color();
																		int num918 = Dust.NewDust(vector2318, num916, num917, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 2.5f);
																		Main.dust[num918].noGravity = true;
																		Main.dust[num918].fadeIn = 1f;
																		Dust dust93 = Main.dust[num918];
																		dust93.velocity = dust93.velocity * 4f;
																		Main.dust[num918].noLight = true;
																	}
																}
																for (int m8 = 0; m8 < 3; m8++)
																{
																	if (Main.rand.Next(3) < 2)
																	{
																		Vector2 vector2319 = this.position;
																		int num919 = this.width;
																		int num920 = this.height;
																		skyBlue = new Color();
																		int num921 = Dust.NewDust(vector2319, num919, num920, 6, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 2.5f);
																		Main.dust[num921].noGravity = true;
																		Dust dust94 = Main.dust[num921];
																		dust94.velocity = dust94.velocity * 0.2f;
																		Main.dust[num921].fadeIn = 1f;
																		if (Main.rand.Next(6) != 0)
																		{
																			Main.dust[num921].velocity = base.DirectionFrom(Main.dust[num921].position) * Main.dust[num921].velocity.Length();
																		}
																		else
																		{
																			Dust dust95 = Main.dust[num921];
																			dust95.velocity = dust95.velocity * 30f;
																			Main.dust[num921].noGravity = false;
																			Main.dust[num921].noLight = true;
																		}
																	}
																}
																return;
															}
														}
														else if (this.aiStyle == 100)
														{
															if (this.velocity.Y == 0f && this.ai[0] >= 0f)
															{
																this.ai[0] = -1f;
																this.ai[1] = 0f;
																this.netUpdate = true;
																return;
															}
															if (this.ai[0] == -1f)
															{
																this.velocity = Vector2.Zero;
																this.position = this.oldPosition;
																this.ai[1] = this.ai[1] + 1f;
																if (this.ai[1] >= 5f)
																{
																	this.HitEffect(0, 9999);
																	this.active = false;
																}
																return;
															}
															this.rotation = this.velocity.ToRotation() - 1.57079637f;
															if (this.type == 522)
															{
																if (this.localAI[0] == 0f)
																{
																	this.localAI[0] = 1f;
																	this.velocity.X = this.ai[2];
																	this.velocity.Y = this.ai[3];
																	for (int n8 = 0; n8 < 13; n8++)
																	{
																		Vector2 vector2320 = this.position;
																		int num922 = this.width;
																		int num923 = this.height;
																		skyBlue = new Color();
																		int num924 = Dust.NewDust(vector2320, num922, num923, 261, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 2.5f);
																		Main.dust[num924].noGravity = true;
																		Main.dust[num924].fadeIn = 1f;
																		Dust dust96 = Main.dust[num924];
																		dust96.velocity = dust96.velocity * 4f;
																		Main.dust[num924].noLight = true;
																	}
																}
																for (int o8 = 0; o8 < 2; o8++)
																{
																	if (Main.rand.Next(10 - (int)Math.Min(7f, this.velocity.Length())) < 1)
																	{
																		Vector2 vector2321 = this.position;
																		int num925 = this.width;
																		int num926 = this.height;
																		skyBlue = new Color();
																		int num927 = Dust.NewDust(vector2321, num925, num926, 261, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, skyBlue, 2.5f);
																		Main.dust[num927].noGravity = true;
																		Dust dust97 = Main.dust[num927];
																		dust97.velocity = dust97.velocity * 0.2f;
																		Main.dust[num927].fadeIn = 0.4f;
																		if (Main.rand.Next(6) != 0)
																		{
																			Main.dust[num927].velocity = base.DirectionFrom(Main.dust[num927].position) * Main.dust[num927].velocity.Length();
																		}
																		else
																		{
																			Dust dust98 = Main.dust[num927];
																			dust98.velocity = dust98.velocity * 5f;
																			Main.dust[num927].noLight = true;
																		}
																	}
																}
																this.dontTakeDamage = (this.ai[0] < 0f ? false : this.ai[0] <= 20f);
																if (this.ai[0] >= 0f)
																{
																	this.ai[0] = this.ai[0] + 1f;
																	if (this.ai[0] > 60f)
																	{
																		Vector2 vector2322 = this.velocity;
																		double num928 = (double)this.ai[1];
																		vector24 = new Vector2();
																		this.velocity = vector2322.RotatedBy(num928, vector24);
																	}
																	if (this.ai[0] > 120f)
																	{
																		NPC nPC285 = this;
																		nPC285.velocity = nPC285.velocity * 0.98f;
																	}
																	if (this.velocity.Length() < 0.2f)
																	{
																		this.velocity = Vector2.Zero;
																		return;
																	}
																}
															}
														}
														else if (this.aiStyle == 101)
														{
															float single620 = 420f;
															float single621 = 120f;
															int num929 = 1;
															float single622 = 0f;
															float single623 = 1f;
															float single624 = 4f;
															bool flag163 = (this.ai[1] < 0f ? true : !Main.npc[(int)this.ai[0]].active);
															if (Main.npc[(int)this.ai[0]].type != 439)
															{
																flag163 = true;
															}
															else
															{
																if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 2)
																{
																	num929 = 2;
																}
																if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 4)
																{
																	num929 = 3;
																}
															}
															this.ai[1] = this.ai[1] + (float)num929;
															float single625 = this.ai[1] / single621;
															single625 = MathHelper.Clamp(single625, 0f, 1f);
															this.position = base.Center;
															this.scale = MathHelper.Lerp(single622, single623, single625);
															base.Center = this.position;
															this.alpha = (int)(255f - single625 * 255f);
															if (Main.rand.Next(6) == 0)
															{
																Vector2 vector2323 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
																Dust[] dustArray23 = Main.dust;
																Vector2 center147 = base.Center - (vector2323 * 20f);
																skyBlue = new Color();
																Dust dust99 = dustArray23[Dust.NewDust(center147, 0, 0, 27, 0f, 0f, 0, skyBlue, 1f)];
																dust99.noGravity = true;
																dust99.position = base.Center - ((vector2323 * (float)Main.rand.Next(10, 21)) * this.scale);
																vector24 = new Vector2();
																dust99.velocity = vector2323.RotatedBy(1.57079637050629, vector24) * 4f;
																dust99.scale = 0.5f + Main.rand.NextFloat();
																dust99.fadeIn = 0.5f;
															}
															if (Main.rand.Next(6) == 0)
															{
																Vector2 vector2324 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
																Dust[] dustArray24 = Main.dust;
																Vector2 center148 = base.Center - (vector2324 * 30f);
																skyBlue = new Color();
																Dust dust100 = dustArray24[Dust.NewDust(center148, 0, 0, 240, 0f, 0f, 0, skyBlue, 1f)];
																dust100.noGravity = true;
																dust100.position = base.Center - ((vector2324 * 20f) * this.scale);
																vector24 = new Vector2();
																dust100.velocity = vector2324.RotatedBy(-1.57079637050629, vector24) * 2f;
																dust100.scale = 0.5f + Main.rand.NextFloat();
																dust100.fadeIn = 0.5f;
															}
															if (Main.rand.Next(6) == 0)
															{
																Vector2 vector2325 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
																Dust[] dustArray25 = Main.dust;
																Vector2 center149 = base.Center - (vector2325 * 30f);
																skyBlue = new Color();
																Dust zero9 = dustArray25[Dust.NewDust(center149, 0, 0, 240, 0f, 0f, 0, skyBlue, 1f)];
																zero9.position = base.Center - ((vector2325 * 20f) * this.scale);
																zero9.velocity = Vector2.Zero;
																zero9.scale = 0.5f + Main.rand.NextFloat();
																zero9.fadeIn = 0.5f;
																zero9.noLight = true;
															}
															this.localAI[0] = this.localAI[0] + 0.05235988f;
															float[] singleArray15 = this.localAI;
															Vector2 unitY21 = Vector2.UnitY;
															double num930 = (double)(this.ai[1] * 6.28318548f / 60f);
															vector24 = new Vector2();
															singleArray15[1] = 0.25f + unitY21.RotatedBy(num930, vector24).Y * 0.25f;
															if (this.ai[1] >= single620)
															{
																flag163 = true;
																if (Main.netMode != 1)
																{
																	for (int p8 = 0; p8 < 4; p8++)
																	{
																		Vector2 vector2326 = new Vector2(0f, -single624);
																		double num931 = (double)(1.57079637f * (float)p8);
																		vector24 = new Vector2();
																		Vector2 vector2327 = vector2326.RotatedBy(num931, vector24);
																		Projectile.NewProjectile(base.Center.X, base.Center.Y, vector2327.X, vector2327.Y, 593, this.damage, 0f, Main.myPlayer, 0f, 0f);
																	}
																}
															}
															if (flag163)
															{
																this.HitEffect(0, 9999);
																this.active = false;
															}
														}
													}
													else
													{
														if (Main.rand.Next(20) == 0)
														{
															this.soundHit = Main.rand.Next(15, 18);
														}
														if (Main.netMode != 1)
														{
															bool flag164 = false;
															int num932 = (int)this.ai[0];
															int num933 = (int)this.ai[1];
															if (!flag164 && (!Main.tile[num932, num933].active() || Main.tile[num932, num933].type != 378))
															{
																flag164 = true;
															}
															if (!flag164 && (this.target == 255 || Main.player[this.target].dead || Vector2.Distance(base.Center, Main.player[this.target].Center) > 160000f))
															{
																this.TargetClosest(false);
																if (this.target == 255 || Main.player[this.target].dead || Vector2.Distance(base.Center, Main.player[this.target].Center) > 160000f)
																{
																	flag164 = true;
																}
															}
															if (flag164)
															{
																this.life = 0;
																this.HitEffect(0, 10);
																this.active = false;
																int num934 = TETrainingDummy.Find((int)this.ai[0], (int)this.ai[1]);
																if (num934 != -1)
																{
																	((TETrainingDummy)TileEntity.ByID[num934]).Deactivate();
																}
																return;
															}
														}
													}
												}
												else
												{
													if (this.type == 437)
													{
														if (this.localAI[3] == 0f && Main.netMode != 1)
														{
															this.localAI[3] = 1f;
															this.netUpdate = true;
															Point[] pointArray = null;
															if (!CultistRitual.CheckFloor(base.Center, out pointArray))
															{
																this.life = 0;
																this.HitEffect(0, 10);
																this.active = false;
																return;
															}
															int num935 = 0;
															int num936 = 1;
															for (int q8 = 0; q8 < 4; q8++)
															{
																int num937 = 0;
																bool flag165 = (q8 == 1 ? true : q8 == 2);
																num937 = (!flag165 ? 379 : 438);
																int num938 = NPC.NewNPC(pointArray[q8].X * 16 + 8, pointArray[q8].Y * 16 - 48, num937, 0, 0f, 0f, 0f, 0f, 255);
																if (!flag165)
																{
																	int num939 = num935;
																	num935 = num939 + 1;
																	this.ai[num939] = (float)(num938 + 1);
																	Main.npc[num938].ai[3] = (float)(-(this.whoAmI + 1));
																}
																else
																{
																	int num940 = num936;
																	num936 = num940 + 1;
																	this.localAI[num940] = (float)(num938 + 1);
																	Main.npc[num938].ai[3] = (float)(-(this.whoAmI + 1));
																}
																Main.npc[num938].netUpdate = true;
															}
														}
														if (this.localAI[0] == 1f && Main.netMode != 1)
														{
															this.localAI[0] = 2f;
															for (int r8 = 0; r8 < 2; r8++)
															{
																Main.npc[(int)this.localAI[r8 + 1] - 1].ai[1] = 1f;
																Main.npc[(int)this.localAI[r8 + 1] - 1].netUpdate = true;
																Main.npc[(int)this.ai[r8] - 1].ai[3] = 0f;
																Main.npc[(int)this.ai[r8] - 1].TargetClosest(true);
																Main.npc[(int)this.ai[r8] - 1].netUpdate = true;
															}
														}
														if (this.ai[0] != -1f && Main.netMode != 1)
														{
															bool flag166 = true;
															for (int s8 = 0; s8 < 2; s8++)
															{
																if (Main.npc[(int)this.localAI[s8 + 1] - 1].active && Main.npc[(int)this.localAI[s8 + 1] - 1].type == 438)
																{
																	flag166 = false;
																}
																if (Main.npc[(int)this.ai[s8] - 1].active && Main.npc[(int)this.ai[s8] - 1].type == 379)
																{
																	flag166 = false;
																}
															}
															if (flag166)
															{
																this.ai[0] = -1f;
																this.ai[1] = 0f;
																this.ai[3] = 0f;
																int x220 = (int)base.Center.X / 16 + 11 * (Main.rand.Next(2) == 0).ToDirectionInt();
																int num941 = 0;
																int num942 = -5;
																while (num942 < 12)
																{
																	int num943 = x220;
																	int y218 = (int)base.Center.Y / 16 + num942;
																	if (!WorldGen.SolidTile(num943, y218) || Collision.SolidTiles(num943 - 1, num943 + 1, y218 - 3, y218 - 1))
																	{
																		if (num942 == 11)
																		{
																			num941 = y218;
																		}
																		num942++;
																	}
																	else
																	{
																		num941 = y218;
																		break;
																	}
																}
																int num944 = NPC.NewNPC(x220 * 16 + 10, num941 * 16 - 2, 439, 0, 0f, 0f, 0f, 0f, 255);
																NPC nPC286 = Main.npc[num944];
																NPC nPC287 = Main.npc[num944];
																int num945 = Math.Sign(base.Center.X - (float)(x220 * 16) - 10f);
																num6 = num945;
																nPC287.spriteDirection = num945;
																nPC286.direction = num6;
																this.ai[2] = (float)num944;
																this.netUpdate = true;
																CultistRitual.TabletDestroyed();
															}
														}
														if (this.ai[0] == -1f)
														{
															this.ai[3] = this.ai[3] + 1f;
															if (this.ai[3] > 300f)
															{
																this.life = 0;
																this.HitEffect(0, 9999);
																this.active = false;
																if (Main.netMode != 1)
																{
																	for (int t8 = 0; t8 < 6; t8++)
																	{
																		float single626 = 3f + Main.rand.NextFloat() * 6f;
																		Vector2 vector2328 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
																		Vector2 center150 = base.Center;
																		center150 = center150 + (vector2328 * 30f);
																		Projectile.NewProjectile(center150.X, center150.Y, vector2328.X * single626, vector2328.Y * single626, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
																	}
																	for (int u8 = 0; u8 < 20; u8++)
																	{
																		if (Main.rand.Next(2) != 0)
																		{
																			float single627 = 3f + Main.rand.NextFloat() * 6f;
																			Vector2 vector2329 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
																			Vector2 center151 = base.Center;
																			center151 = center151 + (vector2329 * 30f);
																			Vector2 center152 = (base.Center + (vector2329 * (Main.rand.NextFloat() * 45f + 45f))) + (Vector2.UnitY * 20f);
																			Projectile.NewProjectile(center151.X, center151.Y, vector2329.X * single627, -20f, 526, 0, 0f, Main.myPlayer, center152.X, center152.Y);
																		}
																	}
																}
															}
															else if (this.ai[3] % 10f == 1f && this.ai[3] > 120f && Main.netMode != 1)
															{
																float single628 = 3f + Main.rand.NextFloat() * 6f;
																Vector2 vector2330 = Vector2.UnitY.RotatedByRandom(6.28318548202515);
																Vector2 center153 = base.Center;
																center153 = center153 + (vector2330 * 25f);
																Projectile.NewProjectile(center153.X, center153.Y, vector2330.X * single628, vector2330.Y * single628, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
															}
														}
													}
													if (this.type == 438)
													{
														this.velocity.X = this.velocity.X * 0.93f;
														if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
														{
															this.velocity.X = 0f;
														}
														int num946 = (int)(-this.ai[3] - 1f);
														if (num946 == -1)
														{
															this.life = 0;
															this.HitEffect(0, 10);
															this.active = false;
															return;
														}
														int num947 = Math.Sign(Main.npc[num946].Center.X - base.Center.X);
														if (num947 != this.direction)
														{
															this.velocity.X = 0f;
															int num948 = num947;
															num6 = num948;
															this.spriteDirection = num948;
															this.direction = num6;
															this.netUpdate = true;
														}
														if (this.justHit && Main.netMode != 1 && Main.npc[num946].localAI[0] == 0f)
														{
															Main.npc[num946].localAI[0] = 1f;
														}
													}
													if (this.type == 437)
													{
														Lighting.AddLight(base.Center, 0.8f, 0.75f, 0.55f);
														return;
													}
												}
											}
											else
											{
												if (Main.rand.Next(420) == 0)
												{
													Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, Main.rand.Next(100, 101));
												}
												Vector2 vector2331 = new Vector2(30f);
												if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
												{
													this.life = 0;
													this.HitEffect(0, 10);
													this.active = false;
												}
												float single629 = 0f;
												float moonLordAttacksArray2 = 0f;
												float single630 = this.ai[0];
												this.ai[1] = this.ai[1] + 1f;
												int num949 = 0;
												int num950 = 0;
												while (num949 < 10)
												{
													moonLordAttacksArray2 = (float)NPC.MoonLordAttacksArray2[1, num949];
													if (moonLordAttacksArray2 + (float)num950 > this.ai[1])
													{
														break;
													}
													num950 = num950 + (int)moonLordAttacksArray2;
													num949++;
												}
												if (num949 == 10)
												{
													num949 = 0;
													this.ai[1] = 0f;
													moonLordAttacksArray2 = (float)NPC.MoonLordAttacksArray2[1, num949];
													num950 = 0;
												}
												this.ai[0] = (float)NPC.MoonLordAttacksArray2[0, num949];
												single629 = (float)((int)this.ai[1] - num950);
												if (this.ai[0] != single630)
												{
													this.netUpdate = true;
												}
												if (this.ai[0] == -1f)
												{
													this.ai[1] = this.ai[1] + 1f;
													if (this.ai[1] > 180f)
													{
														this.ai[1] = 0f;
													}
													float single631 = 1f;
													if (this.ai[1] < 60f)
													{
														single631 = 0.75f;
														this.localAI[0] = 0f;
														this.localAI[1] = (float)Math.Sin((double)(this.ai[1] * 6.28318548f / 15f)) * 0.35f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[0] = 3.14159274f;
														}
													}
													else if (this.ai[1] >= 120f)
													{
														single631 = 1.15f;
														this.localAI[1] = this.localAI[1] - 0.05f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[1] = 0f;
														}
													}
													else
													{
														single631 = 1f;
														if (this.localAI[1] < 0.5f)
														{
															this.localAI[1] = this.localAI[1] + 0.025f;
														}
														this.localAI[0] = this.localAI[0] + 0.209439516f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], single631, 0.3f);
												}
												if (this.ai[0] == 0f)
												{
													this.TargetClosest(false);
													Vector2 center154 = (Main.player[this.target].Center + (Main.player[this.target].velocity * 20f)) - base.Center;
													this.localAI[0] = this.localAI[0].AngleLerp(center154.ToRotation(), 0.5f);
													this.localAI[1] = this.localAI[1] + 0.05f;
													if (this.localAI[1] > 0.7f)
													{
														this.localAI[1] = 0.7f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
													float single632 = 24f;
													Vector2 center155 = base.Center;
													Vector2 center156 = Main.player[this.target].Center;
													Vector2 vector2332 = center156 - center155;
													Vector2 unitY22 = vector2332 - (Vector2.UnitY * 200f);
													unitY22 = Vector2.Normalize(unitY22) * single632;
													int num951 = 30;
													this.velocity.X = (this.velocity.X * (float)(num951 - 1) + unitY22.X) / (float)num951;
													this.velocity.Y = (this.velocity.Y * (float)(num951 - 1) + unitY22.Y) / (float)num951;
													float single633 = 0.25f;
													for (int v8 = 0; v8 < 200; v8++)
													{
														if (v8 != this.whoAmI && Main.npc[v8].active && Main.npc[v8].type == 400 && Vector2.Distance(base.Center, Main.npc[v8].Center) < 150f)
														{
															if (this.position.X >= Main.npc[v8].position.X)
															{
																this.velocity.X = this.velocity.X + single633;
															}
															else
															{
																this.velocity.X = this.velocity.X - single633;
															}
															if (this.position.Y >= Main.npc[v8].position.Y)
															{
																this.velocity.Y = this.velocity.Y + single633;
															}
															else
															{
																this.velocity.Y = this.velocity.Y - single633;
															}
														}
													}
													return;
												}
												if (this.ai[0] == 1f)
												{
													if (single629 == 0f)
													{
														this.TargetClosest(false);
														this.netUpdate = true;
													}
													NPC nPC288 = this;
													nPC288.velocity = nPC288.velocity * 0.95f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
													}
													Vector2 center157 = (Main.player[this.target].Center + (Main.player[this.target].velocity * 20f)) - base.Center;
													this.localAI[0] = this.localAI[0].AngleLerp(center157.ToRotation(), 0.5f);
													this.localAI[1] = this.localAI[1] + 0.05f;
													if (this.localAI[1] > 1f)
													{
														this.localAI[1] = 1f;
													}
													if (single629 >= 20f)
													{
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
													}
													else
													{
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1.1f, 0.2f);
													}
													if (single629 == moonLordAttacksArray2 - 35f)
													{
														Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
													}
													if ((single629 == moonLordAttacksArray2 - 14f || single629 == moonLordAttacksArray2 - 7f || single629 == moonLordAttacksArray2) && Main.netMode != 1)
													{
														Vector2 vector2333 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector2331 * this.localAI[1]);
														Vector2 vector2334 = Vector2.Normalize(center157) * 8f;
														Projectile.NewProjectile(base.Center.X + vector2333.X, base.Center.Y + vector2333.Y, vector2334.X, vector2334.Y, 462, 35, 0f, Main.myPlayer, 0f, 0f);
														return;
													}
												}
												else if (this.ai[0] == 2f)
												{
													if (single629 >= 15f)
													{
														if (single629 >= 75f)
														{
															if (single629 >= 105f)
															{
																if (single629 >= 120f)
																{
																	NPC nPC289 = this;
																	nPC289.velocity = nPC289.velocity * 0.92f;
																	this.rotation = this.rotation.AngleLerp(0f, 0.2f);
																	return;
																}
																Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, 102);
																if (single629 == 105f)
																{
																	this.netUpdate = true;
																}
																Vector2 rotationVector27 = (this.ai[2] - 1.57079637f).ToRotationVector2() * 12f;
																this.velocity = rotationVector27 * 2f;
																for (int w8 = 0; w8 < 1000; w8++)
																{
																	Projectile projectile4 = Main.projectile[w8];
																	if (projectile4.active && projectile4.type == 454 && projectile4.ai[1] == (float)this.whoAmI && projectile4.ai[0] != -1f)
																	{
																		projectile4.ai[0] = -1f;
																		projectile4.velocity = rotationVector27;
																		projectile4.netUpdate = true;
																	}
																}
																return;
															}
															this.localAI[0] = this.localAI[0].AngleLerp(this.ai[2] - 1.57079637f, 0.2f);
															this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.75f, 0.2f);
															if (single629 == 75f)
															{
																this.TargetClosest(false);
																this.netUpdate = true;
																this.velocity = Vector2.UnitY * -7f;
																for (int x810 = 0; x810 < 1000; x810++)
																{
																	Projectile projectile5 = Main.projectile[x810];
																	if (projectile5.active && projectile5.type == 454 && projectile5.ai[1] == (float)this.whoAmI && projectile5.ai[0] != -1f)
																	{
																		Projectile projectile6 = projectile5;
																		projectile6.velocity = projectile6.velocity + this.velocity;
																		projectile5.netUpdate = true;
																	}
																}
															}
															this.velocity.Y = this.velocity.Y * 0.96f;
															this.ai[2] = (Main.player[this.target].Center - base.Center).ToRotation() + 1.57079637f;
															this.rotation = this.rotation.AngleTowards(this.ai[2], 0.104719758f);
															return;
														}
														float single634 = (single629 - 15f) / 10f;
														int num952 = 0;
														int num953 = 0;
														num6 = (int)single634;
														switch (num6)
														{
															case 0:
															{
																num952 = 0;
																num953 = 2;
																break;
															}
															case 1:
															{
																num952 = 2;
																num953 = 5;
																break;
															}
															case 2:
															{
																num952 = 5;
																num953 = 3;
																break;
															}
															case 3:
															{
																num952 = 3;
																num953 = 1;
																break;
															}
															case 4:
															{
																num952 = 1;
																num953 = 4;
																break;
															}
															case 5:
															{
																num952 = 4;
																num953 = 0;
																break;
															}
														}
														Vector2 unitY23 = Vector2.UnitY * -30f;
														double num954 = (double)((float)num952 * 6.28318548f / 6f);
														vector24 = new Vector2();
														Vector2 vector2335 = unitY23.RotatedBy(num954, vector24);
														double num955 = (double)((float)num953 * 6.28318548f / 6f);
														vector24 = new Vector2();
														Vector2 vector2336 = unitY23.RotatedBy(num955, vector24);
														Vector2 vector2337 = Vector2.Lerp(vector2335, vector2336, single634 - (float)((int)single634));
														float single635 = vector2337.Length() / 30f;
														this.localAI[0] = vector2337.ToRotation();
														this.localAI[1] = MathHelper.Lerp(this.localAI[1], single635, 0.5f);
														for (int y810 = 0; y810 < 2; y810++)
														{
															Vector2 center158 = (base.Center + vector2337) - (Vector2.One * 4f);
															skyBlue = new Color();
															int num956 = Dust.NewDust(center158, 0, 0, 229, 0f, 0f, 0, skyBlue, 1f);
															Dust dust101 = Main.dust[num956];
															dust101.velocity = dust101.velocity + (vector2337 / 15f);
															Main.dust[num956].noGravity = true;
														}
														if ((single629 - 15f) % 10f == 0f && Main.netMode != 1)
														{
															Vector2 unitY24 = Vector2.Normalize(vector2337);
															if (unitY24.HasNaNs())
															{
																unitY24 = Vector2.UnitY * -1f;
															}
															unitY24 = unitY24 * 4f;
															Projectile.NewProjectile(base.Center.X + vector2337.X, base.Center.Y + vector2337.Y, unitY24.X, unitY24.Y, 454, 55, 0f, Main.myPlayer, 30f, (float)this.whoAmI);
															return;
														}
													}
													else
													{
														this.localAI[1] = this.localAI[1] - 0.07f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[1] = 0f;
														}
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
														NPC nPC290 = this;
														nPC290.velocity = nPC290.velocity * 0.8f;
														if (this.velocity.Length() < 1f)
														{
															this.velocity = Vector2.Zero;
															return;
														}
													}
												}
												else if (this.ai[0] != 3f)
												{
													if (this.ai[0] == 4f)
													{
														if (single629 == 0f)
														{
															this.TargetClosest(false);
															this.netUpdate = true;
														}
														if (single629 >= 180f)
														{
															if (single629 < moonLordAttacksArray2 - 15f)
															{
																if (single629 == 180f && Main.netMode != 1)
																{
																	this.TargetClosest(false);
																	Vector2 center159 = Main.player[this.target].Center - base.Center;
																	center159.Normalize();
																	float single636 = -1f;
																	if (center159.X < 0f)
																	{
																		single636 = 1f;
																	}
																	double num957 = (double)(-single636 * 6.28318548f / 6f);
																	vector24 = new Vector2();
																	center159 = center159.RotatedBy(num957, vector24);
																	Projectile.NewProjectile(base.Center.X, base.Center.Y, center159.X, center159.Y, 455, 50, 0f, Main.myPlayer, single636 * 6.28318548f / 540f, (float)this.whoAmI);
																	this.ai[2] = (center159.ToRotation() + 9.424778f) * single636;
																	this.netUpdate = true;
																}
																this.localAI[1] = this.localAI[1] + 0.05f;
																if (this.localAI[1] > 1f)
																{
																	this.localAI[1] = 1f;
																}
																float directionInt6 = (float)(this.ai[2] >= 0f).ToDirectionInt();
																float single637 = this.ai[2];
																if (single637 < 0f)
																{
																	single637 = single637 * -1f;
																}
																single637 = single637 + -9.424778f;
																single637 = single637 + directionInt6 * 6.28318548f / 540f;
																this.localAI[0] = single637;
																this.ai[2] = (single637 + 9.424778f) * directionInt6;
																return;
															}
															this.localAI[1] = this.localAI[1] - 0.07f;
															if (this.localAI[1] < 0f)
															{
																this.localAI[1] = 0f;
																return;
															}
														}
														else
														{
															this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
															this.localAI[1] = this.localAI[1] - 0.05f;
															if (this.localAI[1] < 0f)
															{
																this.localAI[1] = 0f;
															}
															NPC nPC291 = this;
															nPC291.velocity = nPC291.velocity * 0.95f;
															if (this.velocity.Length() < 1f)
															{
																this.velocity = Vector2.Zero;
															}
															if (single629 >= 60f)
															{
																Vector2 center160 = base.Center;
																int num958 = 0;
																if (single629 >= 120f)
																{
																	num958 = 1;
																}
																for (int a8 = 0; a8 < 1 + num958; a8++)
																{
																	int num959 = 229;
																	float single638 = 0.8f;
																	if (a8 % 2 == 1)
																	{
																		num959 = 229;
																		single638 = 1.65f;
																	}
																	Vector2 rotationVector28 = center160 + ((((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * vector2331) / 2f);
																	Vector2 one1 = rotationVector28 - (Vector2.One * 8f);
																	float x221 = this.velocity.X / 2f;
																	float y219 = this.velocity.Y / 2f;
																	skyBlue = new Color();
																	int num960 = Dust.NewDust(one1, 16, 16, num959, x221, y219, 0, skyBlue, 1f);
																	Main.dust[num960].velocity = ((Vector2.Normalize(center160 - rotationVector28) * 3.5f) * (10f - (float)num958 * 2f)) / 10f;
																	Main.dust[num960].noGravity = true;
																	Main.dust[num960].scale = single638;
																	Main.dust[num960].customData = this;
																}
																return;
															}
														}
													}
												}
												else if (single629 < 15f)
												{
													this.localAI[1] = this.localAI[1] - 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													this.localAI[2] = MathHelper.Lerp(this.localAI[2], 0.4f, 0.2f);
													NPC nPC292 = this;
													nPC292.velocity = nPC292.velocity * 0.9f;
													if (this.velocity.Length() < 1f)
													{
														this.velocity = Vector2.Zero;
														return;
													}
												}
												else if (single629 >= 45f)
												{
													if (single629 >= 185f)
													{
														NPC nPC293 = this;
														nPC293.velocity = nPC293.velocity * 0.88f;
														this.rotation = this.rotation.AngleLerp(0f, 0.2f);
														this.localAI[1] = this.localAI[1] - 0.07f;
														if (this.localAI[1] < 0f)
														{
															this.localAI[1] = 0f;
														}
														this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
														return;
													}
													if (single629 == 45f)
													{
														this.ai[2] = (float)(Main.rand.Next(2) == 0).ToDirectionInt() * 6.28318548f / 40f;
														this.netUpdate = true;
													}
													if ((single629 - 15f - 30f) % 40f == 0f)
													{
														this.ai[2] = this.ai[2] * 0.95f;
													}
													this.localAI[0] = this.localAI[0] + this.ai[2];
													this.localAI[1] = this.localAI[1] + 0.05f;
													if (this.localAI[1] > 1f)
													{
														this.localAI[1] = 1f;
													}
													Vector2 rotationVector29 = (this.localAI[0].ToRotationVector2() * vector2331) * this.localAI[1];
													float single639 = MathHelper.Lerp(8f, 20f, (single629 - 15f - 30f) / 140f);
													this.velocity = Vector2.Normalize(rotationVector29) * single639;
													this.rotation = this.rotation.AngleLerp(this.velocity.ToRotation() + 1.57079637f, 0.2f);
													if ((single629 - 15f - 30f) % 10f == 0f && Main.netMode != 1)
													{
														Vector2 center161 = base.Center + ((Vector2.Normalize(rotationVector29) * vector2331.Length()) * 0.4f);
														Vector2 vector2338 = Vector2.Normalize(rotationVector29) * 8f;
														float single640 = (6.28318548f * (float)Main.rand.NextDouble() - 3.14159274f) / 30f + 0.0174532924f * this.ai[2];
														Projectile.NewProjectile(center161.X, center161.Y, vector2338.X, vector2338.Y, 452, 35, 0f, Main.myPlayer, 0f, single640);
														return;
													}
												}
												else
												{
													this.localAI[0] = 0f;
													this.localAI[1] = (float)Math.Sin((double)((single629 - 15f) * 6.28318548f / 15f)) * 0.5f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[0] = 3.14159274f;
														return;
													}
												}
											}
										}
										else
										{
											if (!Main.npc[(int)this.ai[3]].active || Main.npc[(int)this.ai[3]].type != 398)
											{
												this.life = 0;
												this.HitEffect(0, 10);
												this.active = false;
											}
											this.dontTakeDamage = this.localAI[3] >= 15f;
											this.velocity = Vector2.Zero;
											base.Center = Main.npc[(int)this.ai[3]].Center + new Vector2(0f, -400f);
											Vector2 vector2339 = new Vector2(27f, 59f);
											float single641 = 0f;
											float moonLordAttacksArray1 = 0f;
											int num961 = 0;
											int num962 = 0;
											if (this.ai[0] >= 0f)
											{
												float single642 = this.ai[0];
												this.ai[1] = this.ai[1] + 1f;
												int num963 = (int)Main.npc[(int)this.ai[3]].ai[2];
												int num964 = 2;
												int num965 = 0;
												int num966 = 0;
												while (num965 < 5)
												{
													moonLordAttacksArray1 = (float)NPC.MoonLordAttacksArray[num963, num964, 1, num965];
													if (moonLordAttacksArray1 + (float)num966 > this.ai[1])
													{
														break;
													}
													num966 = num966 + (int)moonLordAttacksArray1;
													num965++;
												}
												if (num965 == 5)
												{
													num965 = 0;
													this.ai[1] = 0f;
													moonLordAttacksArray1 = (float)NPC.MoonLordAttacksArray[num963, num964, 1, num965];
													num966 = 0;
												}
												this.ai[0] = (float)NPC.MoonLordAttacksArray[num963, num964, 0, num965];
												single641 = (float)((int)this.ai[1] - num966);
												if (this.ai[0] != single642)
												{
													this.netUpdate = true;
												}
											}
											if (this.ai[0] == -3f)
											{
												this.damage = 0;
												this.dontTakeDamage = true;
												this.rotation = MathHelper.Lerp(this.rotation, 0.2617994f, 0.07f);
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 32f)
												{
													this.ai[1] = 0f;
												}
												if (this.ai[1] < 0f)
												{
													this.ai[1] = 0f;
												}
												if (this.localAI[2] < 14f)
												{
													this.localAI[2] = this.localAI[2] + 1f;
												}
											}
											else if (this.ai[0] == -2f)
											{
												if (Main.npc[(int)this.ai[3]].ai[0] == 2f)
												{
													this.ai[0] = -3f;
													return;
												}
												this.damage = 80;
												this.dontTakeDamage = true;
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 32f)
												{
													this.ai[1] = 0f;
												}
												if (this.ai[1] < 0f)
												{
													this.ai[1] = 0f;
												}
												this.ai[2] = this.ai[2] + 1f;
												if (this.ai[2] >= 555f)
												{
													this.ai[2] = 0f;
												}
												if (this.ai[2] >= 120f)
												{
													single641 = this.ai[2] - 120f;
													moonLordAttacksArray1 = 555f;
													num961 = 2;
													Vector2 vector2340 = new Vector2(0f, 216f);
													if (single641 == 0f && Main.netMode != 1)
													{
														Vector2 center162 = base.Center + vector2340;
														for (int b8 = 0; b8 < 255; b8++)
														{
															Player player10 = Main.player[b8];
															if (player10.active && !player10.dead && Vector2.Distance(player10.Center, center162) <= 3000f)
															{
																Vector2 center163 = Main.player[this.target].Center - center162;
																if (center163 != Vector2.Zero)
																{
																	center163.Normalize();
																}
																Projectile.NewProjectile(center162.X, center162.Y, center163.X, center163.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)b8);
															}
														}
													}
													if ((single641 == 120f || single641 == 180f || single641 == 240f) && Main.netMode != 1)
													{
														for (int c8 = 0; c8 < 1000; c8++)
														{
															Projectile projectile7 = Main.projectile[c8];
															if (projectile7.active && projectile7.type == 456 && Main.player[(int)projectile7.ai[1]].HasBuff(145) != -1)
															{
																Vector2 center164 = Main.player[this.target].Center;
																int num967 = NPC.NewNPC((int)center164.X, (int)center164.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
																Main.npc[num967].netUpdate = true;
																Main.npc[num967].ai[0] = (float)(this.whoAmI + 1);
																Main.npc[num967].ai[1] = (float)c8;
															}
														}
													}
												}
											}
											else if (this.ai[0] == 0f)
											{
												num962 = 3;
												this.TargetClosest(false);
												Vector2 center165 = (Main.player[this.target].Center - base.Center) - new Vector2(0f, -22f);
												float single643 = center165.Length() / 500f;
												if (single643 > 1f)
												{
													single643 = 1f;
												}
												single643 = 1f - single643;
												single643 = single643 * 2f;
												if (single643 > 1f)
												{
													single643 = 1f;
												}
												this.localAI[0] = center165.ToRotation();
												this.localAI[1] = single643;
												this.localAI[2] = MathHelper.Lerp(this.localAI[2], 1f, 0.2f);
											}
											if (this.ai[0] == 1f)
											{
												if (single641 < 180f)
												{
													this.localAI[1] = this.localAI[1] - 0.05f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													if (single641 >= 60f)
													{
														Vector2 center166 = base.Center;
														int num968 = 0;
														if (single641 >= 120f)
														{
															num968 = 1;
														}
														for (int d8 = 0; d8 < 1 + num968; d8++)
														{
															int num969 = 229;
															float single644 = 0.8f;
															if (d8 % 2 == 1)
															{
																num969 = 229;
																single644 = 1.65f;
															}
															Vector2 rotationVector210 = center166 + ((((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * vector2339) / 2f);
															Vector2 one2 = rotationVector210 - (Vector2.One * 8f);
															float x222 = this.velocity.X / 2f;
															float y220 = this.velocity.Y / 2f;
															skyBlue = new Color();
															int num970 = Dust.NewDust(one2, 16, 16, num969, x222, y220, 0, skyBlue, 1f);
															Main.dust[num970].velocity = ((Vector2.Normalize(center166 - rotationVector210) * 3.5f) * (10f - (float)num968 * 2f)) / 10f;
															Main.dust[num970].noGravity = true;
															Main.dust[num970].scale = single644;
															Main.dust[num970].customData = this;
														}
													}
												}
												else if (single641 >= moonLordAttacksArray1 - 15f)
												{
													this.localAI[1] = this.localAI[1] - 0.07f;
													if (this.localAI[1] < 0f)
													{
														this.localAI[1] = 0f;
													}
													num962 = 3;
												}
												else
												{
													if (single641 == 180f && Main.netMode != 1)
													{
														this.TargetClosest(false);
														Vector2 center167 = Main.player[this.target].Center - base.Center;
														center167.Normalize();
														float single645 = -1f;
														if (center167.X < 0f)
														{
															single645 = 1f;
														}
														double num971 = (double)(-single645 * 6.28318548f / 6f);
														vector24 = new Vector2();
														center167 = center167.RotatedBy(num971, vector24);
														Projectile.NewProjectile(base.Center.X, base.Center.Y, center167.X, center167.Y, 455, 75, 0f, Main.myPlayer, single645 * 6.28318548f / 540f, (float)this.whoAmI);
														this.ai[2] = (center167.ToRotation() + 9.424778f) * single645;
														this.netUpdate = true;
													}
													this.localAI[1] = this.localAI[1] + 0.05f;
													if (this.localAI[1] > 1f)
													{
														this.localAI[1] = 1f;
													}
													float directionInt7 = (float)(this.ai[2] >= 0f).ToDirectionInt();
													float single646 = this.ai[2];
													if (single646 < 0f)
													{
														single646 = single646 * -1f;
													}
													single646 = single646 + -9.424778f;
													single646 = single646 + directionInt7 * 6.28318548f / 540f;
													this.localAI[0] = single646;
													this.ai[2] = (single646 + 9.424778f) * directionInt7;
												}
											}
											else if (this.ai[0] == 2f)
											{
												num961 = 2;
												num962 = 3;
												Vector2 vector2341 = new Vector2(0f, 216f);
												if (single641 == 0f && Main.netMode != 1)
												{
													Vector2 center168 = base.Center + vector2341;
													for (int e8 = 0; e8 < 255; e8++)
													{
														Player player11 = Main.player[e8];
														if (player11.active && !player11.dead && Vector2.Distance(player11.Center, center168) <= 3000f)
														{
															Vector2 center169 = Main.player[this.target].Center - center168;
															if (center169 != Vector2.Zero)
															{
																center169.Normalize();
															}
															Projectile.NewProjectile(center168.X, center168.Y, center169.X, center169.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)e8);
														}
													}
												}
												if ((single641 == 120f || single641 == 180f || single641 == 240f) && Main.netMode != 1)
												{
													for (int f8 = 0; f8 < 1000; f8++)
													{
														Projectile projectile8 = Main.projectile[f8];
														if (projectile8.active && projectile8.type == 456 && Main.player[(int)projectile8.ai[1]].HasBuff(145) != -1)
														{
															Vector2 center170 = Main.player[this.target].Center;
															int num972 = NPC.NewNPC((int)center170.X, (int)center170.Y, 401, 0, 0f, 0f, 0f, 0f, 255);
															Main.npc[num972].netUpdate = true;
															Main.npc[num972].ai[0] = (float)(this.whoAmI + 1);
															Main.npc[num972].ai[1] = (float)f8;
														}
													}
												}
											}
											else if (this.ai[0] == 3f)
											{
												if (single641 == 0f)
												{
													this.TargetClosest(false);
													this.netUpdate = true;
												}
												Vector2 center171 = (Main.player[this.target].Center + (Main.player[this.target].velocity * 20f)) - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(center171.ToRotation(), 0.5f);
												this.localAI[1] = this.localAI[1] + 0.05f;
												if (this.localAI[1] > 1f)
												{
													this.localAI[1] = 1f;
												}
												if (single641 == moonLordAttacksArray1 - 35f)
												{
													Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
												}
												if ((single641 == moonLordAttacksArray1 - 14f || single641 == moonLordAttacksArray1 - 7f || single641 == moonLordAttacksArray1) && Main.netMode != 1)
												{
													Vector2 vector2342 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector2339 * this.localAI[1]);
													Vector2 vector2343 = Vector2.Normalize(center171) * 8f;
													Projectile.NewProjectile(base.Center.X + vector2342.X, base.Center.Y + vector2342.Y, vector2343.X, vector2343.Y, 462, 30, 0f, Main.myPlayer, 0f, 0f);
												}
											}
											int num973 = num961 * 7;
											if ((float)num973 > this.localAI[2])
											{
												this.localAI[2] = this.localAI[2] + 1f;
											}
											if ((float)num973 < this.localAI[2])
											{
												this.localAI[2] = this.localAI[2] - 1f;
											}
											if (this.localAI[2] < 0f)
											{
												this.localAI[2] = 0f;
											}
											if (this.localAI[2] > 14f)
											{
												this.localAI[2] = 14f;
											}
											int num974 = num962 * 5;
											if ((float)num974 > this.localAI[3])
											{
												this.localAI[3] = this.localAI[3] + 1f;
											}
											if ((float)num974 < this.localAI[3])
											{
												this.localAI[3] = this.localAI[3] - 1f;
											}
											if (this.localAI[3] < 0f)
											{
												this.localAI[2] = 0f;
											}
											if (this.localAI[3] > 15f)
											{
												this.localAI[2] = 15f;
											}
											int num975 = 0;
											if (num975 == 1)
											{
												Vector2 vector2344 = new Vector2(27f, 59f);
												this.TargetClosest(false);
												Vector2 vector2345 = (Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY)) - base.Center;
												float single647 = vector2345.Length() / 200f;
												if (single647 > 1f)
												{
													single647 = 1f;
												}
												single647 = 1f - single647;
												single647 = single647 * 2f;
												if (single647 > 1f)
												{
													single647 = 1f;
												}
												this.localAI[0] = vector2345.ToRotation();
												this.localAI[1] = single647;
												this.localAI[1] = 1f;
											}
											if (num975 == 2)
											{
												Vector2 vector2346 = new Vector2(27f, 59f);
												float single648 = 6.28318548f * ((float)Main.time % 600f) / 600f;
												this.localAI[0] = (new Vector2((float)Math.Cos((double)single648) * vector2346.X, (float)Math.Sin((double)single648) * vector2346.Y)).ToRotation();
												this.localAI[1] = 0.75f;
												if (this.ai[1] == 0f)
												{
													Vector2 one3 = single648.ToRotationVector2();
													one3 = Vector2.One;
													Projectile.NewProjectile(base.Center.X, base.Center.Y, one3.X, one3.Y, 455, 1, 0f, Main.myPlayer, 0.0104719754f, (float)this.whoAmI);
												}
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 600f)
												{
													this.ai[1] = 0f;
												}
											}
											if (num975 == 3)
											{
												Vector2 vector2347 = new Vector2(0f, 216f);
												if (this.ai[1] == 0f)
												{
													this.TargetClosest(false);
													Vector2 center172 = Main.player[this.target].Center - base.Center;
													center172.Normalize();
													Projectile.NewProjectile(base.Center.X + vector2347.X, base.Center.Y + vector2347.Y, center172.X, center172.Y, 456, 0, 0f, Main.myPlayer, (float)(this.whoAmI + 1), (float)this.target);
												}
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] >= 600f)
												{
													this.ai[1] = 0f;
												}
											}
											if (num975 == 4)
											{
												Vector2 vector2348 = new Vector2(27f, 59f);
												this.TargetClosest(false);
												Vector2 center173 = (Main.player[this.target].Center + (Main.player[this.target].velocity * 20f)) - base.Center;
												this.localAI[0] = this.localAI[0].AngleLerp(center173.ToRotation(), 0.5f);
												this.localAI[1] = 1f;
												this.ai[1] = this.ai[1] + 1f;
												if (this.ai[1] == 55f)
												{
													Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
												}
												if (this.ai[1] == 76f || this.ai[1] == 83f || this.ai[1] == 90f)
												{
													vector2339 = new Vector2(27f, 59f);
													Vector2 vector2349 = Utils.Vector2FromElipse(this.localAI[0].ToRotationVector2(), vector2339 * this.localAI[1]);
													Vector2 vector2350 = Vector2.Normalize(center173) * 8f;
													Projectile.NewProjectile(base.Center.X + vector2349.X, base.Center.Y + vector2349.Y, vector2350.X, vector2350.Y, 462, 5, 0f, Main.myPlayer, 0f, 0f);
												}
												if (this.ai[1] >= 90f)
												{
													this.ai[1] = 0f;
													return;
												}
											}
										}
									}
									else
									{
										this.TargetClosest(true);
										this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
										this.spriteDirection = this.direction;
										float single649 = 7f;
										Vector2 vector2351 = new Vector2(base.Center.X + (float)(this.direction * 20), base.Center.Y + 6f);
										float x223 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2351.X;
										float y221 = Main.player[this.target].position.Y - vector2351.Y;
										float single650 = (float)Math.Sqrt((double)(x223 * x223 + y221 * y221));
										float single651 = single649 / single650;
										x223 = x223 * single651;
										y221 = y221 * single651;
										bool flag167 = Collision.CanHit(base.Center, 1, 1, Main.player[this.target].Center, 1, 1);
										if (!Main.dayTime)
										{
											if (single650 > 600f || !flag167)
											{
												int num976 = 60;
												this.velocity.X = (this.velocity.X * (float)(num976 - 1) + x223) / (float)num976;
												this.velocity.Y = (this.velocity.Y * (float)(num976 - 1) + y221) / (float)num976;
												return;
											}
											NPC nPC294 = this;
											nPC294.velocity = nPC294.velocity * 0.98f;
											if (Math.Abs(this.velocity.X) < 1f && Math.Abs(this.velocity.Y) < 1f && Main.netMode != 1)
											{
												this.localAI[0] = this.localAI[0] + 1f;
												if (this.localAI[0] >= 15f)
												{
													this.localAI[0] = 0f;
													x223 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2351.X;
													y221 = Main.player[this.target].Center.Y - vector2351.Y;
													x223 = x223 + (float)Main.rand.Next(-35, 36);
													y221 = y221 + (float)Main.rand.Next(-35, 36);
													x223 = x223 * (1f + (float)Main.rand.Next(-20, 21) * 0.015f);
													y221 = y221 * (1f + (float)Main.rand.Next(-20, 21) * 0.015f);
													single650 = (float)Math.Sqrt((double)(x223 * x223 + y221 * y221));
													single651 = 10f / single650;
													x223 = x223 * single651;
													y221 = y221 * single651;
													x223 = x223 * (1f + (float)Main.rand.Next(-20, 21) * 0.0125f);
													y221 = y221 * (1f + (float)Main.rand.Next(-20, 21) * 0.0125f);
													Projectile.NewProjectile(vector2351.X, vector2351.Y, x223, y221, 180, 32, 0f, Main.myPlayer, 0f, 0f);
													return;
												}
											}
										}
										else
										{
											int num977 = 60;
											this.velocity.X = (this.velocity.X * (float)(num977 - 1) - x223) / (float)num977;
											this.velocity.Y = (this.velocity.Y * (float)(num977 - 1) - y221) / (float)num977;
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
												return;
											}
										}
									}
								}
								else
								{
									float single652 = 2f;
									this.noGravity = true;
									this.noTileCollide = true;
									if (!Main.dayTime)
									{
										this.TargetClosest(true);
									}
									bool flag168 = false;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										single652 = 3f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										single652 = 4f;
									}
									if (Main.dayTime)
									{
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										single652 = 8f;
									}
									else if (this.ai[0] == 0f)
									{
										this.ai[1] = this.ai[1] + 1f;
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.ai[1] = this.ai[1] + 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.ai[1] = this.ai[1] + 1f;
										}
										if (this.ai[1] >= 300f && Main.netMode != 1)
										{
											this.ai[1] = 0f;
											if ((double)this.life >= (double)this.lifeMax * 0.25 || this.type == 344)
											{
												this.ai[0] = (float)Main.rand.Next(1, 3);
											}
											else
											{
												this.ai[0] = (float)Main.rand.Next(3, 5);
											}
											this.netUpdate = true;
										}
									}
									else if (this.ai[0] == 1f)
									{
										if (this.type != 344)
										{
											flag168 = true;
											this.ai[1] = this.ai[1] + 1f;
											if (this.ai[1] % 15f == 0f)
											{
												Vector2 vector2352 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float x224 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2352.X;
												float y222 = Main.player[this.target].position.Y - vector2352.Y;
												float single653 = (float)Math.Sqrt((double)(x224 * x224 + y222 * y222));
												single653 = 10f / single653;
												x224 = x224 * single653;
												y222 = y222 * single653;
												x224 = x224 * (1f + (float)Main.rand.Next(-20, 21) * 0.01f);
												y222 = y222 * (1f + (float)Main.rand.Next(-20, 21) * 0.01f);
												Projectile.NewProjectile(vector2352.X, vector2352.Y, x224, y222, 325, 50, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] >= 120f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
										else
										{
											flag168 = true;
											this.ai[1] = this.ai[1] + 1f;
											if (this.ai[1] % 5f == 0f)
											{
												Vector2 vector2353 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 20f + (float)Main.rand.Next(this.height - 40));
												float x225 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2353.X;
												float y223 = Main.player[this.target].position.Y - vector2353.Y;
												x225 = x225 + (float)Main.rand.Next(-50, 51);
												y223 = y223 + (float)Main.rand.Next(-50, 51);
												y223 = y223 - Math.Abs(x225) * ((float)Main.rand.Next(0, 21) * 0.01f);
												float single654 = (float)Math.Sqrt((double)(x225 * x225 + y223 * y223));
												single654 = 12.5f / single654;
												x225 = x225 * single654;
												y223 = y223 * single654;
												x225 = x225 * (1f + (float)Main.rand.Next(-20, 21) * 0.02f);
												y223 = y223 * (1f + (float)Main.rand.Next(-20, 21) * 0.02f);
												Projectile.NewProjectile(vector2353.X, vector2353.Y, x225, y223, 345, 43, 0f, Main.myPlayer, (float)Main.rand.Next(0, 31), 0f);
											}
											if (this.ai[1] >= 180f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
									}
									else if (this.ai[0] == 2f)
									{
										if (this.type != 344)
										{
											flag168 = true;
											this.ai[1] = this.ai[1] + 1f;
											if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 8f == 0f)
											{
												float single655 = 10f;
												Vector2 vector2354 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float x226 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2354.X;
												float y224 = Main.player[this.target].position.Y - vector2354.Y;
												y224 = y224 - Math.Abs(x226) * 0.3f;
												single655 = single655 + Math.Abs(x226) * 0.004f;
												if (single655 > 14f)
												{
													single655 = 14f;
												}
												x226 = x226 + (float)Main.rand.Next(-50, 51);
												y224 = y224 - (float)Main.rand.Next(50, 201);
												float single656 = (float)Math.Sqrt((double)(x226 * x226 + y224 * y224));
												single656 = single655 / single656;
												x226 = x226 * single656;
												y224 = y224 * single656;
												x226 = x226 * (1f + (float)Main.rand.Next(-30, 31) * 0.01f);
												y224 = y224 * (1f + (float)Main.rand.Next(-30, 31) * 0.01f);
												Projectile.NewProjectile(vector2354.X, vector2354.Y, x226, y224, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] >= 300f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
										else
										{
											flag168 = true;
											this.ai[1] = this.ai[1] + 1f;
											if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 15f == 0f)
											{
												float single657 = 4.5f;
												Vector2 vector2355 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 60f + (float)Main.rand.Next(this.height - 80));
												float x227 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2355.X;
												float y225 = Main.player[this.target].position.Y - vector2355.Y;
												y225 = y225 - Math.Abs(x227) * 0.3f;
												single657 = single657 + Math.Abs(x227) * 0.004f;
												x227 = x227 + (float)Main.rand.Next(-50, 51);
												y225 = y225 - (float)Main.rand.Next(50, 201);
												float single658 = (float)Math.Sqrt((double)(x227 * x227 + y225 * y225));
												single658 = single657 / single658;
												x227 = x227 * single658;
												y225 = y225 * single658;
												x227 = x227 * (1f + (float)Main.rand.Next(-30, 31) * 0.01f);
												y225 = y225 * (1f + (float)Main.rand.Next(-30, 31) * 0.01f);
												Projectile.NewProjectile(vector2355.X, vector2355.Y, x227, y225, 346, 57, 0f, Main.myPlayer, 0f, (float)Main.rand.Next(2));
											}
											if (this.ai[1] >= 300f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
									}
									else if (this.ai[0] == 3f)
									{
										single652 = 4f;
										this.ai[1] = this.ai[1] + 1f;
										if (this.ai[1] % 30f == 0f)
										{
											Vector2 vector2356 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float x228 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2356.X;
											float y226 = Main.player[this.target].position.Y - vector2356.Y;
											float single659 = (float)Math.Sqrt((double)(x228 * x228 + y226 * y226));
											single659 = 16f / single659;
											x228 = x228 * single659;
											y226 = y226 * single659;
											x228 = x228 * (1f + (float)Main.rand.Next(-20, 21) * 0.001f);
											y226 = y226 * (1f + (float)Main.rand.Next(-20, 21) * 0.001f);
											Projectile.NewProjectile(vector2356.X, vector2356.Y, x228, y226, 325, 75, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 120f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else if (this.ai[0] == 4f)
									{
										single652 = 4f;
										this.ai[1] = this.ai[1] + 1f;
										if (this.ai[1] % 10f == 0f)
										{
											float single660 = 12f;
											Vector2 vector2357 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float x229 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2357.X;
											float y227 = Main.player[this.target].position.Y - vector2357.Y;
											y227 = y227 - Math.Abs(x229) * 0.2f;
											single660 = single660 + Math.Abs(x229) * 0.002f;
											if (single660 > 16f)
											{
												single660 = 16f;
											}
											x229 = x229 + (float)Main.rand.Next(-50, 51);
											y227 = y227 - (float)Main.rand.Next(50, 201);
											float single661 = (float)Math.Sqrt((double)(x229 * x229 + y227 * y227));
											single661 = single660 / single661;
											x229 = x229 * single661;
											y227 = y227 * single661;
											x229 = x229 * (1f + (float)Main.rand.Next(-30, 31) * 0.005f);
											y227 = y227 * (1f + (float)Main.rand.Next(-30, 31) * 0.005f);
											Projectile.NewProjectile(vector2357.X, vector2357.Y, x229, y227, Main.rand.Next(326, 329), 50, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 240f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) < 50f)
									{
										flag168 = true;
									}
									if (!flag168)
									{
										if (this.direction > 0)
										{
											this.velocity.X = (this.velocity.X * 20f + single652) / 21f;
										}
										if (this.direction < 0)
										{
											this.velocity.X = (this.velocity.X * 20f - single652) / 21f;
										}
									}
									else
									{
										this.velocity.X = this.velocity.X * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
									}
									int num978 = 80;
									int num979 = 20;
									Vector2 vector2358 = new Vector2(base.Center.X - (float)(num978 / 2), this.position.Y + (float)this.height - (float)num979);
									bool flag169 = false;
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
									{
										flag169 = true;
									}
									if (flag169)
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
									else if (!Collision.SolidCollision(vector2358, num978, num979))
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y >= 0.1)
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y + 0.025f;
										}
									}
									else
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y <= -0.2)
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.025f;
										}
										if (this.velocity.Y < -4f)
										{
											this.velocity.Y = -4f;
										}
									}
									if (this.velocity.Y > 10f)
									{
										this.velocity.Y = 10f;
										return;
									}
								}
							}
							else
							{
								if (NPC.crimsonBoss < 0)
								{
									this.active = false;
									this.netUpdate = true;
									return;
								}
								if (this.ai[0] != 0f)
								{
									if (Main.expertMode)
									{
										Vector2 center174 = Main.player[this.target].Center - base.Center;
										center174.Normalize();
										center174 = center174 * 9f;
										this.velocity = ((this.velocity * 99f) + center174) / 100f;
									}
									Vector2 vector2359 = new Vector2(base.Center.X, base.Center.Y);
									float x230 = Main.npc[NPC.crimsonBoss].Center.X - vector2359.X;
									float y228 = Main.npc[NPC.crimsonBoss].Center.Y - vector2359.Y;
									if ((float)Math.Sqrt((double)(x230 * x230 + y228 * y228)) > 700f || this.justHit)
									{
										this.ai[0] = 0f;
										return;
									}
								}
								else
								{
									Vector2 vector2360 = new Vector2(base.Center.X, base.Center.Y);
									float x231 = Main.npc[NPC.crimsonBoss].Center.X - vector2360.X;
									float y229 = Main.npc[NPC.crimsonBoss].Center.Y - vector2360.Y;
									float single662 = (float)Math.Sqrt((double)(x231 * x231 + y229 * y229));
									if (single662 > 90f)
									{
										single662 = 8f / single662;
										x231 = x231 * single662;
										y229 = y229 * single662;
										this.velocity.X = (this.velocity.X * 15f + x231) / 16f;
										this.velocity.Y = (this.velocity.Y * 15f + y229) / 16f;
										return;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 8f)
									{
										this.velocity.Y = this.velocity.Y * 1.05f;
										this.velocity.X = this.velocity.X * 1.05f;
									}
									if (Main.netMode != 1 && (Main.expertMode && Main.rand.Next(100) == 0 || Main.rand.Next(200) == 0))
									{
										this.TargetClosest(true);
										vector2360 = new Vector2(base.Center.X, base.Center.Y);
										x231 = Main.player[this.target].Center.X - vector2360.X;
										y229 = Main.player[this.target].Center.Y - vector2360.Y;
										single662 = (float)Math.Sqrt((double)(x231 * x231 + y229 * y229));
										single662 = 8f / single662;
										this.velocity.X = x231 * single662;
										this.velocity.Y = y229 * single662;
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
								}
							}
						}
						else
						{
							this.noGravity = true;
							this.TargetClosest(true);
							float single663 = 4f;
							float single664 = 0.25f;
							Vector2 vector2361 = new Vector2(base.Center.X, base.Center.Y);
							float x232 = Main.player[this.target].Center.X - vector2361.X;
							float y230 = Main.player[this.target].Center.Y - vector2361.Y - 200f;
							float single665 = (float)Math.Sqrt((double)(x232 * x232 + y230 * y230));
							if (single665 >= 20f)
							{
								single665 = single663 / single665;
								x232 = x232 * single665;
								y230 = y230 * single665;
							}
							else
							{
								x232 = this.velocity.X;
								y230 = this.velocity.Y;
							}
							if (this.velocity.X < x232)
							{
								this.velocity.X = this.velocity.X + single664;
								if (this.velocity.X < 0f && x232 > 0f)
								{
									this.velocity.X = this.velocity.X + single664 * 2f;
								}
							}
							else if (this.velocity.X > x232)
							{
								this.velocity.X = this.velocity.X - single664;
								if (this.velocity.X > 0f && x232 < 0f)
								{
									this.velocity.X = this.velocity.X - single664 * 2f;
								}
							}
							if (this.velocity.Y < y230)
							{
								this.velocity.Y = this.velocity.Y + single664;
								if (this.velocity.Y < 0f && y230 > 0f)
								{
									this.velocity.Y = this.velocity.Y + single664 * 2f;
								}
							}
							else if (this.velocity.Y > y230)
							{
								this.velocity.Y = this.velocity.Y - single664;
								if (this.velocity.Y > 0f && y230 < 0f)
								{
									this.velocity.Y = this.velocity.Y - single664 * 2f;
								}
							}
							if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && Main.netMode != 1)
							{
								this.ai[0] = this.ai[0] + 1f;
								if (this.ai[0] > 8f)
								{
									this.ai[0] = 0f;
									int x233 = (int)(this.position.X + 10f + (float)Main.rand.Next(this.width - 20));
									int y231 = (int)(this.position.Y + (float)this.height + 4f);
									Projectile.NewProjectile((float)x233, (float)y231, 0f, 5f, 264, 20, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
					}
					else
					{
						NPC.golemBoss = this.whoAmI;
						if (this.localAI[0] == 0f && Main.netMode != 1)
						{
							this.localAI[0] = 1f;
							NPC.NewNPC((int)base.Center.X - 84, (int)base.Center.Y - 9, 247, 0, 0f, 0f, 0f, 0f, 255);
							NPC.NewNPC((int)base.Center.X + 78, (int)base.Center.Y - 9, 248, 0, 0f, 0f, 0f, 0f, 255);
							NPC.NewNPC((int)base.Center.X - 3, (int)base.Center.Y - 57, 246, 0, 0f, 0f, 0f, 0f, 255);
						}
						if (this.target >= 0 && Main.player[this.target].dead)
						{
							this.TargetClosest(true);
							if (Main.player[this.target].dead)
							{
								this.noTileCollide = true;
							}
						}
						if (this.alpha > 0)
						{
							NPC nPC295 = this;
							nPC295.alpha = nPC295.alpha - 10;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
							this.ai[1] = 0f;
						}
						bool flag170 = false;
						bool flag171 = false;
						bool flag172 = false;
						this.dontTakeDamage = false;
						for (int g8 = 0; g8 < 200; g8++)
						{
							if (Main.npc[g8].active && Main.npc[g8].type == 246)
							{
								flag170 = true;
							}
							if (Main.npc[g8].active && Main.npc[g8].type == 247)
							{
								flag171 = true;
							}
							if (Main.npc[g8].active && Main.npc[g8].type == 248)
							{
								flag172 = true;
							}
						}
						this.dontTakeDamage = flag170;
						if (!flag171)
						{
							Vector2 vector2362 = new Vector2(base.Center.X - 80f, base.Center.Y - 9f);
							skyBlue = new Color();
							int num980 = Dust.NewDust(vector2362, 8, 8, 31, 0f, 0f, 100, skyBlue, 1f);
							Dust dust102 = Main.dust[num980];
							dust102.alpha = dust102.alpha + Main.rand.Next(100);
							Dust dust103 = Main.dust[num980];
							dust103.velocity = dust103.velocity * 0.2f;
							Main.dust[num980].velocity.Y = Main.dust[num980].velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
							Main.dust[num980].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
							if (Main.rand.Next(10) == 0)
							{
								Vector2 vector2363 = new Vector2(base.Center.X - 80f, base.Center.Y - 9f);
								skyBlue = new Color();
								num980 = Dust.NewDust(vector2363, 8, 8, 6, 0f, 0f, 0, skyBlue, 1f);
								if (Main.rand.Next(20) != 0)
								{
									Main.dust[num980].noGravity = true;
									Dust dust104 = Main.dust[num980];
									dust104.scale = dust104.scale * (1f + (float)Main.rand.Next(10) * 0.1f);
									Main.dust[num980].velocity.Y = Main.dust[num980].velocity.Y - 1f;
								}
							}
						}
						if (!flag172)
						{
							Vector2 vector2364 = new Vector2(base.Center.X + 62f, base.Center.Y - 9f);
							skyBlue = new Color();
							int num981 = Dust.NewDust(vector2364, 8, 8, 31, 0f, 0f, 100, skyBlue, 1f);
							Dust dust105 = Main.dust[num981];
							dust105.alpha = dust105.alpha + Main.rand.Next(100);
							Dust dust106 = Main.dust[num981];
							dust106.velocity = dust106.velocity * 0.2f;
							Main.dust[num981].velocity.Y = Main.dust[num981].velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
							Main.dust[num981].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
							if (Main.rand.Next(10) == 0)
							{
								Vector2 vector2365 = new Vector2(base.Center.X + 62f, base.Center.Y - 9f);
								skyBlue = new Color();
								num981 = Dust.NewDust(vector2365, 8, 8, 6, 0f, 0f, 0, skyBlue, 1f);
								if (Main.rand.Next(20) != 0)
								{
									Main.dust[num981].noGravity = true;
									Dust dust107 = Main.dust[num981];
									dust107.scale = dust107.scale * (1f + (float)Main.rand.Next(10) * 0.1f);
									Main.dust[num981].velocity.Y = Main.dust[num981].velocity.Y - 1f;
								}
							}
						}
						if (this.ai[0] == 0f)
						{
							this.noTileCollide = false;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.8f;
								this.ai[1] = this.ai[1] + 1f;
								if (this.ai[1] > 0f)
								{
									if (!flag171)
									{
										this.ai[1] = this.ai[1] + 2f;
									}
									if (!flag172)
									{
										this.ai[1] = this.ai[1] + 2f;
									}
									if (!flag170)
									{
										this.ai[1] = this.ai[1] + 2f;
									}
									if (this.life < this.lifeMax)
									{
										this.ai[1] = this.ai[1] + 1f;
									}
									if (this.life < this.lifeMax / 2)
									{
										this.ai[1] = this.ai[1] + 4f;
									}
									if (this.life < this.lifeMax / 3)
									{
										this.ai[1] = this.ai[1] + 8f;
									}
								}
								if (this.ai[1] >= 300f)
								{
									this.ai[1] = -20f;
									this.frameCounter = 0;
								}
								else if (this.ai[1] == -1f)
								{
									this.TargetClosest(true);
									this.velocity.X = (float)(4 * this.direction);
									this.velocity.Y = -12.1f;
									this.ai[0] = 1f;
									this.ai[1] = 0f;
								}
							}
						}
						else if (this.ai[0] == 1f)
						{
							if (this.velocity.Y != 0f)
							{
								this.TargetClosest(true);
								if (this.position.X >= Main.player[this.target].position.X || this.position.X + (float)this.width <= Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									if (this.direction < 0)
									{
										this.velocity.X = this.velocity.X - 0.2f;
									}
									else if (this.direction > 0)
									{
										this.velocity.X = this.velocity.X + 0.2f;
									}
									float single666 = 3f;
									if (this.life < this.lifeMax)
									{
										single666 = single666 + 1f;
									}
									if (this.life < this.lifeMax / 2)
									{
										single666 = single666 + 1f;
									}
									if (this.life < this.lifeMax / 4)
									{
										single666 = single666 + 1f;
									}
									if (this.velocity.X < -single666)
									{
										this.velocity.X = -single666;
									}
									if (this.velocity.X > single666)
									{
										this.velocity.X = single666;
									}
								}
								else
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.velocity.Y = this.velocity.Y + 0.2f;
								}
							}
							else
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
								this.ai[0] = 0f;
								for (int h8 = (int)this.position.X - 20; h8 < (int)this.position.X + this.width + 40; h8 = h8 + 20)
								{
									for (int i9 = 0; i9 < 4; i9++)
									{
										Vector2 vector2366 = new Vector2(this.position.X - 20f, this.position.Y + (float)this.height);
										skyBlue = new Color();
										int num982 = Dust.NewDust(vector2366, this.width + 20, 4, 31, 0f, 0f, 100, skyBlue, 1.5f);
										Dust dust108 = Main.dust[num982];
										dust108.velocity = dust108.velocity * 0.2f;
									}
									Vector2 vector2367 = new Vector2((float)(h8 - 20), this.position.Y + (float)this.height - 8f);
									vector24 = new Vector2();
									int num983 = Gore.NewGore(vector2367, vector24, Main.rand.Next(61, 64), 1f);
									Gore gore3 = Main.gore[num983];
									gore3.velocity = gore3.velocity * 0.4f;
								}
							}
						}
						if (this.target <= 0 || this.target == 255 || Main.player[this.target].dead)
						{
							this.TargetClosest(true);
						}
						int num984 = 3000;
						if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num984)
						{
							this.TargetClosest(true);
							if (Math.Abs(base.Center.X - Main.player[this.target].Center.X) + Math.Abs(base.Center.Y - Main.player[this.target].Center.Y) > (float)num984)
							{
								this.active = false;
								return;
							}
						}
					}
				}
				else
				{
					if (Main.wof < 0)
					{
						this.active = false;
						return;
					}
					this.realLife = Main.wof;
					if (Main.npc[Main.wof].life > 0)
					{
						this.life = Main.npc[Main.wof].life;
					}
					this.TargetClosest(true);
					this.position.X = Main.npc[Main.wof].position.X;
					this.direction = Main.npc[Main.wof].direction;
					this.spriteDirection = this.direction;
					float single667 = (float)((Main.wofB + Main.wofT) / 2);
					single667 = (this.ai[0] <= 0f ? (single667 + (float)Main.wofB) / 2f : (single667 + (float)Main.wofT) / 2f);
					single667 = single667 - (float)(this.height / 2);
					if (this.position.Y > single667 + 1f)
					{
						this.velocity.Y = -1f;
					}
					else if (this.position.Y >= single667 - 1f)
					{
						this.velocity.Y = 0f;
						this.position.Y = single667;
					}
					else
					{
						this.velocity.Y = 1f;
					}
					if (this.velocity.Y > 5f)
					{
						this.velocity.Y = 5f;
					}
					if (this.velocity.Y < -5f)
					{
						this.velocity.Y = -5f;
					}
					Vector2 y232 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float x234 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - y232.X;
					float y233 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - y232.Y;
					float single668 = (float)Math.Sqrt((double)(x234 * x234 + y233 * y233));
					x234 = x234 * single668;
					y233 = y233 * single668;
					bool flag173 = true;
					if (this.direction > 0)
					{
						if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) <= this.position.X + (float)(this.width / 2))
						{
							this.rotation = 0f;
							flag173 = false;
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)(-y233), (double)(-x234)) + 3.14f;
						}
					}
					else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) >= this.position.X + (float)(this.width / 2))
					{
						this.rotation = 0f;
						flag173 = false;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)y233, (double)x234) + 3.14f;
					}
					if (Main.netMode != 1)
					{
						int num985 = 4;
						this.localAI[1] = this.localAI[1] + 1f;
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
						{
							this.localAI[1] = this.localAI[1] + 1f;
							num985++;
						}
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
						{
							this.localAI[1] = this.localAI[1] + 1f;
							num985++;
						}
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
						{
							this.localAI[1] = this.localAI[1] + 1f;
							num985 = num985 + 2;
						}
						if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
						{
							this.localAI[1] = this.localAI[1] + 2f;
							num985 = num985 + 3;
						}
						if (Main.expertMode)
						{
							this.localAI[1] = this.localAI[1] + 0.5f;
							num985++;
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
							{
								this.localAI[1] = this.localAI[1] + 2f;
								num985 = num985 + 3;
							}
						}
						if (this.localAI[2] == 0f)
						{
							if (this.localAI[1] > 600f)
							{
								this.localAI[2] = 1f;
								this.localAI[1] = 0f;
								return;
							}
						}
						else if (this.localAI[1] > 45f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.localAI[1] = 0f;
							this.localAI[2] = this.localAI[2] + 1f;
							if (this.localAI[2] >= (float)num985)
							{
								this.localAI[2] = 0f;
							}
							if (flag173)
							{
								float single669 = 9f;
								int num986 = 11;
								int num987 = 83;
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
								{
									num986++;
									single669 = single669 + 1f;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
								{
									num986++;
									single669 = single669 + 1f;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
								{
									num986 = num986 + 2;
									single669 = single669 + 2f;
								}
								y232 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								x234 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - y232.X;
								y233 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - y232.Y;
								single668 = (float)Math.Sqrt((double)(x234 * x234 + y233 * y233));
								single668 = single669 / single668;
								x234 = x234 * single668;
								y233 = y233 * single668;
								y232.X = y232.X + x234;
								y232.Y = y232.Y + y233;
								Projectile.NewProjectile(y232.X, y232.Y, x234, y233, num987, num986, 0f, Main.myPlayer, 0f, 0f);
								return;
							}
						}
					}
				}
			}
			else
			{
				this.TargetClosest(true);
				float single670 = 12f;
				Vector2 vector2368 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float x235 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector2368.X;
				float y234 = Main.player[this.target].position.Y - vector2368.Y;
				float single671 = (float)Math.Sqrt((double)(x235 * x235 + y234 * y234));
				single671 = single670 / single671;
				x235 = x235 * single671;
				y234 = y234 * single671;
				bool flag174 = false;
				if (this.directionY < 0)
				{
					this.rotation = (float)(Math.Atan2((double)y234, (double)x235) + 1.57);
					flag174 = ((double)this.rotation < -1.2 || (double)this.rotation > 1.2 ? false : true);
					if ((double)this.rotation < -0.8)
					{
						this.rotation = -0.8f;
					}
					else if ((double)this.rotation > 0.8)
					{
						this.rotation = 0.8f;
					}
					if (this.velocity.X != 0f)
					{
						this.velocity.X = this.velocity.X * 0.9f;
						if ((double)this.velocity.X > -0.1 || (double)this.velocity.X < 0.1)
						{
							this.netUpdate = true;
							this.velocity.X = 0f;
						}
					}
				}
				if (this.ai[0] > 0f)
				{
					if (this.ai[0] == 200f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
					}
					this.ai[0] = this.ai[0] - 1f;
				}
				if (Main.netMode != 1 && flag174 && this.ai[0] == 0f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
				{
					this.ai[0] = 200f;
					int num988 = 10;
					int num989 = 31;
					int num990 = Projectile.NewProjectile(vector2368.X, vector2368.Y, x235, y234, num989, num988, 0f, Main.myPlayer, 0f, 0f);
					Main.projectile[num990].ai[0] = 2f;
					Main.projectile[num990].timeLeft = 300;
					Main.projectile[num990].friendly = false;
					NetMessage.SendData(27, -1, -1, "", num990, 0f, 0f, 0f, 0, 0, 0);
					this.netUpdate = true;
				}
				try
				{
					int x236 = (int)this.position.X / 16;
					int x237 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int x238 = (int)(this.position.X + (float)this.width) / 16;
					int y235 = (int)(this.position.Y + (float)this.height) / 16;
					bool flag175 = false;
					if (Main.tile[x236, y235] == null)
					{
						Main.tile[x236, y235] = new Tile();
					}
					if (Main.tile[x237, y235] == null)
					{
						Main.tile[x236, y235] = new Tile();
					}
					if (Main.tile[x238, y235] == null)
					{
						Main.tile[x236, y235] = new Tile();
					}
					if (Main.tile[x236, y235].nactive() && Main.tileSolid[Main.tile[x236, y235].type] || Main.tile[x237, y235].nactive() && Main.tileSolid[Main.tile[x237, y235].type] || Main.tile[x238, y235].nactive() && Main.tileSolid[Main.tile[x238, y235].type])
					{
						flag175 = true;
					}
					if (!flag175)
					{
						this.noGravity = false;
						this.noTileCollide = false;
						if (Main.rand.Next(2) == 0)
						{
							Vector2 vector2369 = new Vector2(this.position.X - 4f, this.position.Y + (float)this.height - 8f);
							float y236 = this.velocity.Y / 2f;
							skyBlue = new Color();
							int num991 = Dust.NewDust(vector2369, this.width + 8, 24, 32, 0f, y236, 0, skyBlue, 1f);
							Main.dust[num991].velocity.X = Main.dust[num991].velocity.X * 0.4f;
							Main.dust[num991].velocity.Y = Main.dust[num991].velocity.Y * -1f;
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num991].noGravity = true;
								Dust dust109 = Main.dust[num991];
								dust109.scale = dust109.scale + 0.2f;
							}
						}
					}
					else
					{
						this.noGravity = true;
						this.noTileCollide = true;
						this.velocity.Y = -0.2f;
					}
				}
				catch (Exception ex)
				{
#if DEBUG
					Console.WriteLine(ex);
					System.Diagnostics.Debugger.Break();

#endif
				}
			}
		}

		public static bool AnyNPCs(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return true;
				}
			}
			return false;
		}

		public int BannerID()
		{
			if (this.netID >= -10)
			{
				return this.netID;
			}
			return this.type;
		}

		public void BigMimicSpawnSmoke()
		{
			if (Main.netMode == 2)
			{
				NetMessage.SendData(51, -1, -1, "", this.whoAmI, 4f, 0f, 0f, 0, 0, 0);
				return;
			}
			for (int i = 0; i < 20; i++)
			{
				Vector2 vector2 = this.position;
				int num = this.width;
				int num1 = this.height;
				Color color = new Color();
				int num2 = Dust.NewDust(vector2, num, num1, 54, 0f, 0f, 50, color, 1.5f);
				Dust dust = Main.dust[num2];
				dust.velocity = dust.velocity * 2f;
				Main.dust[num2].noGravity = true;
			}
			for (int j = 0; j < 3; j++)
			{
				for (int k = 0; k < 2; k++)
				{
					int num3 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width * j) * 0.45f - 20f, this.position.Y + (float)(this.height * k) * 0.5f + 10f), new Vector2(0f, 0f), 99, 1.1f);
					Gore gore = Main.gore[num3];
					gore.velocity = gore.velocity * 0.3f;
				}
			}
		}

		public static bool BigMimicSummonCheck(int x, int y)
		{
			if (Main.netMode == 1 || !Main.hardMode)
			{
				return false;
			}
			int num = Chest.FindChest(x, y);
			if (num < 0)
			{
				return false;
			}
			int num1 = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 40; i++)
			{
				ushort num4 = Main.tile[Main.chest[num].x, Main.chest[num].y].type;
				int num5 = Main.tile[Main.chest[num].x, Main.chest[num].y].frameX / 36;
				if (num4 == 21 && (num5 < 5 || num5 > 6) && Main.chest[num].item[i] != null && Main.chest[num].item[i].type > 0)
				{
					if (Main.chest[num].item[i].type == 3092)
					{
						num1 = num1 + Main.chest[num].item[i].stack;
					}
					else if (Main.chest[num].item[i].type != 3091)
					{
						num3++;
					}
					else
					{
						num2 = num2 + Main.chest[num].item[i].stack;
					}
				}
			}
			if (num3 == 0 && num1 + num2 == 1)
			{
				if (num1 != 1)
				{
				}
				if (Main.tile[x, y].type == 21)
				{
					if (Main.tile[x, y].frameX % 36 != 0)
					{
						x--;
					}
					if (Main.tile[x, y].frameY % 36 != 0)
					{
						y--;
					}
					Chest.FindChest(x, y);
					for (int j = x; j <= x + 1; j++)
					{
						for (int k = y; k <= y + 1; k++)
						{
							if (Main.tile[j, k].type == 21)
							{
								Main.tile[j, k].active(false);
							}
						}
					}
					for (int l = 0; l < 40; l++)
					{
						Main.chest[num].item[l] = new Item();
					}
					Chest.DestroyChest(x, y);
					NetMessage.SendTileSquare(-1, x, y, 3);
				}
				int num6 = 475;
				if (num2 == 1)
				{
					num6 = (!WorldGen.crimson ? 473 : 474);
				}
				int num7 = NPC.NewNPC(x * 16 + 16, y * 16 + 32, num6, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num7].whoAmI = num7;
				NetMessage.SendData(23, -1, -1, "", num7, 0f, 0f, 0f, 0, 0, 0);
				Main.npc[num7].BigMimicSpawnSmoke();
			}
			return false;
		}

		public bool CanBeChasedBy(object attacker = null, bool ignoreDontTakeDamage = false)
		{
			if (!this.active || !this.chaseable || this.lifeMax <= 5 || this.dontTakeDamage && !ignoreDontTakeDamage || this.friendly)
			{
				return false;
			}
			return !this.immortal;
		}

		public static bool CanReleaseNPCs(int who)
		{
			float single = 0.7f;
			if (Main.netMode != 1)
			{
				single = single + 0.05f;
			}
			int num = 0;
			int num1 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					num1++;
					if (Main.npc[i].releaseOwner == who)
					{
						num++;
					}
				}
			}
			int num2 = 0;
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					num2++;
				}
			}
			int num3 = (int)(200f * single / (float)num2);
			if ((float)num1 < 200f * single && num < num3)
			{
				return true;
			}
			return false;
		}

		public static void CatchNPC(int i, int who = -1)
		{
			if (!Main.npc[i].active)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				Main.npc[i].active = false;
				NetMessage.SendData(70, -1, -1, "", i, (float)who, 0f, 0f, 0, 0, 0);
				return;
			}
			if (Main.npc[i].catchItem > 0)
			{
				int num = Main.npc[i].type;
				(new Item()).SetDefaults(Main.npc[i].catchItem, false);
				Item.NewItem((int)Main.player[who].Center.X, (int)Main.player[who].Center.Y, 0, 0, Main.npc[i].catchItem, 1, false, 0, true);
				Main.npc[i].active = false;
				NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		public void CheckActive()
		{
			if (this.active)
			{
				int num = this.type;
				if (num <= 267)
				{
					if (num <= 119)
					{
						if (num > 41)
						{
							switch (num)
							{
								case 88:
								case 89:
								case 90:
								case 91:
								case 92:
								case 96:
								case 97:
								case 99:
								case 100:
								{
									break;
								}
								case 93:
								case 94:
								case 95:
								case 98:
								{
									goto Label0;
								}
								default:
								{
									switch (num)
									{
										case 113:
										case 114:
										case 115:
										case 118:
										case 119:
										{
											break;
										}
										default:
										{
											goto Label0;
										}
									}
									break;
								}
							}
						}
						else
						{
							switch (num)
							{
								case 8:
								case 9:
								case 11:
								case 12:
								case 14:
								case 15:
								{
									break;
								}
								case 10:
								case 13:
								{
									goto Label0;
								}
								default:
								{
									switch (num)
									{
										case 40:
										case 41:
										{
											break;
										}
										default:
										{
											goto Label0;
										}
									}
									break;
								}
							}
						}
					}
					else if (num > 249)
					{
						if (num == 263 || num == 267)
						{
							return;
						}
						goto Label0;
					}
					else
					{
						switch (num)
						{
							case 134:
							case 135:
							case 136:
							{
								break;
							}
							default:
							{
								switch (num)
								{
									case 246:
									case 247:
									case 248:
									case 249:
									{
										break;
									}
									default:
									{
										goto Label0;
									}
								}
								break;
							}
						}
					}
				}
				else if (num <= 422)
				{
					if (num > 380)
					{
						switch (num)
						{
							case 396:
							case 397:
							case 398:
							case 400:
							{
								break;
							}
							case 399:
							{
								goto Label0;
							}
							default:
							{
								if (num == 422)
								{
									break;
								}
								goto Label0;
							}
						}
					}
					else if (num != 328)
					{
						switch (num)
						{
							case 379:
							case 380:
							{
								break;
							}
							default:
							{
								goto Label0;
							}
						}
					}
				}
				else if (num <= 488)
				{
					switch (num)
					{
						case 437:
						case 438:
						case 439:
						case 440:
						{
							break;
						}
						default:
						{
							if (num == 488)
							{
								break;
							}
							goto Label0;
						}
					}
				}
				else if (num != 493 && num != 507 && num != 517)
				{
					goto Label0;
				}
				return;
			}
			return;
		Label0:
			if (this.townNPC || this.type == 453)
			{
				Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && rectangle.Intersects(new Rectangle((int)Main.player[i].position.X, (int)Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
					{
						Player player = Main.player[i];
						player.townNPCs = player.townNPCs + this.npcSlots;
					}
				}
				if (this.type != 453)
				{
					return;
				}
			}
			bool flag = false;
			Rectangle rectangle1 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.activeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
			Rectangle rectangle2 = new Rectangle((int)((double)(this.position.X + (float)(this.width / 2)) - (double)NPC.sWidth * 0.5 - (double)this.width), (int)((double)(this.position.Y + (float)(this.height / 2)) - (double)NPC.sHeight * 0.5 - (double)this.height), NPC.sWidth + this.width * 2, NPC.sHeight + this.height * 2);
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					if (rectangle1.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
					{
						flag = true;
						if (this.type != 25 && this.type != 30 && this.type != 33 && this.releaseOwner == 255 && this.lifeMax > 0)
						{
							if (!Main.slimeRain || !Main.slimeRainNPC[this.type])
							{
								Player player1 = Main.player[j];
								player1.activeNPCs = player1.activeNPCs + this.npcSlots;
							}
							else
							{
								Player player2 = Main.player[j];
								player2.activeNPCs = player2.activeNPCs + this.npcSlots * Main.slimeRainNPCSlots;
							}
						}
					}
					if (rectangle2.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
					{
						this.timeLeft = NPC.activeTime;
					}
					if (this.boss)
					{
						flag = true;
					}
					int num1 = this.type;
					if (num1 <= 39)
					{
						if (num1 <= 10)
						{
							if (num1 == 7 || num1 == 10)
							{
								goto Label3;
							}
							goto Label2;
						}
						else if (num1 != 13)
						{
							switch (num1)
							{
								case 35:
								case 36:
								case 39:
								{
									break;
								}
								default:
								{
									goto Label2;
								}
							}
						}
					}
					else if (num1 > 131)
					{
						switch (num1)
						{
							case 392:
							case 393:
							case 394:
							{
								break;
							}
							default:
							{
								if (num1 == 399)
								{
									if (this.timeLeft == NPC.activeTime)
									{
										this.timeLeft = NPC.activeTime * 30;
									}
									flag = true;
									goto Label2;
								}
								else
								{
									switch (num1)
									{
										case 491:
										case 492:
										{
											break;
										}
										default:
										{
											goto Label2;
										}
									}
								}
								break;
							}
						}
					}
					else if (num1 != 87)
					{
						switch (num1)
						{
							case 127:
							case 128:
							case 129:
							case 130:
							case 131:
							{
								break;
							}
							default:
							{
								goto Label2;
							}
						}
					}
				Label3:
					flag = true;
				}
			Label2:
				continue;
			}
			NPC nPC = this;
			nPC.timeLeft = nPC.timeLeft - 1;
			if (this.timeLeft <= 0)
			{
				flag = false;
			}
			if (!flag && Main.netMode != 1)
			{
				NPC.noSpawnCycle = true;
				this.active = false;
				if (Main.netMode == 2)
				{
					this.netSkip = -1;
					this.life = 0;
					NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
				if (this.aiStyle == 6)
				{
					for (int k = (int)this.ai[0]; k > 0; k = (int)Main.npc[k].ai[0])
					{
						if (Main.npc[k].active)
						{
							Main.npc[k].active = false;
							if (Main.netMode == 2)
							{
								Main.npc[k].life = 0;
								Main.npc[k].netSkip = -1;
								NetMessage.SendData(23, -1, -1, "", k, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
					return;
				}
				else
				{
					return;
				}
			}
			else
			{
				return;
			}
		}

		public int checkArmorPenetration(int armorPenetration)
		{
			if (armorPenetration <= 0)
			{
				return 0;
			}
			if (armorPenetration <= this.defense)
			{
				return armorPenetration / 2;
			}
			return this.defense / 2;
		}

		public void checkDead()
		{
			int num;
			if (!this.active)
			{
				return;
			}
			if (this.realLife >= 0 && this.realLife != this.whoAmI)
			{
				return;
			}
			if (this.life <= 0)
			{
				if (this.type == 397 || this.type == 396)
				{
					if (this.ai[0] != -2f)
					{
						this.ai[0] = -2f;
						this.life = this.lifeMax;
						this.netUpdate = true;
						this.dontTakeDamage = true;
						if (Main.netMode != 1)
						{
							int num1 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 400, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num1].ai[3] = this.ai[3];
							Main.npc[num1].netUpdate = true;
						}
					}
					return;
				}
				if (this.type == 398 && this.ai[0] != 2f)
				{
					this.ai[0] = 2f;
					this.life = this.lifeMax;
					this.netUpdate = true;
					this.dontTakeDamage = true;
					return;
				}
				if ((this.type == 517 || this.type == 422 || this.type == 507 || this.type == 493) && this.ai[2] != 1f)
				{
					this.ai[2] = 1f;
					this.ai[1] = 0f;
					this.life = this.lifeMax;
					this.dontTakeDamage = true;
					this.netUpdate = true;
					return;
				}
				NPC.noSpawnCycle = true;
				if (this.townNPC && this.type != 37 && this.type != 453)
				{
					string str = this.name;
					if (this.displayName != "")
					{
						str = this.displayName;
					}
					if (Main.netMode == 0)
					{
						if (this.type != 369)
						{
							Main.NewText(string.Concat(str, Lang.misc[19]), 255, 25, 25, false);
						}
						else
						{
							Main.NewText(string.Concat(str, Lang.misc[36]), 255, 25, 25, false);
						}
					}
					else if (Main.netMode == 2)
					{
						if (this.type != 369)
						{
							NetMessage.SendData(25, -1, -1, string.Concat(str, Lang.misc[19]), 255, 255f, 25f, 25f, 0, 0, 0);
						}
						else
						{
							NetMessage.SendData(25, -1, -1, string.Concat(str, Lang.misc[36]), 255, 255f, 25f, 25f, 0, 0, 0);
						}
					}
				}
				if (Main.netMode != 1 && !Main.dayTime && this.type == 54 && !NPC.AnyNPCs(35))
				{
					int num2 = 0;
					while (num2 < 255)
					{
						if (!Main.player[num2].active || Main.player[num2].dead || !Main.player[num2].killClothier)
						{
							num2++;
						}
						else
						{
							NPC.SpawnSkeletron();
							break;
						}
					}
				}
				if (this.townNPC && Main.netMode != 1 && this.homeless && WorldGen.spawnNPC == this.type)
				{
					WorldGen.spawnNPC = 0;
				}
				if (this.soundKilled > 0)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					bool flag = true;
					int num3 = 0;
					while (num3 < 200)
					{
						if (num3 == this.whoAmI || !Main.npc[num3].active || Main.npc[num3].type != 13 && Main.npc[num3].type != 14 && Main.npc[num3].type != 15)
						{
							num3++;
						}
						else
						{
							flag = false;
							break;
						}
					}
					if (!flag)
					{
						this.NPCLoot();
					}
					else
					{
						this.boss = true;
						this.NPCLoot();
					}
				}
				else if (this.type != 134)
				{
					this.NPCLoot();
				}
				else
				{
					Vector2 vector2 = this.position;
					Vector2 center = Main.player[this.target].Center;
					float single = 1E+08f;
					Vector2 vector21 = this.position;
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && (Main.npc[i].type == 134 || Main.npc[i].type == 135 || Main.npc[i].type == 136))
						{
							float single1 = Math.Abs(Main.npc[i].Center.X - center.X) + Math.Abs(Main.npc[i].Center.Y - center.Y);
							if (single1 < single)
							{
								single = single1;
								vector21 = Main.npc[i].position;
							}
						}
					}
					this.position = vector21;
					this.NPCLoot();
					this.position = vector2;
				}
				this.active = false;
				if (Main.snowMoon)
				{
					int num4 = 0;
					string str1 = "";
					int[] numArray = new int[] { 0, 25, 15, 10, 30, 100, 160, 180, 200, 250, 300, 375, 450, 525, 675, 850, 1025, 1325, 1550, 2000, 0 };
					num4 = numArray[NPC.waveCount];
					switch (NPC.waveCount)
					{
						case 1:
						{
							str1 = "Wave 2: Zombie Elf and Elf Archer";
							break;
						}
						case 2:
						{
							str1 = "Wave 3: Zombie Elf, Elf Archer, Gingerbread Man, and Nutcracker";
							break;
						}
						case 3:
						{
							str1 = "Wave 4: Everscream, Zombie Elf, Elf Archer, and Gingerbread Man";
							break;
						}
						case 4:
						{
							str1 = "Wave 5: Everscream, Zombie Elf, Elf Archer, and Nutcracker";
							break;
						}
						case 5:
						{
							str1 = "Wave 6: Everscream, Elf Archer, Nutcracker, and Elf Copter";
							break;
						}
						case 6:
						{
							str1 = "Wave 7: Santa-NK1, Gingerbread Man, Elf Archer, and Zombie Elf";
							break;
						}
						case 7:
						{
							str1 = "Wave 8: Santa-NK1, Elf Copter, Elf Archer, Nutcracker, and Krampus";
							break;
						}
						case 8:
						{
							str1 = "Wave 9: Santa-NK1, Everscream, Nutcracker, Elf Copter, and Gingerbread Man";
							break;
						}
						case 9:
						{
							str1 = "Wave 10: Santa-NK1, Everscream, Krampus, Zombie Elf, and Elf Helicopter";
							break;
						}
						case 10:
						{
							str1 = "Wave 11: Ice Queen, Flocko, Zombie Elf, and Gingerbread Man";
							break;
						}
						case 11:
						{
							str1 = "Wave 12: Ice Queen, Everscream, Gingerbread Man, Yeti, and Zombie Elf";
							break;
						}
						case 12:
						{
							str1 = "Wave 13: Ice Queen, Santa-NK1, Gingerbread Man, Flocko, Yeti, and Elf Helicopter";
							break;
						}
						case 13:
						{
							str1 = "Wave 14: Ice Queen, Santa-NK1, Everscream, Yeti, and Krampus";
							break;
						}
						case 14:
						{
							str1 = "Wave 15: Ice Queen, Santa-NK1, Everscream, Yeti, and Elf Copter";
							break;
						}
						case 15:
						{
							str1 = "Wave 16: Ice Queen, Santa-NK1, Everscream, Yeti and Flocko";
							break;
						}
						case 16:
						{
							str1 = "Wave 17: Ice Queen, Santa-NK1, Everscream, Yeti, Krampus, Elf Copter";
							break;
						}
						case 17:
						{
							str1 = "Wave 18: Ice Queen, Santa-NK1, Everscream, Yeti, Nutcracker, Krampus";
							break;
						}
						case 18:
						{
							str1 = "Wave 19: Ice Queen, Santa-NK1, Everscream, Yeti";
							break;
						}
						case 19:
						{
							str1 = "Final Wave: Ice Queen, Santa-NK1, and Everscream";
							break;
						}
					}
					float single2 = 0f;
					switch (this.type)
					{
						case 338:
						case 339:
						case 340:
						{
							single2 = 1f;
							break;
						}
						case 341:
						{
							single2 = 20f;
							break;
						}
						case 342:
						{
							single2 = 2f;
							break;
						}
						case 343:
						{
							single2 = 18f;
							break;
						}
						case 344:
						{
							single2 = 50f;
							break;
						}
						case 345:
						{
							single2 = 150f;
							break;
						}
						case 346:
						{
							single2 = 100f;
							break;
						}
						case 347:
						{
							single2 = 8f;
							break;
						}
						case 348:
						case 349:
						{
							single2 = 4f;
							break;
						}
						case 350:
						{
							single2 = 3f;
							break;
						}
					}
					if (Main.expertMode)
					{
						single2 = single2 * 2f;
					}
					float single3 = NPC.waveKills;
					NPC.waveKills = NPC.waveKills + single2;
					if (NPC.waveKills >= (float)num4 && num4 != 0)
					{
						NPC.waveKills = 0f;
						NPC.waveCount = NPC.waveCount + 1;
						num4 = numArray[NPC.waveCount];
						if (str1 != "")
						{
							if (Main.netMode == 0)
							{
								Main.NewText(str1, 175, 75, 255, false);
							}
							else if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, str1, 255, 175f, 75f, 255f, 0, 0, 0);
							}
							if (NPC.waveCount == 15)
							{
								AchievementsHelper.NotifyProgressionEvent(14);
							}
						}
					}
					if (NPC.waveKills != single3 && single2 != 0f)
					{
						if (Main.netMode != 1)
						{
							Main.ReportInvasionProgress((int)NPC.waveKills, num4, 1, NPC.waveCount);
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 1f, (float)NPC.waveCount, 0, 0, 0);
						}
					}
				}
				if (Main.pumpkinMoon)
				{
					int num5 = 0;
					string str2 = "";
					int[] numArray1 = new int[] { 0, 25, 40, 50, 80, 100, 160, 180, 200, 250, 300, 375, 450, 525, 675, 0 };
					num5 = numArray1[NPC.waveCount];
					switch (NPC.waveCount)
					{
						case 1:
						{
							str2 = string.Concat("Wave 2: ", Main.npcName[305], " and ", Main.npcName[326]);
							break;
						}
						case 2:
						{
							string[] strArrays = new string[] { "Wave 3: ", Main.npcName[305], ", ", Main.npcName[326], ", and ", Main.npcName[329] };
							str2 = string.Concat(strArrays);
							break;
						}
						case 3:
						{
							string[] strArrays1 = new string[] { "Wave 4: ", Main.npcName[305], ", ", Main.npcName[326], ", ", Main.npcName[329], ", and ", Main.npcName[325] };
							str2 = string.Concat(strArrays1);
							break;
						}
						case 4:
						{
							string[] strArrays2 = new string[] { "Wave 5: ", Main.npcName[305], ", ", Main.npcName[326], ", ", Main.npcName[329], ", ", Main.npcName[330], ", and ", Main.npcName[325] };
							str2 = string.Concat(strArrays2);
							break;
						}
						case 5:
						{
							string[] strArrays3 = new string[] { "Wave 6: ", Main.npcName[326], ", ", Main.npcName[329], ", ", Main.npcName[330], ", and ", Main.npcName[325] };
							str2 = string.Concat(strArrays3);
							break;
						}
						case 6:
						{
							string[] strArrays4 = new string[] { "Wave 7: ", Main.npcName[305], ", ", Main.npcName[329], ", ", Main.npcName[330], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays4);
							break;
						}
						case 7:
						{
							string[] strArrays5 = new string[] { "Wave 8: ", Main.npcName[326], ", ", Main.npcName[329], ", ", Main.npcName[330], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays5);
							break;
						}
						case 8:
						{
							string[] strArrays6 = new string[] { "Wave 9: ", Main.npcName[305], ", ", Main.npcName[315], ", ", Main.npcName[325], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays6);
							break;
						}
						case 9:
						{
							string[] strArrays7 = new string[] { "Wave 10: ", Main.npcName[326], ", ", Main.npcName[329], ", ", Main.npcName[330], ", ", Main.npcName[315], ", ", Main.npcName[325], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays7);
							break;
						}
						case 10:
						{
							string[] strArrays8 = new string[] { "Wave 11: ", Main.npcName[305], ", ", Main.npcName[326], ", ", Main.npcName[329], ", ", Main.npcName[330], ", ", Main.npcName[315], ", ", Main.npcName[325], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays8);
							break;
						}
						case 11:
						{
							string[] strArrays9 = new string[] { "Wave 12: ", Main.npcName[326], ", ", Main.npcName[329], ", ", Main.npcName[330], ", ", Main.npcName[315], ", ", Main.npcName[325], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays9);
							break;
						}
						case 12:
						{
							string[] strArrays10 = new string[] { "Wave 13: ", Main.npcName[329], ", ", Main.npcName[330], ", ", Main.npcName[315], ", ", Main.npcName[325], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays10);
							break;
						}
						case 13:
						{
							string[] strArrays11 = new string[] { "Wave 14: ", Main.npcName[315], ", ", Main.npcName[325], ", and ", Main.npcName[327] };
							str2 = string.Concat(strArrays11);
							break;
						}
						case 14:
						{
							str2 = string.Concat("Final Wave: ", Main.npcName[325], ", and ", Main.npcName[327]);
							break;
						}
					}
					float single4 = 0f;
					switch (this.type)
					{
						case 305:
						case 306:
						case 307:
						case 308:
						case 309:
						case 310:
						case 311:
						case 312:
						case 313:
						case 314:
						{
							single4 = 1f;
							goto case 328;
						}
						case 315:
						{
							single4 = 25f;
							goto case 328;
						}
						case 316:
						case 317:
						case 318:
						case 319:
						case 320:
						case 321:
						case 322:
						case 323:
						case 324:
						case 328:
						{
							if (Main.expertMode)
							{
								single4 = single4 * 2f;
							}
							float single5 = NPC.waveKills;
							NPC.waveKills = NPC.waveKills + single4;
							if (NPC.waveKills >= (float)num5 && num5 != 0)
							{
								NPC.waveKills = 0f;
								NPC.waveCount = NPC.waveCount + 1;
								num5 = numArray1[NPC.waveCount];
								if (str2 != "")
								{
									if (Main.netMode == 0)
									{
										Main.NewText(str2, 175, 75, 255, false);
									}
									else if (Main.netMode == 2)
									{
										NetMessage.SendData(25, -1, -1, str2, 255, 175f, 75f, 255f, 0, 0, 0);
									}
									if (NPC.waveCount == 15)
									{
										AchievementsHelper.NotifyProgressionEvent(15);
									}
								}
							}
							if (NPC.waveKills == single5 || single4 == 0f)
							{
								break;
							}
							if (Main.netMode != 1)
							{
								Main.ReportInvasionProgress((int)NPC.waveKills, num5, 2, NPC.waveCount);
							}
							if (Main.netMode != 2)
							{
								break;
							}
							NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, 2f, (float)NPC.waveCount, 0, 0, 0);
							break;
						}
						case 325:
						{
							single4 = 75f;
							goto case 328;
						}
						case 326:
						{
							single4 = 2f;
							goto case 328;
						}
						case 327:
						{
							single4 = 150f;
							goto case 328;
						}
						case 329:
						{
							single4 = 4f;
							goto case 328;
						}
						case 330:
						{
							single4 = 8f;
							goto case 328;
						}
						default:
						{
							goto case 328;
						}
					}
				}
				num = 0;
				int num6 = this.type;
				if (num6 > 145)
				{
					if (num6 > 395)
					{
						if (num6 == 471)
						{
							num = 1;
						}
						if (num6 == 491)
						{
							num = 3;
						}
					}
					else
					{
						switch (num6)
						{
							case 212:
							case 213:
							case 214:
							case 215:
							case 216:
								{
									break;
								}
							case 381:
							case 382:
							case 383:
							case 385:
							case 386:
							case 388:
							case 389:
							case 390:
							case 391:
							case 395:
								{
									num = 4;
									break;
								}
							default:
								{
									break;
								}
						}
					}
				}
				else
				{
					switch (num6)
					{
						case 26:
						case 27:
						case 28:
						case 29:
						case 111:
							{
								num = 1;
								break;
							}
						case 143:
						case 144:
						case 145:
							{
								num = 2;
								break;
							}
					}
				}

				if (num != 0 && num == Main.invasionType)
				{
					int num7 = 1;
					int num8 = this.type;
					if (num8 <= 395)
					{
						if (num8 == 216)
						{
							num7 = 5;
						}
						else if (num8 == 395)
						{
							num7 = 10;
						}
					}
					else if (num8 == 471)
					{
						num7 = 10;
					}
					else if (num8 == 491)
					{
						num7 = 10;
					}
					Main.invasionSize = Main.invasionSize - num7;
					if (Main.invasionSize < 0)
					{
						Main.invasionSize = 0;
					}
					if (Main.netMode != 1)
					{
						Main.ReportInvasionProgress(Main.invasionSizeStart - Main.invasionSize, Main.invasionSizeStart, num + 2, 0);
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(78, -1, -1, "", Main.invasionProgress, (float)Main.invasionProgressMax, (float)Main.invasionProgressIcon, 0f, 0, 0, 0);
					}
				}
			}
			return;
		}

		public void CheckDrowning()
		{
			bool flag = Collision.DrownCollision(this.position, this.width, this.height, 1f);
			if (Main.netMode != 1)
			{
				if (!flag)
				{
					NPC nPC = this;
					nPC.breath = nPC.breath + 3;
					if (this.breath > 200)
					{
						this.breath = 200;
					}
					this.breathCounter = 0;
				}
				else
				{
					NPC nPC1 = this;
					int num = nPC1.breathCounter + 1;
					int num1 = num;
					nPC1.breathCounter = num;
					if (num1 >= 7)
					{
						this.breathCounter = 0;
						NPC nPC2 = this;
						nPC2.breath = nPC2.breath - 1;
						if (this.breath <= 0)
						{
							this.friendlyRegen = 0;
							this.breath = 0;
							NPC nPC3 = this;
							nPC3.life = nPC3.life - 2;
							if (this.life % 24 < 2)
							{
								this.netUpdate = true;
							}
							if (this.life <= 0)
							{
								this.life = 1;
								this.StrikeNPCNoInteraction(2, 0f, 0, false, false, false);
								if (Main.netMode != 0)
								{
									NetMessage.SendData(28, -1, -1, "", this.whoAmI, 2f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
			}
			if (flag && Main.rand.Next(20) == 0 && !this.lavaWet && !this.honeyWet)
			{
				int num2 = 0;
				int num3 = 0;
				if (this.type == 369)
				{
					num3 = 8;
				}
				Vector2 vector2 = new Vector2(this.position.X + (float)((10 + num2) * this.direction), this.position.Y + (float)num3 + 4f);
				Color color = new Color();
				Dust.NewDust(vector2, this.width - 8, 8, 34, 0f, 0f, 0, color, 1.2f);
			}
		}

		public object Clone()
		{
			return base.MemberwiseClone();
		}

		public static int CountNPCS(int Type)
		{
			int num = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					num++;
				}
			}
			return num;
		}

		public void DelBuff(int b)
		{
			this.buffTime[b] = 0;
			this.buffType[b] = 0;
			for (int i = 0; i < 4; i++)
			{
				if (this.buffTime[i] == 0 || this.buffType[i] == 0)
				{
					for (int j = i + 1; j < 5; j++)
					{
						this.buffTime[j - 1] = this.buffTime[j];
						this.buffType[j - 1] = this.buffType[j];
						this.buffTime[j] = 0;
						this.buffType[j] = 0;
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		public void DropBossBags()
		{
			int num = -1;
			if (this.type == 50)
			{
				num = 3318;
			}
			if (this.type == 4)
			{
				num = 3319;
			}
			if (this.type >= 13 && this.type <= 15)
			{
				num = 3320;
			}
			if (this.type == 266)
			{
				num = 3321;
			}
			if (this.type == 222)
			{
				num = 3322;
			}
			if (this.type == 35)
			{
				num = 3323;
			}
			if (this.type == 113)
			{
				num = 3324;
			}
			if (this.type == 134)
			{
				num = 3325;
			}
			if (this.type == 125 || this.type == 126)
			{
				num = 3326;
			}
			if (this.type == 127)
			{
				num = 3327;
			}
			if (this.type == 262)
			{
				num = 3328;
			}
			if (this.type == 245)
			{
				num = 3329;
			}
			if (this.type == 370)
			{
				num = 3330;
			}
			if (this.type == 439)
			{
				num = 3331;
			}
			if (this.type == 398)
			{
				num = 3332;
			}
			if (num > 0)
			{
				if (Main.netMode == 2)
				{
					int num1 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, true, 0, false);
					Main.itemLockoutTime[num1] = 54000;
					for (int i = 0; i < 255; i++)
					{
						if (this.playerInteraction[i] && Main.player[i].active)
						{
							NetMessage.SendData(90, i, -1, "", num1, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					Main.item[num1].active = false;
				}
				else if (Main.netMode == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, false, 0, false);
				}
				this.@value = 0f;
			}
		}

		public int FindClosestPlayer()
		{
			float single;
			return this.FindClosestPlayer(out single);
		}

		public int FindClosestPlayer(out float distanceToPlayer)
		{
			Player player;
			Vector2 center = base.Center;
			float single = float.MaxValue;
			int num = -1;
			for (int i = 0; i < 255; i++)
			{
				player = Main.player[i];
				if (player.active && !player.dead)
				{
					float single1 = Vector2.DistanceSquared(center, player.Center);
					if (single1 < single)
					{
						single = single1;
						num = i;
					}
				}
			}
			if (num < 0)
			{
				for (int j = 0; j < 255; j++)
				{
					player = Main.player[j];
					if (player.active)
					{
						float single2 = Vector2.DistanceSquared(center, player.Center);
						if (single2 < single)
						{
							single = single2;
							num = j;
						}
					}
				}
			}
			distanceToPlayer = (float)Math.Sqrt((double)single);
			return num;
		}

		public static int FindFirstNPC(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return i;
				}
			}
			return -1;
		}

		public void FindFrame()
		{
			Color color;
			double num;
			object obj;
			int height = 1;
			if (!Main.dedServ)
			{
				if (!Main.NPCLoaded[this.type] || Main.npcTexture[this.type] == null)
				{
					return;
				}
				height = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
			}
			int num1 = 0;
			if (this.aiAction != 0)
			{
				if (this.aiAction == 1)
				{
					num1 = 4;
				}
			}
			else if (this.velocity.Y < 0f)
			{
				num1 = 2;
			}
			else if (this.velocity.Y <= 0f)
			{
				num1 = (this.velocity.X == 0f ? 0 : 1);
			}
			else
			{
				num1 = 3;
			}
			if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 17 || this.type == 18 || this.type == 19 || this.type == 20 || this.type == 22 || this.type == 142 || this.type == 353 || this.type == 178 || this.type == 38 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 21 || this.type == 44 || this.type == 54 || this.type == 37 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 104 || this.type == 107 || this.type == 108 || this.type == 120 || this.type == 124 || this.type == 140 || this.type == 159 || this.type == 160 || this.type == 167 || this.type == 181 || this.type == 185 || this.type == 196 || this.type == 197 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 207 || this.type == 208 || this.type == 209 || this.type == 212 || this.type == 213 || this.type == 227 || this.type == 228 || this.type == 229 || this.type == 287 || this.type >= 310 && this.type <= 314 || this.type >= 322 && this.type <= 324 || this.type == 326 || this.type == 368 || this.type == 369 || this.type == 453 || this.type == 460 || this.type == 462 || this.type == 463 || this.type == 489 || this.type == 441 || this.type == 534)
			{
				int num2 = (this.townNPC || this.type == 453 ? NPCID.Sets.ExtraFramesCount[this.type] : 0);
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					int attackFrameCount = Main.npcFrameCount[this.type] - NPCID.Sets.AttackFrameCount[this.type];
					if (this.ai[0] == 2f)
					{
						NPC nPC = this;
						nPC.frameCounter = nPC.frameCounter + 1;
						if (this.frame.Y / height == attackFrameCount - 1 && this.frameCounter >= 5)
						{
							this.frame.Y = 0;
							this.frameCounter = 0;
						}
						else if (this.frame.Y / height == 0 && this.frameCounter >= 40)
						{
							this.frame.Y = height * (attackFrameCount - 1);
							this.frameCounter = 0;
						}
						else if (this.frame.Y != 0 && this.frame.Y != height * (attackFrameCount - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0;
						}
					}
					else if (this.ai[0] == 11f)
					{
						NPC nPC1 = this;
						nPC1.frameCounter = nPC1.frameCounter + 1;
						if (this.frame.Y / height == attackFrameCount - 1 && this.frameCounter >= 20)
						{
							if (this.frameCounter == 20)
							{
								int num3 = Main.rand.Next(4);
								for (int i = 0; i < 3 + num3; i++)
								{
									Vector2 center = ((base.Center + ((Vector2.UnitX * (float)(-this.direction)) * 8f)) - (Vector2.One * 5f)) + (Vector2.UnitY * 8f);
									float single = (float)(-this.direction);
									color = new Color();
									int num4 = Dust.NewDust(center, 3, 6, 216, single, 1f, 0, color, 1f);
									Dust dust = Main.dust[num4];
									dust.velocity = dust.velocity / 2f;
									Main.dust[num4].scale = 0.8f;
								}
								if (Main.rand.Next(30) == 0)
								{
									int num5 = Gore.NewGore(base.Center + ((Vector2.UnitX * (float)(-this.direction)) * 8f), Vector2.Zero, Main.rand.Next(580, 583), 1f);
									Gore gore = Main.gore[num5];
									gore.velocity = gore.velocity / 2f;
									Main.gore[num5].velocity.Y = Math.Abs(Main.gore[num5].velocity.Y);
									Main.gore[num5].velocity.X = -Math.Abs(Main.gore[num5].velocity.X) * (float)this.direction;
								}
							}
							if (this.frameCounter >= 40 && Main.rand.Next(20) == 0)
							{
								this.frame.Y = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.frame.Y / height == 0 && this.frameCounter >= 20)
						{
							this.frame.Y = height * (attackFrameCount - 1);
							this.frameCounter = 0;
							if (Main.netMode != 1)
							{
								EmoteBubble.NewBubble(89, new WorldUIAnchor(this), 30);
							}
						}
						else if (this.frame.Y != 0 && this.frame.Y != height * (attackFrameCount - 1))
						{
							this.frame.Y = 0;
							this.frameCounter = 0;
						}
					}
					else if (this.ai[0] == 5f)
					{
						this.frame.Y = height * (attackFrameCount - 3);
						this.frameCounter = 0;
					}
					else if (this.ai[0] == 6f)
					{
						NPC nPC2 = this;
						nPC2.frameCounter = nPC2.frameCounter + 1;
						int y = this.frame.Y / height;
						switch (attackFrameCount - y)
						{
							case 1:
							case 2:
							case 4:
							case 5:
							{
								int num6 = 0;
								if (this.frameCounter < 10)
								{
									num6 = 0;
								}
								else if (this.frameCounter < 16)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 46)
								{
									num6 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 60)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 66)
								{
									num6 = 0;
								}
								else if (this.frameCounter < 72)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 102)
								{
									num6 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 108)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 114)
								{
									num6 = 0;
								}
								else if (this.frameCounter < 120)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 150)
								{
									num6 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 156)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 162)
								{
									num6 = 0;
								}
								else if (this.frameCounter < 168)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 198)
								{
									num6 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 204)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 210)
								{
									num6 = 0;
								}
								else if (this.frameCounter < 216)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 246)
								{
									num6 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 252)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 258)
								{
									num6 = 0;
								}
								else if (this.frameCounter < 264)
								{
									num6 = attackFrameCount - 5;
								}
								else if (this.frameCounter >= 294)
								{
									num6 = (this.frameCounter >= 300 ? 0 : attackFrameCount - 5);
								}
								else
								{
									num6 = attackFrameCount - 4;
								}
								if (num6 == attackFrameCount - 4 && y == attackFrameCount - 5)
								{
									Vector2 vector2 = base.Center + new Vector2((float)(10 * this.direction), -4f);
									for (int j = 0; j < 8; j++)
									{
										int num7 = Main.rand.Next(139, 143);
										float x = this.velocity.X + (float)this.direction;
										color = new Color();
										int num8 = Dust.NewDust(vector2, 0, 0, num7, x, this.velocity.Y - 2.5f, 0, color, 1.2f);
										Main.dust[num8].velocity.X = Main.dust[num8].velocity.X + (float)this.direction * 1.5f;
										Dust vector21 = Main.dust[num8];
										vector21.position = vector21.position - new Vector2(4f);
										Dust dust1 = Main.dust[num8];
										dust1.velocity = dust1.velocity * 2f;
										Main.dust[num8].scale = 0.7f + Main.rand.NextFloat() * 0.3f;
									}
								}
								this.frame.Y = height * num6;
								if (this.frameCounter < 300)
								{
									break;
								}
								this.frameCounter = 0;
								break;
							}
							default:
							{
								if (y == 0)
								{
									goto case 5;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 5;
							}
						}
					}
					else if (this.ai[0] == 7f)
					{
						NPC nPC3 = this;
						nPC3.frameCounter = nPC3.frameCounter + 1;
						int y1 = this.frame.Y / height;
						switch (attackFrameCount - y1)
						{
							case 1:
							case 2:
							case 4:
							case 5:
							{
								int num9 = 0;
								if (this.frameCounter < 16)
								{
									num9 = 0;
								}
								else if (this.frameCounter == 16 && Main.netMode != 1)
								{
									EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 112, null);
								}
								else if (this.frameCounter < 128)
								{
									num9 = (this.frameCounter % 16 < 8 ? attackFrameCount - 2 : 0);
								}
								else if (this.frameCounter < 160)
								{
									num9 = 0;
								}
								else if (this.frameCounter == 160 && Main.netMode != 1)
								{
									EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), 60, null);
								}
								else if (this.frameCounter >= 220)
								{
									num9 = 0;
								}
								else
								{
									num9 = (this.frameCounter % 12 < 6 ? attackFrameCount - 2 : 0);
								}
								this.frame.Y = height * num9;
								if (this.frameCounter < 220)
								{
									break;
								}
								this.frameCounter = 0;
								break;
							}
							default:
							{
								if (y1 == 0)
								{
									goto case 5;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 5;
							}
						}
					}
					else if (this.ai[0] == 9f)
					{
						NPC nPC4 = this;
						nPC4.frameCounter = nPC4.frameCounter + 1;
						int y2 = this.frame.Y / height;
						switch (attackFrameCount - y2)
						{
							case 1:
							case 2:
							case 4:
							case 5:
							{
								int num10 = 0;
								if (this.frameCounter >= 10)
								{
									num10 = (this.frameCounter >= 16 ? attackFrameCount - 4 : attackFrameCount - 5);
								}
								else
								{
									num10 = 0;
								}
								if (this.ai[1] < 16f)
								{
									num10 = attackFrameCount - 5;
								}
								if (this.ai[1] < 10f)
								{
									num10 = 0;
								}
								this.frame.Y = height * num10;
								break;
							}
							default:
							{
								if (y2 == 0)
								{
									goto case 5;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 5;
							}
						}
					}
					else if (this.ai[0] == 10f || this.ai[0] == 13f)
					{
						NPC nPC5 = this;
						nPC5.frameCounter = nPC5.frameCounter + 1;
						int y3 = this.frame.Y / height;
						switch (y3 - attackFrameCount)
						{
							case 0:
							case 1:
							case 2:
							case 3:
							{
								int num11 = 10;
								int num12 = 6;
								int num13 = 0;
								if (this.frameCounter < (double)num11)
								{
									num13 = 0;
								}
								else if (this.frameCounter < (double)(num11 + num12))
								{
									num13 = attackFrameCount;
								}
								else if (this.frameCounter < (double)(num11 + num12 * 2))
								{
									num13 = attackFrameCount + 1;
								}
								else if (this.frameCounter >= (double)(num11 + num12 * 3))
								{
									num13 = (this.frameCounter >= (double)(num11 + num12 * 4) ? 0 : attackFrameCount + 3);
								}
								else
								{
									num13 = attackFrameCount + 2;
								}
								this.frame.Y = height * num13;
								break;
							}
							default:
							{
								if (y3 == 0)
								{
									goto case 3;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 3;
							}
						}
					}
					else if (this.ai[0] == 15f)
					{
						NPC nPC6 = this;
						nPC6.frameCounter = nPC6.frameCounter + 1;
						int y4 = this.frame.Y / height;
						switch (y4 - attackFrameCount)
						{
							case 0:
							case 1:
							case 2:
							case 3:
							{
								float attackTime = this.ai[1] / (float)NPCID.Sets.AttackTime[this.type];
								int num14 = 0;
								if (attackTime > 0.65f)
								{
									num14 = attackFrameCount;
								}
								else if (attackTime > 0.5f)
								{
									num14 = attackFrameCount + 1;
								}
								else if (attackTime <= 0.35f)
								{
									num14 = (attackTime <= 0f ? 0 : attackFrameCount + 3);
								}
								else
								{
									num14 = attackFrameCount + 2;
								}
								this.frame.Y = height * num14;
								break;
							}
							default:
							{
								if (y4 == 0)
								{
									goto case 3;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 3;
							}
						}
					}
					else if (this.ai[0] == 12f)
					{
						NPC nPC7 = this;
						nPC7.frameCounter = nPC7.frameCounter + 1;
						int y5 = this.frame.Y / height;
						switch (y5 - attackFrameCount)
						{
							case 0:
							case 1:
							case 2:
							case 3:
							case 4:
							{
								int shootingFrame = attackFrameCount + this.GetShootingFrame(this.ai[2]);
								this.frame.Y = height * shootingFrame;
								break;
							}
							default:
							{
								if (y5 == 0)
								{
									goto case 4;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 4;
							}
						}
					}
					else if (this.ai[0] == 14f)
					{
						NPC nPC8 = this;
						nPC8.frameCounter = nPC8.frameCounter + 1;
						int y6 = this.frame.Y / height;
						switch (y6 - attackFrameCount)
						{
							case 0:
							case 1:
							{
								int num15 = 12;
								this.frame.Y = height * (this.frameCounter % (double)num15 * 2 < (double)num15 ? attackFrameCount : attackFrameCount + 1);
								break;
							}
							default:
							{
								if (y6 == 0)
								{
									goto case 1;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 1;
							}
						}
					}
					else if (this.ai[0] == 3f || this.ai[0] == 4f)
					{
						NPC nPC9 = this;
						nPC9.frameCounter = nPC9.frameCounter + 1;
						int y7 = this.frame.Y / height;
						switch (attackFrameCount - y7)
						{
							case 1:
							case 2:
							case 4:
							case 5:
							{
								bool flag = this.ai[0] == 3f;
								int num16 = 0;
								int num17 = 0;
								int num18 = -1;
								int num19 = -1;
								if (this.frameCounter < 10)
								{
									num16 = 0;
								}
								else if (this.frameCounter < 16)
								{
									num16 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 46)
								{
									num16 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 60)
								{
									num16 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 216)
								{
									num16 = 0;
								}
								else if (this.frameCounter == 216 && Main.netMode != 1)
								{
									num18 = 70;
								}
								else if (this.frameCounter < 286)
								{
									num16 = (this.frameCounter % 12 < 6 ? attackFrameCount - 2 : 0);
								}
								else if (this.frameCounter < 320)
								{
									num16 = 0;
								}
								else if (this.frameCounter == 320 && Main.netMode != 1)
								{
									num18 = 100;
								}
								else if (this.frameCounter >= 420)
								{
									num16 = 0;
								}
								else
								{
									num16 = (this.frameCounter % 16 < 8 ? attackFrameCount - 2 : 0);
								}
								if (this.frameCounter < 70)
								{
									num17 = 0;
								}
								else if (this.frameCounter == 70 && Main.netMode != 1)
								{
									num19 = 90;
								}
								else if (this.frameCounter < 160)
								{
									num17 = (this.frameCounter % 16 < 8 ? attackFrameCount - 2 : 0);
								}
								else if (this.frameCounter < 166)
								{
									num17 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 186)
								{
									num17 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 200)
								{
									num17 = attackFrameCount - 5;
								}
								else if (this.frameCounter >= 320)
								{
									num17 = (this.frameCounter >= 326 ? 0 : attackFrameCount - 1);
								}
								else
								{
									num17 = 0;
								}
								if (flag)
								{
									if (num18 != -1)
									{
										EmoteBubble.NewBubbleNPC(new WorldUIAnchor(this), num18, new WorldUIAnchor(Main.npc[(int)this.ai[2]]));
									}
									if (num19 != -1)
									{
										EmoteBubble.NewBubbleNPC(new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num19, new WorldUIAnchor(this));
									}
								}
								this.frame.Y = height * (flag ? num16 : num17);
								if (this.frameCounter < 420)
								{
									break;
								}
								this.frameCounter = 0;
								break;
							}
							default:
							{
								if (y7 == 0)
								{
									goto case 5;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 5;
							}
						}
					}
					else if (this.ai[0] == 16f || this.ai[0] == 17f)
					{
						NPC nPC10 = this;
						nPC10.frameCounter = nPC10.frameCounter + 1;
						int y8 = this.frame.Y / height;
						switch (attackFrameCount - y8)
						{
							case 1:
							case 2:
							case 4:
							case 5:
							{
								bool flag1 = this.ai[0] == 16f;
								int num20 = 0;
								int num21 = -1;
								if (this.frameCounter < 10)
								{
									num20 = 0;
								}
								else if (this.frameCounter < 16)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 22)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 28)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 34)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 40)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter == 40 && Main.netMode != 1)
								{
									num21 = 45;
								}
								else if (this.frameCounter < 70)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 76)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 82)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 88)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 94)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 100)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter == 100 && Main.netMode != 1)
								{
									num21 = 45;
								}
								else if (this.frameCounter < 130)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 136)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 142)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 148)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter < 154)
								{
									num20 = attackFrameCount - 4;
								}
								else if (this.frameCounter < 160)
								{
									num20 = attackFrameCount - 5;
								}
								else if (this.frameCounter == 160 && Main.netMode != 1)
								{
									num21 = 75;
								}
								else if (this.frameCounter >= 220)
								{
									num20 = (this.frameCounter >= 226 ? 0 : attackFrameCount - 5);
								}
								else
								{
									num20 = attackFrameCount - 4;
								}
								if (flag1 && num21 != -1)
								{
									int num22 = (int)this.localAI[2];
									int num23 = (int)this.localAI[3];
									int num24 = (int)Main.npc[(int)this.ai[2]].localAI[3];
									int num25 = (int)Main.npc[(int)this.ai[2]].localAI[2];
									int num26 = 3 - num22 - num23;
									int num27 = 0;
									if (this.frameCounter == 40)
									{
										num27 = 1;
									}
									if (this.frameCounter == 100)
									{
										num27 = 2;
									}
									if (this.frameCounter == 160)
									{
										num27 = 3;
									}
									int num28 = 3 - num27;
									int num29 = -1;
									int num30 = 0;
									while (num29 < 0)
									{
										int num31 = num30 + 1;
										num30 = num31;
										if (num31 >= 100)
										{
											break;
										}
										num29 = Main.rand.Next(2);
										if (num29 == 0 && num25 >= num23)
										{
											num29 = -1;
										}
										if (num29 == 1 && num24 >= num22)
										{
											num29 = -1;
										}
										if (num29 != -1 || num28 > num26)
										{
											continue;
										}
										num29 = 2;
									}
									if (num29 == 0)
									{
										Main.npc[(int)this.ai[2]].localAI[3] = Main.npc[(int)this.ai[2]].localAI[3] + 1f;
										num24++;
									}
									if (num29 == 1)
									{
										Main.npc[(int)this.ai[2]].localAI[2] = Main.npc[(int)this.ai[2]].localAI[2] + 1f;
										num25++;
									}
									Random random = Main.rand;
									int[] numArray = new int[] { 38, 37, 36 };
									int num32 = Utils.SelectRandom<int>(random, numArray);
									int num33 = num32;
									if (num29 == 0)
									{
										switch (num32)
										{
											case 36:
											{
												num33 = 38;
												break;
											}
											case 37:
											{
												num33 = 36;
												break;
											}
											case 38:
											{
												num33 = 37;
												break;
											}
										}
									}
									else if (num29 == 1)
									{
										switch (num32)
										{
											case 36:
											{
												num33 = 37;
												break;
											}
											case 37:
											{
												num33 = 38;
												break;
											}
											case 38:
											{
												num33 = 36;
												break;
											}
										}
									}
									if (num28 == 0)
									{
										if (num24 >= 2)
										{
											num32 = num32 - 3;
										}
										if (num25 >= 2)
										{
											num33 = num33 - 3;
										}
									}
									EmoteBubble.NewBubble(num32, new WorldUIAnchor(this), num21);
									EmoteBubble.NewBubble(num33, new WorldUIAnchor(Main.npc[(int)this.ai[2]]), num21);
								}
								this.frame.Y = height * (flag1 ? num20 : num20);
								if (this.frameCounter < 420)
								{
									break;
								}
								this.frameCounter = 0;
								break;
							}
							default:
							{
								if (y8 == 0)
								{
									goto case 5;
								}
								this.frame.Y = 0;
								this.frameCounter = 0;
								goto case 5;
							}
						}
					}
					else if (this.velocity.X != 0f)
					{
						int num34 = 6;
						if (this.type == 534)
						{
							num34 = 12;
						}
						if (this.type != 489)
						{
							this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
							NPC nPC11 = this;
							nPC11.frameCounter = nPC11.frameCounter + 1;
						}
						else
						{
							num34 = 8;
							this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
							NPC nPC12 = this;
							nPC12.frameCounter = nPC12.frameCounter + 0.5;
						}
						if (this.type == 462)
						{
							num34 = 9;
						}
						if (this.frameCounter > (double)num34)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - num2)
						{
							this.frame.Y = height * 2;
						}
					}
					else if (this.type == 140 || this.type == 287 || this.type == 489)
					{
						this.frame.Y = height;
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
				else if (this.type != 462)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
					if (this.type == 489 || this.type == 21 || this.type == 31 || this.type == 294 || this.type == 326 || this.type == 295 || this.type == 296 || this.type == 44 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 120 || this.type == 140 || this.type == 159 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type >= 322 && this.type <= 324)
					{
						this.frame.Y = 0;
					}
					if (this.type == 181)
					{
						this.frame.Y = height * 14;
					}
				}
				else
				{
					this.frameCounter = 0;
					if (this.velocity.Y >= 0f)
					{
						this.frame.Y = height * 2;
					}
					else
					{
						this.frame.Y = height;
					}
				}
			}
			if (this.type >= 494 && this.type <= 495)
			{
				if (this.ai[2] <= 0f)
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || this.direction == -1 && this.velocity.X > 0f || this.direction == 1 && this.velocity.X < 0f)
					{
						this.frameCounter = 0;
						if (this.velocity.Y >= 0f)
						{
							this.frame.Y = height * 3;
						}
						else
						{
							this.frame.Y = height * 2;
						}
					}
					else if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16)
						{
							this.frame.Y = height;
						}
						else if (this.frameCounter < 24)
						{
							this.frame.Y = height * 2;
						}
						else if (this.frameCounter < 32)
						{
							this.frame.Y = height * 3;
						}
						else if (this.frameCounter >= 39)
						{
							this.frame.Y = height * 4;
							this.frameCounter = 0;
						}
						else
						{
							this.frame.Y = height * 4;
						}
					}
					else
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
					}
				}
				else if (this.ai[2] < 7f)
				{
					this.frame.Y = height * 5;
				}
				else if (this.ai[2] < 14f)
				{
					this.frame.Y = height * 6;
				}
				else if (this.ai[2] < 20f)
				{
					this.frame.Y = height * 7;
				}
			}
			if (this.type >= 498 && this.type <= 506)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 10;
				}
				else
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						if (this.ai[1] < 12f)
						{
							this.frame.Y = height * 8;
						}
						else if (this.ai[1] >= 34f)
						{
							this.frame.Y = height * 8;
						}
						else
						{
							this.frame.Y = height * 9;
						}
						this.frameCounter = 0;
					}
					else if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter > 4)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y > height * 7)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = height;
					this.frameCounter = 0;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						NPC nPC13 = this;
						nPC13.frameCounter = nPC13.frameCounter + 1;
						if (this.frameCounter > 9)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = height * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						NPC nPC14 = this;
						nPC14.frameCounter = nPC14.frameCounter + 1;
						if (this.frameCounter > 9)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = height;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type == 533)
			{
				if (this.velocity.Y == 0f && this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC15 = this;
				nPC15.frameCounter = nPC15.frameCounter + 1;
				if (this.frameCounter >= 48)
				{
					this.frameCounter = 0;
				}
				this.frame.Y = (int)(this.frameCounter / 6) * height;
				if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + height * 8;
				}
			}
			if (this.type >= 496 && this.type <= 497)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0;
					}
					NPC nPC16 = this;
					nPC16.frameCounter = nPC16.frameCounter + (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < 18)
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter >= 24)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 3;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = height * 4;
					}
					else if (this.ai[1] >= 20f)
					{
						this.frame.Y = height * 6;
					}
					else
					{
						this.frame.Y = height * 5;
					}
				}
				else if (this.ai[0] != 5f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 7;
				}
				else
				{
					this.frameCounter = 0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = height * 10;
					}
					else if (this.ai[1] >= 20f)
					{
						this.frame.Y = height * 3;
					}
					else
					{
						this.frame.Y = height * 11;
					}
				}
			}
			else if (this.aiStyle == 39 && this.type != 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0;
					}
					NPC nPC17 = this;
					nPC17.frameCounter = nPC17.frameCounter + (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < 18)
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter < 24)
					{
						this.frame.Y = height * 3;
					}
					else if (this.frameCounter >= 32)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 4;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = height * 5;
					}
					else if (this.ai[1] >= 20f)
					{
						this.frame.Y = height * 7;
					}
					else
					{
						this.frame.Y = height * 6;
					}
				}
				else if (this.ai[0] != 5f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 7;
				}
				else
				{
					this.frameCounter = 0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = height * 7;
					}
					else if (this.ai[1] >= 20f)
					{
						this.frame.Y = height * 5;
					}
					else
					{
						this.frame.Y = height * 6;
					}
				}
			}
			else if (this.type != 508 && this.type != 532)
			{
				if (this.type == 509)
				{
					if (this.velocity.X > 0f && this.direction > 0 || this.velocity.X < 0f && this.direction < 0)
					{
						this.spriteDirection = this.direction;
					}
					NPC nPC18 = this;
					double num35 = nPC18.frameCounter + 1;
					num = num35;
					nPC18.frameCounter = num35;
					if (num >= 3)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.velocity.Y != 0f)
			{
				this.frame.Y = height;
			}
			else if (this.velocity.X != 0f)
			{
				if (this.direction < 0 && this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				if (this.direction > 0 && this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.frame.Y / height < 2)
				{
					this.frame.Y = height * 2;
				}
				NPC nPC19 = this;
				nPC19.frameCounter = nPC19.frameCounter + (double)(1f + Math.Abs(this.velocity.X) / 2f);
				if (this.frameCounter > 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y / height >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = height * 2;
				}
			}
			else
			{
				this.frame.Y = 0;
			}
			if (this.type == 415)
			{
				if (this.ai[2] < 0f)
				{
					if (this.frame.Y / height != 8 && this.frame.Y / height != 9 && this.frame.Y / height != 0)
					{
						this.frameCounter = 0;
					}
					NPC nPC20 = this;
					nPC20.frameCounter = nPC20.frameCounter + 1;
					int num36 = 0;
					int num37 = 18;
					int num38 = 4;
					if (this.frameCounter > (double)(num37 - num38 * 2))
					{
						num36 = 8 + (int)this.frameCounter / 4 % 2;
					}
					if (this.frameCounter > (double)(num37 + num38 * 6))
					{
						num36 = 0;
						this.frameCounter = 0;
					}
					this.frame.Y = height * num36;
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y < height * 2)
					{
						this.frame.Y = height * 2;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 2)
					{
						this.frame.Y = height * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 416)
			{
				int num39 = (int)this.ai[0];
				if (Main.npc[num39].active && Main.npc[num39].type == 415 && Main.npcTexture[415] != null)
				{
					this.frame.Y = Main.npc[num39].frame.Y / (Main.npcTexture[415].Height / Main.npcFrameCount[415]) * height;
				}
			}
			else if (this.type == 417)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0;
					}
					NPC nPC21 = this;
					nPC21.frameCounter = nPC21.frameCounter + (double)(Math.Abs(this.velocity.X) * 1.1f);
					this.frame.Y = (int)(this.frameCounter / 6) * height;
					if (this.frameCounter >= 48)
					{
						this.frameCounter = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * (9 + (int)(this.ai[1] / 6f));
				}
				else if (this.ai[0] != 5f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 14;
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = height * (13 - (int)(this.ai[1] / 6f));
				}
			}
			else if (this.type == 518)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = height;
					this.frameCounter = 0;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
						NPC nPC22 = this;
						nPC22.frameCounter = nPC22.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type == 419)
			{
				if (this.ai[2] < 0f)
				{
					int num40 = 1;
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.frame.Y / height >= 9)
					{
						this.frame.Y = height * 2;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height < 2)
					{
						this.frame.Y = height * 2;
						this.frameCounter = 0;
					}
					NPC nPC23 = this;
					nPC23.frameCounter = nPC23.frameCounter + 1;
					if (this.frameCounter >= (double)(num40 * 4 + 6))
					{
						this.frameCounter = 8;
					}
					if (this.frameCounter >= 6)
					{
						this.frame.Y = height * (int)(4 + (this.frameCounter - 6) / (double)num40);
					}
					else
					{
						this.frame.Y = height * (int)(2 + this.frameCounter / 3);
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frame.Y = height;
					this.frameCounter = 0;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
						NPC nPC24 = this;
						nPC24.frameCounter = nPC24.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = height * 9;
						}
						if (this.frame.Y / height < 9)
						{
							this.frame.Y = height * 9;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type == 425)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] == 1f)
				{
					NPC nPC25 = this;
					nPC25.frameCounter = nPC25.frameCounter + 1;
					if (this.frameCounter >= 3)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 12 || this.frame.Y < height * 10)
					{
						this.frame.Y = height * 10;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else if (this.velocity.X != 0f)
				{
					this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 9 || this.frame.Y < height * 2)
					{
						this.frame.Y = height * 2;
					}
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 427)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y != 0f)
				{
					NPC nPC26 = this;
					nPC26.frameCounter = nPC26.frameCounter + 1;
					if (this.frameCounter >= 2)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * 9 || this.frame.Y < height * 6)
					{
						this.frame.Y = height * 6;
					}
				}
				else if (this.velocity.X != 0f)
				{
					this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 5 || this.frame.Y < height)
					{
						this.frame.Y = height;
					}
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 426)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[1] >= 45f)
				{
					if (this.velocity.Y != 0f)
					{
						NPC nPC27 = this;
						nPC27.frameCounter = nPC27.frameCounter + 1;
						if (this.frameCounter >= 2)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y >= height * 15 || this.frame.Y < height * 12)
						{
							this.frame.Y = height * 12;
						}
					}
					else
					{
						this.frame.Y = height * 8;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					NPC nPC28 = this;
					nPC28.frameCounter = nPC28.frameCounter + 1;
					if (this.frameCounter >= 2)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * 12 || this.frame.Y < height * 9)
					{
						this.frame.Y = height * 9;
					}
				}
				else if (this.velocity.X != 0f)
				{
					this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 7 || this.frame.Y < height)
					{
						this.frame.Y = height;
					}
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 429)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = height;
					this.frameCounter = 0;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
						NPC nPC29 = this;
						nPC29.frameCounter = nPC29.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type == 428)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction != 0)
					{
						this.spriteDirection = this.direction;
					}
					if (this.velocity.X != 0f)
					{
						NPC nPC30 = this;
						nPC30.frameCounter = nPC30.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
						NPC nPC31 = this;
						double num41 = nPC31.frameCounter + 1;
						num = num41;
						nPC31.frameCounter = num41;
						if (num > 10)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
				else if (this.frame.Y / height != 4)
				{
					if (this.frameCounter > 0)
					{
						this.frameCounter = 0;
					}
					NPC nPC32 = this;
					double num42 = nPC32.frameCounter - 1;
					num = num42;
					nPC32.frameCounter = num42;
					if (num < -10 || this.velocity.Y > 0.6f)
					{
						this.frame.Y = height * 4;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type != 423)
			{
				if (this.type == 421)
				{
					if (this.ai[0] == 5f)
					{
						NPC nPC33 = this;
						nPC33.frameCounter = nPC33.frameCounter + 1;
					}
					NPC nPC34 = this;
					double num43 = nPC34.frameCounter + 1;
					num = num43;
					nPC34.frameCounter = num43;
					if (num >= 5)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.ai[2] == 1f)
			{
				int num44 = 2;
				if (this.ai[1] >= 30f && this.ai[1] < 45f)
				{
					num44 = 3;
				}
				this.frame.Y = num44 * height;
			}
			else if (this.velocity.Y != 0f)
			{
				this.frame.Y = height;
			}
			else if (this.velocity.X != 0f)
			{
				if (this.velocity.X != 0f)
				{
					this.spriteDirection = Math.Sign(-this.velocity.X);
				}
				if (this.frame.Y / height < 4)
				{
					this.frame.Y = height * 4;
				}
				NPC nPC35 = this;
				nPC35.frameCounter = nPC35.frameCounter + (double)(1f + Math.Abs(this.velocity.X) / 2f);
				if (this.frameCounter > 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y / height >= Main.npcFrameCount[this.type])
				{
					this.frame.Y = height * 4;
				}
			}
			else
			{
				this.frame.Y = 0;
			}
			if (this.type == 424)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.ai[2] > 0f)
					{
						this.frame.Y = height * (this.ai[1] > 90f ? Main.npcFrameCount[this.type] - 2 : Main.npcFrameCount[this.type] - 1);
						this.frameCounter = 0;
					}
					else if (this.velocity.X != 0f)
					{
						if (this.frame.Y < height * 2)
						{
							this.frame.Y = height * 2;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						NPC x1 = this;
						x1.frameCounter = x1.frameCounter + (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 420)
			{
				NPC nPC36 = this;
				double num45 = nPC36.frameCounter + 1;
				num = num45;
				nPC36.frameCounter = num45;
				if (num >= 5)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 411)
			{
				if (this.ai[1] >= 90f && this.ai[1] < 180f)
				{
					this.spriteDirection = -this.direction;
					this.frame.Y = height * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0;
				}
				else if (this.velocity.Y != 0f)
				{
					this.frame.Y = height;
					this.frameCounter = 0;
				}
				else
				{
					if (this.direction != 0)
					{
						this.spriteDirection = -this.direction;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
						NPC nPC37 = this;
						nPC37.frameCounter = nPC37.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			else if (this.type == 409)
			{
				if (this.velocity.Y != 0f || this.ai[1] > 30f || this.ai[1] <= 0f)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					NPC nPC38 = this;
					double num46 = nPC38.frameCounter + 1;
					num = num46;
					nPC38.frameCounter = num46;
					if (num >= 6)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frame.Y = height * (Main.npcFrameCount[this.type] - 1);
					this.frameCounter = 0;
				}
			}
			else if (this.type == 410)
			{
				this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 10)
				{
					NPC nPC39 = this;
					nPC39.frameCounter = nPC39.frameCounter - 10;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 407)
			{
				NPC nPC40 = this;
				double num47 = nPC40.frameCounter + 1;
				num = num47;
				nPC40.frameCounter = num47;
				if (num >= 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 405 || this.type == 406)
			{
				NPC nPC41 = this;
				double num48 = nPC41.frameCounter + 1;
				num = num48;
				nPC41.frameCounter = num48;
				if (num >= 4)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 516)
			{
				if (this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					this.frame.Y = height * Main.rand.Next(3);
					NPC nPC42 = this;
					nPC42.frameCounter = nPC42.frameCounter + (double)Main.rand.Next(3);
				}
				NPC nPC43 = this;
				nPC43.frameCounter = nPC43.frameCounter + 1;
				if (this.frameCounter > 3)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y > height * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 418)
			{
				if (this.ai[0] == 0f || this.ai[0] == 1f || this.ai[0] == -1f)
				{
					NPC nPC44 = this;
					nPC44.frameCounter = nPC44.frameCounter + 1;
					if (this.frameCounter > 6)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 4)
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] != 2f)
				{
					if (this.ai[0] == -2f)
					{
						NPC nPC45 = this;
						nPC45.frameCounter = nPC45.frameCounter + 1;
						if (this.frameCounter > 12)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y + height;
						}
						if (this.frame.Y > height * 7)
						{
							this.frame.Y = height * 5;
						}
					}
				}
				else if (this.ai[1] < 10f)
				{
					this.frame.Y = height * 5;
				}
				else if (this.ai[1] >= 20f)
				{
					this.frame.Y = height * 7;
				}
				else
				{
					this.frame.Y = height * 6;
				}
			}
			if (this.type == 1 || this.type == 537 || this.type == 16 || this.type == 59 || this.type == 71 || this.type == 81 || this.type == 138 || this.type == 147 || this.type == 183 || this.type == 184 || this.type == 204 || this.type == 225 || this.type == 302 || this.type == 304 || this.type >= 333 && this.type <= 336 || this.type == 535)
			{
				if (this.type == 302 || this.type == 304)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter = this.frameCounter + 1;
				if (num1 > 0)
				{
					NPC nPC46 = this;
					nPC46.frameCounter = nPC46.frameCounter + 1;
				}
				if (num1 == 4)
				{
					NPC nPC47 = this;
					nPC47.frameCounter = nPC47.frameCounter + 1;
				}
				if (this.frameCounter >= 8)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 488)
			{
				int num49 = (int)this.localAI[1];
				if (Framing.GetTileSafely((int)this.ai[0], (int)this.ai[1]).frameX >= 36)
				{
					num49 = num49 * -1;
				}
				if (this.localAI[0] > 24f)
				{
					this.localAI[0] = 24f;
				}
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] = this.localAI[0] - 1f;
				}
				if (this.localAI[0] < 0f)
				{
					this.localAI[0] = 0f;
				}
				int num50 = (num49 == -1 ? 4 : 6);
				int num51 = (int)this.localAI[0] / num50;
				if (this.localAI[0] % (float)num50 != 0f)
				{
					num51++;
				}
				if (num51 != 0 && num49 == 1)
				{
					num51 = num51 + 5;
				}
				this.frame.Y = num51 * height;
			}
			if (this.type >= 430 && this.type <= 436)
			{
				if (this.ai[2] <= 0f)
				{
					if (this.velocity.Y == 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.velocity.Y != 0f || this.direction == -1 && this.velocity.X > 0f || this.direction == 1 && this.velocity.X < 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height * 2;
					}
					else if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < 16)
						{
							this.frame.Y = height;
						}
						else if (this.frameCounter < 24)
						{
							this.frame.Y = height * 2;
						}
						else if (this.frameCounter >= 32)
						{
							this.frameCounter = 0;
						}
						else
						{
							this.frame.Y = height;
						}
					}
					else
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
					}
				}
				else if (this.ai[2] < 5f)
				{
					this.frame.Y = height * 3;
				}
				else if (this.ai[2] < 10f)
				{
					this.frame.Y = height * 4;
				}
				else if (this.ai[2] >= 15f)
				{
					this.frame.Y = height * 6;
				}
				else
				{
					this.frame.Y = height * 5;
				}
			}
			if (this.type == 454)
			{
				int num52 = (int)(this.frameCounter / 2);
				this.frame.Y = height * num52;
			}
			if (this.type == 377 || this.type == 446)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = height;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 378)
			{
				if (this.velocity.Y != 0f && this.frame.Y < height * 2)
				{
					this.frame.Y = this.frame.Y + height * 2;
				}
				if (this.velocity.Y == 0f && this.frame.Y > height * 2)
				{
					this.frame.Y = this.frame.Y - height * 2;
				}
				NPC nPC48 = this;
				nPC48.frameCounter = nPC48.frameCounter + 1;
				if (this.frameCounter >= (double)6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.velocity.Y != 0f && this.frame.Y >= height * 4)
					{
						this.frame.Y = height * 2;
					}
					if (this.velocity.Y == 0f && this.frame.Y >= height * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 376)
			{
				NPC nPC49 = this;
				nPC49.frameCounter = nPC49.frameCounter + 1;
				if (this.frameCounter > 30)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y >= height * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 375)
			{
				NPC nPC50 = this;
				nPC50.frameCounter = nPC50.frameCounter + 1;
				if (this.frameCounter > 4)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y >= height * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 374)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y != 0f)
				{
					NPC nPC51 = this;
					nPC51.rotation = nPC51.rotation + (float)this.direction * 0.1f;
					NPC nPC52 = this;
					nPC52.frameCounter = nPC52.frameCounter + 1;
					if (this.frameCounter > 3)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y >= height * 4)
						{
							this.frame.Y = height;
						}
					}
				}
				else
				{
					this.rotation = 0f;
					if (this.velocity.X != 0f)
					{
						NPC nPC53 = this;
						nPC53.frameCounter = nPC53.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y + height;
							if (this.frame.Y >= height * 4)
							{
								this.frame.Y = height;
							}
						}
					}
					else
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
					}
				}
			}
			if (this.type == 492)
			{
				this.frame.Y = height * (int)this.ai[2];
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.ai[0] == 0f || this.ai[0] == 7f)
				{
					this.rotation = 0f;
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
				else if (this.ai[0] == 1f)
				{
					this.rotation = 0f;
					this.frameCounter = 0;
					int num53 = 6;
					if (this.ai[1] < (float)num53)
					{
						this.frame.Y = height;
					}
					else if (this.ai[1] < (float)(num53 * 2))
					{
						this.frame.Y = height * 2;
					}
					else if (this.ai[1] < (float)(num53 * 3))
					{
						this.frame.Y = height * 3;
					}
					else if (this.ai[1] < (float)(num53 * 4))
					{
						this.frame.Y = height * 4;
					}
					else if (this.ai[1] >= (float)(num53 * 5))
					{
						this.frame.Y = height * 6;
					}
					else
					{
						this.frame.Y = height * 5;
					}
				}
				else if (this.ai[0] == 2f || this.ai[0] == 6f)
				{
					this.rotation = 0f;
					if (this.velocity.Y != 0f)
					{
						this.frame.Y = height * 13;
						this.frameCounter = 0;
					}
					else
					{
						int num54 = 6;
						NPC nPC54 = this;
						nPC54.frameCounter = nPC54.frameCounter + 1;
						if (this.frame.Y < height * 7)
						{
							this.frame.Y = height * 12;
						}
						if (this.frame.Y < height * 10)
						{
							if (this.frameCounter > 8)
							{
								this.frame.Y = this.frame.Y + height;
								this.frameCounter = 0;
								if (this.frame.Y == height * 10)
								{
									this.frameCounter = (double)(num54 * 2);
								}
							}
						}
						else if (this.frameCounter < (double)num54)
						{
							this.frame.Y = height * 12;
						}
						else if (this.frameCounter < (double)(num54 * 2))
						{
							this.frame.Y = height * 11;
						}
						else if (this.frameCounter >= (double)(num54 * 3))
						{
							this.frame.Y = height * 11;
							if (this.frameCounter >= (double)(num54 * 4 - 1))
							{
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frame.Y = height * 10;
						}
					}
				}
				else if (this.ai[0] == 3f)
				{
					this.rotation = 0f;
					NPC nPC55 = this;
					nPC55.frameCounter = nPC55.frameCounter + 1;
					if (this.frameCounter > 6)
					{
						this.frameCounter = 0;
						if (this.frame.Y > height * 7)
						{
							this.frame.Y = this.frame.Y - height;
						}
					}
				}
				else if (this.ai[0] == 4f || this.ai[0] == 5f)
				{
					if (this.ai[0] == 4f && this.ai[2] == 1f)
					{
						this.rotation = 0f;
					}
					this.frame.Y = height * 13;
					this.frameCounter = 0;
				}
				else if (this.ai[0] == 4.1f)
				{
					this.rotation = 0f;
					if (this.frame.Y > height * 6)
					{
						this.frameCounter = 0;
					}
					NPC nPC56 = this;
					nPC56.frameCounter = nPC56.frameCounter + 1;
					int num55 = 4;
					if (this.frameCounter < (double)num55)
					{
						this.frame.Y = height * 6;
					}
					else if (this.frameCounter < (double)(num55 * 2))
					{
						this.frame.Y = height * 5;
					}
					else if (this.frameCounter < (double)(num55 * 3))
					{
						this.frame.Y = height * 4;
					}
					else if (this.frameCounter < (double)(num55 * 4))
					{
						this.frame.Y = height * 3;
					}
					else if (this.frameCounter >= (double)(num55 * 5))
					{
						this.frame.Y = height * 5;
						if (this.frameCounter >= (double)(num55 * 6 - 1))
						{
							this.frameCounter = 0;
						}
					}
					else
					{
						this.frame.Y = height * 4;
					}
				}
			}
			if (this.type == 477)
			{
				NPC nPC57 = this;
				nPC57.frameCounter = nPC57.frameCounter + (double)(this.velocity.Length() / 4f);
				NPC nPC58 = this;
				nPC58.frameCounter = nPC58.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
				}
				if (this.frame.Y / height > 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 479)
			{
				this.frameCounter = this.frameCounter + 1;
				int num56 = 4;
				if (this.frameCounter < (double)num56)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num56 * 2))
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < (double)(num56 * 3))
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter >= (double)(num56 * 4 - 1))
				{
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height;
				}
			}
			if (this.type == 472)
			{
				if (this.velocity.X >= 0f)
				{
					this.direction = 1;
				}
				else
				{
					this.direction = -1;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				NPC nPC59 = this;
				nPC59.frameCounter = nPC59.frameCounter + 1;
				if (this.frameCounter > 4)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y / height >= 6)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type >= 449 && this.type <= 452)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
				else
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num57 = 0;
						if (this.ai[1] < 22f)
						{
							num57 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num57 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num57 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num57 = 1;
						}
						this.frame.Y = height * (15 + num57);
						this.frameCounter = 0;
					}
					else if (this.velocity.X != 0f)
					{
						if (this.frame.Y < height * 2)
						{
							this.frame.Y = height * 2;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= 15)
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = height;
					}
				}
			}
			if (this.type == 481)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
				else
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num58 = 0;
						if (this.ai[1] < 22f)
						{
							num58 = -14;
						}
						else if (this.ai[1] < 28f)
						{
							num58 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num58 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num58 = 1;
						}
						this.frame.Y = height * (15 + num58);
						this.frameCounter = 0;
					}
					else if (this.velocity.X != 0f)
					{
						if (this.frame.Y < height * 2)
						{
							this.frame.Y = height * 2;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= 15)
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = height;
					}
				}
			}
			if (this.type == 468)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						int num59 = 0;
						if (this.ai[1] < 22f)
						{
							num59 = -15;
						}
						else if (this.ai[1] < 28f)
						{
							num59 = 3;
						}
						else if (this.ai[1] < 34f)
						{
							num59 = 2;
						}
						else if (this.ai[1] < 40f)
						{
							num59 = 1;
						}
						this.frame.Y = height * (15 + num59);
						this.frameCounter = 0;
					}
					else if (this.velocity.X != 0f)
					{
						if (this.frame.Y < height * 2)
						{
							this.frame.Y = height * 2;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= 15)
						{
							this.frame.Y = height * 2;
						}
					}
					else
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 379 || this.type == 380)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = height * ((int)this.ai[2] - 1 + 2);
						this.frameCounter = 0;
					}
					else if (this.velocity.X != 0f)
					{
						if (this.frame.Y < height * 7)
						{
							this.frame.Y = height * 7;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = height * 7;
						}
					}
					else
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 381 || this.type == 382 || this.type == 383 || this.type == 385 || this.type == 389)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < height * 2)
					{
						this.frame.Y = height * 2;
					}
					if (this.type == 389 || this.type == 385)
					{
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X) * 1.2;
					}
					else
					{
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					}
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 387)
			{
				if (this.ai[0] <= 0f)
				{
					NPC nPC60 = this;
					nPC60.frameCounter = nPC60.frameCounter + 1;
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y >= height * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					NPC nPC61 = this;
					nPC61.frameCounter = nPC61.frameCounter + 1;
					if (this.ai[0] >= 20f)
					{
						NPC nPC62 = this;
						nPC62.frameCounter = nPC62.frameCounter + 1;
					}
					if (this.ai[0] >= 40f)
					{
						NPC nPC63 = this;
						nPC63.frameCounter = nPC63.frameCounter + 1;
					}
					if (this.frameCounter >= 10)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y >= height * 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 386)
			{
				if (this.ai[2] > 0f)
				{
					int num60 = (int)this.ai[2] / 12;
					this.frame.Y = height * (9 + num60 % 2);
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					this.spriteDirection = this.direction;
					if (this.frame.Y < height * 2)
					{
						this.frame.Y = height * 2;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= 9)
					{
						this.frame.Y = height * 2;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 388)
			{
				NPC nPC64 = this;
				nPC64.frameCounter = nPC64.frameCounter + 1;
				if (this.frameCounter >= (double)6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y >= height * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 391)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
				else
				{
					if (this.direction == 1)
					{
						this.spriteDirection = -1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = 1;
					}
					if (this.frame.Y < height)
					{
						this.frame.Y = height;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.5f);
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 390)
			{
				if (this.direction != 0)
				{
					this.spriteDirection = -this.direction;
				}
				if (this.ai[2] <= 0f)
				{
					this.frame.Y = height * 2;
				}
				else
				{
					this.frame.Y = height * ((int)this.ai[2] - 1);
				}
			}
			if (this.type == 393)
			{
				int num61 = 0;
				Vector2 rotationVector2 = this.ai[2].ToRotationVector2();
				if (rotationVector2.Y > Math.Abs(rotationVector2.X) * 2f)
				{
					num61 = 4;
				}
				else if (rotationVector2.Y > Math.Abs(rotationVector2.X) * 1.5f)
				{
					num61 = (rotationVector2.X > 0f ? 5 : 3);
				}
				else if (Math.Abs(rotationVector2.X) > rotationVector2.Y * 2f)
				{
					num61 = (rotationVector2.X > 0f ? 8 : 0);
				}
				else if (Math.Abs(rotationVector2.X) <= rotationVector2.Y * 1.5f)
				{
					num61 = (rotationVector2.X > 0f ? 6 : 2);
				}
				else
				{
					num61 = (rotationVector2.X > 0f ? 7 : 1);
				}
				this.frame.Y = height * num61;
				float single1 = 280f;
				float single2 = 140f;
				if ((this.ai[3] < single1 ? false : this.ai[3] < single1 + single2) && (int)this.ai[3] % 6 <= 2)
				{
					this.frame.Y = this.frame.Y + height * 9;
				}
			}
			if (this.type == 394)
			{
				int num62 = (int)this.ai[3] - 300;
				if (num62 < 120)
				{
					this.frame.Y = height * 4;
				}
				else
				{
					num62 = num62 - 120;
					if (num62 >= 160)
					{
						this.frame.Y = height * (7 - (num62 - 160) / 5);
					}
					else if (num62 < 20)
					{
						this.frame.Y = height * (4 + num62 / 5);
					}
					else
					{
						this.frame.Y = height * (num62 / 4 % 4);
					}
				}
			}
			if (this.type == 395)
			{
				float single3 = 20f;
				float single4 = 240f;
				bool flag2 = (this.ai[3] < single3 ? false : this.ai[3] < single3 + single4);
				NPC nPC65 = this;
				nPC65.frameCounter = nPC65.frameCounter + 1;
				if (this.frameCounter >= 66)
				{
					this.frameCounter = 0;
				}
				if (flag2)
				{
					NPC nPC66 = this;
					nPC66.frameCounter = nPC66.frameCounter + 1;
					if (this.frameCounter >= 54 || this.frameCounter < 36)
					{
						this.frameCounter = 36;
					}
				}
				int num63 = (int)this.frameCounter % 66 / 6;
				this.frame.Y = height * num63;
			}
			if (this.type == 392)
			{
				float single5 = 20f;
				float single6 = 240f;
				bool flag3 = (this.ai[3] < single5 ? false : this.ai[3] < single5 + single6);
				NPC nPC67 = this;
				nPC67.frameCounter = nPC67.frameCounter + 1;
				if (flag3)
				{
					NPC nPC68 = this;
					nPC68.frameCounter = nPC68.frameCounter + 1;
				}
				if (this.frameCounter >= 12)
				{
					this.frameCounter = 0;
				}
				int num64 = (int)this.frameCounter % 12 / 3;
				this.frame.Y = height * num64;
			}
			if (this.type == 399)
			{
				double num65 = (this.frameCounter + 0.25) % 4;
				if (this.ai[0] == 0f)
				{
					obj = null;
				}
				else
				{
					obj = 4;
				}
				this.frameCounter = num65 + (double)obj;
				this.frame.Y = height * (int)this.frameCounter;
			}
			else if (this.type == 520)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6)
					{
						if (Math.Abs(this.velocity.X) >= 0.2f)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0;
						}
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 398)
			{
				if (this.ai[0] > 0f)
				{
					if (this.frame.Y == 0)
					{
						Gore.NewGore(this.position + new Vector2(-10f, -15f), this.velocity, 619, 1f);
						Gore.NewGore(this.position + new Vector2(10f, -15f), this.velocity, 620, 1f);
						Gore.NewGore(this.position + new Vector2(-10f, 15f), this.velocity, 621, 1f);
						Gore.NewGore(this.position + new Vector2(10f, 15f), this.velocity, 622, 1f);
						for (int k = 0; k < 50; k++)
						{
							this.frame.Y = height;
							Vector2 vector22 = this.position;
							int num66 = this.width;
							int num67 = this.height;
							color = new Color();
							Dust.NewDust(vector22, num66, num67, 209, 0f, 0f, 0, color, 1f);
						}
					}
					NPC nPC69 = this;
					nPC69.frameCounter = nPC69.frameCounter + 1;
					if (this.frameCounter >= 30)
					{
						this.frameCounter = 6;
					}
					int num68 = (int)this.frameCounter % 30 / 6;
					this.frame.Y = height * num68;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 397)
			{
				int num69 = (int)this.frameCounter / 7;
				this.frame.Y = height * num69;
			}
			if (this.type == 400)
			{
				NPC nPC70 = this;
				nPC70.frameCounter = nPC70.frameCounter + 1;
				if (this.ai[0] == 0f || this.ai[0] == 3f)
				{
					NPC nPC71 = this;
					nPC71.frameCounter = nPC71.frameCounter + 1;
				}
				if (this.frameCounter >= 16)
				{
					this.frameCounter = 0;
				}
				int num70 = (int)this.frameCounter % 16 / 4;
				this.frame.Y = height * num70;
			}
			if (this.type == 437)
			{
				NPC nPC72 = this;
				nPC72.frameCounter = nPC72.frameCounter + 1;
				if (this.frameCounter >= 20)
				{
					this.frameCounter = 0;
				}
				int num71 = (int)this.frameCounter % 20 / 5;
				this.frame.Y = height * num71;
			}
			if (this.type == 438)
			{
				NPC nPC73 = this;
				nPC73.frameCounter = nPC73.frameCounter + 1;
				if (this.ai[1] == 1f)
				{
					NPC nPC74 = this;
					nPC74.frameCounter = nPC74.frameCounter + 1;
				}
				if (this.frameCounter >= 49)
				{
					this.frameCounter = 0;
				}
				int num72 = (int)this.frameCounter % 49;
				num72 = num72 / 7;
				if (num72 >= 4)
				{
					num72 = 6 - num72;
				}
				this.frame.Y = height * num72;
			}
			if (this.type == 439 || this.type == 440)
			{
				int num73 = (int)this.localAI[2];
				if (num73 == 0)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
					}
					else if (this.frame.Y != 0)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 4) * height;
					}
				}
				else if (num73 == 10)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 4) * height;
				}
				else if (num73 == 1)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
						this.frame.Y = height;
					}
					else if (this.frame.Y != height)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 10) * height;
					}
				}
				else if (num73 == 11)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 10) * height;
				}
				else if (num73 == 2)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
						this.frame.Y = height * 2;
					}
					else if (this.frame.Y != height * 2)
					{
						this.frame.Y = ((int)this.frameCounter / 5 + 7) * height;
					}
				}
				else if (num73 == 12)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 7) * height;
				}
				else if (num73 == 13)
				{
					if (this.frameCounter >= 15)
					{
						this.frameCounter = 0;
					}
					this.frame.Y = ((int)this.frameCounter / 5 + 13) * height;
				}
				NPC nPC75 = this;
				nPC75.frameCounter = nPC75.frameCounter + 1;
			}
			if (this.type == 521)
			{
				if (this.velocity.X >= 0f)
				{
					this.direction = 1;
				}
				else
				{
					this.direction = -1;
				}
				if (this.direction != 0)
				{
					this.spriteDirection = this.direction;
				}
				this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.spriteDirection), (double)(this.velocity.X * (float)this.spriteDirection)) + this.velocity.X * 0.1f;
				NPC nPC76 = this;
				double num74 = nPC76.frameCounter + 1;
				num = num74;
				nPC76.frameCounter = num74;
				if (num >= 5)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 523)
			{
				NPC nPC77 = this;
				double num75 = nPC77.frameCounter + 1;
				num = num75;
				nPC77.frameCounter = num75;
				if (num >= 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				this.frame.Y = height;
			}
			if (this.type == 370)
			{
				if (this.ai[0] == 0f || this.ai[0] == 5f)
				{
					int num76 = 5;
					if (this.ai[0] == 5f)
					{
						num76 = 4;
					}
					NPC nPC78 = this;
					nPC78.frameCounter = nPC78.frameCounter + 1;
					if (this.frameCounter > (double)num76)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y >= height * 6)
					{
						this.frame.Y = 0;
					}
				}
				if (this.ai[0] == 1f || this.ai[0] == 6f)
				{
					if (this.ai[2] >= 10f)
					{
						this.frame.Y = height * 7;
					}
					else
					{
						this.frame.Y = height * 6;
					}
				}
				if (this.ai[0] == 2f || this.ai[0] == 7f)
				{
					if (this.ai[2] >= 10f)
					{
						this.frame.Y = height * 7;
					}
					else
					{
						this.frame.Y = height * 6;
					}
				}
				if (this.ai[0] == 3f || this.ai[0] == 8f || this.ai[0] == -1f)
				{
					int num77 = 90;
					if (this.ai[2] < (float)(num77 - 30) || this.ai[2] > (float)(num77 - 10))
					{
						NPC nPC79 = this;
						nPC79.frameCounter = nPC79.frameCounter + 1;
						if (this.frameCounter > 5)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y + height;
						}
						if (this.frame.Y >= height * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = height * 6;
						if (this.ai[2] > (float)(num77 - 20) && this.ai[2] < (float)(num77 - 15))
						{
							this.frame.Y = height * 7;
						}
					}
				}
				if (this.ai[0] == 4f || this.ai[0] == 9f)
				{
					int num78 = 180;
					if (this.ai[2] < (float)(num78 - 60) || this.ai[2] > (float)(num78 - 20))
					{
						NPC nPC80 = this;
						nPC80.frameCounter = nPC80.frameCounter + 1;
						if (this.frameCounter > 5)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y + height;
						}
						if (this.frame.Y >= height * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = height * 6;
						if (this.ai[2] > (float)(num78 - 50) && this.ai[2] < (float)(num78 - 25))
						{
							this.frame.Y = height * 7;
						}
					}
				}
			}
			if (this.type == 359 || this.type == 360)
			{
				if (this.velocity.Y <= 1f)
				{
					NPC nPC81 = this;
					nPC81.frameCounter = nPC81.frameCounter + 1;
					int num79 = 10;
					if (this.frameCounter < (double)num79)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < (double)(num79 * 2))
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < (double)(num79 * 3))
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter < (double)(num79 * 4))
					{
						this.frame.Y = height * 3;
					}
					else if (this.frameCounter >= (double)(num79 * 5))
					{
						this.frame.Y = height;
						if (this.frameCounter >= (double)(num79 * 6 - 1))
						{
							this.frameCounter = 0;
						}
					}
					else
					{
						this.frame.Y = height * 2;
					}
				}
				else
				{
					NPC nPC82 = this;
					nPC82.frameCounter = nPC82.frameCounter + 1;
					int num80 = 6;
					if (this.frameCounter >= (double)num80)
					{
						this.frame.Y = height * 5;
						if (this.frameCounter >= (double)(num80 * 2 - 1))
						{
							this.frameCounter = 0;
						}
					}
					else
					{
						this.frame.Y = height * 4;
					}
				}
			}
			if (this.type == 327)
			{
				if (this.ai[3] == 0f)
				{
					if (this.frame.Y > height * 5)
					{
						NPC nPC83 = this;
						nPC83.frameCounter = nPC83.frameCounter + 1;
					}
					else if (this.frame.Y > 0)
					{
						NPC nPC84 = this;
						nPC84.frameCounter = nPC84.frameCounter - 1;
					}
				}
				else if (this.ai[3] != 1f)
				{
					if (this.ai[3] == 2f)
					{
						if (this.frame.Y < height * 2)
						{
							NPC nPC85 = this;
							nPC85.frameCounter = nPC85.frameCounter - 1;
						}
						else if (this.frame.Y > height * 8)
						{
							NPC nPC86 = this;
							nPC86.frameCounter = nPC86.frameCounter - 1;
						}
						else if (this.frame.Y < height * 8)
						{
							NPC nPC87 = this;
							nPC87.frameCounter = nPC87.frameCounter + 1;
						}
					}
				}
				else if (this.frame.Y > height * 10)
				{
					NPC nPC88 = this;
					nPC88.frameCounter = nPC88.frameCounter + 1;
				}
				else if (this.frame.Y > height * 4)
				{
					NPC nPC89 = this;
					nPC89.frameCounter = nPC89.frameCounter - 1;
				}
				else if (this.frame.Y < height * 4)
				{
					NPC nPC90 = this;
					nPC90.frameCounter = nPC90.frameCounter + 1;
				}
				if (this.frameCounter > 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y > height * 11)
					{
						this.frame.Y = 0;
					}
				}
				if (this.frameCounter < 0)
				{
					this.frameCounter = 6;
					this.frame.Y = this.frame.Y - height;
					if (this.frame.Y < 0)
					{
						this.frame.Y = height * 11;
					}
				}
			}
			if (this.type == 347)
			{
				NPC nPC91 = this;
				nPC91.frameCounter = nPC91.frameCounter + 1;
				if (this.frameCounter > 1)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y > height * 3)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 346)
			{
				if (this.ai[0] == 1f)
				{
					this.spriteDirection = this.direction;
					NPC nPC92 = this;
					nPC92.frameCounter = nPC92.frameCounter + 1;
					if (this.frameCounter > 2)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 8)
					{
						this.frame.Y = height * 6;
					}
					if (this.frame.Y < height * 6)
					{
						this.frame.Y = height * 6;
					}
				}
				else if (this.velocity.X != 0f)
				{
					this.spriteDirection = this.direction;
					NPC nPC93 = this;
					nPC93.frameCounter = nPC93.frameCounter + 1;
					NPC nPC94 = this;
					nPC94.frameCounter = nPC94.frameCounter + (double)(Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 5)
					{
						this.frame.Y = height;
					}
					if (this.frame.Y < height)
					{
						this.frame.Y = height;
					}
				}
				else
				{
					this.frameCounter = 0;
				}
			}
			if (this.type == 352)
			{
				NPC nPC95 = this;
				nPC95.frameCounter = nPC95.frameCounter + 1;
				if (this.frameCounter > 3)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y > height * 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 345)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[3] >= 0f)
					{
						this.frame.Y = 0;
					}
					else if (this.velocity.X >= 0f)
					{
						this.frame.Y = height * 2;
					}
					else
					{
						this.frame.Y = height;
					}
				}
				else if (this.ai[0] == 1f)
				{
					NPC nPC96 = this;
					nPC96.frameCounter = nPC96.frameCounter + 1;
					if (this.frameCounter > 5)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 4)
					{
						this.frame.Y = height * 3;
					}
					if (this.frame.Y < height * 3)
					{
						this.frame.Y = height * 3;
					}
				}
				else if (this.ai[0] == 2f)
				{
					this.frame.Y = height * 5;
				}
			}
			if (this.type == 344)
			{
				if (this.velocity.X != 0f)
				{
					NPC nPC97 = this;
					nPC97.frameCounter = nPC97.frameCounter + 1;
					if (this.frameCounter > 3)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 9)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					NPC nPC98 = this;
					nPC98.frameCounter = nPC98.frameCounter + 1;
					if (this.frameCounter > 2)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 9)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.velocity.X != 0f)
				{
					NPC nPC99 = this;
					nPC99.frameCounter = nPC99.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y < height * 5)
					{
						this.frame.Y = height * 5;
					}
					if (this.frame.Y > height * 9)
					{
						this.frame.Y = height * 5;
					}
				}
				else
				{
					NPC nPC100 = this;
					nPC100.frameCounter = nPC100.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 490)
			{
				this.rotation = this.velocity.X * 0.15f;
				NPC nPC101 = this;
				nPC101.frameCounter = nPC101.frameCounter + 1;
				if (this.frameCounter > 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 266)
			{
				NPC nPC102 = this;
				nPC102.frameCounter = nPC102.frameCounter + 1;
				if (this.frameCounter > 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
				}
				if (this.ai[0] < 0f)
				{
					if (this.frame.Y < height * 4)
					{
						this.frame.Y = height * 4;
					}
					if (this.frame.Y > height * 7)
					{
						this.frame.Y = height * 4;
					}
				}
				else if (this.frame.Y > height * 3)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 262)
			{
				NPC nPC103 = this;
				nPC103.frameCounter = nPC103.frameCounter + 1;
				if (this.frameCounter > 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
				}
				if (this.life <= this.lifeMax / 2)
				{
					if (this.frame.Y < height * 4)
					{
						this.frame.Y = height * 4;
					}
					if (this.frame.Y > height * 7)
					{
						this.frame.Y = height * 4;
					}
				}
				else if (this.frame.Y > height * 3)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type >= 305 && this.type <= 309)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y < -3f)
				{
					this.frame.Y = height * 5;
				}
				else if (this.velocity.Y <= 0f)
				{
					this.frame.Y = 0;
				}
				else if (this.velocity.Y >= 2f)
				{
					this.frame.Y = height;
				}
				else
				{
					this.frame.Y = height * 3;
				}
				this.rotation = this.velocity.X * 0.1f;
			}
			else if (this.type == 263)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.frame.Y > 0)
					{
						this.frameCounter = this.frameCounter + 1;
						if (this.frameCounter > 4)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y - height;
						}
					}
				}
				else if (this.frame.Y < 2)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
				}
			}
			else if (this.type == 244)
			{
				this.frameCounter = this.frameCounter + 1;
				if (num1 > 0)
				{
					NPC nPC104 = this;
					nPC104.frameCounter = nPC104.frameCounter + 1;
				}
				if (num1 == 4)
				{
					NPC nPC105 = this;
					nPC105.frameCounter = nPC105.frameCounter + 1;
				}
				if (this.frameCounter >= 8)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 289)
			{
				NPC nPC106 = this;
				nPC106.frameCounter = nPC106.frameCounter + 1;
				if (this.frameCounter < 2)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter >= 3)
				{
					this.frame.Y = height * 2;
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height;
				}
				if (this.ai[3] == 1f)
				{
					this.frame.Y = this.frame.Y + height * 3;
				}
			}
			else if (this.type == 288)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 355 || this.type == 358)
			{
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 4)
				{
					this.frame.Y = height;
					if (this.frameCounter >= 7)
					{
						this.frameCounter = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
				}
				if (this.localAI[2] <= 0f)
				{
					this.frame.Y = this.frame.Y + height * 2;
				}
			}
			else if (this.type == 356 || this.type == 444)
			{
				int num81 = 7;
				this.rotation = this.velocity.X * 0.3f;
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1 + (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f);
				if (this.frameCounter < (double)num81)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num81 * 2))
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter >= (double)(num81 * 3))
				{
					this.frame.Y = height;
					if (this.frameCounter >= (double)(num81 * 4 - 1))
					{
						this.frameCounter = 0;
					}
				}
				else
				{
					this.frame.Y = height * 2;
				}
				if (this.type != 444)
				{
					this.frame.Y = this.frame.Y + (int)((float)(height * 3) * (this.ai[2] - 1f));
				}
			}
			else if (this.type == 357 || this.type == 448 || this.type == 484)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y != 0f)
				{
					NPC nPC107 = this;
					nPC107.rotation = nPC107.rotation + (float)this.direction * 0.1f;
					this.frame.Y = height;
				}
				else
				{
					this.rotation = 0f;
					if (this.velocity.X != 0f)
					{
						NPC nPC108 = this;
						nPC108.frameCounter = nPC108.frameCounter + 1;
						if (this.frameCounter > 12)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y + height;
							if (this.frame.Y > height)
							{
								this.frame.Y = 0;
							}
						}
					}
					else
					{
						this.frame.Y = height;
						this.frameCounter = 0;
					}
				}
				int x2 = (int)base.Center.X / 16;
				int y9 = (int)this.position.Y / 16;
				if (WorldGen.InWorld(x2, y9, 0) && Main.tile[x2, y9] != null)
				{
					if (Main.tile[x2, y9].slope() == 0)
					{
						y9++;
					}
					if (Main.tile[x2, y9].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[x2, y9].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type >= 485 && this.type <= 487)
			{
				this.spriteDirection = this.direction;
				this.localAI[0] = -2f;
				if (this.velocity.Y != 0f)
				{
					NPC nPC109 = this;
					nPC109.rotation = nPC109.rotation + (float)this.direction * 0.1f;
					this.frame.Y = height;
				}
				else
				{
					this.rotation = 0f;
					if (this.velocity.X != 0f)
					{
						NPC nPC110 = this;
						nPC110.frameCounter = nPC110.frameCounter + (double)Math.Abs(this.velocity.X * 5f);
						if (this.frameCounter > 10)
						{
							this.frameCounter = 0;
							this.frame.Y = this.frame.Y + height;
							if (this.frame.Y > height * 3)
							{
								this.frame.Y = 0;
							}
						}
					}
					else
					{
						this.frame.Y = height;
						this.frameCounter = 0;
					}
				}
				int x3 = (int)base.Center.X / 16;
				int y10 = (int)this.position.Y / 16;
				if (Main.tile[x3, y10] != null)
				{
					if (Main.tile[x3, y10].slope() == 0)
					{
						y10++;
					}
					if (Main.tile[x3, y10].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[x3, y10].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			else if (this.type == 250 || this.type == 264 || this.type == 268)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 245)
			{
				if (this.ai[0] != 0f)
				{
					if (this.ai[0] == 1f)
					{
						this.frame.Y = 1;
					}
				}
				else if (this.ai[1] < -16f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[1] < -12f)
				{
					this.frame.Y = height;
				}
				else if (this.ai[1] < -8f)
				{
					this.frame.Y = height * 2;
				}
				else if (this.ai[1] < -4f)
				{
					this.frame.Y = height * 3;
				}
				else if (this.ai[1] >= 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = height * 4;
				}
			}
			else if (this.type == 246)
			{
				if (this.ai[0] == 0f)
				{
					if (this.localAI[0] != 1f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = height;
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (this.localAI[0] != 1f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = height;
					}
					if (this.localAI[1] == -1f)
					{
						this.frame.Y = this.frame.Y + height * 4;
					}
					if (this.localAI[1] == 1f)
					{
						this.frame.Y = this.frame.Y + height * 2;
					}
				}
			}
			else if (this.type == 249)
			{
				if (this.localAI[0] != 1f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = height;
				}
			}
			else if (this.type == 141)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y == 0f)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = height * 2;
				}
			}
			else if (this.type == 243)
			{
				if (this.frameCounter >= 0)
				{
					this.spriteDirection = this.direction;
					NPC nPC111 = this;
					nPC111.frameCounter = nPC111.frameCounter + (double)Math.Abs(this.velocity.X * 1.1f);
					if (this.frameCounter >= 6)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y > height * 9)
						{
							this.frame.Y = 0;
						}
					}
					if (this.velocity.Y < -2f || this.velocity.Y > 5f)
					{
						this.frameCounter = -18;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					this.frameCounter = -18;
					if (this.velocity.Y >= 0f)
					{
						this.frame.Y = height * 13;
					}
					else
					{
						this.frame.Y = height * 14;
					}
				}
				else
				{
					NPC nPC112 = this;
					nPC112.frameCounter = nPC112.frameCounter + 1;
					if (this.frameCounter < -12)
					{
						if (this.frame.Y > height * 9)
						{
							this.frame.Y = height * 11;
						}
					}
					else if (this.frameCounter < -6)
					{
						if (this.frame.Y > height * 9)
						{
							this.frame.Y = height * 12;
						}
					}
					else if (this.frameCounter < 0)
					{
						this.frameCounter = 0;
						if (this.frame.Y > height * 9)
						{
							this.frame.Y = height * 11;
						}
					}
				}
			}
			else if (this.type == 222)
			{
				NPC nPC113 = this;
				nPC113.frameCounter = nPC113.frameCounter + 1;
				if (this.localAI[0] != 1f)
				{
					if (this.frameCounter > 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y < height * 4)
					{
						this.frame.Y = height * 4;
					}
					if (this.frame.Y >= height * 12)
					{
						this.frame.Y = height * 4;
					}
				}
				else
				{
					if (this.frameCounter > 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 164 || this.type == 239 || this.type == 530)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					NPC nPC114 = this;
					nPC114.frameCounter = nPC114.frameCounter + (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6)
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter >= 18)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 3;
					}
				}
				else
				{
					this.frameCounter = 0;
					if (this.velocity.Y >= 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = height * 4;
					}
				}
			}
			else if (this.type == 236)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC115 = this;
				nPC115.frameCounter = nPC115.frameCounter + (double)Math.Abs(this.velocity.X);
				if (this.frameCounter > 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y > height || this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 165 || this.type == 237 || this.type == 238 || this.type == 240 || this.type == 531)
			{
				float single7 = 0.5f;
				if (this.type == 531)
				{
					single7 = 0.4f;
				}
				NPC nPC116 = this;
				nPC116.frameCounter = nPC116.frameCounter + (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * single7);
				if (this.frameCounter < 6)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 18)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter >= 24)
				{
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height * 3;
				}
			}
			else if (this.type == 195)
			{
				if (this.ai[0] < 3f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[0] < 6f)
				{
					this.frame.Y = height;
				}
				else if (this.ai[0] < 9f)
				{
					this.frame.Y = height * 2;
				}
				else if (this.ai[0] < 12f)
				{
					this.frame.Y = height * 3;
				}
				else if (this.ai[0] >= 15f)
				{
					this.frame.Y = height * 5;
				}
				else
				{
					this.frame.Y = height * 4;
				}
			}
			else if (this.type == 174)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else if ((double)this.velocity.Y < -1.5)
				{
					this.frame.Y = height;
				}
				else if ((double)this.velocity.Y <= 1.5)
				{
					this.frame.Y = height * 2;
				}
				else
				{
					this.frame.Y = height * 3;
				}
			}
			else if (this.type == 177)
			{
				if (this.velocity.Y == 0f)
				{
					NPC nPC117 = this;
					nPC117.frameCounter = nPC117.frameCounter + 1;
					if (this.frameCounter < 10)
					{
						this.frame.Y = height;
					}
					else
					{
						this.frameCounter = 30;
						this.frame.Y = 0;
					}
				}
				else if (this.velocity.Y >= 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 2;
				}
				else
				{
					this.frame.Y = height * 2;
				}
			}
			else if (this.type == 163)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
					NPC nPC118 = this;
					nPC118.frameCounter = nPC118.frameCounter + (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < -6)
					{
						this.frame.Y = height * 6;
					}
					else if (this.frameCounter < 0)
					{
						this.frame.Y = height * 7;
					}
					else if (this.frameCounter < 6)
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter >= 18)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 3;
					}
				}
				else
				{
					this.frameCounter = -12;
					if (this.velocity.Y >= 0f)
					{
						this.frame.Y = height * 6;
					}
					else
					{
						this.frame.Y = height * 5;
					}
				}
			}
			else if (this.type == 143)
			{
				if (this.velocity.Y > 0f)
				{
					NPC nPC119 = this;
					nPC119.frameCounter = nPC119.frameCounter + 1;
				}
				else if (this.velocity.Y < 0f)
				{
					NPC nPC120 = this;
					nPC120.frameCounter = nPC120.frameCounter - 1;
				}
				if (this.frameCounter < 6)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 12)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter < 18)
				{
					this.frame.Y = height * 3;
				}
				if (this.frameCounter < 0)
				{
					this.frameCounter = 0;
				}
				if (this.frameCounter > 17)
				{
					this.frameCounter = 17;
				}
			}
			else if (this.type == 144)
			{
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					if (this.velocity.Y > 0f)
					{
						NPC nPC121 = this;
						nPC121.frameCounter = nPC121.frameCounter + 1;
					}
					else if (this.velocity.Y < 0f)
					{
						NPC nPC122 = this;
						nPC122.frameCounter = nPC122.frameCounter - 1;
					}
					if (this.frameCounter < 6)
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height * 3;
					}
					else if (this.frameCounter < 18)
					{
						this.frame.Y = height * 4;
					}
					if (this.frameCounter < 0)
					{
						this.frameCounter = 0;
					}
					if (this.frameCounter > 17)
					{
						this.frameCounter = 17;
					}
				}
				else
				{
					this.localAI[3] = this.localAI[3] + 1f;
					if (this.localAI[3] < 6f)
					{
						this.frame.Y = 0;
					}
					else if (this.localAI[3] < 12f)
					{
						this.frame.Y = height;
					}
					if (this.localAI[3] >= 11f)
					{
						this.localAI[3] = 0f;
					}
				}
			}
			else if (this.type == 145)
			{
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					if (this.velocity.Y > 0f)
					{
						NPC nPC123 = this;
						nPC123.frameCounter = nPC123.frameCounter + 1;
					}
					else if (this.velocity.Y < 0f)
					{
						NPC nPC124 = this;
						nPC124.frameCounter = nPC124.frameCounter - 1;
					}
					if (this.frameCounter < 6)
					{
						this.frame.Y = height * 4;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height * 5;
					}
					else if (this.frameCounter < 18)
					{
						this.frame.Y = height * 6;
					}
					if (this.frameCounter < 0)
					{
						this.frameCounter = 0;
					}
					if (this.frameCounter > 17)
					{
						this.frameCounter = 17;
					}
				}
				else if (this.ai[2] < 4f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[2] < 8f)
				{
					this.frame.Y = height;
				}
				else if (this.ai[2] < 12f)
				{
					this.frame.Y = height * 2;
				}
				else if (this.ai[2] < 16f)
				{
					this.frame.Y = height * 3;
				}
			}
			else if (this.type == 50)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.frame.Y >= height * 5)
					{
						this.frame.Y = height * 4;
						this.frameCounter = 0;
					}
					NPC nPC125 = this;
					nPC125.frameCounter = nPC125.frameCounter + 1;
					if (num1 > 0)
					{
						NPC nPC126 = this;
						nPC126.frameCounter = nPC126.frameCounter + 1;
					}
					if (num1 == 4)
					{
						NPC nPC127 = this;
						nPC127.frameCounter = nPC127.frameCounter + 1;
					}
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
						if (this.frame.Y >= height * 4)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					if (this.frame.Y < height * 4)
					{
						this.frame.Y = height * 4;
						this.frameCounter = 0;
					}
					NPC nPC128 = this;
					double num82 = nPC128.frameCounter + 1;
					num = num82;
					nPC128.frameCounter = num82;
					if (num >= 4)
					{
						this.frame.Y = height * 5;
					}
				}
			}
			else if (this.type == 170 || this.type == 171 || this.type == 180)
			{
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 4)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * 14)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 135)
			{
				if (this.ai[2] != 0f)
				{
					this.frame.Y = height;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 85 || this.type == 341)
			{
				if (this.ai[0] != 0f)
				{
					int num83 = 3;
					if (this.velocity.Y != 0f)
					{
						NPC nPC129 = this;
						nPC129.frameCounter = nPC129.frameCounter + 1;
					}
					else
					{
						NPC nPC130 = this;
						nPC130.frameCounter = nPC130.frameCounter - 1;
					}
					if (this.frameCounter < 0)
					{
						this.frameCounter = 0;
					}
					if (this.frameCounter > (double)(num83 * 4))
					{
						this.frameCounter = (double)(num83 * 4);
					}
					if (this.frameCounter < (double)num83)
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < (double)(num83 * 2))
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter < (double)(num83 * 3))
					{
						this.frame.Y = height * 3;
					}
					else if (this.frameCounter < (double)(num83 * 4))
					{
						this.frame.Y = height * 4;
					}
					else if (this.frameCounter < (double)(num83 * 5))
					{
						this.frame.Y = height * 5;
					}
					else if (this.frameCounter < (double)(num83 * 6))
					{
						this.frame.Y = height * 4;
					}
					else if (this.frameCounter >= (double)(num83 * 7))
					{
						this.frame.Y = height * 2;
						if (this.frameCounter >= (double)(num83 * 8))
						{
							this.frameCounter = (double)num83;
						}
					}
					else
					{
						this.frame.Y = height * 3;
					}
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
				if (this.ai[3] == 2f)
				{
					this.frame.Y = this.frame.Y + height * 6;
				}
				else if (this.ai[3] == 3f)
				{
					this.frame.Y = this.frame.Y + height * 12;
				}
				else if (this.ai[3] == 4f)
				{
					this.frame.Y = this.frame.Y + height * 18;
				}
			}
			else if (this.type == 113 || this.type == 114)
			{
				if (this.ai[2] != 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = -60;
				}
				else
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 12)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 61)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					NPC nPC131 = this;
					nPC131.frameCounter = nPC131.frameCounter + 1;
					if (this.frameCounter >= 4)
					{
						this.frame.Y = height * 2;
						if (this.frameCounter >= 7)
						{
							this.frameCounter = 0;
						}
					}
					else
					{
						this.frame.Y = height;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = 0;
				}
			}
			else if (this.type == 252 || this.type == 301)
			{
				if (this.type != 301)
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = 1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = -1;
					}
				}
				else if (this.velocity.Y != 0f)
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = -1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = 1;
					}
				}
				else
				{
					this.spriteDirection = -this.direction;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					NPC nPC132 = this;
					nPC132.frameCounter = nPC132.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 4 || this.frame.Y == 0)
					{
						this.frame.Y = height;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = 0;
				}
			}
			else if (this.type == 122)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				if (this.ai[3] <= 0f)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					int num84 = (int)(this.ai[3] / 8f);
					this.frameCounter = 0;
					this.frame.Y = (num84 + 3) * height;
				}
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298 || this.type == 442)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = height * 4;
					this.frameCounter = 0;
				}
			}
			else if (this.type == 362 || this.type == 364)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.X != 0f)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * 10)
					{
						this.frame.Y = height * 3;
					}
					if (this.frame.Y < height * 3)
					{
						this.frame.Y = height * 3;
					}
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 363 || this.type == 365)
			{
				this.spriteDirection = this.direction;
				if (this.wet)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 2)
					{
						this.frame.Y = height;
					}
					if (this.frame.Y < height)
					{
						this.frame.Y = height;
					}
					this.rotation = 0f;
				}
				else if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 11;
					}
					if (this.frame.Y < height * 11)
					{
						this.frame.Y = height * 11;
					}
				}
				else
				{
					this.frame.Y = height;
					this.frameCounter = 0;
					this.rotation = 0f;
				}
			}
			else if (this.type == 62 || this.type == 66)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				NPC nPC133 = this;
				nPC133.frameCounter = nPC133.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frame.Y = height;
					if (this.frameCounter >= 11)
					{
						this.frameCounter = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 156)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				NPC nPC134 = this;
				nPC134.frameCounter = nPC134.frameCounter + 1;
				if (this.frameCounter >= 20)
				{
					this.frameCounter = 0;
				}
				int num85 = (int)this.frameCounter / 4;
				this.frame.Y = num85 * height;
			}
			else if (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242 || this.type == 256)
			{
				if ((this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242) && this.ai[1] == 1f)
				{
					NPC nPC135 = this;
					nPC135.frameCounter = nPC135.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
					}
					if (this.frame.Y > height * 6)
					{
						this.frame.Y = height * 4;
					}
					if (this.frame.Y < height * 4)
					{
						this.frame.Y = height * 4;
					}
					return;
				}
				NPC nPC136 = this;
				nPC136.frameCounter = nPC136.frameCounter + 1;
				if (this.frameCounter < 6)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter >= 18)
				{
					this.frame.Y = height * 3;
					if (this.frameCounter >= 23)
					{
						this.frameCounter = 0;
					}
				}
				else
				{
					this.frame.Y = height * 2;
				}
			}
			else if (this.type == 221)
			{
				if (this.localAI[2] != 1f)
				{
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 13)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = 0;
						this.localAI[0] = 0f;
					}
					this.frameCounter = this.frameCounter + 1;
					if (this.frameCounter >= 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= height * Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * Main.npcFrameCount[this.type] - height;
					}
				}
			}
			else if (this.type == 2 || this.type == 23 || this.type == 121 || this.type == 169 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
			{
				if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
				}
				else if (this.type == 2 || this.type == 121)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 8)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 133)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter < 8)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = height;
				}
				if (this.frameCounter >= 16)
				{
					this.frame.Y = 0;
					this.frameCounter = 0;
				}
				if ((double)this.life < (double)this.lifeMax * 0.5)
				{
					this.frame.Y = this.frame.Y + height * 2;
				}
			}
			else if (this.type == 116)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 5)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 75)
			{
				if (this.velocity.X <= 0f)
				{
					this.spriteDirection = -1;
				}
				else
				{
					this.spriteDirection = 1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 4)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 157)
			{
				this.spriteDirection = this.direction;
				NPC nPC137 = this;
				nPC137.frameCounter = nPC137.frameCounter + 1;
				if (!this.wet)
				{
					NPC nPC138 = this;
					nPC138.frameCounter = nPC138.frameCounter + 1;
				}
				int num86 = 5;
				if (this.frameCounter < (double)num86)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num86 * 2))
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < (double)(num86 * 3))
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter < (double)(num86 * 4))
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < (double)(num86 * 5))
				{
					this.frame.Y = height * 3;
				}
				else if (this.frameCounter < (double)(num86 * 6))
				{
					this.frame.Y = height * 4;
				}
				else if (this.frameCounter < (double)(num86 * 7))
				{
					this.frame.Y = height * 5;
				}
				else if (this.frameCounter >= (double)(num86 * 8))
				{
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height * 4;
				}
			}
			else if (this.type == 55 || this.type == 57 || this.type == 58 || this.type == 102 || this.type == 241 || this.type == 465)
			{
				this.spriteDirection = this.direction;
				NPC nPC139 = this;
				nPC139.frameCounter = nPC139.frameCounter + 1;
				if (!this.wet)
				{
					if (this.frameCounter < 6)
					{
						this.frame.Y = height * 4;
					}
					else if (this.frameCounter >= 12)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 5;
					}
				}
				else if (this.frameCounter < 6)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 18)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter >= 24)
				{
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height * 3;
				}
			}
			else if (this.type == 69)
			{
				if (this.ai[0] >= 190f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * (Main.npcFrameCount[this.type] - 1);
				}
				else
				{
					NPC nPC140 = this;
					nPC140.frameCounter = nPC140.frameCounter + 1;
					if (this.frameCounter >= 6)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 155)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = height * 4;
					this.frameCounter = 0;
				}
				else if (this.velocity.Y >= 0f)
				{
					this.spriteDirection = this.direction;
					NPC nPC141 = this;
					nPC141.frameCounter = nPC141.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.direction > 0 && this.velocity.X < 0f || this.direction < 0 && this.velocity.X > 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 8)
					{
						this.frame.Y = height * 3;
					}
					else if (this.frameCounter < 16)
					{
						this.frame.Y = height * 6;
					}
					else if (this.frameCounter < 24)
					{
						this.frame.Y = height * 4;
					}
					else if (this.frameCounter >= 32)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 5;
					}
				}
				else
				{
					this.frame.Y = height * 6;
					this.frameCounter = 0;
				}
			}
			else if (this.type == 329)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = height * 3;
					this.frameCounter = 0;
				}
				else if (this.velocity.Y >= 0f)
				{
					this.spriteDirection = this.direction;
					NPC nPC142 = this;
					nPC142.frameCounter = nPC142.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y < height * 2)
						{
							this.frame.Y = height * 2;
						}
						if (this.frame.Y > height * 9)
						{
							this.frame.Y = height * 2;
						}
					}
				}
				else
				{
					this.frame.Y = height * 2;
					this.frameCounter = 0;
				}
			}
			else if (this.type == 86)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -2f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X <= 2f)
					{
						this.spriteDirection = this.direction;
					}
					else
					{
						this.spriteDirection = 1;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = height * 15;
					this.frameCounter = 0;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
				else if (Math.Abs(this.velocity.X) >= 3f)
				{
					this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= 15)
						{
							this.frame.Y = height * 9;
						}
						if (this.frame.Y / height <= 8)
						{
							this.frame.Y = height * 9;
						}
					}
				}
				else
				{
					this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 6)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= 9)
						{
							this.frame.Y = height;
						}
						if (this.frame.Y / height <= 0)
						{
							this.frame.Y = height;
						}
					}
				}
			}
			else if (this.type == 315)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -1f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X <= 1f)
					{
						this.spriteDirection = this.direction;
					}
					else
					{
						this.spriteDirection = 1;
					}
				}
				if (this.velocity.Y == 0f)
				{
					this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height > 10)
						{
							this.frame.Y = height;
						}
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = 0;
				}
			}
			else if (this.type == 127)
			{
				if (this.ai[1] != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 2;
				}
				else
				{
					NPC nPC143 = this;
					nPC143.frameCounter = nPC143.frameCounter + 1;
					if (this.frameCounter >= 12)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= 2)
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			else if (this.type == 129)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC144 = this;
				nPC144.frameCounter = nPC144.frameCounter + 1;
				if (this.frameCounter >= 2)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 130)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC145 = this;
				nPC145.frameCounter = nPC145.frameCounter + 1;
				if (this.frameCounter >= 8)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 67 || this.type == 217 || this.type == 218 || this.type == 219)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC146 = this;
				nPC146.frameCounter = nPC146.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 220)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC147 = this;
				nPC147.frameCounter = nPC147.frameCounter + 1;
				if (this.frameCounter >= 10)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 109)
			{
				if (this.velocity.Y == 0f && (this.velocity.X <= 0f && this.direction < 0 || this.velocity.X >= 0f && this.direction > 0))
				{
					this.spriteDirection = this.direction;
				}
				NPC nPC148 = this;
				nPC148.frameCounter = nPC148.frameCounter + (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 7)
				{
					NPC nPC149 = this;
					nPC149.frameCounter = nPC149.frameCounter - 7;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 83 || this.type == 84 || this.type == 179)
			{
				if (this.ai[0] != 2f)
				{
					NPC nPC150 = this;
					nPC150.frameCounter = nPC150.frameCounter + 1;
					if (this.frameCounter >= 4)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 72)
			{
				NPC nPC151 = this;
				nPC151.frameCounter = nPC151.frameCounter + 1;
				if (this.frameCounter >= 3)
				{
					this.frameCounter = 0;
					this.frame.Y = this.frame.Y + height;
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 65)
			{
				this.spriteDirection = this.direction;
				NPC nPC152 = this;
				nPC152.frameCounter = nPC152.frameCounter + 1;
				if (this.wet)
				{
					if (this.frameCounter < 6)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12)
					{
						this.frame.Y = height;
					}
					else if (this.frameCounter < 18)
					{
						this.frame.Y = height * 2;
					}
					else if (this.frameCounter >= 24)
					{
						this.frameCounter = 0;
					}
					else
					{
						this.frame.Y = height * 3;
					}
				}
			}
			else if (this.type == 224)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = this.velocity.Y * 0.2f;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = -this.velocity.Y * 0.2f;
				}
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 150 || this.type == 151 || this.type == 152 || this.type == 158 || this.type == 226)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * 4)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 48 || this.type == 49 || this.type == 51 || this.type == 60 || this.type == 82 || this.type == 93 || this.type == 137 || this.type == 182 || this.type == 210 || this.type == 211 || this.type == 253 || this.type == 316)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.type == 210 || this.type == 211)
				{
					NPC nPC153 = this;
					nPC153.frameCounter = nPC153.frameCounter + 1;
					this.rotation = this.velocity.X * 0.2f;
				}
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 6)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 330)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter >= 8)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y >= height * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 42 || this.type >= 231 && this.type <= 235)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter < 2)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 6)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter >= 8)
				{
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height;
				}
			}
			else if (this.type == 205)
			{
				this.frameCounter = this.frameCounter + 0.5;
				if (this.frameCounter < 2)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 6)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter >= 8)
				{
					this.frameCounter = 0;
				}
				else
				{
					this.frame.Y = height;
				}
			}
			else if (this.type == 176)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter > 4)
				{
					this.frame.Y = this.frame.Y + height;
					this.frameCounter = 0;
				}
				if (this.frame.Y > height)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 43 || this.type == 56 || this.type == 175)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter < 6)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 18)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter < 24)
				{
					this.frame.Y = height;
				}
				if (this.frameCounter == 23)
				{
					this.frameCounter = 0;
				}
			}
			else if (this.type == 115)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter < 3)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 6)
				{
					this.frame.Y = height;
				}
				else if (this.frameCounter < 12)
				{
					this.frame.Y = height * 2;
				}
				else if (this.frameCounter < 15)
				{
					this.frame.Y = height;
				}
				if (this.frameCounter == 15)
				{
					this.frameCounter = 0;
				}
			}
			else if (this.type == 101)
			{
				this.frameCounter = this.frameCounter + 1;
				if (this.frameCounter > 6)
				{
					this.frame.Y = this.frame.Y + height * 2;
					this.frameCounter = 0;
				}
				if (this.frame.Y > height * 2)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 199)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.frame.Y < height * 3)
				{
					NPC nPC154 = this;
					nPC154.frameCounter = nPC154.frameCounter + 1;
					if (this.frameCounter > 6)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						return;
					}
				}
				else if (this.velocity.Y == 0f)
				{
					NPC nPC155 = this;
					nPC155.frameCounter = nPC155.frameCounter + (double)Math.Abs(this.velocity.X);
					if (this.frameCounter > 12)
					{
						this.frameCounter = 0;
						this.frame.Y = this.frame.Y + height;
						if (this.frame.Y > height * 7)
						{
							this.frame.Y = height * 3;
							return;
						}
					}
				}
			}
			else if (this.type == 467)
			{
				if (this.ai[0] != 1f)
				{
					NPC nPC156 = this;
					nPC156.frameCounter = nPC156.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						if (this.frame.Y > height * 3)
						{
							this.frame.Y = height * 3;
						}
						if (this.frame.Y > 0)
						{
							this.frame.Y = this.frame.Y - height;
							this.frameCounter = 0;
							return;
						}
					}
				}
				else
				{
					NPC nPC157 = this;
					nPC157.frameCounter = nPC157.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frameCounter = 0;
						if (this.frame.Y < height * 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
							return;
						}
					}
				}
			}
			else if (this.type != 480)
			{
				if (this.type == 483)
				{
					if (this.ai[0] != -1f)
					{
						NPC nPC158 = this;
						nPC158.frameCounter = nPC158.frameCounter + 1;
						if (this.frameCounter > 4)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y > height * 11)
						{
							this.frame.Y = 0;
						}
						this.rotation = this.velocity.X * 0.1f;
						return;
					}
					NPC nPC159 = this;
					nPC159.frameCounter = nPC159.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 21)
					{
						this.frame.Y = height * 21;
					}
					else if (this.frame.Y < height * 13)
					{
						this.frame.Y = height * 13;
					}
					NPC x4 = this;
					x4.rotation = x4.rotation + this.velocity.X * 0.2f;
					return;
				}
				if (this.type == 482)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] >= 0f)
					{
						if (this.velocity.X == 0f)
						{
							NPC nPC160 = this;
							nPC160.frameCounter = nPC160.frameCounter + 1;
							this.frame.Y = 0;
							return;
						}
						NPC nPC161 = this;
						nPC161.frameCounter = nPC161.frameCounter + (double)(0.2f + Math.Abs(this.velocity.X));
						if (this.frameCounter > 8)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 10)
						{
							this.frame.Y = height * 2;
							return;
						}
						if (this.frame.Y / height < 2)
						{
							this.frame.Y = height * 2;
							return;
						}
					}
					else
					{
						NPC nPC162 = this;
						nPC162.frameCounter = nPC162.frameCounter + 1;
						if (this.frameCounter > 3)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y >= Main.npcFrameCount[this.type] * height)
						{
							this.frame.Y = height * 11;
							return;
						}
						if (this.frame.Y < height * 11)
						{
							this.frame.Y = height * 11;
							return;
						}
					}
				}
				else if (this.type == 461)
				{
					if (!this.wet)
					{
						if ((double)this.rotation > 3.14)
						{
							NPC nPC163 = this;
							nPC163.rotation = nPC163.rotation - 6.28f;
						}
						if ((double)this.rotation <= -0.01 || (double)this.rotation >= 0.01)
						{
							NPC nPC164 = this;
							nPC164.rotation = nPC164.rotation * 0.9f;
						}
						else
						{
							this.rotation = 0f;
						}
						if (this.velocity.Y != 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = height;
							return;
						}
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
						if (this.velocity.X == 0f)
						{
							this.frame.Y = 0;
							this.frameCounter = 0;
							return;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						NPC nPC165 = this;
						nPC165.frameCounter = nPC165.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height > 15)
						{
							this.frame.Y = height * 2;
							return;
						}
					}
					else
					{
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						if (this.spriteDirection != this.direction)
						{
							NPC nPC166 = this;
							nPC166.rotation = nPC166.rotation * -1f;
							this.spriteDirection = this.direction;
						}
						float single8 = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
						if ((double)Math.Abs(this.rotation - single8) >= 3.14)
						{
							if (single8 >= this.rotation)
							{
								NPC nPC167 = this;
								nPC167.rotation = nPC167.rotation + 6.28f;
							}
							else
							{
								NPC nPC168 = this;
								nPC168.rotation = nPC168.rotation - 6.28f;
							}
						}
						this.rotation = (this.rotation * 4f + single8) / 5f;
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.Length());
						NPC nPC169 = this;
						nPC169.frameCounter = nPC169.frameCounter + 1;
						if (this.frameCounter > 8)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height > 20)
						{
							this.frame.Y = height * 16;
							return;
						}
						if (this.frame.Y / height < 16)
						{
							this.frame.Y = height * 19;
							return;
						}
					}
				}
				else if (this.type == 466)
				{
					if (this.ai[2] <= 0f)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
						if (this.ai[2] == 0f)
						{
							this.frame.Y = 0;
							return;
						}
						if (this.ai[2] < -8f)
						{
							this.frame.Y = height;
							return;
						}
						this.frame.Y = height * 2;
						return;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height * 3;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = height * 2;
						this.frameCounter = 0;
						return;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC nPC170 = this;
					nPC170.frameCounter = nPC170.frameCounter + 1;
					if (this.frameCounter > 7)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height > 17)
					{
						this.frame.Y = height * 4;
					}
					if (this.frame.Y / height < 4)
					{
						this.frame.Y = height * 4;
						return;
					}
				}
				else if (this.type == 471)
				{
					bool flag4 = false;
					if (this.ai[3] < 0f)
					{
						flag4 = true;
					}
					if (flag4)
					{
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.Length()) * 0.5f);
						NPC nPC171 = this;
						nPC171.frameCounter = nPC171.frameCounter + 1;
						if (this.frameCounter < 6)
						{
							this.frame.Y = height * 17;
							return;
						}
						if (this.frameCounter < 12)
						{
							this.frame.Y = height * 18;
							return;
						}
						if (this.frameCounter < 18)
						{
							this.frame.Y = height * 19;
							return;
						}
						if (this.frameCounter < 23)
						{
							this.frame.Y = height * 18;
							return;
						}
						this.frame.Y = height * 18;
						this.frameCounter = 0;
						return;
					}
					if (this.ai[3] == 1f)
					{
						this.frame.Y = height * 16;
						this.frameCounter = 0;
						return;
					}
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
						return;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC nPC172 = this;
					nPC172.frameCounter = nPC172.frameCounter + 1;
					if (this.frameCounter > 7)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height > 15)
					{
						this.frame.Y = height * 2;
					}
					if (this.frame.Y / height < 2)
					{
						this.frame.Y = height * 2;
						return;
					}
				}
				else if (this.type == 166)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height * 6;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X != 0f)
					{
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						NPC nPC173 = this;
						nPC173.frameCounter = nPC173.frameCounter + 1;
						if (this.frameCounter > 9)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height > 12)
						{
							this.frame.Y = height * 7;
						}
						if (this.frame.Y / height < 7)
						{
							this.frame.Y = height * 7;
							return;
						}
					}
					else
					{
						NPC nPC174 = this;
						nPC174.frameCounter = nPC174.frameCounter + 2;
						if (this.frameCounter > 7)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height > 5)
						{
							this.frame.Y = 0;
							return;
						}
					}
				}
				else if (this.type == 469)
				{
					if (this.ai[2] != 1f)
					{
						this.rotation = 0f;
						if (this.velocity.Y != 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = height;
							return;
						}
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
						if (this.velocity.X == 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = 0;
							return;
						}
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						NPC nPC175 = this;
						nPC175.frameCounter = nPC175.frameCounter + 1;
						if (this.frameCounter > 9)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height > 11)
						{
							this.frame.Y = height * 6;
						}
						if (this.frame.Y / height < 6)
						{
							this.frame.Y = height * 6;
							return;
						}
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						if (this.velocity.X > 0f)
						{
							this.direction = 1;
						}
						this.spriteDirection = this.direction;
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.Length());
						if (this.frameCounter > 11)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height > 5)
						{
							this.frame.Y = height * 2;
						}
						if (this.frame.Y / height < 2)
						{
							this.frame.Y = height * 2;
							return;
						}
					}
				}
				else if (this.type == 351)
				{
					if (this.velocity.Y != 0f)
					{
						if (this.velocity.Y >= 0f)
						{
							this.frame.Y = height;
						}
						else
						{
							this.frame.Y = height;
						}
						this.frameCounter = 0;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0;
						return;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
					NPC nPC176 = this;
					nPC176.frameCounter = nPC176.frameCounter + 1;
					if (this.frameCounter > 8)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 2;
						return;
					}
				}
				else if (this.type == 343)
				{
					if (this.velocity.Y != 0f)
					{
						if (this.velocity.Y >= 0f)
						{
							this.frame.Y = height;
						}
						else
						{
							this.frame.Y = 0;
						}
						this.frameCounter = 0;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = height * 2;
						this.frameCounter = 0;
						return;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
					NPC nPC177 = this;
					nPC177.frameCounter = nPC177.frameCounter + 1;
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 2;
						return;
					}
				}
				else if (this.type >= 269 && this.type <= 280)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						if (this.type == 140)
						{
							this.frame.Y = height;
							this.frameCounter = 0;
							return;
						}
						this.frame.Y = 0;
						this.frameCounter = 0;
						return;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC nPC178 = this;
					nPC178.frameCounter = nPC178.frameCounter + 1;
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 2;
						return;
					}
				}
				else if (this.type == 230)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
						if (this.velocity.Y > 4f)
						{
							NPC y11 = this;
							y11.rotation = y11.rotation - this.velocity.Y * 0.01f;
							return;
						}
					}
					else
					{
						this.rotation = 0f;
						if (this.direction == 1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == -1)
						{
							this.spriteDirection = -1;
						}
						if (this.velocity.X == 0f)
						{
							this.frame.Y = 0;
							this.frameCounter = 0;
							return;
						}
						this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
						NPC nPC179 = this;
						nPC179.frameCounter = nPC179.frameCounter + 1;
						if (this.frameCounter > 10)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y / height >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
							return;
						}
					}
				}
				else if (this.type == 290)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						if (this.ai[1] < 10f)
						{
							this.frame.Y = height * 11;
							return;
						}
						if (this.ai[1] < 20f)
						{
							this.frame.Y = height * 10;
							return;
						}
						this.frame.Y = height * 9;
						return;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
						return;
					}
					if (this.frame.Y < height * 2)
					{
						this.frame.Y = height * 2;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y > height * 8)
					{
						this.frame.Y = height * 2;
						return;
					}
				}
				else if (this.type == 110 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 291 || this.type == 292 || this.type == 293)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = height * (int)this.ai[2];
						this.frameCounter = 0;
						return;
					}
					if (this.frame.Y < height * 6)
					{
						this.frame.Y = height * 6;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC x5 = this;
					x5.frameCounter = x5.frameCounter + (double)this.velocity.X;
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 6;
						return;
					}
				}
				else if (this.type == 206)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = 0;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = height * (int)this.ai[2];
						this.frameCounter = 0;
						return;
					}
					if (this.frame.Y < height * 6)
					{
						this.frame.Y = height * 6;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC x6 = this;
					x6.frameCounter = x6.frameCounter + (double)this.velocity.X;
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 6;
						return;
					}
				}
				else if (this.type == 350)
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height * 5;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = height * ((int)this.ai[2] - 1);
						this.frameCounter = 0;
						return;
					}
					if (this.frame.Y < height * 7)
					{
						this.frame.Y = height * 7;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC x7 = this;
					x7.frameCounter = x7.frameCounter + (double)(this.velocity.X * 1.3f);
					if (this.frameCounter > 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 7;
						return;
					}
				}
				else if (this.type != 111)
				{
					if (this.type == 257)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.direction == 1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == -1)
							{
								this.spriteDirection = -1;
							}
						}
						if (this.velocity.Y != 0f || this.direction == -1 && this.velocity.X > 0f || this.direction == 1 && this.velocity.X < 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = height * 4;
							return;
						}
						if (this.velocity.X == 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = 0;
							return;
						}
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						if (this.frameCounter < 8)
						{
							this.frame.Y = 0;
							return;
						}
						if (this.frameCounter < 16)
						{
							this.frame.Y = height;
							return;
						}
						if (this.frameCounter < 24)
						{
							this.frame.Y = height * 2;
							return;
						}
						if (this.frameCounter >= 32)
						{
							this.frameCounter = 0;
							return;
						}
						this.frame.Y = height * 3;
						return;
					}
					if (this.type == 258)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.direction == 1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == -1)
							{
								this.spriteDirection = -1;
							}
						}
						if (this.velocity.Y == 0f && (this.direction != -1 || this.velocity.X <= 0f) && (this.direction != 1 || this.velocity.X >= 0f))
						{
							if (this.velocity.X == 0f)
							{
								this.frameCounter = 0;
								this.frame.Y = 0;
								return;
							}
							this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
							if (this.frameCounter < 8)
							{
								this.frame.Y = 0;
								return;
							}
							if (this.frameCounter < 16)
							{
								this.frame.Y = height;
								return;
							}
							if (this.frameCounter >= 24)
							{
								this.frameCounter = 0;
								return;
							}
							this.frame.Y = height * 2;
							return;
						}
						NPC nPC180 = this;
						nPC180.frameCounter = nPC180.frameCounter + 1;
						if (this.frameCounter > 1)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y > height * 5 || this.frame.Y < height * 3)
						{
							this.frame.Y = height * 3;
							return;
						}
					}
					else if (this.type == 348)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.direction == 1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == -1)
							{
								this.spriteDirection = -1;
							}
						}
						if (this.velocity.Y != 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = height * 8;
							return;
						}
						if (this.velocity.X == 0f)
						{
							this.frameCounter = 0;
							this.frame.Y = 0;
							return;
						}
						this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
						NPC nPC181 = this;
						nPC181.frameCounter = nPC181.frameCounter + 1;
						if (this.frameCounter > 6)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y > height * 7)
						{
							this.frame.Y = height;
							return;
						}
					}
					else if (this.type != 349)
					{
						if (this.type == 3 || this.type == 342 || this.type == 331 || this.type == 332 || this.type == 52 || this.type == 53 || this.type == 536 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 254 || this.type == 255 || this.type >= 319 && this.type <= 321)
						{
							if (this.velocity.Y == 0f)
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
							}
							if (this.velocity.Y != 0f || this.direction == -1 && this.velocity.X > 0f || this.direction == 1 && this.velocity.X < 0f)
							{
								this.frameCounter = 0;
								this.frame.Y = height * 2;
								return;
							}
							if (this.velocity.X == 0f)
							{
								this.frameCounter = 0;
								this.frame.Y = 0;
								return;
							}
							this.frameCounter = this.frameCounter + (double)Math.Abs(this.velocity.X);
							if (this.frameCounter < 8)
							{
								this.frame.Y = 0;
								return;
							}
							if (this.frameCounter < 16)
							{
								this.frame.Y = height;
								return;
							}
							if (this.frameCounter < 24)
							{
								this.frame.Y = height * 2;
								return;
							}
							if (this.frameCounter >= 32)
							{
								this.frameCounter = 0;
								return;
							}
							this.frame.Y = height;
							return;
						}
						if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
						{
							int num87 = 0;
							if (this.localAI[0] == 2f)
							{
								num87 = 3;
							}
							if (this.localAI[0] == 3f)
							{
								num87 = 6;
							}
							if (this.localAI[0] == 4f)
							{
								num87 = 9;
							}
							num87 = num87 * height;
							if (this.velocity.Y == 0f)
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
								if (this.velocity.X == 0f)
								{
									this.frame.Y = num87;
									this.frameCounter = 0;
									return;
								}
								this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
								if (this.frameCounter < 6)
								{
									this.frame.Y = num87;
									return;
								}
								if (this.frameCounter < 12)
								{
									this.frame.Y = height + num87;
									return;
								}
								if (this.frameCounter < 15)
								{
									this.frame.Y = height * 2 + num87;
									return;
								}
								this.frameCounter = 0;
								this.frame.Y = height * 2 + num87;
								return;
							}
							if (this.velocity.Y < 0f)
							{
								this.frameCounter = 0;
								this.frame.Y = height * 2 + num87;
								return;
							}
							if (this.velocity.Y > 0f)
							{
								this.frameCounter = 0;
								this.frame.Y = height * 2 + num87;
								return;
							}
						}
						else if (this.type == 299 || this.type == 538 || this.type == 539)
						{
							if (this.velocity.Y != 0f)
							{
								if (this.velocity.Y < 0f)
								{
									this.frameCounter = 0;
									this.frame.Y = height * 2;
									return;
								}
								if (this.velocity.Y > 0f)
								{
									this.frameCounter = 0;
									this.frame.Y = height * 4;
									return;
								}
							}
							else
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
								if (this.velocity.X == 0f)
								{
									this.frame.Y = 0;
									this.frameCounter = 0;
									return;
								}
								this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.5f);
								NPC nPC182 = this;
								nPC182.frameCounter = nPC182.frameCounter + 1;
								if (this.frameCounter > 6)
								{
									this.frame.Y = this.frame.Y + height;
									this.frameCounter = 0;
								}
								if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 1)
								{
									this.frame.Y = height;
									return;
								}
							}
						}
						else if (this.type == 300 || this.type == 447)
						{
							if (this.velocity.Y != 0f)
							{
								this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.5f);
								NPC nPC183 = this;
								nPC183.frameCounter = nPC183.frameCounter + 1;
								if (this.frameCounter > 6)
								{
									this.frame.Y = this.frame.Y + height;
									this.frameCounter = 0;
								}
								if (this.frame.Y / height >= Main.npcFrameCount[this.type])
								{
									this.frame.Y = height * 2;
									return;
								}
							}
							else
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
								if (this.velocity.X != 0f)
								{
									this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 0.5f);
									NPC nPC184 = this;
									nPC184.frameCounter = nPC184.frameCounter + 1;
									if (this.frameCounter > 6)
									{
										this.frame.Y = this.frame.Y + height;
										this.frameCounter = 0;
									}
									if (this.frame.Y / height >= Main.npcFrameCount[this.type])
									{
										this.frame.Y = height * 2;
										return;
									}
								}
								else
								{
									NPC nPC185 = this;
									nPC185.frameCounter = nPC185.frameCounter + 1;
									if (this.frameCounter > 8)
									{
										this.frame.Y = this.frame.Y + height;
										this.frameCounter = 0;
									}
									if (this.frame.Y / height > 1)
									{
										this.frame.Y = 0;
										return;
									}
								}
							}
						}
						else if (this.type == 361 || this.type == 445)
						{
							this.spriteDirection = this.direction;
							if (this.velocity.Y != 0f)
							{
								if (this.velocity.Y > 0f)
								{
									this.frame.Y = height * 9;
									return;
								}
								this.frame.Y = height * 8;
								return;
							}
							if (this.velocity.X != 0f)
							{
								NPC nPC186 = this;
								nPC186.frameCounter = nPC186.frameCounter + 1;
								int num88 = 6;
								if (this.frameCounter < (double)num88)
								{
									this.frame.Y = 0;
									return;
								}
								if (this.frameCounter < (double)(num88 * 2))
								{
									this.frame.Y = height * 6;
									return;
								}
								if (this.frameCounter < (double)(num88 * 3))
								{
									this.frame.Y = height * 8;
									return;
								}
								this.frame.Y = height * 9;
								if (this.frameCounter >= (double)(num88 * 4 - 1))
								{
									this.frameCounter = 0;
									return;
								}
							}
							else
							{
								NPC nPC187 = this;
								nPC187.frameCounter = nPC187.frameCounter + 1;
								if (this.frameCounter > 6)
								{
									this.frameCounter = 0;
									this.frame.Y = this.frame.Y + height;
								}
								if (this.frame.Y > height * 5)
								{
									this.frame.Y = 0;
									return;
								}
							}
						}
						else if (this.type == 366 || this.type == 367)
						{
							if (this.velocity.Y == 0f)
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
							}
							if (this.velocity.X == 0f)
							{
								this.frame.Y = 0;
								this.frameCounter = 0;
								return;
							}
							this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
							NPC nPC188 = this;
							nPC188.frameCounter = nPC188.frameCounter + 1;
							if (this.frameCounter > 6)
							{
								this.frame.Y = this.frame.Y + height;
								this.frameCounter = 0;
							}
							if (this.frame.Y / height >= Main.npcFrameCount[this.type])
							{
								this.frame.Y = 0;
								return;
							}
						}
						else if (this.type == 46 || this.type == 47 || this.type == 303 || this.type == 337 || this.type == 443 || this.type == 464)
						{
							if (this.velocity.Y != 0f)
							{
								if (this.velocity.Y < 0f)
								{
									this.frameCounter = 0;
									this.frame.Y = height * 4;
									return;
								}
								if (this.velocity.Y > 0f)
								{
									this.frameCounter = 0;
									this.frame.Y = height * 6;
									return;
								}
							}
							else
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
								if (this.velocity.X == 0f)
								{
									this.frame.Y = 0;
									this.frameCounter = 0;
									return;
								}
								this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 1f);
								NPC nPC189 = this;
								nPC189.frameCounter = nPC189.frameCounter + 1;
								if (this.frameCounter > 6)
								{
									this.frame.Y = this.frame.Y + height;
									this.frameCounter = 0;
								}
								if (this.frame.Y / height >= Main.npcFrameCount[this.type])
								{
									this.frame.Y = 0;
									return;
								}
							}
						}
						else if (this.type == 4 || this.type == 125 || this.type == 126)
						{
							this.frameCounter = this.frameCounter + 1;
							if (this.frameCounter < 7)
							{
								this.frame.Y = 0;
							}
							else if (this.frameCounter < 14)
							{
								this.frame.Y = height;
							}
							else if (this.frameCounter >= 21)
							{
								this.frameCounter = 0;
								this.frame.Y = 0;
							}
							else
							{
								this.frame.Y = height * 2;
							}
							if (this.ai[0] > 1f)
							{
								this.frame.Y = this.frame.Y + height * 3;
								return;
							}
						}
						else if (this.type == 5)
						{
							this.frameCounter = this.frameCounter + 1;
							if (this.frameCounter >= 8)
							{
								this.frame.Y = this.frame.Y + height;
								this.frameCounter = 0;
							}
							if (this.frame.Y >= height * Main.npcFrameCount[this.type])
							{
								this.frame.Y = 0;
								return;
							}
						}
						else if (this.type == 94)
						{
							NPC nPC190 = this;
							nPC190.frameCounter = nPC190.frameCounter + 1;
							if (this.frameCounter < 6)
							{
								this.frame.Y = 0;
								return;
							}
							if (this.frameCounter < 12)
							{
								this.frame.Y = height;
								return;
							}
							if (this.frameCounter < 18)
							{
								this.frame.Y = height * 2;
								return;
							}
							this.frame.Y = height;
							if (this.frameCounter >= 23)
							{
								this.frameCounter = 0;
								return;
							}
						}
						else if (this.type == 6 || this.type == 173)
						{
							this.frameCounter = this.frameCounter + 1;
							if (this.frameCounter >= 8)
							{
								this.frame.Y = this.frame.Y + height;
								this.frameCounter = 0;
							}
							if (this.frame.Y >= height * Main.npcFrameCount[this.type])
							{
								this.frame.Y = 0;
								return;
							}
						}
						else if (this.type == 24)
						{
							if (this.velocity.Y == 0f)
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
							}
							if (this.ai[1] > 0f)
							{
								if (this.frame.Y < 4)
								{
									this.frameCounter = 0;
								}
								NPC nPC191 = this;
								nPC191.frameCounter = nPC191.frameCounter + 1;
								if (this.frameCounter <= 4)
								{
									this.frame.Y = height * 4;
									return;
								}
								if (this.frameCounter <= 8)
								{
									this.frame.Y = height * 5;
									return;
								}
								if (this.frameCounter <= 12)
								{
									this.frame.Y = height * 6;
									return;
								}
								if (this.frameCounter <= 16)
								{
									this.frame.Y = height * 7;
									return;
								}
								if (this.frameCounter <= 20)
								{
									this.frame.Y = height * 8;
									return;
								}
								this.frame.Y = height * 9;
								this.frameCounter = 100;
								return;
							}
							NPC nPC192 = this;
							nPC192.frameCounter = nPC192.frameCounter + 1;
							if (this.frameCounter <= 4)
							{
								this.frame.Y = 0;
								return;
							}
							if (this.frameCounter <= 8)
							{
								this.frame.Y = height;
								return;
							}
							if (this.frameCounter <= 12)
							{
								this.frame.Y = height * 2;
								return;
							}
							this.frame.Y = height * 3;
							if (this.frameCounter >= 16)
							{
								this.frameCounter = 0;
								return;
							}
						}
						else if (this.type == 29 || this.type == 32 || this.type == 45 || this.type == 172 || this.type >= 281 && this.type <= 286)
						{
							if (this.velocity.Y == 0f)
							{
								if (this.direction == 1)
								{
									this.spriteDirection = 1;
								}
								if (this.direction == -1)
								{
									this.spriteDirection = -1;
								}
							}
							this.frame.Y = 0;
							if (this.velocity.Y != 0f)
							{
								this.frame.Y = this.frame.Y + height;
								return;
							}
							if (this.ai[1] > 0f)
							{
								this.frame.Y = this.frame.Y + height * 2;
								return;
							}
						}
						else if (this.type == 34)
						{
							this.frameCounter = this.frameCounter + 1;
							if (this.frameCounter >= 4)
							{
								this.frame.Y = this.frame.Y + height;
								this.frameCounter = 0;
							}
							if (this.frame.Y >= height * Main.npcFrameCount[this.type])
							{
								this.frame.Y = 0;
							}
						}
					}
					else
					{
						NPC nPC193 = this;
						nPC193.frameCounter = nPC193.frameCounter + 1;
						if (this.frameCounter > 3)
						{
							this.frame.Y = this.frame.Y + height;
							this.frameCounter = 0;
						}
						if (this.frame.Y > height * 7)
						{
							this.frame.Y = 0;
							return;
						}
					}
				}
				else
				{
					if (this.velocity.Y != 0f)
					{
						this.frameCounter = 0;
						this.frame.Y = height * 6;
						return;
					}
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = height * ((int)this.ai[2] - 1);
						this.frameCounter = 0;
						return;
					}
					if (this.frame.Y < height * 7)
					{
						this.frame.Y = height * 7;
					}
					this.frameCounter = this.frameCounter + (double)(Math.Abs(this.velocity.X) * 2f);
					NPC x8 = this;
					x8.frameCounter = x8.frameCounter + (double)(this.velocity.X * 1.3f);
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = height * 7;
						return;
					}
				}
			}
			else
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0;
					this.frame.Y = height * 8;
					return;
				}
				if (this.direction == 1)
				{
					this.spriteDirection = 1;
				}
				if (this.direction == -1)
				{
					this.spriteDirection = -1;
				}
				if (this.ai[2] < 0f)
				{
					NPC nPC194 = this;
					nPC194.frameCounter = nPC194.frameCounter + 1;
					if (this.frameCounter > 3)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y >= Main.npcFrameCount[this.type] * height)
					{
						this.frame.Y = height * 21;
						return;
					}
					if (this.frame.Y < height * 21)
					{
						this.frame.Y = height * 21;
						return;
					}
				}
				else if (this.velocity.X != 0f)
				{
					NPC nPC195 = this;
					nPC195.frameCounter = nPC195.frameCounter + (double)(1f + Math.Abs(this.velocity.X));
					if (this.frameCounter > 6)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height >= Main.npcFrameCount[this.type] - 4)
					{
						this.frame.Y = height * 10;
						return;
					}
					if (this.frame.Y / height < 10)
					{
						this.frame.Y = height * 10;
						return;
					}
				}
				else
				{
					NPC nPC196 = this;
					nPC196.frameCounter = nPC196.frameCounter + 1;
					if (this.frameCounter > 4)
					{
						this.frame.Y = this.frame.Y + height;
						this.frameCounter = 0;
					}
					if (this.frame.Y / height > 7)
					{
						this.frame.Y = 0;
						return;
					}
				}
			}
		}

		public static string firstNPCName(int npcType)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					return Main.npc[i].displayName;
				}
			}
			return NPC.getNewNPCName(npcType);
		}

		public Color GetAlpha(Color newColor)
		{
			float single = (float)(255 - this.alpha) / 255f;
			int r = (int)((float)newColor.R * single);
			int g = (int)((float)newColor.G * single);
			int b = (int)((float)newColor.B * single);
			int a = newColor.A - this.alpha;
			if (this.type == 402)
			{
				return new Color(255, 255, 255, 255);
			}
			if (this.type == 484)
			{
				return new Color(250, 250, 250, 200);
			}
			if (this.type >= 454 && this.type <= 459 || this.type == 521)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				newColor.A = 150;
				newColor = newColor * ((float)a / 255f);
				return newColor;
			}
			if (this.type == 440)
			{
				byte num = 180;
				if (Main.expertMode)
				{
					num = 210;
				}
				num = (byte)((float)num * single);
				return new Color((int)num, (int)num, (int)num, (int)num);
			}
			if (this.type == 516)
			{
				return new Color(this.alpha, this.alpha, this.alpha, this.alpha);
			}
			if (this.type == 522)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 523)
			{
				return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
			}
			if (this.type == 395 || this.type == 519)
			{
				newColor = Color.Lerp(newColor, Color.White, 0.4f);
				return newColor;
			}
			if (this.type == 370 && this.ai[0] != -1f && this.ai[0] < 9f)
			{
				float single1 = MathHelper.Lerp(single, 1f, 0.25f);
				if (single1 > 1f)
				{
					single1 = 1f;
				}
				b = (int)((float)newColor.B * single1);
			}
			if (this.type == 30)
			{
				return new Color(250, 250, 250, 100);
			}
			if (this.type == 25 || this.type == 30 || this.type == 59 || this.type == 60)
			{
				return new Color(200, 200, 200, 0);
			}
			if (this.type == 360)
			{
				r = newColor.R;
				g = newColor.G;
				b = newColor.B;
				if (r < 75)
				{
					r = 75;
				}
				if (g < 175)
				{
					g = 175;
				}
				if (b < 255)
				{
					b = 255;
				}
				return new Color(r, g, b, 255);
			}
			if (this.type == 352)
			{
				return new Color(255, 255, 255, 200);
			}
			if (this.type != 72)
			{
				if (this.type == 288)
				{
					return new Color(200, 200, 200, 0);
				}
				if (this.type == 289)
				{
					return new Color(250, 250, 250, 50);
				}
				if (this.type >= 254 && this.type <= 261)
				{
					b = 255;
					if (r < 100)
					{
						r = 100;
					}
					if (g < 150)
					{
						g = 150;
					}
				}
				else if (this.type == 374)
				{
					b = 255;
					if (r < 100)
					{
						r = 100;
					}
					if (g < 150)
					{
						g = 150;
					}
				}
				else if (this.type == 64 || this.type == 63 || this.type == 75 || this.type == 103 || this.type == 400)
				{
					r = (int)((double)newColor.R * 1.5);
					g = (int)((double)newColor.G * 1.5);
					b = (int)((double)newColor.B * 1.5);
					if (r > 255)
					{
						r = 255;
					}
					if (g > 255)
					{
						g = 255;
					}
					if (b > 255)
					{
						b = 255;
					}
				}
			}
			else
			{
				r = newColor.R;
				g = newColor.G;
				b = newColor.B;
			}
			if (a < 0)
			{
				a = 0;
			}
			if (a > 255)
			{
				a = 255;
			}
			return new Color(r, g, b, a);
		}

		public float GetBossHeadRotation()
		{
			float single = 0f;
			int num = this.type;
			if (num > 68)
			{
				if (num == 127)
				{
					if (this.ai[1] == 1f || this.ai[1] == 2f)
					{
						single = this.rotation;
					}
					return single;
				}
				if (num == 262)
				{
					single = this.rotation;
					return single;
				}
				if (num != 345)
				{
					return single;
				}
				else if (this.ai[0] == 2f)
				{
					single = this.rotation;
					return single;
				}
				else
				{
					return single;
				}
			}
			else
			{
				if (num == 35)
				{
					if (this.ai[1] == 1f || this.ai[1] == 2f)
					{
						single = this.rotation;
					}
					return single;
				}
				if (num == 68)
				{
					single = this.rotation;
					return single;
				}
				return single;
			}
		}

		public SpriteEffects GetBossHeadSpriteEffects()
		{
			SpriteEffects spriteEffect = SpriteEffects.None;
			if (this.type == 491 && this.spriteDirection == 1)
			{
				spriteEffect = SpriteEffects.FlipHorizontally;
			}
			return spriteEffect;
		}

		public int GetBossHeadTextureIndex()
		{
			int bossHeadTextures = NPCID.Sets.BossHeadTextures[this.type];
			int num = this.type;
			if (num <= 126)
			{
				if (num != 4)
				{
					switch (num)
					{
						case 125:
						{
							if (this.ai[0] < 3f)
							{
								break;
							}
							bossHeadTextures = 20;
							break;
						}
						case 126:
						{
							if (this.ai[0] < 3f)
							{
								break;
							}
							bossHeadTextures = 21;
							break;
						}
					}
				}
				else if (this.ai[0] >= 2f)
				{
					bossHeadTextures = 1;
				}
			}
			else if (num != 262)
			{
				switch (num)
				{
					case 439:
					{
						if (this.ai[0] != 5f || this.alpha != 255)
						{
							break;
						}
						bossHeadTextures = -1;
						break;
					}
					case 440:
					{
						if (this.ai[0] == 5f && this.alpha != 255)
						{
							break;
						}
						bossHeadTextures = -1;
						break;
					}
				}
			}
			else if (this.life <= this.lifeMax / 2)
			{
				bossHeadTextures = 12;
			}
			return bossHeadTextures;
		}

		public string GetChat()
		{
			Recipe.FindRecipes();
			bool flag = false;
			bool flag1 = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			bool flag8 = false;
			bool flag9 = false;
			bool flag10 = false;
			bool flag11 = false;
			bool flag12 = false;
			bool flag13 = false;
			bool flag14 = false;
			bool flag15 = false;
			bool flag16 = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 17)
					{
						flag = true;
					}
					else if (Main.npc[i].type == 18)
					{
						flag1 = true;
					}
					else if (Main.npc[i].type == 19)
					{
						flag2 = true;
					}
					else if (Main.npc[i].type == 20)
					{
						flag3 = true;
					}
					else if (Main.npc[i].type == 37)
					{
						flag4 = true;
					}
					else if (Main.npc[i].type == 38)
					{
						flag5 = true;
					}
					else if (Main.npc[i].type == 124)
					{
						flag6 = true;
					}
					else if (Main.npc[i].type == 107)
					{
						flag7 = true;
					}
					else if (Main.npc[i].type == 54)
					{
						flag8 = true;
					}
					else if (Main.npc[i].type == 160)
					{
						flag9 = true;
					}
					else if (Main.npc[i].type == 178)
					{
						flag10 = true;
					}
					else if (Main.npc[i].type == 229)
					{
						flag11 = true;
					}
					else if (Main.npc[i].type == 209)
					{
						flag12 = true;
					}
					else if (Main.npc[i].type == 208)
					{
						flag13 = true;
					}
					else if (Main.npc[i].type == 353)
					{
						flag14 = true;
					}
					else if (Main.npc[i].type == 22)
					{
						flag15 = true;
					}
					else if (Main.npc[i].type == 2)
					{
						flag16 = true;
					}
				}
			}
			string str = "";
			if (this.type == 17)
			{
				if (!NPC.downedBoss1 && Main.rand.Next(3) == 0)
				{
					if (Main.player[Main.myPlayer].statLifeMax >= 200)
					{
						str = (Main.player[Main.myPlayer].statDefense > 10 ? Lang.dialog(3, false) : Lang.dialog(2, false));
					}
					else
					{
						str = Lang.dialog(1, false);
					}
				}
				else if (Main.dayTime)
				{
					if (Main.time < 16200)
					{
						int num = Main.rand.Next(3);
						if (num != 0)
						{
							str = (num != 1 ? Lang.dialog(6, false) : Lang.dialog(5, false));
						}
						else
						{
							str = Lang.dialog(4, false);
						}
					}
					else if (Main.time <= 37800)
					{
						int num1 = Main.rand.Next(3);
						if (num1 != 0)
						{
							str = (num1 != 1 ? Lang.dialog(12, false) : Lang.dialog(11, false));
						}
						else
						{
							str = Lang.dialog(10, false);
						}
					}
					else
					{
						int num2 = Main.rand.Next(3);
						if (num2 != 0)
						{
							str = (num2 != 1 ? Lang.dialog(9, false) : Lang.dialog(8, false));
						}
						else
						{
							str = Lang.dialog(7, false);
						}
					}
				}
				else if (Main.bloodMoon)
				{
					if (!flag1 || !flag6 || Main.rand.Next(3) != 0)
					{
						int num3 = Main.rand.Next(4);
						if (num3 == 0)
						{
							str = Lang.dialog(14, false);
						}
						else if (num3 != 1)
						{
							str = (num3 != 2 ? Lang.dialog(17, false) : Lang.dialog(16, false));
						}
						else
						{
							str = Lang.dialog(15, false);
						}
					}
					else
					{
						str = Lang.dialog(13, false);
					}
				}
				else if (Main.time < 9720)
				{
					str = (Main.rand.Next(2) != 0 ? Lang.dialog(19, false) : Lang.dialog(18, false));
				}
				else if (Main.time <= 22680)
				{
					int num4 = Main.rand.Next(3);
					if (num4 != 0)
					{
						str = (num4 != 1 ? Lang.dialog(24, false) : Lang.dialog(23, false));
					}
					else
					{
						str = Lang.dialog(22, false);
					}
				}
				else
				{
					str = (Main.rand.Next(2) != 0 ? Lang.dialog(21, false) : Lang.dialog(20, false));
				}
			}
			else if (this.type == 18)
			{
				if (Main.bloodMoon)
				{
					if ((double)Main.player[Main.myPlayer].statLife >= (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
					{
						int num5 = Main.rand.Next(4);
						if (num5 == 0)
						{
							str = Lang.dialog(28, false);
						}
						else if (num5 != 1)
						{
							str = (num5 != 2 ? Lang.dialog(31, false) : Lang.dialog(30, false));
						}
						else
						{
							str = Lang.dialog(29, false);
						}
					}
					else
					{
						int num6 = Main.rand.Next(3);
						if (num6 != 0)
						{
							str = (num6 != 1 ? Lang.dialog(27, false) : Lang.dialog(26, false));
						}
						else
						{
							str = Lang.dialog(25, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0 && !NPC.downedBoss3)
				{
					str = Lang.dialog(32, false);
				}
				else if (flag5 && Main.rand.Next(4) == 0)
				{
					str = Lang.dialog(33, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					str = Lang.dialog(34, false);
				}
				else if (flag16 && Main.rand.Next(4) == 0)
				{
					str = Lang.dialog(35, false);
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.33)
				{
					int num7 = Main.rand.Next(5);
					if (num7 == 0)
					{
						str = Lang.dialog(36, false);
					}
					else if (num7 == 1)
					{
						str = Lang.dialog(37, false);
					}
					else if (num7 != 2)
					{
						str = (num7 != 3 ? Lang.dialog(40, false) : Lang.dialog(39, false));
					}
					else
					{
						str = Lang.dialog(38, false);
					}
				}
				else if ((double)Main.player[Main.myPlayer].statLife >= (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
				{
					int num8 = Main.rand.Next(4);
					if (num8 == 0)
					{
						str = Lang.dialog(48, false);
					}
					else if (num8 != 1)
					{
						str = (num8 != 2 ? Lang.dialog(51, false) : Lang.dialog(50, false));
					}
					else
					{
						str = Lang.dialog(49, false);
					}
				}
				else
				{
					int num9 = Main.rand.Next(7);
					if (num9 == 0)
					{
						str = Lang.dialog(41, false);
					}
					else if (num9 == 1)
					{
						str = Lang.dialog(42, false);
					}
					else if (num9 == 2)
					{
						str = Lang.dialog(43, false);
					}
					else if (num9 == 3)
					{
						str = Lang.dialog(44, false);
					}
					else if (num9 != 4)
					{
						str = (num9 != 5 ? Lang.dialog(47, false) : Lang.dialog(46, false));
					}
					else
					{
						str = Lang.dialog(45, false);
					}
				}
			}
			else if (this.type == 19)
			{
				if (NPC.downedBoss3 && !Main.hardMode)
				{
					str = Lang.dialog(58, false);
				}
				else if (flag1 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(59, false);
				}
				else if (flag1 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(60, false);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(61, false);
				}
				else if (flag5 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(62, false);
				}
				else if (flag5 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(63, false);
				}
				else if (!Main.bloodMoon)
				{
					int num10 = Main.rand.Next(3);
					if (num10 != 0)
					{
						str = (num10 != 1 ? Lang.dialog(68, false) : Lang.dialog(67, false));
					}
					else
					{
						str = Lang.dialog(66, false);
					}
				}
				else
				{
					str = (Main.rand.Next(2) != 0 ? Lang.dialog(65, false) : Lang.dialog(64, false));
				}
			}
			else if (this.type == 20)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					str = (!WorldGen.crimson ? Lang.dialog(69, false) : Lang.dialog(332, false));
				}
				else if (flag2 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(70, false);
				}
				else if (flag && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(71, false);
				}
				else if (flag4 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(72, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(238, false);
				}
				else if (!Main.bloodMoon)
				{
					int num11 = Main.rand.Next(5);
					if (num11 == 0)
					{
						str = (!WorldGen.crimson ? Lang.dialog(77, false) : Lang.dialog(333, false));
					}
					else if (num11 == 1)
					{
						str = Lang.dialog(78, false);
					}
					else if (num11 != 2)
					{
						str = (num11 != 3 ? Lang.dialog(81, false) : Lang.dialog(80, false));
					}
					else
					{
						str = Lang.dialog(79, false);
					}
				}
				else
				{
					int num12 = Main.rand.Next(4);
					if (num12 == 0)
					{
						str = Lang.dialog(73, false);
					}
					else if (num12 != 1)
					{
						str = (num12 != 2 ? Lang.dialog(76, false) : Lang.dialog(75, false));
					}
					else
					{
						str = Lang.dialog(74, false);
					}
				}
			}
			else if (this.type == 37)
			{
				if (Main.dayTime)
				{
					int num13 = Main.rand.Next(3);
					if (num13 != 0)
					{
						str = (num13 != 1 ? Lang.dialog(84, false) : Lang.dialog(83, false));
					}
					else
					{
						str = Lang.dialog(82, false);
					}
				}
				else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
				{
					int num14 = Main.rand.Next(4);
					if (num14 == 0)
					{
						str = Lang.dialog(85, false);
					}
					else if (num14 != 1)
					{
						str = (num14 != 2 ? Lang.dialog(88, false) : Lang.dialog(87, false));
					}
					else
					{
						str = Lang.dialog(86, false);
					}
				}
				else
				{
					int num15 = Main.rand.Next(4);
					if (num15 == 0)
					{
						str = Lang.dialog(89, false);
					}
					else if (num15 != 1)
					{
						str = (num15 != 2 ? Lang.dialog(92, false) : Lang.dialog(91, false));
					}
					else
					{
						str = Lang.dialog(90, false);
					}
				}
			}
			else if (this.type == 38)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					str = Lang.dialog(93, false);
				}
				if (Main.bloodMoon)
				{
					int num16 = Main.rand.Next(3);
					if (num16 != 0)
					{
						str = (num16 != 1 ? Lang.dialog(96, false) : Lang.dialog(95, false));
					}
					else
					{
						str = Lang.dialog(94, false);
					}
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(97, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(98, false);
				}
				else if (flag1 && Main.rand.Next(4) == 0)
				{
					str = Lang.dialog(99, false);
				}
				else if (flag3 && Main.rand.Next(4) == 0)
				{
					str = Lang.dialog(100, false);
				}
				else if (Main.dayTime)
				{
					int num17 = Main.rand.Next(5);
					if (num17 == 0)
					{
						str = Lang.dialog(105, false);
					}
					else if (num17 == 1)
					{
						str = Lang.dialog(106, false);
					}
					else if (num17 != 2)
					{
						str = (num17 != 3 ? Lang.dialog(109, false) : Lang.dialog(108, false));
					}
					else
					{
						str = Lang.dialog(107, false);
					}
				}
				else
				{
					int num18 = Main.rand.Next(4);
					if (num18 == 0)
					{
						str = Lang.dialog(101, false);
					}
					else if (num18 != 1)
					{
						str = (num18 != 2 ? Lang.dialog(104, false) : Lang.dialog(103, false));
					}
					else
					{
						str = Lang.dialog(102, false);
					}
				}
			}
			else if (this.type == 54)
			{
				if (!flag6 && Main.rand.Next(2) == 0)
				{
					str = Lang.dialog(110, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(237, false);
				}
				else if (Main.bloodMoon)
				{
					str = Lang.dialog(111, false);
				}
				else if (flag1 && Main.rand.Next(4) == 0)
				{
					str = Lang.dialog(112, false);
				}
				else if (Main.player[Main.myPlayer].head != 24)
				{
					int num19 = Main.rand.Next(6);
					if (num19 == 0)
					{
						str = Lang.dialog(114, false);
					}
					else if (num19 == 1)
					{
						str = Lang.dialog(115, false);
					}
					else if (num19 == 2)
					{
						str = Lang.dialog(116, false);
					}
					else if (num19 != 3)
					{
						str = (num19 != 4 ? Lang.dialog(119, false) : Lang.dialog(118, false));
					}
					else
					{
						str = Lang.dialog(117, false);
					}
				}
				else
				{
					str = Lang.dialog(113, false);
				}
			}
			else if (this.type == 105)
			{
				str = Lang.dialog(120, false);
			}
			else if (this.type == 107)
			{
				if (this.homeless)
				{
					int num20 = Main.rand.Next(5);
					if (num20 == 0)
					{
						str = Lang.dialog(121, false);
					}
					else if (num20 == 1)
					{
						str = Lang.dialog(122, false);
					}
					else if (num20 != 2)
					{
						str = (num20 != 3 ? Lang.dialog(125, false) : Lang.dialog(124, false));
					}
					else
					{
						str = Lang.dialog(123, false);
					}
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(126, false);
				}
				else if (flag14 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(309, false);
				}
				else if (Main.dayTime)
				{
					int num21 = Main.rand.Next(5);
					if (num21 == 0)
					{
						str = Lang.dialog(132, false);
					}
					else if (num21 == 1)
					{
						str = Lang.dialog(133, false);
					}
					else if (num21 != 2)
					{
						str = (num21 != 3 ? Lang.dialog(136, false) : Lang.dialog(135, false));
					}
					else
					{
						str = Lang.dialog(134, false);
					}
				}
				else
				{
					int num22 = Main.rand.Next(5);
					if (num22 == 0)
					{
						str = Lang.dialog(127, false);
					}
					else if (num22 == 1)
					{
						str = Lang.dialog(128, false);
					}
					else if (num22 != 2)
					{
						str = (num22 != 3 ? Lang.dialog(131, false) : Lang.dialog(130, false));
					}
					else
					{
						str = Lang.dialog(129, false);
					}
				}
			}
			else if (this.type == 106)
			{
				str = Lang.dialog(137, false);
			}
			else if (this.type == 108)
			{
				if (this.homeless)
				{
					int num23 = Main.rand.Next(3);
					if (num23 == 0)
					{
						str = Lang.dialog(138, false);
					}
					else if (num23 == 1 && !Main.player[Main.myPlayer].Male)
					{
						str = Lang.dialog(139, false);
					}
					else if (num23 == 1)
					{
						str = Lang.dialog(140, false);
					}
					else if (num23 == 2)
					{
						str = Lang.dialog(141, false);
					}
				}
				else if (Main.player[Main.myPlayer].Male && flag16 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(142, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag5 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(143, false);
				}
				else if (Main.player[Main.myPlayer].Male && flag7 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(144, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag1 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(145, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag6 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(146, false);
				}
				else if (!Main.player[Main.myPlayer].Male && flag3 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(147, false);
				}
				else if (Main.dayTime)
				{
					int num24 = Main.rand.Next(5);
					if (num24 == 0)
					{
						str = Lang.dialog(151, false);
					}
					else if (num24 == 1)
					{
						str = Lang.dialog(152, false);
					}
					else if (num24 != 2)
					{
						str = (num24 != 3 ? Lang.dialog(155, false) : Lang.dialog(154, false));
					}
					else
					{
						str = Lang.dialog(153, false);
					}
				}
				else
				{
					int num25 = Main.rand.Next(3);
					if (num25 == 0)
					{
						str = Lang.dialog(148, false);
					}
					else if (num25 == 1)
					{
						str = Lang.dialog(149, false);
					}
					else if (num25 == 2)
					{
						str = Lang.dialog(150, false);
					}
				}
			}
			else if (this.type == 123)
			{
				str = Lang.dialog(156, false);
			}
			else if (this.type == 124)
			{
				if (this.homeless)
				{
					int num26 = Main.rand.Next(4);
					if (num26 == 0)
					{
						str = Lang.dialog(157, false);
					}
					else if (num26 != 1)
					{
						str = (num26 != 2 ? Lang.dialog(160, false) : Lang.dialog(159, false));
					}
					else
					{
						str = Lang.dialog(158, false);
					}
				}
				else if (Main.bloodMoon)
				{
					int num27 = Main.rand.Next(4);
					if (num27 == 0)
					{
						str = Lang.dialog(161, false);
					}
					else if (num27 != 1)
					{
						str = (num27 != 2 ? Lang.dialog(164, false) : Lang.dialog(163, false));
					}
					else
					{
						str = Lang.dialog(162, false);
					}
				}
				else if (flag7 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(165, false);
				}
				else if (!flag2 || Main.rand.Next(6) != 0)
				{
					int num28 = Main.rand.Next(3);
					if (num28 != 0)
					{
						str = (num28 != 1 ? Lang.dialog(169, false) : Lang.dialog(168, false));
					}
					else
					{
						str = Lang.dialog(167, false);
					}
				}
				else
				{
					str = Lang.dialog(166, false);
				}
			}
			else if (this.type == 22)
			{
				if (Main.bloodMoon)
				{
					int num29 = Main.rand.Next(3);
					if (num29 != 0)
					{
						str = (num29 != 1 ? Lang.dialog(172, false) : Lang.dialog(171, false));
					}
					else
					{
						str = Lang.dialog(170, false);
					}
				}
				else if (Main.dayTime)
				{
					int num30 = Main.rand.Next(3);
					if (num30 != 0)
					{
						str = (num30 != 1 ? Lang.dialog(176, false) : Lang.dialog(175, false));
					}
					else
					{
						str = Lang.dialog(174, false);
					}
				}
				else
				{
					str = Lang.dialog(173, false);
				}
			}
			else if (this.type == 142)
			{
				int num31 = Main.rand.Next(3);
				if (num31 == 0)
				{
					str = Lang.dialog(224, false);
				}
				else if (num31 == 1)
				{
					str = Lang.dialog(225, false);
				}
				else if (num31 == 2)
				{
					str = Lang.dialog(226, false);
				}
			}
			else if (this.type == 160)
			{
				int num32 = Main.rand.Next(6);
				if (flag3 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(232, false);
				}
				else if (flag8 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(236, false);
				}
				else if (num32 == 0)
				{
					str = Lang.dialog(231, false);
				}
				else if (num32 == 1)
				{
					str = Lang.dialog(233, false);
				}
				else if (num32 == 2)
				{
					str = Lang.dialog(234, false);
				}
				else if (num32 == 3)
				{
					str = Lang.dialog(235, false);
				}
				else if (num32 == 4)
				{
					str = Lang.dialog(240, false);
				}
				else if (num32 == 5)
				{
					str = Lang.dialog(241, false);
				}
			}
			else if (this.type == 178)
			{
				int num33 = Main.rand.Next(5);
				if (Main.bloodMoon && Main.rand.Next(3) == 0)
				{
					str = Lang.dialog(245, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(246, false);
				}
				else if (flag11 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(247, false);
				}
				else if (num33 == 0)
				{
					str = Lang.dialog(242, false);
				}
				else if (num33 == 1)
				{
					str = Lang.dialog(243, false);
				}
				else if (num33 == 2)
				{
					str = Lang.dialog(244, false);
				}
				else if (num33 == 3)
				{
					str = Lang.dialog(248, false);
				}
				else if (num33 == 4)
				{
					str = Lang.dialog(249, false);
				}
			}
			else if (this.type == 207)
			{
				int num34 = Main.rand.Next(3);
				if (flag11 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(260, false);
				}
				else if (num34 == 0)
				{
					str = Lang.dialog(257, false);
				}
				else if (num34 == 1)
				{
					str = Lang.dialog(258, false);
				}
				else if (num34 == 2)
				{
					str = Lang.dialog(259, false);
				}
			}
			else if (this.type == 208)
			{
				int num35 = Main.rand.Next(7);
				if (Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(268, false);
				}
				else if (flag14 && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(310, false);
				}
				else if (num35 == 0)
				{
					str = Lang.dialog(265, false);
				}
				else if (num35 == 1)
				{
					str = Lang.dialog(266, false);
				}
				else if (num35 == 2)
				{
					str = Lang.dialog(267, false);
				}
				else if (num35 == 3)
				{
					str = Lang.dialog(269, false);
				}
				else if (num35 == 4)
				{
					str = Lang.dialog(270, false);
				}
				else if (num35 == 5)
				{
					str = Lang.dialog(271, false);
				}
				else if (num35 == 6)
				{
					str = Lang.dialog(272, false);
				}
			}
			else if (this.type == 209)
			{
				int num36 = Main.rand.Next(5);
				if (flag11 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(284, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(283, false);
				}
				else if (num36 == 0)
				{
					str = Lang.dialog(280, false);
				}
				else if (num36 == 1)
				{
					str = Lang.dialog(281, false);
				}
				else if (num36 == 2)
				{
					str = Lang.dialog(282, false);
				}
				else if (num36 == 3)
				{
					str = Lang.dialog(285, false);
				}
				else if (num36 == 4)
				{
					str = Lang.dialog(286, false);
				}
			}
			else if (this.type == 227)
			{
				int num37 = Main.rand.Next(5);
				if (Main.hardMode && Main.rand.Next(7) == 0)
				{
					str = Lang.dialog(250, false);
				}
				else if (flag13 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(251, false);
				}
				else if (num37 == 0)
				{
					str = Lang.dialog(252, false);
				}
				else if (num37 == 1)
				{
					str = Lang.dialog(253, false);
				}
				else if (num37 == 2)
				{
					str = Lang.dialog(254, false);
				}
				else if (num37 == 3)
				{
					str = Lang.dialog(255, false);
				}
				else if (num37 == 4)
				{
					str = Lang.dialog(256, false);
				}
			}
			else if (this.type == 228)
			{
				int num38 = Main.rand.Next(3);
				if (flag1 && Main.rand.Next(6) == 0)
				{
					str = Lang.dialog(263, false);
				}
				else if (num38 == 0)
				{
					str = Lang.dialog(261, false);
				}
				else if (num38 == 1)
				{
					str = Lang.dialog(262, false);
				}
				else if (num38 == 2)
				{
					str = Lang.dialog(264, false);
				}
			}
			else if (this.type == 229)
			{
				int num39 = Main.rand.Next(6);
				if (!Main.player[Main.myPlayer].Male && Main.rand.Next(5) == 0)
				{
					str = Lang.dialog(276, false);
				}
				else if (num39 == 0)
				{
					str = Lang.dialog(273, false);
				}
				else if (num39 == 1)
				{
					str = Lang.dialog(274, false);
				}
				else if (num39 == 2)
				{
					str = Lang.dialog(275, false);
				}
				else if (num39 == 3)
				{
					str = Lang.dialog(277, false);
				}
				else if (num39 == 4)
				{
					str = Lang.dialog(278, false);
				}
				else if (num39 == 5)
				{
					str = Lang.dialog(279, false);
				}
			}
			else if (this.type == 354)
			{
				str = Lang.dialog(Main.rand.Next(315, 319), false);
			}
			else if (this.type != 353)
			{
				if (this.type == 368)
				{
					if (flag15 && Main.rand.Next(5) == 0)
					{
						str = Lang.dialog(319, false);
					}
					else if (!flag || Main.rand.Next(5) != 0)
					{
						str = (!flag8 || Main.rand.Next(5) != 0 ? Lang.dialog(Main.rand.Next(322, 331), false) : Lang.dialog(321, false));
					}
					else
					{
						str = Lang.dialog(320, false);
					}
				}
				else if (this.type == 376)
				{
					str = Lang.dialog(Main.rand.Next(353, 356), false);
				}
				else if (this.type == 369)
				{
					if (Main.bloodMoon)
					{
						str = (Main.anglerQuestFinished ? Lang.dialog(Main.rand.Next(350, 353), false) : Lang.dialog(Main.rand.Next(348, 350), false));
					}
					else if (Main.anglerQuestFinished)
					{
						str = (!flag3 || Main.rand.Next(5) != 0 ? Lang.dialog(Main.rand.Next(338, 347), false) : Lang.dialog(347, false));
					}
					else
					{
						str = Lang.dialog(Main.rand.Next(334, 338), false);
					}
				}
				else if (this.type == 453)
				{
					str = Lang.dialog(Main.rand.Next(356, 364), false);
				}
				else if (this.type == 441)
				{
					if (Main.rand.Next(6) == 0 && flag3)
					{
						str = Lang.dialog(371, false);
					}
					if (Main.rand.Next(6) == 0 && flag2)
					{
						str = Lang.dialog(372, false);
					}
					if (Main.rand.Next(6) == 0 && flag5)
					{
						str = Lang.dialog(373, false);
					}
					str = (Main.rand.Next(6) != 0 || !flag ? Lang.dialog(Main.rand.Next(364, 370), false) : Lang.dialog(374, false));
				}
			}
			else if (Main.bloodMoon)
			{
				int num40 = Main.rand.Next(3);
				if (num40 == 0)
				{
					str = Lang.dialog(304, false);
				}
				else if (num40 == 1)
				{
					str = Lang.dialog(305, false);
				}
				else if (num40 == 2)
				{
					str = Lang.dialog(306, false);
				}
			}
			else if (Main.dayTime && Main.time < 16200 && Main.rand.Next(3) == 0)
			{
				str = Lang.dialog(311, false);
			}
			else if (Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
			{
				int num41 = Main.rand.Next(2);
				if (num41 == 0)
				{
					str = Lang.dialog(293, false);
				}
				else if (num41 == 1)
				{
					str = Lang.dialog(300, false);
				}
			}
			else if (!Main.player[Main.myPlayer].Male && Main.rand.Next(3) == 0)
			{
				int num42 = Main.rand.Next(3);
				if (num42 == 0)
				{
					str = Lang.dialog(291, false);
				}
				else if (num42 == 1)
				{
					str = Lang.dialog(292, false);
				}
				else if (num42 == 2)
				{
					str = Lang.dialog(312, false);
				}
			}
			else if (flag13 && flag6 && flag1 && flag2 && Main.rand.Next(5) == 0)
			{
				str = Lang.dialog(307, false);
			}
			else if (flag13 && Main.rand.Next(5) == 0)
			{
				str = Lang.dialog(302, false);
			}
			else if (flag5 && Main.rand.Next(5) == 0)
			{
				str = Lang.dialog(303, false);
			}
			else if (flag12 && Main.rand.Next(5) == 0)
			{
				str = Lang.dialog(308, false);
			}
			else if (Main.moonPhase < 3)
			{
				int num43 = Main.rand.Next(5);
				if (num43 == 0)
				{
					str = Lang.dialog(287, false);
				}
				else if (num43 == 1)
				{
					str = Lang.dialog(288, false);
				}
				else if (num43 == 2)
				{
					str = Lang.dialog(289, false);
				}
				else if (num43 == 3)
				{
					str = Lang.dialog(290, false);
				}
				else if (num43 == 4)
				{
					str = Lang.dialog(294, false);
				}
			}
			else if (Main.moonPhase >= 6)
			{
				int num44 = Main.rand.Next(4);
				if (num44 == 0)
				{
					str = Lang.dialog(299, false);
				}
				else if (num44 == 1)
				{
					str = Lang.dialog(301, false);
				}
				else if (num44 == 2)
				{
					str = Lang.dialog(313, false);
				}
				else if (num44 == 3)
				{
					str = Lang.dialog(314, false);
				}
			}
			else
			{
				int num45 = Main.rand.Next(4);
				if (num45 == 0)
				{
					str = Lang.dialog(295, false);
				}
				else if (num45 == 1)
				{
					str = Lang.dialog(296, false);
				}
				else if (num45 == 2)
				{
					str = Lang.dialog(297, false);
				}
				else if (num45 == 3)
				{
					str = Lang.dialog(298, false);
				}
			}
			return str;
		}

		public Color GetColor(Color newColor)
		{
			int r = this.color.R - (255 - newColor.R);
			int g = this.color.G - (255 - newColor.G);
			int b = this.color.B - (255 - newColor.B);
			int a = this.color.A - (255 - newColor.A);
			if (r < 0)
			{
				r = 0;
			}
			if (r > 255)
			{
				r = 255;
			}
			if (g < 0)
			{
				g = 0;
			}
			if (g > 255)
			{
				g = 255;
			}
			if (b < 0)
			{
				b = 0;
			}
			if (b > 255)
			{
				b = 255;
			}
			if (a < 0)
			{
				a = 0;
			}
			if (a > 255)
			{
				a = 255;
			}
			return new Color(r, g, b, a);
		}

		public static string getNewNPCName(int npcType)
		{
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random();
			}
			int num = npcType;
			if (num <= 160)
			{
				if (num > 54)
				{
					switch (num)
					{
						case 107:
						{
							switch (WorldGen.genRand.Next(25))
							{
								case 0:
								{
									return "Grodax";
								}
								case 1:
								{
									return "Sarx";
								}
								case 2:
								{
									return "Xon";
								}
								case 3:
								{
									return "Mrunok";
								}
								case 4:
								{
									return "Nuxatk";
								}
								case 5:
								{
									return "Tgerd";
								}
								case 6:
								{
									return "Darz";
								}
								case 7:
								{
									return "Smador";
								}
								case 8:
								{
									return "Stazen";
								}
								case 9:
								{
									return "Mobart";
								}
								case 10:
								{
									return "Knogs";
								}
								case 11:
								{
									return "Tkanus";
								}
								case 12:
								{
									return "Negurk";
								}
								case 13:
								{
									return "Nort";
								}
								case 14:
								{
									return "Durnok";
								}
								case 15:
								{
									return "Trogem";
								}
								case 16:
								{
									return "Stezom";
								}
								case 17:
								{
									return "Gnudar";
								}
								case 18:
								{
									return "Ragz";
								}
								case 19:
								{
									return "Fahd";
								}
								case 20:
								{
									return "Xanos";
								}
								case 21:
								{
									return "Arback";
								}
								case 22:
								{
									return "Fjell";
								}
								case 23:
								{
									return "Dalek";
								}
							}
							return "Knub";
						}
						case 108:
						{
							switch (WorldGen.genRand.Next(21))
							{
								case 0:
								{
									return "Dalamar";
								}
								case 1:
								{
									return "Dulais";
								}
								case 2:
								{
									return "Elric";
								}
								case 3:
								{
									return "Arddun";
								}
								case 4:
								{
									return "Maelor";
								}
								case 5:
								{
									return "Leomund";
								}
								case 6:
								{
									return "Hirael";
								}
								case 7:
								{
									return "Gwentor";
								}
								case 8:
								{
									return "Greum";
								}
								case 9:
								{
									return "Gearroid";
								}
								case 10:
								{
									return "Fizban";
								}
								case 11:
								{
									return "Ningauble";
								}
								case 12:
								{
									return "Seonag";
								}
								case 13:
								{
									return "Sargon";
								}
								case 14:
								{
									return "Merlyn";
								}
								case 15:
								{
									return "Magius";
								}
								case 16:
								{
									return "Berwyn";
								}
								case 17:
								{
									return "Arwyn";
								}
								case 18:
								{
									return "Alasdair";
								}
								case 19:
								{
									return "Tagar";
								}
							}
							return "Xanadu";
						}
						default:
						{
							if (num == 124)
							{
								switch (WorldGen.genRand.Next(24))
								{
									case 0:
									{
										return "Shayna";
									}
									case 1:
									{
										return "Korrie";
									}
									case 2:
									{
										return "Ginger";
									}
									case 3:
									{
										return "Brooke";
									}
									case 4:
									{
										return "Jenny";
									}
									case 5:
									{
										return "Autumn";
									}
									case 6:
									{
										return "Nancy";
									}
									case 7:
									{
										return "Ella";
									}
									case 8:
									{
										return "Kayla";
									}
									case 9:
									{
										return "Selah";
									}
									case 10:
									{
										return "Sophia";
									}
									case 11:
									{
										return "Marshanna";
									}
									case 12:
									{
										return "Lauren";
									}
									case 13:
									{
										return "Trisha";
									}
									case 14:
									{
										return "Shirlena";
									}
									case 15:
									{
										return "Sheena";
									}
									case 16:
									{
										return "Ellen";
									}
									case 17:
									{
										return "Amy";
									}
									case 18:
									{
										return "Dawn";
									}
									case 19:
									{
										return "Susana";
									}
									case 20:
									{
										return "Meredith";
									}
									case 21:
									{
										return "Selene";
									}
									case 22:
									{
										return "Terra";
									}
								}
								return "Sally";
							}
							if (num == 160)
							{
								switch (WorldGen.genRand.Next(12))
								{
									case 0:
									{
										return "Reishi";
									}
									case 1:
									{
										return "Maitake";
									}
									case 2:
									{
										return "Chanterelle";
									}
									case 3:
									{
										return "Porcini";
									}
									case 4:
									{
										return "Shimeji";
									}
									case 5:
									{
										return "Amanita";
									}
									case 6:
									{
										return "Muscaria";
									}
									case 7:
									{
										return "Agaric";
									}
									case 8:
									{
										return "Cremini";
									}
									case 9:
									{
										return "Morel";
									}
									case 10:
									{
										return "Enoki";
									}
								}
								return "Shiitake";
							}
							break;
						}
					}
				}
				else
				{
					switch (num)
					{
						case 17:
						{
							switch (WorldGen.genRand.Next(23))
							{
								case 0:
								{
									return "Alfred";
								}
								case 1:
								{
									return "Barney";
								}
								case 2:
								{
									return "Calvin";
								}
								case 3:
								{
									return "Edmund";
								}
								case 4:
								{
									return "Edwin";
								}
								case 5:
								{
									return "Eugene";
								}
								case 6:
								{
									return "Frank";
								}
								case 7:
								{
									return "Frederick";
								}
								case 8:
								{
									return "Gilbert";
								}
								case 9:
								{
									return "Gus";
								}
								case 10:
								{
									return "Wilbur";
								}
								case 11:
								{
									return "Seymour";
								}
								case 12:
								{
									return "Louis";
								}
								case 13:
								{
									return "Humphrey";
								}
								case 14:
								{
									return "Harold";
								}
								case 15:
								{
									return "Milton";
								}
								case 16:
								{
									return "Mortimer";
								}
								case 17:
								{
									return "Howard";
								}
								case 18:
								{
									return "Walter";
								}
								case 19:
								{
									return "Finn";
								}
								case 20:
								{
									return "Isaac";
								}
								case 21:
								{
									return "Joseph";
								}
							}
							return "Ralph";
						}
						case 18:
						{
							switch (WorldGen.genRand.Next(24))
							{
								case 0:
								{
									return "Molly";
								}
								case 1:
								{
									return "Amy";
								}
								case 2:
								{
									return "Claire";
								}
								case 3:
								{
									return "Emily";
								}
								case 4:
								{
									return "Katie";
								}
								case 5:
								{
									return "Madeline";
								}
								case 6:
								{
									return "Katelyn";
								}
								case 7:
								{
									return "Emma";
								}
								case 8:
								{
									return "Abigail";
								}
								case 9:
								{
									return "Carly";
								}
								case 10:
								{
									return "Jenna";
								}
								case 11:
								{
									return "Heather";
								}
								case 12:
								{
									return "Katherine";
								}
								case 13:
								{
									return "Caitlin";
								}
								case 14:
								{
									return "Kaitlin";
								}
								case 15:
								{
									return "Holly";
								}
								case 16:
								{
									return "Kaitlyn";
								}
								case 17:
								{
									return "Hannah";
								}
								case 18:
								{
									return "Kathryn";
								}
								case 19:
								{
									return "Lorraine";
								}
								case 20:
								{
									return "Helen";
								}
								case 21:
								{
									return "Kayla";
								}
								case 22:
								{
									return "Lisa";
								}
							}
							return "Allison";
						}
						case 19:
						{
							switch (WorldGen.genRand.Next(24))
							{
								case 0:
								{
									return "DeShawn";
								}
								case 1:
								{
									return "DeAndre";
								}
								case 2:
								{
									return "Marquis";
								}
								case 3:
								{
									return "Darnell";
								}
								case 4:
								{
									return "Terrell";
								}
								case 5:
								{
									return "Malik";
								}
								case 6:
								{
									return "Trevon";
								}
								case 7:
								{
									return "Tyrone";
								}
								case 8:
								{
									return "Willie";
								}
								case 9:
								{
									return "Dominique";
								}
								case 10:
								{
									return "Demetrius";
								}
								case 11:
								{
									return "Reginald";
								}
								case 12:
								{
									return "Jamal";
								}
								case 13:
								{
									return "Maurice";
								}
								case 14:
								{
									return "Jalen";
								}
								case 15:
								{
									return "Darius";
								}
								case 16:
								{
									return "Xavier";
								}
								case 17:
								{
									return "Terrance";
								}
								case 18:
								{
									return "Andre";
								}
								case 19:
								{
									return "Dante";
								}
								case 20:
								{
									return "Brimst";
								}
								case 21:
								{
									return "Bronson";
								}
								case 22:
								{
									return "Tony";
								}
							}
							return "Darryl";
						}
						case 20:
						{
							switch (WorldGen.genRand.Next(22))
							{
								case 0:
								{
									return "Alalia";
								}
								case 1:
								{
									return "Alalia";
								}
								case 2:
								{
									return "Alura";
								}
								case 3:
								{
									return "Ariella";
								}
								case 4:
								{
									return "Caelia";
								}
								case 5:
								{
									return "Calista";
								}
								case 6:
								{
									return "Chryseis";
								}
								case 7:
								{
									return "Emerenta";
								}
								case 8:
								{
									return "Elysia";
								}
								case 9:
								{
									return "Evvie";
								}
								case 10:
								{
									return "Faye";
								}
								case 11:
								{
									return "Felicitae";
								}
								case 12:
								{
									return "Lunette";
								}
								case 13:
								{
									return "Nata";
								}
								case 14:
								{
									return "Nissa";
								}
								case 15:
								{
									return "Tatiana";
								}
								case 16:
								{
									return "Rosalva";
								}
								case 17:
								{
									return "Shea";
								}
								case 18:
								{
									return "Tania";
								}
								case 19:
								{
									return "Isis";
								}
								case 20:
								{
									return "Celestia";
								}
							}
							return "Xylia";
						}
						case 21:
						{
							break;
						}
						case 22:
						{
							switch (WorldGen.genRand.Next(35))
							{
								case 0:
								{
									return "Joe";
								}
								case 1:
								{
									return "Connor";
								}
								case 2:
								{
									return "Tanner";
								}
								case 3:
								{
									return "Wyatt";
								}
								case 4:
								{
									return "Cody";
								}
								case 5:
								{
									return "Levi";
								}
								case 6:
								{
									return "Luke";
								}
								case 7:
								{
									return "Jack";
								}
								case 8:
								{
									return "Scott";
								}
								case 9:
								{
									return "Logan";
								}
								case 10:
								{
									return "Cole";
								}
								case 11:
								{
									return "Asher";
								}
								case 12:
								{
									return "Bradley";
								}
								case 13:
								{
									return "Jacob";
								}
								case 14:
								{
									return "Garrett";
								}
								case 15:
								{
									return "Dylan";
								}
								case 16:
								{
									return "Maxwell";
								}
								case 17:
								{
									return "Steve";
								}
								case 18:
								{
									return "Brett";
								}
								case 19:
								{
									return "Andrew";
								}
								case 20:
								{
									return "Harley";
								}
								case 21:
								{
									return "Kyle";
								}
								case 22:
								{
									return "Jake";
								}
								case 23:
								{
									return "Ryan";
								}
								case 24:
								{
									return "Jeffrey";
								}
								case 25:
								{
									return "Seth";
								}
								case 26:
								{
									return "Marty";
								}
								case 27:
								{
									return "Brandon";
								}
								case 28:
								{
									return "Zach";
								}
								case 29:
								{
									return "Jeff";
								}
								case 30:
								{
									return "Daniel";
								}
								case 31:
								{
									return "Trent";
								}
								case 32:
								{
									return "Kevin";
								}
								case 33:
								{
									return "Brian";
								}
							}
							return "Colin";
						}
						default:
						{
							if (num == 38)
							{
								switch (WorldGen.genRand.Next(22))
								{
									case 0:
									{
										return "Dolbere";
									}
									case 1:
									{
										return "Bazdin";
									}
									case 2:
									{
										return "Durim";
									}
									case 3:
									{
										return "Tordak";
									}
									case 4:
									{
										return "Garval";
									}
									case 5:
									{
										return "Morthal";
									}
									case 6:
									{
										return "Oten";
									}
									case 7:
									{
										return "Dolgen";
									}
									case 8:
									{
										return "Gimli";
									}
									case 9:
									{
										return "Gimut";
									}
									case 10:
									{
										return "Duerthen";
									}
									case 11:
									{
										return "Beldin";
									}
									case 12:
									{
										return "Jarut";
									}
									case 13:
									{
										return "Ovbere";
									}
									case 14:
									{
										return "Norkas";
									}
									case 15:
									{
										return "Dolgrim";
									}
									case 16:
									{
										return "Boften";
									}
									case 17:
									{
										return "Norsun";
									}
									case 18:
									{
										return "Dias";
									}
									case 19:
									{
										return "Fikod";
									}
									case 20:
									{
										return "Urist";
									}
								}
								return "Darur";
							}
							if (num == 54)
							{
								switch (WorldGen.genRand.Next(25))
								{
									case 0:
									{
										return "Sebastian";
									}
									case 1:
									{
										return "Rupert";
									}
									case 2:
									{
										return "Clive";
									}
									case 3:
									{
										return "Nigel";
									}
									case 4:
									{
										return "Mervyn";
									}
									case 5:
									{
										return "Cedric";
									}
									case 6:
									{
										return "Pip";
									}
									case 7:
									{
										return "Cyril";
									}
									case 8:
									{
										return "Fitz";
									}
									case 9:
									{
										return "Lloyd";
									}
									case 10:
									{
										return "Arthur";
									}
									case 11:
									{
										return "Rodney";
									}
									case 12:
									{
										return "Graham";
									}
									case 13:
									{
										return "Edward";
									}
									case 14:
									{
										return "Alfred";
									}
									case 15:
									{
										return "Edmund";
									}
									case 16:
									{
										return "Henry";
									}
									case 17:
									{
										return "Herald";
									}
									case 18:
									{
										return "Roland";
									}
									case 19:
									{
										return "Lincoln";
									}
									case 20:
									{
										return "Lloyd";
									}
									case 21:
									{
										return "Edgar";
									}
									case 22:
									{
										return "Eustace";
									}
									case 23:
									{
										return "Benjamin";
									}
								}
								return "Rodrick";
							}
							break;
						}
					}
				}
			}
			else if (num <= 229)
			{
				if (num == 178)
				{
					switch (WorldGen.genRand.Next(20))
					{
						case 0:
						{
							return "Whitney";
						}
						case 1:
						{
							return "Verity";
						}
						case 2:
						{
							return "Ada";
						}
						case 3:
						{
							return "Cornelia";
						}
						case 4:
						{
							return "Lydia";
						}
						case 5:
						{
							return "Leila";
						}
						case 6:
						{
							return "Minerva";
						}
						case 7:
						{
							return "Emeline";
						}
						case 8:
						{
							return "Cynthia";
						}
						case 9:
						{
							return "Fidelia";
						}
						case 10:
						{
							return "Lilly";
						}
						case 11:
						{
							return "Phoebe";
						}
						case 12:
						{
							return "Zylphia";
						}
						case 13:
						{
							return "Zelda";
						}
						case 14:
						{
							return "Selina";
						}
						case 15:
						{
							return "Hope";
						}
						case 16:
						{
							return "Isabella";
						}
						case 17:
						{
							return "Judith";
						}
						case 18:
						{
							return "Savannah";
						}
					}
					return "Vivian";
				}
				switch (num)
				{
					case 207:
					{
						switch (WorldGen.genRand.Next(16))
						{
							case 0:
							{
								return "Abdosir";
							}
							case 1:
							{
								return "Akbar";
							}
							case 2:
							{
								return "Bodashtart";
							}
							case 3:
							{
								return "Danel";
							}
							case 4:
							{
								return "Hanno";
							}
							case 5:
							{
								return "Hiram";
							}
							case 6:
							{
								return "Kanmi";
							}
							case 7:
							{
								return "Philosir";
							}
							case 8:
							{
								return "Tabnit";
							}
							case 9:
							{
								return "Yutpan";
							}
							case 10:
							{
								return "Ahirom";
							}
							case 11:
							{
								return "Batnoam";
							}
							case 12:
							{
								return "Sikarbaal";
							}
							case 13:
							{
								return "Hannibal";
							}
							case 14:
							{
								return "Yehomilk";
							}
						}
						return "Ahinadab";
					}
					case 208:
					{
						switch (WorldGen.genRand.Next(17))
						{
							case 0:
							{
								return "Candy";
							}
							case 1:
							{
								return "Isis";
							}
							case 2:
							{
								return "Trixy";
							}
							case 3:
							{
								return "Destiny";
							}
							case 4:
							{
								return "Lexus";
							}
							case 5:
							{
								return "Bambi";
							}
							case 6:
							{
								return "Bailey";
							}
							case 7:
							{
								return "Glitter";
							}
							case 8:
							{
								return "Sparkle";
							}
							case 9:
							{
								return "Paris";
							}
							case 10:
							{
								return "Dazzle";
							}
							case 11:
							{
								return "Fantasy";
							}
							case 12:
							{
								return "Bunny";
							}
							case 13:
							{
								return "Sugar";
							}
							case 14:
							{
								return "Fantasia";
							}
							case 15:
							{
								return "Star";
							}
						}
						return "Cherry";
					}
					case 209:
					{
						switch (WorldGen.genRand.Next(23))
						{
							case 0:
							{
								return "Alpha";
							}
							case 1:
							{
								return "Beta";
							}
							case 2:
							{
								return "Delta";
							}
							case 3:
							{
								return "Omega";
							}
							case 4:
							{
								return "Gamma";
							}
							case 5:
							{
								return "Theta";
							}
							case 6:
							{
								return "Kappa";
							}
							case 7:
							{
								return "Omicron";
							}
							case 8:
							{
								return "Sigma";
							}
							case 9:
							{
								return "Upsilon";
							}
							case 10:
							{
								return "Phi";
							}
							case 11:
							{
								return "Zeta";
							}
							case 12:
							{
								return "Lambda";
							}
							case 13:
							{
								return "Nu";
							}
							case 14:
							{
								return "Ci";
							}
							case 15:
							{
								return "Rho";
							}
							case 16:
							{
								return "Phi";
							}
							case 17:
							{
								return "Fender";
							}
							case 18:
							{
								return "T-3E0";
							}
							case 19:
							{
								return "Niner-7";
							}
							case 20:
							{
								return "A.N.D.Y";
							}
							case 21:
							{
								return "Syn-X";
							}
						}
						return "Mu";
					}
					default:
					{
						switch (num)
						{
							case 227:
							{
								switch (WorldGen.genRand.Next(17))
								{
									case 0:
									{
										return "Marco";
									}
									case 1:
									{
										return "Guido";
									}
									case 2:
									{
										return "Enzo";
									}
									case 3:
									{
										return "Martino";
									}
									case 4:
									{
										return "Mauro";
									}
									case 5:
									{
										return "Lorenzo";
									}
									case 6:
									{
										return "Ludo";
									}
									case 7:
									{
										return "Luciano";
									}
									case 8:
									{
										return "Carlo";
									}
									case 9:
									{
										return "Bruno";
									}
									case 10:
									{
										return "Mario";
									}
									case 11:
									{
										return "Leonardo";
									}
									case 12:
									{
										return "Raphael";
									}
									case 13:
									{
										return "Luigi";
									}
									case 14:
									{
										return "Luca";
									}
									case 15:
									{
										return "Darren";
									}
								}
								return "Stefano";
							}
							case 228:
							{
								switch (WorldGen.genRand.Next(10))
								{
									case 0:
									{
										return "Abibe";
									}
									case 1:
									{
										return "Jamundi";
									}
									case 2:
									{
										return "U'wa";
									}
									case 3:
									{
										return "Tairona";
									}
									case 4:
									{
										return "Xirigua";
									}
									case 5:
									{
										return "Zop'a";
									}
									case 6:
									{
										return "Opuni";
									}
									case 7:
									{
										return "Kogi-ghi";
									}
									case 8:
									{
										return "Konah";
									}
								}
								return "Gboto";
							}
							case 229:
							{
								switch (WorldGen.genRand.Next(11))
								{
									case 0:
									{
										return "David";
									}
									case 1:
									{
										return "Red Beard";
									}
									case 2:
									{
										return "Jack";
									}
									case 3:
									{
										return "Black Beard";
									}
									case 4:
									{
										return "Captain Morgan";
									}
									case 5:
									{
										return "Wet Beard";
									}
									case 6:
									{
										return "James T. Beard";
									}
									case 7:
									{
										return "Gunpowder Garry";
									}
									case 8:
									{
										return "Captain Stoney Dirt";
									}
									case 9:
									{
										return "Jake";
									}
								}
								return "Captain Bullywort";
							}
						}
						break;
					}
				}
			}
			else if (num > 369)
			{
				if (num == 441)
				{
					switch (WorldGen.genRand.Next(20))
					{
						case 0:
						{
							return "McKinly";
						}
						case 1:
						{
							return "Millard";
						}
						case 2:
						{
							return "Fillmore";
						}
						case 3:
						{
							return "Rutherford";
						}
						case 4:
						{
							return "Chester";
						}
						case 5:
						{
							return "Grover";
						}
						case 6:
						{
							return "Cleveland";
						}
						case 7:
						{
							return "Theodore";
						}
						case 8:
						{
							return "Herbert";
						}
						case 9:
						{
							return "Warren";
						}
						case 10:
						{
							return "Lyndon";
						}
						case 11:
						{
							return "Ronald";
						}
						case 12:
						{
							return "Harrison";
						}
						case 13:
						{
							return "Woodrow";
						}
						case 14:
						{
							return "Tweed";
						}
						case 15:
						{
							return "Blanton";
						}
						case 16:
						{
							return "Dwyer";
						}
						case 17:
						{
							return "Carroll";
						}
					}
					return "Agnew";
				}
				if (num == 453)
				{
					switch (WorldGen.genRand.Next(8))
					{
						case 0:
						{
							return "Skellington";
						}
						case 1:
						{
							return "Bones McGee";
						}
						case 2:
						{
							return "Gloomy Mays";
						}
						case 3:
						{
							return "Jack Sellington";
						}
						case 4:
						{
							return "Billy Marrows";
						}
						case 5:
						{
							return "Tom";
						}
						case 6:
						{
							return "Rattles Magoo";
						}
						case 7:
						{
							return "Mandible Calavera";
						}
					}
					return "No-Eyed Wiley";
				}
			}
			else
			{
				if (num == 353)
				{
					switch (WorldGen.genRand.Next(20))
					{
						case 0:
						{
							return "Bri";
						}
						case 1:
						{
							return "Brianne";
						}
						case 2:
						{
							return "Flora";
						}
						case 3:
						{
							return "Iris";
						}
						case 4:
						{
							return "Scarlett";
						}
						case 5:
						{
							return "Lola";
						}
						case 6:
						{
							return "Hazel";
						}
						case 7:
						{
							return "Stella";
						}
						case 8:
						{
							return "Pearl";
						}
						case 9:
						{
							return "Tallulah";
						}
						case 10:
						{
							return "Ruby";
						}
						case 11:
						{
							return "Esmeralda";
						}
						case 12:
						{
							return "Kylie";
						}
						case 13:
						{
							return "Kati";
						}
						case 14:
						{
							return "Biah";
						}
						case 15:
						{
							return "Meliyah";
						}
						case 16:
						{
							return "Petra";
						}
						case 17:
						{
							return "Rox";
						}
						case 18:
						{
							return "Roxanne";
						}
					}
					return "Annabel";
				}
				switch (num)
				{
					case 368:
					{
						switch (WorldGen.genRand.Next(13))
						{
							case 0:
							{
								return "Abraham";
							}
							case 1:
							{
								return "Bohemas";
							}
							case 2:
							{
								return "Eladon";
							}
							case 3:
							{
								return "Aphraim";
							}
							case 4:
							{
								return "Gallius";
							}
							case 5:
							{
								return "Llewellyn";
							}
							case 6:
							{
								return "Riley";
							}
							case 7:
							{
								return "Rawleigh";
							}
							case 8:
							{
								return "Shipton";
							}
							case 9:
							{
								return "Romeo";
							}
							case 10:
							{
								return "Aedan";
							}
							case 11:
							{
								return "Mercer";
							}
						}
						return "Willy";
					}
					case 369:
					{
						switch (WorldGen.genRand.Next(22))
						{
							case 0:
							{
								return "Bobby";
							}
							case 1:
							{
								return "Sammy";
							}
							case 2:
							{
								return "Jimmy";
							}
							case 3:
							{
								return "Danny";
							}
							case 4:
							{
								return "Timmy";
							}
							case 5:
							{
								return "Simon";
							}
							case 6:
							{
								return "Johnny";
							}
							case 7:
							{
								return "Billy";
							}
							case 8:
							{
								return "Matty";
							}
							case 9:
							{
								return "Bart";
							}
							case 10:
							{
								return "Phillip";
							}
							case 11:
							{
								return "Spencer";
							}
							case 12:
							{
								return "Nathan";
							}
							case 13:
							{
								return "Grayson";
							}
							case 14:
							{
								return "Bryce";
							}
							case 15:
							{
								return "Miles";
							}
							case 16:
							{
								return "Charles";
							}
							case 17:
							{
								return "Adam";
							}
							case 18:
							{
								return "Tyler";
							}
							case 19:
							{
								return "Jey";
							}
							case 20:
							{
								return "Ivan";
							}
						}
						return "Izzy";
					}
				}
			}
			return "";
		}

		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		public int GetShootingFrame(float circleY)
		{
			int num = -4;
			if (circleY < -0.3f)
			{
				num = 1;
			}
			if (circleY < -0.1f)
			{
				num = 0;
			}
			if (circleY > 0.1f)
			{
				num = 2;
			}
			if (circleY > 0.3f)
			{
				num = 3;
			}
			if (this.type == 228 || this.type == 229 || this.type == 209 || this.type == 22 || this.type == 368)
			{
				if (num == -4)
				{
					num = 1;
				}
				if (circleY >= -0.1f)
				{
					num++;
				}
			}
			return num;
		}

		public Tuple<Vector2, float> GetSwingStats(int swingMax, int swingCurrent, int aimDir, int itemWidth, int itemHeight)
		{
			Vector2 zero = Vector2.Zero;
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				float single = 10f;
				if (itemWidth > 32)
				{
					single = 14f;
				}
				if (itemWidth >= 52)
				{
					single = 24f;
				}
				if (itemWidth >= 64)
				{
					single = 28f;
				}
				if (itemWidth >= 92)
				{
					single = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - single) * (float)aimDir;
				zero.Y = this.position.Y + 24f;
			}
			else if ((double)swingCurrent >= (double)swingMax * 0.666)
			{
				float single1 = 6f;
				if (itemWidth > 32)
				{
					single1 = 14f;
				}
				if (itemWidth >= 48)
				{
					single1 = 18f;
				}
				if (itemWidth >= 52)
				{
					single1 = 24f;
				}
				if (itemWidth >= 64)
				{
					single1 = 28f;
				}
				if (itemWidth >= 92)
				{
					single1 = 38f;
				}
				zero.X = base.Center.X - ((float)itemWidth * 0.5f - single1) * (float)aimDir;
				single1 = 10f;
				if (itemHeight > 32)
				{
					single1 = 10f;
				}
				if (itemHeight > 52)
				{
					single1 = 12f;
				}
				if (itemHeight > 64)
				{
					single1 = 14f;
				}
				zero.Y = this.position.Y + single1;
			}
			else
			{
				float single2 = 10f;
				if (itemWidth > 32)
				{
					single2 = 18f;
				}
				if (itemWidth >= 52)
				{
					single2 = 24f;
				}
				if (itemWidth >= 64)
				{
					single2 = 28f;
				}
				if (itemWidth >= 92)
				{
					single2 = 38f;
				}
				zero.X = base.Center.X + ((float)itemWidth * 0.5f - single2) * (float)aimDir;
				single2 = 10f;
				if (itemHeight > 32)
				{
					single2 = 8f;
				}
				if (itemHeight > 52)
				{
					single2 = 12f;
				}
				if (itemHeight > 64)
				{
					single2 = 14f;
				}
				zero.Y = this.position.Y + single2;
			}
			float single3 = ((float)swingCurrent / (float)swingMax - 0.5f) * (float)(-aimDir) * 3.5f - (float)aimDir * 0.3f;
			return Tuple.Create<Vector2, float>(zero, single3);
		}

		public int HasBuff(int type)
		{
			if (this.buffImmune[type])
			{
				return -1;
			}
			for (int i = 0; i < 5; i++)
			{
				if (this.buffTime[i] >= 1 && this.buffType[i] == type)
				{
					return i;
				}
			}
			return -1;
		}

		public void HealEffect(int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.HealLife, string.Concat(healAmount), false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0f, 0, 0, 0);
			}
		}

		public static void HealEffect(Rectangle r, int healAmount, bool broadcast = true)
		{
			int num = CombatText.NewText(r, CombatText.HealLife, string.Concat(healAmount), false, false);
			if (broadcast && Main.netMode == 2 && num != 100)
			{
				CombatText combatText = Main.combatText[num];
				NetMessage.SendData(81, -1, -1, combatText.text, (int)combatText.color.PackedValue, combatText.position.X, combatText.position.Y, 0f, 0, 0, 0);
			}
		}

		public void HitEffect(int hitDirection = 0, double dmg = 10)
		{
			int num;
			int num1;
			bool flag;
			int num2;
			int[] numArray;
			Color color;
			Vector2 vector2;
			if (!this.active)
			{
				return;
			}
			if (this.daybreak && this.life <= 0)
			{
				Rectangle hitbox = base.Hitbox;
				for (int i = 0; i < 20; i++)
				{
					Random random = Main.rand;
					numArray = new int[] { 6, 259, 158 };
					int num3 = Utils.SelectRandom<int>(random, numArray);
					Vector2 vector21 = hitbox.TopLeft();
					int num4 = this.width;
					int num5 = this.height;
					color = new Color();
					int num6 = Dust.NewDust(vector21, num4, num5, num3, 0f, -2.5f, 0, color, 1f);
					Main.dust[num6].alpha = 200;
					Dust dust = Main.dust[num6];
					dust.velocity = dust.velocity * 1.4f;
					Dust dust1 = Main.dust[num6];
					dust1.scale = dust1.scale + Main.rand.NextFloat();
				}
				if (Main.netMode != 1)
				{
					for (int j = 0; j < 200; j++)
					{
						NPC nPC = Main.npc[j];
						if (nPC.active && !nPC.buffImmune[189] && base.Distance(nPC.Center) < 100f && !nPC.dontTakeDamage)
						{
							nPC.AddBuff(189, 300, false);
						}
					}
				}
			}
			if (this.type == 378)
			{
				if (this.life <= 0)
				{
					for (int k = 0; k < 20; k++)
					{
						Vector2 vector22 = this.position;
						int num7 = this.width;
						int num8 = this.height;
						color = new Color();
						Dust.NewDust(vector22, num7, num8, 7, 0f, 0f, 0, color, 1f);
					}
				}
				else
				{
					for (int l = 0; (double)l < dmg / (double)this.lifeMax * 50; l++)
					{
						Vector2 vector23 = this.position;
						int num9 = this.width;
						int num10 = this.height;
						color = new Color();
						Dust.NewDust(vector23, num9, num10, 7, 0f, 0f, 0, color, 1f);
					}
				}
			}
			if (this.type == 437 && dmg == 9999)
			{
				for (int m = 0; m < 6; m++)
				{
					Gore.NewGore(base.Center - new Vector2(10f), Vector2.UnitY.RotatedByRandom(6.28318548202515) * 5f, 728 + m, 1f);
				}
			}
			if (this.type == 398 && dmg == 1337)
			{
				MoonlordDeathDrama.ThrowPieces(base.Center, Main.rand.Next(100));
			}
			if (this.type == 488)
			{
				this.localAI[0] = (float)((int)dmg);
				if (this.localAI[0] < 20f)
				{
					this.localAI[0] = 20f;
				}
				if (this.localAI[0] > 120f)
				{
					this.localAI[0] = 120f;
				}
				this.localAI[1] = (float)hitDirection;
			}
			else if (this.type >= 513 && this.type <= 515)
			{
				if (this.life <= 0)
				{
					for (int n = 0; n < 50; n++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num11 = Gore.NewGore(this.position, this.velocity, this.type - 513 + 822, 1f);
					Main.gore[num11].alpha = this.alpha;
				}
				else
				{
					for (int o = 0; (double)o < dmg / (double)this.lifeMax * 100; o++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
					}
				}
			}
			else if (this.type >= 510 && this.type <= 512)
			{
				if (this.life <= 0)
				{
					for (int p = 0; p < 50; p++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
					}
					int num12 = Gore.NewGore(this.position, this.velocity, this.type - 510 + 819, 1f);
					Main.gore[num12].alpha = this.alpha;
				}
				else
				{
					for (int q = 0; (double)q < dmg / (double)this.lifeMax * 100; q++)
					{
						Dust.NewDust(this.position, this.width, this.height, 250, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
					}
				}
			}
			else if (this.type == 518 || this.type == 416)
			{
				if (this.life <= 0)
				{
					for (int r = 0; r < 20; r++)
					{
						Vector2 vector24 = this.position;
						int num13 = this.width;
						int num14 = this.height;
						float single = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector24, num13, num14, 241, single, -1f, 0, color, 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust[] dustArray = Main.dust;
							Vector2 vector25 = this.position;
							int num15 = this.width;
							int num16 = this.height;
							color = new Color();
							Dust dust2 = dustArray[Dust.NewDust(vector25, num15, num16, 6, 0f, 0f, 0, color, 1f)];
							dust2.noGravity = true;
							dust2.scale = 1.5f;
							dust2.fadeIn = 1f;
							Dust dust3 = dust2;
							dust3.velocity = dust3.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 844, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 845, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 835, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 836, this.scale);
				}
				else
				{
					for (int s = 0; (double)s < dmg / (double)this.lifeMax * 20; s++)
					{
						Vector2 vector26 = this.position;
						int num17 = this.width;
						int num18 = this.height;
						float single1 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector26, num17, num18, 241, single1, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray1 = Main.dust;
							Vector2 vector27 = this.position;
							int num19 = this.width;
							int num20 = this.height;
							color = new Color();
							Dust dust4 = dustArray1[Dust.NewDust(vector27, num19, num20, 6, 0f, 0f, 0, color, 1f)];
							dust4.noGravity = true;
							dust4.scale = 1.5f;
							dust4.fadeIn = 1f;
							Dust dust5 = dust4;
							dust5.velocity = dust5.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 419)
			{
				if (this.life <= 0)
				{
					for (int t = 0; t < 20; t++)
					{
						Vector2 vector28 = this.position;
						int num21 = this.width;
						int num22 = this.height;
						float single2 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector28, num21, num22, 241, single2, -1f, 0, color, 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust[] dustArray2 = Main.dust;
							Vector2 vector29 = this.position;
							int num23 = this.width;
							int num24 = this.height;
							color = new Color();
							Dust dust6 = dustArray2[Dust.NewDust(vector29, num23, num24, 6, 0f, 0f, 0, color, 1f)];
							dust6.noGravity = true;
							dust6.scale = 1.5f;
							dust6.fadeIn = 1f;
							Dust dust7 = dust6;
							dust7.velocity = dust7.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 844, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 845, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 846, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 846, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 847, this.scale);
				}
				else
				{
					for (int u = 0; (double)u < dmg / (double)this.lifeMax * 20; u++)
					{
						Vector2 vector210 = this.position;
						int num25 = this.width;
						int num26 = this.height;
						float single3 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector210, num25, num26, 241, single3, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray3 = Main.dust;
							Vector2 vector211 = this.position;
							int num27 = this.width;
							int num28 = this.height;
							color = new Color();
							Dust dust8 = dustArray3[Dust.NewDust(vector211, num27, num28, 6, 0f, 0f, 0, color, 1f)];
							dust8.noGravity = true;
							dust8.scale = 1.5f;
							dust8.fadeIn = 1f;
							Dust dust9 = dust8;
							dust9.velocity = dust9.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 412 || this.type == 413 || this.type == 414)
			{
				if (this.life <= 0)
				{
					for (int v = 0; v < 6; v++)
					{
						Vector2 vector212 = this.position;
						int num29 = this.width;
						int num30 = this.height;
						float single4 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector212, num29, num30, 241, single4, -2.5f, 0, color, 1f);
					}
					for (int w = 0; w < 2; w++)
					{
						Dust.NewDust(this.position, this.width, this.height, 6, 2.5f * (float)hitDirection, -2.5f, 100, Color.Transparent, 2f);
					}
					Gore.NewGore(this.position, this.velocity, this.type - 412 + 828, 1f);
				}
				else
				{
					for (int x = 0; (double)x < dmg / (double)this.lifeMax * 50; x++)
					{
						Vector2 vector213 = this.position;
						int num31 = this.width;
						int num32 = this.height;
						float single5 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector213, num31, num32, 241, single5, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 415)
			{
				if (this.life <= 0)
				{
					for (int y = 0; y < 40; y++)
					{
						Vector2 vector214 = this.position;
						int num33 = this.width;
						int num34 = this.height;
						float single6 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector214, num33, num34, 241, single6, -1f, 0, color, 1f);
						Dust[] dustArray4 = Main.dust;
						Vector2 vector215 = this.position;
						int num35 = this.width;
						int num36 = this.height;
						color = new Color();
						Dust dust10 = dustArray4[Dust.NewDust(vector215, num35, num36, 6, 0f, 0f, 0, color, 1f)];
						dust10.noGravity = true;
						dust10.scale = 1.5f;
						dust10.fadeIn = 1f;
						Dust dust11 = dust10;
						dust11.velocity = dust11.velocity * 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 831, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 832, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 833, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 834, 1f);
				}
				else
				{
					for (int a = 0; (double)a < dmg / (double)this.lifeMax * 20; a++)
					{
						Vector2 vector216 = this.position;
						int num37 = this.width;
						int num38 = this.height;
						float single7 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector216, num37, num38, 241, single7, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray5 = Main.dust;
							Vector2 vector217 = this.position;
							int num39 = this.width;
							int num40 = this.height;
							color = new Color();
							Dust dust12 = dustArray5[Dust.NewDust(vector217, num39, num40, 6, 0f, 0f, 0, color, 1f)];
							dust12.noGravity = true;
							dust12.scale = 1.5f;
							dust12.fadeIn = 1f;
							Dust dust13 = dust12;
							dust13.velocity = dust13.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 417)
			{
				if (this.life <= 0)
				{
					for (int b = 0; b < 30; b++)
					{
						Vector2 vector218 = this.position;
						int num41 = this.width;
						int num42 = this.height;
						float single8 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector218, num41, num42, 241, single8, -1f, 0, color, 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray6 = Main.dust;
							Vector2 vector219 = this.position;
							int num43 = this.width;
							int num44 = this.height;
							color = new Color();
							Dust dust14 = dustArray6[Dust.NewDust(vector219, num43, num44, 6, 0f, 0f, 0, color, 1f)];
							dust14.noGravity = true;
							dust14.scale = 1.5f;
							dust14.fadeIn = 1f;
							Dust dust15 = dust14;
							dust15.velocity = dust15.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 837, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 838, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 839, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 839, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 38f), this.velocity, 840, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 38f), this.velocity, 840, this.scale);
				}
				else
				{
					for (int c = 0; (double)c < dmg / (double)this.lifeMax * 20; c++)
					{
						Vector2 vector220 = this.position;
						int num45 = this.width;
						int num46 = this.height;
						float single9 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector220, num45, num46, 241, single9, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray7 = Main.dust;
							Vector2 vector221 = this.position;
							int num47 = this.width;
							int num48 = this.height;
							color = new Color();
							Dust dust16 = dustArray7[Dust.NewDust(vector221, num47, num48, 6, 0f, 0f, 0, color, 1f)];
							dust16.noGravity = true;
							dust16.scale = 1.5f;
							dust16.fadeIn = 1f;
							Dust dust17 = dust16;
							dust17.velocity = dust17.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 418)
			{
				if (this.life <= 0)
				{
					for (int d = 0; d < 20; d++)
					{
						Vector2 vector222 = this.position;
						int num49 = this.width;
						int num50 = this.height;
						float single10 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector222, num49, num50, 241, single10, -1f, 0, color, 1f);
						Dust[] dustArray8 = Main.dust;
						Vector2 vector223 = this.position;
						int num51 = this.width;
						int num52 = this.height;
						color = new Color();
						Dust dust18 = dustArray8[Dust.NewDust(vector223, num51, num52, 6, 0f, 0f, 0, color, 1f)];
						dust18.noGravity = true;
						dust18.scale = 1.5f;
						dust18.fadeIn = 1f;
						Dust dust19 = dust18;
						dust19.velocity = dust19.velocity * 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 841, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 842, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 842, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 843, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 843, 1f);
				}
				else
				{
					for (int e = 0; (double)e < dmg / (double)this.lifeMax * 20; e++)
					{
						Vector2 vector224 = this.position;
						int num53 = this.width;
						int num54 = this.height;
						float single11 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector224, num53, num54, 241, single11, -1f, 0, color, 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray9 = Main.dust;
							Vector2 vector225 = this.position;
							int num55 = this.width;
							int num56 = this.height;
							color = new Color();
							Dust dust20 = dustArray9[Dust.NewDust(vector225, num55, num56, 6, 0f, 0f, 0, color, 1f)];
							dust20.noGravity = true;
							dust20.scale = 1.5f;
							dust20.fadeIn = 1f;
							Dust dust21 = dust20;
							dust21.velocity = dust21.velocity * 3f;
						}
					}
				}
			}
			if (this.type == 516)
			{
				for (int f = 0; f < 20; f++)
				{
					Vector2 vector226 = this.position;
					int num57 = this.width;
					int num58 = this.height;
					float single12 = 2.5f * (float)hitDirection;
					color = new Color();
					int num59 = Dust.NewDust(vector226, num57, num58, 6, single12, -2.5f, 0, color, 1f);
					Dust dust22 = Main.dust[num59];
					dust22.velocity = dust22.velocity * 3f;
					Dust dust23 = Main.dust[num59];
					dust23.scale = dust23.scale + Main.rand.NextFloat();
					if (Main.rand.Next(2) == 0)
					{
						Vector2 vector227 = this.position;
						int num60 = this.width;
						int num61 = this.height;
						float single13 = 2.5f * (float)hitDirection;
						color = new Color();
						num59 = Dust.NewDust(vector227, num60, num61, 259, single13, -2.5f, 0, color, 1f);
						Main.dust[num59].noGravity = true;
					}
				}
			}
			if (this.type == 519)
			{
				Rectangle rectangle = base.Hitbox;
				for (int g = 0; g < (int)this.oldPos.Length; g = g + 3)
				{
					rectangle.X = (int)this.oldPos[g].X;
					rectangle.Y = (int)this.oldPos[g].Y;
					for (int h = 0; h < 5; h++)
					{
						Random random1 = Main.rand;
						numArray = new int[] { 6, 259, 158 };
						int num62 = Utils.SelectRandom<int>(random1, numArray);
						Vector2 vector228 = rectangle.TopLeft();
						int num63 = this.width;
						int num64 = this.height;
						float single14 = 2.5f * (float)hitDirection;
						color = new Color();
						int num65 = Dust.NewDust(vector228, num63, num64, num62, single14, -2.5f, 0, color, 1f);
						Main.dust[num65].alpha = 200;
						Dust dust24 = Main.dust[num65];
						dust24.velocity = dust24.velocity * 2.4f;
						Dust dust25 = Main.dust[num65];
						dust25.scale = dust25.scale + Main.rand.NextFloat();
					}
				}
			}
			if (this.type == 522)
			{
				Vector2 vector229 = (new Vector2(0f, -3f)).RotatedByRandom(3.14159274101257);
				float single15 = 24f;
				Vector2 vector230 = new Vector2(1.05f, 1f);
				for (float i1 = 0f; i1 < single15; i1 = i1 + 1f)
				{
					int num66 = Dust.NewDust(base.Center, 0, 0, 66, 0f, 0f, 0, Color.Transparent, 1f);
					Main.dust[num66].position = base.Center;
					Dust dust26 = Main.dust[num66];
					double num67 = (double)(6.28318548f * i1 / single15);
					vector2 = new Vector2();
					dust26.velocity = ((vector229.RotatedBy(num67, vector2) * vector230) * (0.8f + Main.rand.NextFloat() * 0.4f)) * 2f;
					Main.dust[num66].color = Color.SkyBlue;
					Main.dust[num66].noGravity = true;
					Dust dust27 = Main.dust[num66];
					dust27.scale = dust27.scale + (0.5f + Main.rand.NextFloat());
				}
			}
			else if (this.type == 426)
			{
				if (this.life <= 0)
				{
					for (int j1 = 0; j1 < 20; j1++)
					{
						Vector2 vector231 = this.position;
						int num68 = this.width;
						int num69 = this.height;
						float single16 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector231, num68, num69, 241, single16, -1f, 0, color, 1f);
					}
					for (int k1 = 0; k1 < 30; k1++)
					{
						Random random2 = Main.rand;
						numArray = new int[] { 229, 240, 161 };
						int num70 = Utils.SelectRandom<int>(random2, numArray);
						Dust[] dustArray10 = Main.dust;
						Vector2 vector232 = this.position;
						int num71 = this.width;
						int num72 = this.height;
						color = new Color();
						Dust dust28 = dustArray10[Dust.NewDust(vector232, num71, num72, num70, 0f, 0f, 0, color, 1f)];
						dust28.noGravity = true;
						dust28.scale = 1.25f + Main.rand.NextFloat();
						dust28.fadeIn = 0.25f;
						Dust dust29 = dust28;
						dust29.velocity = dust29.velocity * 2f;
						dust28.noLight = true;
					}
					Gore.NewGore(base.Top, this.velocity * 0.7f, 799, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 800, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 801, 1f);
					if (Main.netMode != 1)
					{
						for (int l1 = 0; l1 < 3; l1++)
						{
							int num73 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 428, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num73].velocity = (-Vector2.UnitY.RotatedByRandom(6.28318548202515) * (float)Main.rand.Next(3, 6)) - (Vector2.UnitY * 2f);
							Main.npc[num73].netUpdate = true;
						}
					}
				}
				else
				{
					for (int m1 = 0; (double)m1 < dmg / (double)this.lifeMax * 50; m1++)
					{
						Vector2 vector233 = this.position;
						int num74 = this.width;
						int num75 = this.height;
						float single17 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector233, num74, num75, 241, single17, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray11 = Main.dust;
							Vector2 vector234 = this.position;
							int num76 = this.width;
							int num77 = this.height;
							color = new Color();
							Dust dust30 = dustArray11[Dust.NewDust(vector234, num76, num77, 229, 0f, 0f, 0, color, 1f)];
							dust30.noGravity = true;
							dust30.scale = 1.5f;
							dust30.fadeIn = 1f;
							Dust dust31 = dust30;
							dust31.velocity = dust31.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 427)
			{
				if (this.life <= 0)
				{
					for (int n1 = 0; n1 < 10; n1++)
					{
						Vector2 vector235 = this.position;
						int num78 = this.width;
						int num79 = this.height;
						float single18 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector235, num78, num79, 241, single18, -1f, 0, color, 1f);
					}
					for (int o1 = 0; o1 < 20; o1++)
					{
						Random random3 = Main.rand;
						numArray = new int[] { 229, 229, 240 };
						int num80 = Utils.SelectRandom<int>(random3, numArray);
						Dust[] dustArray12 = Main.dust;
						Vector2 vector236 = this.position;
						int num81 = this.width;
						int num82 = this.height;
						color = new Color();
						Dust dust32 = dustArray12[Dust.NewDust(vector236, num81, num82, num80, 0f, 0f, 0, color, 1f)];
						dust32.noGravity = true;
						dust32.scale = 1.25f + Main.rand.NextFloat();
						dust32.fadeIn = 0.25f;
						Dust dust33 = dust32;
						dust33.velocity = dust33.velocity * 3f;
						dust32.noLight = true;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 802, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 803, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 804, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 805, 1f);
				}
				else
				{
					for (int p1 = 0; (double)p1 < dmg / (double)this.lifeMax * 20; p1++)
					{
						Vector2 vector237 = this.position;
						int num83 = this.width;
						int num84 = this.height;
						float single19 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector237, num83, num84, 241, single19, -1f, 0, color, 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray13 = Main.dust;
							Vector2 vector238 = this.position;
							int num85 = this.width;
							int num86 = this.height;
							color = new Color();
							Dust dust34 = dustArray13[Dust.NewDust(vector238, num85, num86, 229, 0f, 0f, 0, color, 1f)];
							dust34.noGravity = true;
							dust34.scale = 1.5f;
							dust34.fadeIn = 1f;
							Dust dust35 = dust34;
							dust35.velocity = dust35.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 429)
			{
				if (this.life <= 0)
				{
					for (int q1 = 0; q1 < 20; q1++)
					{
						Vector2 vector239 = this.position;
						int num87 = this.width;
						int num88 = this.height;
						float single20 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector239, num87, num88, 241, single20, -1f, 0, color, 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust[] dustArray14 = Main.dust;
							Vector2 vector240 = this.position;
							int num89 = this.width;
							int num90 = this.height;
							color = new Color();
							Dust dust36 = dustArray14[Dust.NewDust(vector240, num89, num90, 229, 0f, 0f, 0, color, 1f)];
							dust36.noGravity = true;
							dust36.scale = 1.5f;
							dust36.fadeIn = 1f;
							Dust dust37 = dust36;
							dust37.velocity = dust37.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 808, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					if (Main.netMode != 1)
					{
						Point tileCoordinates = base.Center.ToTileCoordinates();
						Point point = Main.player[this.target].Center.ToTileCoordinates();
						Vector2 center = Main.player[this.target].Center - base.Center;
						int num91 = 20;
						int num92 = 3;
						int num93 = 7;
						int num94 = 2;
						int num95 = 0;
						bool flag1 = false;
						if (center.Length() > 2000f)
						{
							flag1 = true;
						}
						do
						{
						Label1:
							if (flag1)
							{
								goto Label0;
							}
							if (num95 < 100)
							{
								num95++;
								num = Main.rand.Next(point.X - num91, point.X + num91 + 1);
								num1 = Main.rand.Next(point.Y - num91, point.Y - Math.Abs(num - point.X) + 1);
								if ((num1 < point.Y - num93 || num1 > point.Y + num93 || num < point.X - num93 || num > point.X + num93) && (num1 < tileCoordinates.Y - num92 || num1 > tileCoordinates.Y + num92 || num < tileCoordinates.X - num92 || num > tileCoordinates.X + num92) && !Main.tile[num, num1].nactive())
								{
									flag = true;
									if (flag && Main.tile[num, num1].lava())
									{
										flag = false;
									}
									if (flag && Collision.SolidTiles(num - num94, num + num94, num1 - num94, num1 + num94))
									{
										flag = false;
									}
									if (!flag || Collision.CanHitLine(base.Center, 0, 0, Main.player[this.target].Center, 0, 0))
									{
										continue;
									}
									flag = false;
								}
								else
								{
									goto Label1;
								}
							}
							else
							{
								goto Label0;
							}
						}
						while (!flag);
						Projectile.NewProjectile((float)(num * 16 + 8), (float)(num1 * 16 + 8), 0f, 0f, 578, 0, 1f, Main.myPlayer, 0f, 0f);
						flag1 = true;
					}
				}
				else
				{
					for (int r1 = 0; (double)r1 < dmg / (double)this.lifeMax * 20; r1++)
					{
						Vector2 vector241 = this.position;
						int num96 = this.width;
						int num97 = this.height;
						float single21 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector241, num96, num97, 241, single21, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray15 = Main.dust;
							Vector2 vector242 = this.position;
							int num98 = this.width;
							int num99 = this.height;
							color = new Color();
							Dust dust38 = dustArray15[Dust.NewDust(vector242, num98, num99, 229, 0f, 0f, 0, color, 1f)];
							dust38.noGravity = true;
							dust38.scale = 1.5f;
							dust38.fadeIn = 1f;
							Dust dust39 = dust38;
							dust39.velocity = dust39.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 425)
			{
				if (this.life <= 0)
				{
					for (int s1 = 0; s1 < 20; s1++)
					{
						Vector2 vector243 = this.position;
						int num100 = this.width;
						int num101 = this.height;
						float single22 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector243, num100, num101, 241, single22, -1f, 0, color, 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust[] dustArray16 = Main.dust;
							Vector2 vector244 = this.position;
							int num102 = this.width;
							int num103 = this.height;
							color = new Color();
							Dust dust40 = dustArray16[Dust.NewDust(vector244, num102, num103, 229, 0f, 0f, 0, color, 1f)];
							dust40.noGravity = true;
							dust40.scale = 1.5f;
							dust40.fadeIn = 1f;
							Dust dust41 = dust40;
							dust41.velocity = dust41.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 796, this.scale);
					Gore.NewGore(base.Center, this.velocity, 797, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 798, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 809, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 810, this.scale);
				}
				else
				{
					for (int t1 = 0; (double)t1 < dmg / (double)this.lifeMax * 20; t1++)
					{
						Vector2 vector245 = this.position;
						int num104 = this.width;
						int num105 = this.height;
						float single23 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector245, num104, num105, 241, single23, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray17 = Main.dust;
							Vector2 vector246 = this.position;
							int num106 = this.width;
							int num107 = this.height;
							color = new Color();
							Dust dust42 = dustArray17[Dust.NewDust(vector246, num106, num107, 229, 0f, 0f, 0, color, 1f)];
							dust42.noGravity = true;
							dust42.scale = 1.5f;
							dust42.fadeIn = 1f;
							Dust dust43 = dust42;
							dust43.velocity = dust43.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 428)
			{
				if (this.life <= 0)
				{
					for (int u1 = 0; u1 < 10; u1++)
					{
						Vector2 vector247 = this.position;
						int num108 = this.width;
						int num109 = this.height;
						float single24 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector247, num108, num109, 241, single24, -1f, 0, color, 1f);
						if (Main.rand.Next(2) != 0)
						{
							Vector2 vector248 = this.position;
							int num110 = this.width;
							int num111 = this.height;
							color = new Color();
							Dust.NewDust(vector248, num110, num111, 240, 0f, 0f, 0, color, 1f);
						}
						else
						{
							Vector2 vector249 = this.position;
							int num112 = this.width;
							int num113 = this.height;
							color = new Color();
							Dust.NewDust(vector249, num112, num113, 229, 0f, 0f, 0, color, 1f);
						}
					}
					Gore.NewGore(this.position, this.velocity * 0.8f, 806, 1f);
					Gore.NewGore(this.position, this.velocity * 0.8f, 807, 1f);
				}
				else
				{
					for (int v1 = 0; (double)v1 < dmg / (double)this.lifeMax * 20; v1++)
					{
						Vector2 vector250 = this.position;
						int num114 = this.width;
						int num115 = this.height;
						float single25 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector250, num114, num115, 241, single25, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 424)
			{
				if (this.life <= 0)
				{
					for (int w1 = 0; w1 < 20; w1++)
					{
						Vector2 vector251 = this.position;
						int num116 = this.width;
						int num117 = this.height;
						float single26 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector251, num116, num117, 249, single26, -1f, 0, color, 1f);
						if (Main.rand.Next(3) == 0)
						{
							Dust[] dustArray18 = Main.dust;
							Vector2 vector252 = this.position;
							int num118 = this.width;
							int num119 = this.height;
							color = new Color();
							Dust dust44 = dustArray18[Dust.NewDust(vector252, num118, num119, 242, 0f, 0f, 0, color, 1f)];
							dust44.noGravity = true;
							dust44.scale = 1.5f;
							dust44.fadeIn = 1f;
							Dust dust45 = dust44;
							dust45.velocity = dust45.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, 793, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 794, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 794, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 795, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 795, this.scale);
				}
				else
				{
					for (int x1 = 0; (double)x1 < dmg / (double)this.lifeMax * 20; x1++)
					{
						Vector2 vector253 = this.position;
						int num120 = this.width;
						int num121 = this.height;
						float single27 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector253, num120, num121, 249, single27, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray19 = Main.dust;
							Vector2 vector254 = this.position;
							int num122 = this.width;
							int num123 = this.height;
							color = new Color();
							Dust dust46 = dustArray19[Dust.NewDust(vector254, num122, num123, 242, 0f, 0f, 0, color, 1f)];
							dust46.noGravity = true;
							dust46.scale = 1.5f;
							dust46.fadeIn = 1f;
							Dust dust47 = dust46;
							dust47.velocity = dust47.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 423)
			{
				if (this.life <= 0)
				{
					for (int y1 = 0; y1 < 20; y1++)
					{
						Vector2 vector255 = this.position;
						int num124 = this.width;
						int num125 = this.height;
						float single28 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector255, num124, num125, 249, single28, -1f, 0, color, 1f);
						Dust[] dustArray20 = Main.dust;
						Vector2 vector256 = this.position;
						int num126 = this.width;
						int num127 = this.height;
						color = new Color();
						Dust dust48 = dustArray20[Dust.NewDust(vector256, num126, num127, 242, 0f, 0f, 0, color, 1f)];
						dust48.noGravity = true;
						dust48.scale = 1.5f;
						dust48.fadeIn = 1f;
						Dust dust49 = dust48;
						dust49.velocity = dust49.velocity * 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 790, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 791, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 792, 1f);
				}
				else
				{
					for (int a1 = 0; (double)a1 < dmg / (double)this.lifeMax * 50; a1++)
					{
						Vector2 vector257 = this.position;
						int num128 = this.width;
						int num129 = this.height;
						float single29 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector257, num128, num129, 249, single29, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray21 = Main.dust;
							Vector2 vector258 = this.position;
							int num130 = this.width;
							int num131 = this.height;
							color = new Color();
							Dust dust50 = dustArray21[Dust.NewDust(vector258, num130, num131, 242, 0f, 0f, 0, color, 1f)];
							dust50.noGravity = true;
							dust50.scale = 1.5f;
							dust50.fadeIn = 1f;
							Dust dust51 = dust50;
							dust51.velocity = dust51.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 421)
			{
				if (this.life <= 0)
				{
					for (int b1 = 0; b1 < 10; b1++)
					{
						Vector2 vector259 = this.position;
						int num132 = this.width;
						int num133 = this.height;
						float single30 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector259, num132, num133, 249, single30, -1f, 0, color, 1f);
						Dust[] dustArray22 = Main.dust;
						Vector2 vector260 = this.position;
						int num134 = this.width;
						int num135 = this.height;
						color = new Color();
						Dust dust52 = dustArray22[Dust.NewDust(vector260, num134, num135, 242, 0f, 0f, 0, color, 1f)];
						dust52.noGravity = true;
						dust52.scale = 1.5f;
						dust52.fadeIn = 1f;
						Dust dust53 = dust52;
						dust53.velocity = dust53.velocity * 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 785, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 786, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 787, 1f);
				}
				else
				{
					for (int c1 = 0; (double)c1 < dmg / (double)this.lifeMax * 20; c1++)
					{
						Vector2 vector261 = this.position;
						int num136 = this.width;
						int num137 = this.height;
						float single31 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector261, num136, num137, 249, single31, -1f, 0, color, 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray23 = Main.dust;
							Vector2 vector262 = this.position;
							int num138 = this.width;
							int num139 = this.height;
							color = new Color();
							Dust dust54 = dustArray23[Dust.NewDust(vector262, num138, num139, 242, 0f, 0f, 0, color, 1f)];
							dust54.noGravity = true;
							dust54.scale = 1.5f;
							dust54.fadeIn = 1f;
							Dust dust55 = dust54;
							dust55.velocity = dust55.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 420)
			{
				if (this.life <= 0)
				{
					for (int d1 = 0; d1 < 10; d1++)
					{
						Vector2 vector263 = this.position;
						int num140 = this.width;
						int num141 = this.height;
						float single32 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector263, num140, num141, 249, single32, -1f, 0, color, 1f);
						Dust[] dustArray24 = Main.dust;
						Vector2 vector264 = this.position;
						int num142 = this.width;
						int num143 = this.height;
						color = new Color();
						Dust dust56 = dustArray24[Dust.NewDust(vector264, num142, num143, 242, 0f, 0f, 0, color, 1f)];
						dust56.noGravity = true;
						dust56.scale = 1.5f;
						dust56.fadeIn = 1f;
						Dust dust57 = dust56;
						dust57.velocity = dust57.velocity * 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 782, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 783, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 784, 1f);
				}
				else
				{
					for (int e1 = 0; (double)e1 < dmg / (double)this.lifeMax * 20; e1++)
					{
						Vector2 vector265 = this.position;
						int num144 = this.width;
						int num145 = this.height;
						float single33 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector265, num144, num145, 249, single33, -1f, 0, color, 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray25 = Main.dust;
							Vector2 vector266 = this.position;
							int num146 = this.width;
							int num147 = this.height;
							color = new Color();
							Dust dust58 = dustArray25[Dust.NewDust(vector266, num146, num147, 242, 0f, 0f, 0, color, 1f)];
							dust58.noGravity = true;
							dust58.scale = 1.5f;
							dust58.fadeIn = 1f;
							Dust dust59 = dust58;
							dust59.velocity = dust59.velocity * 3f;
						}
					}
				}
			}
			else if (this.type == 406 || this.type == 405)
			{
				if (this.life <= 0)
				{
					for (int f1 = 0; f1 < 60; f1++)
					{
						int num148 = this.width / 4;
						Vector2 rotationVector2 = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41)) / 8f;
						Vector2 center1 = base.Center - (Vector2.One * (float)num148);
						color = new Color();
						int num149 = Dust.NewDust(center1, num148 * 2, num148 * 2, 229, 0f, 0f, 0, color, 1f);
						Dust center2 = Main.dust[num149];
						Vector2 vector267 = Vector2.Normalize(center2.position - base.Center);
						center2.position = (base.Center + ((vector267 * (float)num148) * this.scale)) - new Vector2(4f);
						if (f1 >= 30)
						{
							center2.velocity = ((2f * vector267) * (float)Main.rand.Next(45, 91)) / 10f;
						}
						else
						{
							center2.velocity = (vector267 * center2.velocity.Length()) * 2f;
						}
						center2.noGravity = true;
						center2.scale = 0.7f;
					}
					if (this.type == 405)
					{
						int num150 = NPC.CountNPCS(406) + NPC.CountNPCS(405);
						int num151 = 4;
						if (num150 >= 4)
						{
							num151 = 3;
						}
						if (num150 >= 7)
						{
							num151 = 2;
						}
						if (num150 >= 10)
						{
							num151 = 1;
						}
						for (int g1 = 0; g1 < num151; g1++)
						{
							Vector2 vector268 = Vector2.UnitY.RotatedByRandom(6.28318548202515) * (3f + Main.rand.NextFloat() * 4f);
							int num152 = NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, 406, this.whoAmI, 0f, 0f, 0f, 0f, 255);
							Main.npc[num152].velocity = vector268;
						}
					}
				}
				else
				{
					for (int h1 = 0; (double)h1 < 10 + dmg / 10; h1++)
					{
						int num153 = this.width / 4;
						Vector2 rotationVector21 = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41)) / 8f;
						Vector2 center3 = base.Center - (Vector2.One * (float)num153);
						color = new Color();
						int num154 = Dust.NewDust(center3, num153 * 2, num153 * 2, 229, 0f, 0f, 0, color, 1f);
						Dust center4 = Main.dust[num154];
						Vector2 vector269 = Vector2.Normalize(center4.position - base.Center);
						center4.position = (base.Center + ((vector269 * (float)num153) * this.scale)) - new Vector2(4f);
						if (h1 >= 30)
						{
							center4.velocity = ((2f * vector269) * (float)Main.rand.Next(45, 91)) / 10f;
						}
						else
						{
							center4.velocity = (vector269 * center4.velocity.Length()) * 2f;
						}
						center4.noGravity = true;
						center4.scale = 0.7f + Main.rand.NextFloat();
					}
				}
			}
			else if (this.type == 409)
			{
				if (this.life <= 0)
				{
					for (int i2 = 0; i2 < 20; i2++)
					{
						Vector2 vector270 = this.position;
						int num155 = this.width;
						int num156 = this.height;
						float single34 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector270, num155, num156, 17, single34, -1f, 0, color, 1f);
						Dust[] dustArray26 = Main.dust;
						Vector2 vector271 = this.position;
						int num157 = this.width;
						int num158 = this.height;
						color = new Color();
						Dust dust60 = dustArray26[Dust.NewDust(vector271, num157, num158, 229, 0f, 0f, 0, color, 1f)];
						dust60.noGravity = true;
						Dust dust61 = dust60;
						dust61.velocity = dust61.velocity * 3f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 775, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 776, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 777, 1f);
				}
				else
				{
					for (int j2 = 0; (double)j2 < dmg / (double)this.lifeMax * 50; j2++)
					{
						Vector2 vector272 = this.position;
						int num159 = this.width;
						int num160 = this.height;
						float single35 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector272, num159, num160, 17, single35, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray27 = Main.dust;
							Vector2 vector273 = this.position;
							int num161 = this.width;
							int num162 = this.height;
							color = new Color();
							Dust dust62 = dustArray27[Dust.NewDust(vector273, num161, num162, 229, 0f, 0f, 0, color, 1f)];
							dust62.noGravity = true;
						}
					}
				}
			}
			else if (this.type == 410)
			{
				if (this.life <= 0)
				{
					for (int k2 = 0; k2 < 5; k2++)
					{
						Vector2 vector274 = this.position;
						int num163 = this.width;
						int num164 = this.height;
						float single36 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector274, num163, num164, 17, single36, -1f, 0, color, 1f);
						Dust[] dustArray28 = Main.dust;
						Vector2 vector275 = this.position;
						int num165 = this.width;
						int num166 = this.height;
						color = new Color();
						Dust dust63 = dustArray28[Dust.NewDust(vector275, num165, num166, 229, 0f, 0f, 0, color, 1f)];
						dust63.noGravity = true;
						Dust dust64 = dust63;
						dust64.velocity = dust64.velocity * 3f;
					}
				}
				else
				{
					for (int l2 = 0; (double)l2 < dmg / (double)this.lifeMax * 10; l2++)
					{
						Vector2 vector276 = this.position;
						int num167 = this.width;
						int num168 = this.height;
						float single37 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector276, num167, num168, 17, single37, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray29 = Main.dust;
							Vector2 vector277 = this.position;
							int num169 = this.width;
							int num170 = this.height;
							color = new Color();
							Dust dust65 = dustArray29[Dust.NewDust(vector277, num169, num170, 229, 0f, 0f, 0, color, 1f)];
							dust65.noGravity = true;
						}
					}
				}
			}
			else if (this.type == 407)
			{
				if (this.life <= 0)
				{
					for (int m2 = 0; m2 < 20; m2++)
					{
						if (Main.rand.Next(3) != 0)
						{
							Vector2 vector278 = this.position;
							int num171 = this.width;
							int num172 = this.height;
							float single38 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector278, num171, num172, 17, single38, -1f, 0, color, 1f);
						}
						Dust[] dustArray30 = Main.dust;
						Vector2 vector279 = this.position;
						int num173 = this.width;
						int num174 = this.height;
						color = new Color();
						Dust dust66 = dustArray30[Dust.NewDust(vector279, num173, num174, 229, 0f, 0f, 0, color, 1f)];
						dust66.noGravity = true;
						Dust dust67 = dust66;
						dust67.velocity = dust67.velocity * 3f;
					}
					Gore.NewGore(base.Top, this.velocity * 0.8f, 778, 1f);
					Gore.NewGore(base.Top, this.velocity * 0.8f, 779, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 780, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 781, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 780, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 781, 1f);
				}
				else
				{
					for (int n2 = 0; (double)n2 < dmg / (double)this.lifeMax * 50; n2++)
					{
						Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray31 = Main.dust;
							Vector2 vector280 = this.position;
							int num175 = this.width;
							int num176 = this.height;
							color = new Color();
							Dust dust68 = dustArray31[Dust.NewDust(vector280, num175, num176, 229, 0f, 0f, 0, color, 1f)];
							dust68.noGravity = true;
						}
					}
				}
			}
			else if (this.type == 402)
			{
				if (this.life <= 0)
				{
					for (int o2 = 0; o2 < 5; o2++)
					{
						if (Main.rand.Next(3) == 0)
						{
							Vector2 vector281 = this.position;
							int num177 = this.width;
							int num178 = this.height;
							float single39 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector281, num177, num178, 17, single39, -1f, 0, color, 1f);
						}
						Dust[] dustArray32 = Main.dust;
						Vector2 vector282 = this.position;
						int num179 = this.width;
						int num180 = this.height;
						color = new Color();
						Dust dust69 = dustArray32[Dust.NewDust(vector282, num179, num180, 229, 0f, 0f, 0, color, 1f)];
						dust69.noGravity = true;
						Dust dust70 = dust69;
						dust70.velocity = dust70.velocity * 3f;
					}
					for (int p2 = 0; p2 < (int)this.oldPos.Length; p2++)
					{
						if (Main.rand.Next(4) == 0)
						{
							if (this.oldPos[p2] == Vector2.Zero)
							{
								goto Label0;
							}
							for (int q2 = 0; q2 < 2; q2++)
							{
								if (Main.rand.Next(3) == 0)
								{
									int num181 = this.width;
									int num182 = this.height;
									float single40 = (float)hitDirection;
									color = new Color();
									Dust.NewDust(this.oldPos[p2], num181, num182, 17, single40, -1f, 0, color, 1f);
								}
								Dust[] dustArray33 = Main.dust;
								int num183 = this.width;
								int num184 = this.height;
								color = new Color();
								Dust dust71 = dustArray33[Dust.NewDust(this.oldPos[p2], num183, num184, 229, 0f, 0f, 0, color, 1f)];
								dust71.noGravity = true;
								Dust dust72 = dust71;
								dust72.velocity = dust72.velocity * 3f;
							}
						}
					}
				}
				else
				{
					for (int r2 = 0; (double)r2 < dmg / (double)this.lifeMax * 3; r2++)
					{
						if (Main.rand.Next(3) == 0)
						{
							Dust.NewDust(this.position, this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
						}
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray34 = Main.dust;
							Vector2 vector283 = this.position;
							int num185 = this.width;
							int num186 = this.height;
							color = new Color();
							Dust dust73 = dustArray34[Dust.NewDust(vector283, num185, num186, 229, 0f, 0f, 0, color, 1f)];
							dust73.noGravity = true;
						}
						for (int s2 = 0; s2 < (int)this.oldPos.Length; s2++)
						{
							if (Main.rand.Next(4) == 0)
							{
								if (this.oldPos[s2] == Vector2.Zero)
								{
									break;
								}
								if (Main.rand.Next(3) == 0)
								{
									Dust.NewDust(this.oldPos[s2], this.width, this.height, 17, (float)hitDirection, -1f, 0, Color.Transparent, 0.75f);
								}
								if (Main.rand.Next(2) == 0)
								{
									Dust[] dustArray35 = Main.dust;
									int num187 = this.width;
									int num188 = this.height;
									color = new Color();
									Dust dust74 = dustArray35[Dust.NewDust(this.oldPos[s2], num187, num188, 229, 0f, 0f, 0, color, 1f)];
									dust74.noGravity = true;
								}
							}
						}
					}
				}
			}
			else if (this.type == 411)
			{
				if (this.life <= 0)
				{
					for (int t2 = 0; t2 < 20; t2++)
					{
						Vector2 vector284 = this.position;
						int num189 = this.width;
						int num190 = this.height;
						float single41 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector284, num189, num190, 17, single41, -1f, 0, color, 1f);
						if (Main.rand.Next(2) == 0)
						{
							Dust[] dustArray36 = Main.dust;
							Vector2 vector285 = this.position;
							int num191 = this.width;
							int num192 = this.height;
							color = new Color();
							Dust dust75 = dustArray36[Dust.NewDust(vector285, num191, num192, 229, 0f, 0f, 0, color, 1f)];
							dust75.noGravity = true;
						}
					}
					Gore.NewGore(this.position, this.velocity, 772, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 773, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 773, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 774, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 774, this.scale);
				}
				else
				{
					for (int u2 = 0; (double)u2 < dmg / (double)this.lifeMax * 20; u2++)
					{
						Vector2 vector286 = this.position;
						int num193 = this.width;
						int num194 = this.height;
						float single42 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector286, num193, num194, 17, single42, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0)
						{
							Dust[] dustArray37 = Main.dust;
							Vector2 vector287 = this.position;
							int num195 = this.width;
							int num196 = this.height;
							color = new Color();
							Dust dust76 = dustArray37[Dust.NewDust(vector287, num195, num196, 229, 0f, 0f, 0, color, 1f)];
							dust76.noGravity = true;
						}
					}
				}
			}
			else if (this.type == 491)
			{
				if (this.life <= 0)
				{
					Vector2 center5 = base.Center - new Vector2(60f);
					Vector2 vector288 = new Vector2((float)((this.spriteDirection == 1 ? -1 : 1)), 0f);
					double num197 = (double)this.rotation;
					vector2 = new Vector2();
					Vector2 vector289 = vector288.RotatedBy(num197, vector2);
					Gore.NewGore(center5 + (vector289 * (float)(this.width / 2)), this.velocity, 858, this.scale);
					Gore.NewGore(center5 + (vector289 * (float)(this.width / 3)), this.velocity, 857, this.scale);
					for (int v2 = -1; v2 < 2; v2++)
					{
						Gore.NewGore(center5 + (vector289 * ((float)this.width * (0.45f + (float)v2 * 0.1f))), this.velocity, 859, this.scale);
						Gore.NewGore(center5 + (vector289 * ((float)this.width * (0.4f + (float)v2 * 0.1f))), this.velocity, 859, this.scale);
						Gore.NewGore(center5 + (vector289 * ((float)this.width * (0.35f + (float)v2 * 0.1f))), this.velocity, 859, this.scale);
					}
					for (int w2 = -1; w2 < 2; w2++)
					{
						Vector2 vector290 = ((center5 + (vector289 * ((float)this.width * 0.35f))) - new Vector2(0f, 200f)) + Utils.RandomVector2(Main.rand, -40f, 40f);
						Vector2 vector291 = this.velocity;
						Random random4 = Main.rand;
						numArray = new int[] { 860, 892, 893 };
						Gore.NewGore(vector290, vector291, Utils.SelectRandom<int>(random4, numArray), this.scale);
						Vector2 vector292 = ((center5 + (vector289 * ((float)this.width * 0.15f))) - new Vector2(0f, 200f)) + Utils.RandomVector2(Main.rand, -40f, 40f);
						Vector2 vector293 = this.velocity;
						Random random5 = Main.rand;
						numArray = new int[] { 860, 892, 893 };
						Gore.NewGore(vector292, vector293, Utils.SelectRandom<int>(random5, numArray), this.scale);
						Vector2 vector294 = ((center5 + (vector289 * ((float)this.width * -0.35f))) - new Vector2(0f, 200f)) + Utils.RandomVector2(Main.rand, -40f, 40f);
						Vector2 vector295 = this.velocity;
						Random random6 = Main.rand;
						numArray = new int[] { 860, 892, 893 };
						Gore.NewGore(vector294, vector295, Utils.SelectRandom<int>(random6, numArray), this.scale);
						Vector2 vector296 = ((center5 + (vector289 * ((float)this.width * -0.15f))) - new Vector2(0f, 300f)) + Utils.RandomVector2(Main.rand, -40f, 40f);
						Vector2 vector297 = this.velocity;
						Random random7 = Main.rand;
						numArray = new int[] { 860, 892, 893 };
						Gore.NewGore(vector296, vector297, Utils.SelectRandom<int>(random7, numArray), this.scale);
						Vector2 vector298 = ((center5 + (vector289 * ((float)this.width * -0.15f))) - new Vector2(0f, 300f)) + Utils.RandomVector2(Main.rand, -40f, 40f);
						Vector2 vector299 = this.velocity;
						Random random8 = Main.rand;
						numArray = new int[] { 860, 892, 893 };
						Gore.NewGore(vector298, vector299, Utils.SelectRandom<int>(random8, numArray), this.scale);
					}
					for (int x2 = 0; x2 < 2; x2++)
					{
						Gore.NewGore((center5 + (vector289 * ((float)this.width * 0.15f))) - new Vector2(0f, (float)(160 + 60 * x2)), this.velocity, 855, this.scale);
						Gore.NewGore((center5 + (vector289 * ((float)this.width * -0.15f))) - new Vector2(0f, (float)(160 + 60 * x2)), this.velocity, 855, this.scale);
					}
					for (int y2 = -1; y2 < 2; y2++)
					{
						Gore.NewGore((center5 + (vector289 * ((float)this.width * (0.25f + (float)y2 * 0.1f)))) - new Vector2(0f, (float)(20 + 40 * y2)), this.velocity, 854, this.scale);
						Gore.NewGore((center5 + (vector289 * ((float)this.width * (-0.45f + (float)y2 * 0.1f)))) - new Vector2(0f, (float)(20 + 40 * y2)), this.velocity, 853, this.scale);
						Gore.NewGore((center5 + (vector289 * ((float)this.width * (0.05f + (float)y2 * 0.1f)))) - new Vector2(0f, (float)(20 + 40 * y2)), this.velocity, 856, this.scale);
					}
					for (int a2 = 0; a2 < 30; a2++)
					{
						int num198 = Main.rand.Next(861, 863);
						int num199 = Gore.NewGore(base.Center - new Vector2(60f), Vector2.Zero, num198, 1f);
						Main.gore[num199].alpha = 100;
						Main.gore[num199].velocity = Vector2.Transform(new Vector2(4f, 0f), Matrix.CreateRotationZ((float)(Main.rand.NextDouble() * 6.28318548202515)));
						Main.gore[num199].position = new Vector2(this.position.X - 20f + ((float)this.width + 40f) * Main.rand.NextFloat(), this.position.Y - 240f + (float)(this.height + 240 - 20) * Main.rand.NextFloat());
					}
					for (int b2 = 0; b2 < 120; b2++)
					{
						Vector2 vector2100 = new Vector2(this.position.X, this.position.Y);
						int num200 = this.width;
						int num201 = this.height;
						color = new Color();
						int num202 = Dust.NewDust(vector2100, num200, num201, 6, 0f, 0f, 100, color, 2.5f);
						Main.dust[num202].noGravity = true;
						Dust dust77 = Main.dust[num202];
						dust77.velocity = dust77.velocity * 5f;
						Vector2 vector2101 = new Vector2(this.position.X, this.position.Y);
						int num203 = this.width;
						int num204 = this.height;
						color = new Color();
						num202 = Dust.NewDust(vector2101, num203, num204, 6, 0f, 0f, 100, color, 1.5f);
						Dust dust78 = Main.dust[num202];
						dust78.velocity = dust78.velocity * 4f;
						Main.dust[num202].noGravity = true;
					}
					if (Main.netMode != 1)
					{
						for (int c2 = 0; c2 < 4; c2++)
						{
							float directionInt = (float)(c2 < 2).ToDirectionInt() * (0.3926991f + 0.7853982f * Main.rand.NextFloat());
							Vector2 vector2102 = new Vector2(0f, -Main.rand.NextFloat() * 0.5f - 0.5f);
							double num205 = (double)directionInt;
							vector2 = new Vector2();
							Vector2 vector2103 = vector2102.RotatedBy(num205, vector2) * 6f;
							Projectile.NewProjectile(base.Center.X, base.Center.Y, vector2103.X, vector2103.Y, 594, 0, 0f, Main.myPlayer, 0f, 0f);
						}
					}
				}
			}
			else if (this.type == 492)
			{
				if (this.life <= 0)
				{
					for (int d2 = 0; d2 < 7; d2++)
					{
						Vector2 vector2104 = new Vector2(this.position.X, this.position.Y);
						int num206 = this.width;
						int num207 = this.height;
						color = new Color();
						int num208 = Dust.NewDust(vector2104, num206, num207, 31, 0f, 0f, 100, color, 1.5f);
						Dust dust79 = Main.dust[num208];
						dust79.velocity = dust79.velocity * 1.4f;
					}
					for (int e2 = 0; e2 < 10; e2++)
					{
						int num209 = Main.rand.Next(61, 64);
						int num210 = Gore.NewGore(this.position, Vector2.Zero, num209, 1f);
						Main.gore[num210].alpha = 100;
						Main.gore[num210].velocity = Vector2.Transform(new Vector2(1f, 0f), Matrix.CreateRotationZ((float)(Main.rand.NextDouble() * 6.28318548202515)));
					}
				}
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				int num211 = 0;
				int num212 = 5;
				int num213 = 863;
				if (this.type == 525)
				{
					num211 = 75;
					num213 = 867;
				}
				else if (this.type == 526)
				{
					num211 = 170;
					num213 = 871;
				}
				else if (this.type == 527)
				{
					num211 = 67;
					num213 = 879;
				}
				if (this.life <= 0)
				{
					for (int f2 = 0; f2 < 20; f2++)
					{
						Vector2 vector2105 = this.position;
						int num214 = this.width;
						int num215 = this.height;
						float single43 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2105, num214, num215, num212, single43, -1f, 0, color, 1f);
						if (Main.rand.Next(3) == 0 && num211 > 0)
						{
							Dust[] dustArray38 = Main.dust;
							Vector2 vector2106 = this.position;
							int num216 = this.width;
							int num217 = this.height;
							color = new Color();
							Dust dust80 = dustArray38[Dust.NewDust(vector2106, num216, num217, num211, 0f, 0f, 0, color, 1f)];
							dust80.noGravity = true;
							dust80.scale = 1.5f;
							dust80.fadeIn = 1f;
							Dust dust81 = dust80;
							dust81.velocity = dust81.velocity * 3f;
						}
					}
					Gore.NewGore(this.position, this.velocity, num213, this.scale);
					Gore.NewGore(this.position, this.velocity, num213 + 1, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num213 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num213 + 2, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num213 + 3, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num213 + 3, this.scale);
				}
				else
				{
					for (int g2 = 0; (double)g2 < dmg / (double)this.lifeMax * 20; g2++)
					{
						Vector2 vector2107 = this.position;
						int num218 = this.width;
						int num219 = this.height;
						float single44 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2107, num218, num219, num212, single44, -1f, 0, color, 1f);
						if (Main.rand.Next(4) == 0 && num211 > 0)
						{
							Dust[] dustArray39 = Main.dust;
							Vector2 vector2108 = this.position;
							int num220 = this.width;
							int num221 = this.height;
							color = new Color();
							Dust dust82 = dustArray39[Dust.NewDust(vector2108, num220, num221, num211, 0f, 0f, 0, color, 1f)];
							dust82.noGravity = true;
							dust82.scale = 1.5f;
							dust82.fadeIn = 1f;
							Dust dust83 = dust82;
							dust83.velocity = dust83.velocity * 3f;
						}
					}
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				int num222 = 5;
				int num223 = 875;
				if (this.type == 529)
				{
					num223 = 876;
				}
				if (this.life <= 0)
				{
					for (int h2 = 0; h2 < 20; h2++)
					{
						Vector2 vector2109 = this.position;
						int num224 = this.width;
						int num225 = this.height;
						float single45 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2109, num224, num225, num222, single45, -1f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, num223, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 877, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 877, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 878, this.scale);
				}
				else
				{
					for (int i3 = 0; (double)i3 < dmg / (double)this.lifeMax * 20; i3++)
					{
						Vector2 vector2110 = this.position;
						int num226 = this.width;
						int num227 = this.height;
						float single46 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2110, num226, num227, num222, single46, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 530 || this.type == 531)
			{
				if (this.life <= 0)
				{
					for (int j3 = 0; j3 < 20; j3++)
					{
						Vector2 vector2111 = this.position;
						int num228 = this.width;
						int num229 = this.height;
						float single47 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2111, num228, num229, 250, single47, -2.5f, 100, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 883, 1f);
					Gore.NewGore(this.position, this.velocity, 884, 1f);
					Gore.NewGore(this.position, this.velocity, 885, 1f);
					Gore.NewGore(this.position, this.velocity, 886, 1f);
					Gore.NewGore(this.position, this.velocity, 887, 1f);
				}
				else
				{
					for (int k3 = 0; (double)k3 < dmg / (double)this.lifeMax * 30; k3++)
					{
						Vector2 vector2112 = this.position;
						int num230 = this.width;
						int num231 = this.height;
						float single48 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2112, num230, num231, 250, single48, -1f, 100, color, 1f);
					}
				}
			}
			else if (this.type == 532)
			{
				if (this.life <= 0)
				{
					for (int l3 = 0; l3 < 50; l3++)
					{
						Vector2 vector2113 = this.position;
						int num232 = this.width;
						int num233 = this.height;
						float single49 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2113, num232, num233, 5, single49, -2.5f, 100, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 888, 1f);
					Gore.NewGore(this.position, this.velocity, 889, 1f);
					Gore.NewGore(this.position, this.velocity, 890, 1f);
					Gore.NewGore(this.position, this.velocity, 891, 1f);
				}
				else
				{
					for (int m3 = 0; (double)m3 < dmg / (double)this.lifeMax * 50; m3++)
					{
						Vector2 vector2114 = this.position;
						int num234 = this.width;
						int num235 = this.height;
						float single50 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2114, num234, num235, 5, single50, -1f, 100, color, 1f);
					}
				}
			}
			else if (this.type == 533)
			{
				if (this.life <= 0)
				{
					for (int n3 = 0; n3 < 40; n3++)
					{
						Vector2 vector2115 = this.position;
						int num236 = this.width;
						int num237 = this.height;
						color = new Color();
						int num238 = Dust.NewDust(vector2115, num236, num237, 27, 0f, 0f, 50, color, 1.5f);
						Dust dust84 = Main.dust[num238];
						dust84.velocity = dust84.velocity * 2f;
						Main.dust[num238].noGravity = true;
						Main.dust[num238].fadeIn = 1f;
					}
				}
				else
				{
					for (int o3 = 0; (double)o3 < dmg / (double)this.lifeMax * 50; o3++)
					{
						Vector2 vector2116 = this.position;
						int num239 = this.width;
						int num240 = this.height;
						color = new Color();
						int num241 = Dust.NewDust(vector2116, num239, num240, 27, 0f, 0f, 50, color, 1.5f);
						Dust dust85 = Main.dust[num241];
						dust85.velocity = dust85.velocity * 2f;
						Main.dust[num241].noGravity = true;
					}
				}
			}
			else if (this.type == 460)
			{
				if (this.life <= 0)
				{
					for (int p3 = 0; p3 < 50; p3++)
					{
						Vector2 vector2117 = this.position;
						int num242 = this.width;
						int num243 = this.height;
						float single51 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2117, num242, num243, 5, single51, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 643, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 645, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 644, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 646, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 646, this.scale);
				}
				else
				{
					for (int q3 = 0; (double)q3 < dmg / (double)this.lifeMax * 100; q3++)
					{
						Vector2 vector2118 = this.position;
						int num244 = this.width;
						int num245 = this.height;
						float single52 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2118, num244, num245, 5, single52, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 477)
			{
				if (this.life <= 0)
				{
					for (int r3 = 0; r3 < 50; r3++)
					{
						Vector2 vector2119 = this.position;
						int num246 = this.width;
						int num247 = this.height;
						float single53 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2119, num246, num247, 237, single53, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 687, this.scale);
					Gore.NewGore(this.position, this.velocity, 688, this.scale);
					Gore.NewGore(this.position, this.velocity, 689, this.scale);
					Gore.NewGore(this.position, this.velocity, 690, this.scale);
					Gore.NewGore(this.position, this.velocity, 691, this.scale);
				}
				else
				{
					for (int s3 = 0; (double)s3 < dmg / (double)this.lifeMax * 100; s3++)
					{
						Vector2 vector2120 = this.position;
						int num248 = this.width;
						int num249 = this.height;
						float single54 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2120, num248, num249, 237, single54, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 479)
			{
				if (this.life <= 0)
				{
					for (int t3 = 0; t3 < 50; t3++)
					{
						Vector2 vector2121 = this.position;
						int num250 = this.width;
						int num251 = this.height;
						float single55 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2121, num250, num251, 237, single55, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 681, this.scale);
					Gore.NewGore(this.position, this.velocity, 682, this.scale);
					Gore.NewGore(this.position, this.velocity, 683, this.scale);
				}
				else
				{
					for (int u3 = 0; (double)u3 < dmg / (double)this.lifeMax * 100; u3++)
					{
						Vector2 vector2122 = this.position;
						int num252 = this.width;
						int num253 = this.height;
						float single56 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2122, num252, num253, 237, single56, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 478)
			{
				if (this.life <= 0)
				{
					for (int v3 = 0; v3 < 50; v3++)
					{
						Vector2 vector2123 = this.position;
						int num254 = this.width;
						int num255 = this.height;
						int num256 = 237 + Main.rand.Next(2);
						float single57 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2123, num254, num255, num256, single57, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 684, this.scale);
					Gore.NewGore(this.position, this.velocity, 685, this.scale);
					Gore.NewGore(this.position, this.velocity, 686, this.scale);
					Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
				}
				else
				{
					for (int w3 = 0; w3 < 10; w3++)
					{
						Vector2 vector2124 = this.position;
						int num257 = this.width;
						int num258 = this.height;
						float single58 = (float)hitDirection;
						color = new Color();
						int num259 = Dust.NewDust(vector2124, num257, num258, 238, single58, -1f, 0, color, 1f);
						Main.dust[num259].noGravity = true;
					}
				}
			}
			else if (this.type == 466)
			{
				if (this.life <= 0)
				{
					for (int x3 = 0; x3 < 50; x3++)
					{
						Vector2 vector2125 = this.position;
						int num260 = this.width;
						int num261 = this.height;
						float single59 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2125, num260, num261, 5, single59, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 656, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 657, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 659, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 658, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 658, this.scale);
				}
				else
				{
					for (int y3 = 0; (double)y3 < dmg / (double)this.lifeMax * 100; y3++)
					{
						Vector2 vector2126 = this.position;
						int num262 = this.width;
						int num263 = this.height;
						float single60 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2126, num262, num263, 5, single60, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 468)
			{
				if (this.life <= 0)
				{
					for (int a3 = 0; a3 < 50; a3++)
					{
						Vector2 vector2127 = this.position;
						int num264 = this.width;
						int num265 = this.height;
						float single61 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2127, num264, num265, 5, single61, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 662, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 663, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 663, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 664, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 664, this.scale);
				}
				else
				{
					for (int b3 = 0; (double)b3 < dmg / (double)this.lifeMax * 100; b3++)
					{
						Vector2 vector2128 = this.position;
						int num266 = this.width;
						int num267 = this.height;
						float single62 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2128, num266, num267, 5, single62, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 469)
			{
				if (this.life <= 0)
				{
					for (int c3 = 0; c3 < 50; c3++)
					{
						Vector2 vector2129 = this.position;
						int num268 = this.width;
						int num269 = this.height;
						float single63 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2129, num268, num269, 5, single63, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 665, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 666, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 666, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 667, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 667, this.scale);
				}
				else
				{
					for (int d3 = 0; (double)d3 < dmg / (double)this.lifeMax * 100; d3++)
					{
						Vector2 vector2130 = this.position;
						int num270 = this.width;
						int num271 = this.height;
						float single64 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2130, num270, num271, 5, single64, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 463)
			{
				if (this.life <= 0)
				{
					for (int e3 = 0; e3 < 50; e3++)
					{
						Vector2 vector2131 = this.position;
						int num272 = this.width;
						int num273 = this.height;
						float single65 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2131, num272, num273, 5, single65, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 653, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 654, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 654, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 655, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 655, this.scale);
				}
				else
				{
					for (int f3 = 0; (double)f3 < dmg / (double)this.lifeMax * 100; f3++)
					{
						Vector2 vector2132 = this.position;
						int num274 = this.width;
						int num275 = this.height;
						float single66 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2132, num274, num275, 5, single66, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 461)
			{
				if (this.life <= 0)
				{
					for (int g3 = 0; g3 < 50; g3++)
					{
						Vector2 vector2133 = this.position;
						int num276 = this.width;
						int num277 = this.height;
						float single67 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2133, num276, num277, 5, single67, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 647, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 648, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 648, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 649, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 649, this.scale);
				}
				else
				{
					for (int h3 = 0; (double)h3 < dmg / (double)this.lifeMax * 100; h3++)
					{
						Vector2 vector2134 = this.position;
						int num278 = this.width;
						int num279 = this.height;
						float single68 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2134, num278, num279, 5, single68, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 462)
			{
				if (this.life <= 0)
				{
					for (int i4 = 0; i4 < 50; i4++)
					{
						Vector2 vector2135 = this.position;
						int num280 = this.width;
						int num281 = this.height;
						float single69 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2135, num280, num281, 5, single69, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 650, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 651, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 651, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 652, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 652, this.scale);
				}
				else
				{
					for (int j4 = 0; (double)j4 < dmg / (double)this.lifeMax * 100; j4++)
					{
						Vector2 vector2136 = this.position;
						int num282 = this.width;
						int num283 = this.height;
						float single70 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2136, num282, num283, 5, single70, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 379 || this.type == 438)
			{
				if (this.life <= 0)
				{
					for (int k4 = 0; k4 < 30; k4++)
					{
						Vector2 vector2137 = this.position;
						int num284 = this.width;
						int num285 = this.height;
						float single71 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2137, num284, num285, 5, single71, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 900, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
				}
				else
				{
					for (int l4 = 0; (double)l4 < dmg / (double)(this.lifeMax * 50); l4++)
					{
						Vector2 vector2138 = this.position;
						int num286 = this.width;
						int num287 = this.height;
						float single72 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2138, num286, num287, 5, single72, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 439)
			{
				if (this.life <= 0)
				{
					for (int m4 = 0; m4 < 30; m4++)
					{
						Vector2 vector2139 = this.position;
						int num288 = this.width;
						int num289 = this.height;
						float single73 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2139, num288, num289, 5, single73, -2.5f, 0, color, 1f);
					}
					for (int n4 = 0; n4 < 10; n4++)
					{
						Vector2 vector2140 = this.position;
						int num290 = this.width;
						int num291 = this.height;
						color = new Color();
						int num292 = Dust.NewDust(vector2140, num290, num291, 16, 0f, 0f, 0, color, 1.5f);
						Dust dust86 = Main.dust[num292];
						dust86.velocity = dust86.velocity * 2f;
						Main.dust[num292].noGravity = true;
					}
					int num293 = Main.rand.Next(1, 4);
					for (int o4 = 0; o4 < num293; o4++)
					{
						int num294 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore = Main.gore[num294];
						gore.velocity = gore.velocity * 0.8f;
					}
					Gore.NewGore(this.position, this.velocity, 902, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 903, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 901, this.scale);
				}
				else
				{
					for (int p4 = 0; (double)p4 < dmg / (double)this.lifeMax * 100; p4++)
					{
						Vector2 vector2141 = this.position;
						int num295 = this.width;
						int num296 = this.height;
						color = new Color();
						int num297 = Dust.NewDust(vector2141, num295, num296, 5, 0f, 0f, 0, color, 1.5f);
						Dust dust87 = Main.dust[num297];
						dust87.velocity = dust87.velocity * 1.5f;
						Main.dust[num297].noGravity = true;
					}
				}
			}
			else if (this.type == 440)
			{
				if (this.life <= 0)
				{
					for (int q4 = 0; q4 < 10; q4++)
					{
						Vector2 vector2142 = this.position;
						int num298 = this.width;
						int num299 = this.height;
						color = new Color();
						int num300 = Dust.NewDust(vector2142, num298, num299, 16, 0f, 0f, 0, color, 1.5f);
						Dust dust88 = Main.dust[num300];
						dust88.velocity = dust88.velocity * 2f;
						Main.dust[num300].noGravity = true;
					}
					int num301 = Main.rand.Next(1, 4);
					for (int r4 = 0; r4 < num301; r4++)
					{
						int num302 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore1 = Main.gore[num302];
						gore1.velocity = gore1.velocity * 0.8f;
					}
				}
			}
			else if (this.type >= 454 && this.type <= 459)
			{
				if (this.life <= 0)
				{
					for (int s4 = 0; s4 < 10; s4++)
					{
						Vector2 vector2143 = this.position;
						int num303 = this.width;
						int num304 = this.height;
						color = new Color();
						int num305 = Dust.NewDust(vector2143, num303, num304, 16, 0f, 0f, 0, color, 1.5f);
						Dust dust89 = Main.dust[num305];
						dust89.velocity = dust89.velocity * 2f;
						Main.dust[num305].noGravity = true;
					}
					int num306 = Main.rand.Next(1, 4);
					for (int t4 = 0; t4 < num306; t4++)
					{
						int num307 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
						Gore gore2 = Main.gore[num307];
						gore2.velocity = gore2.velocity * 0.8f;
					}
				}
				else
				{
					for (int u4 = 0; (double)u4 < dmg / (double)this.lifeMax * 50; u4++)
					{
						Vector2 vector2144 = this.position;
						int num308 = this.width;
						int num309 = this.height;
						color = new Color();
						int num310 = Dust.NewDust(vector2144, num308, num309, 16, 0f, 0f, 0, color, 1.5f);
						Dust dust90 = Main.dust[num310];
						dust90.velocity = dust90.velocity * 1.5f;
						Main.dust[num310].noGravity = true;
					}
				}
			}
		Label0:
			if (this.type == 372 || this.type == 373)
			{
				if (this.life <= 0)
				{
					for (int v4 = 0; v4 < 75; v4++)
					{
						Vector2 center6 = base.Center - (Vector2.One * 25f);
						float single74 = (float)(2 * hitDirection);
						color = new Color();
						int num311 = Dust.NewDust(center6, 50, 50, 5, single74, -2f, 0, color, 1f);
						Dust dust91 = Main.dust[num311];
						dust91.velocity = dust91.velocity / 2f;
					}
					Gore.NewGore(base.Center, this.velocity * 0.8f, 583, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.8f, 577, 1f);
					Gore.NewGore(base.Center, this.velocity * 0.9f, 578, 1f);
					Gore.NewGore(base.Center, this.velocity, 579, 1f);
				}
				else
				{
					for (int w4 = 0; (double)w4 < dmg / (double)this.lifeMax * 100; w4++)
					{
						Vector2 vector2145 = this.position;
						int num312 = this.width;
						int num313 = this.height;
						float single75 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2145, num312, num313, 5, single75, -1f, 0, color, 1f);
					}
				}
			}
			if (this.type == 371)
			{
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3);
				if (this.life <= 0)
				{
					Vector2 center7 = base.Center;
					for (int x4 = 0; x4 < 60; x4++)
					{
						int num314 = 25;
						Vector2 rotationVector22 = (((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41)) / 8f;
						Vector2 center8 = base.Center - (Vector2.One * (float)num314);
						color = new Color();
						int num315 = Dust.NewDust(center8, num314 * 2, num314 * 2, 212, 0f, 0f, 0, color, 1f);
						Dust rgb = Main.dust[num315];
						Vector2 vector2146 = Vector2.Normalize(rgb.position - base.Center);
						rgb.position = base.Center + ((vector2146 * 25f) * this.scale);
						if (x4 >= 30)
						{
							rgb.velocity = (vector2146 * (float)Main.rand.Next(45, 91)) / 10f;
						}
						else
						{
							rgb.velocity = vector2146 * rgb.velocity.Length();
						}
						rgb.color = Main.hslToRgb((float)(0.400000005960464 + Main.rand.NextDouble() * 0.200000002980232), 0.9f, 0.5f);
						rgb.color = Color.Lerp(rgb.color, Color.White, 0.3f);
						rgb.noGravity = true;
						rgb.scale = 0.7f;
					}
				}
			}
			if (this.type == 370)
			{
				if (this.life <= 0)
				{
					for (int y4 = 0; y4 < 150; y4++)
					{
						Vector2 vector2147 = this.position;
						int num316 = this.width;
						int num317 = this.height;
						float single76 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2147, num316, num317, 5, single76, -2f, 0, color, 1f);
					}
					Gore.NewGore(base.Center - ((Vector2.UnitX * 20f) * (float)this.direction), this.velocity, 576, this.scale);
					Gore.NewGore(base.Center - (Vector2.UnitY * 30f), this.velocity, 574, this.scale);
					Gore.NewGore(base.Center, this.velocity, 575, this.scale);
					Gore.NewGore(base.Center + ((Vector2.UnitX * 20f) * (float)this.direction), this.velocity, 573, this.scale);
					Gore.NewGore(base.Center - (Vector2.UnitY * 30f), this.velocity, 574, this.scale);
					Gore.NewGore(base.Center, this.velocity, 575, this.scale);
				}
				else
				{
					for (int a4 = 0; (double)a4 < dmg / (double)this.lifeMax * 100; a4++)
					{
						Vector2 vector2148 = this.position;
						int num318 = this.width;
						int num319 = this.height;
						float single77 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2148, num318, num319, 5, single77, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 381)
			{
				if (this.life <= 0)
				{
					for (int b4 = 0; b4 < 30; b4++)
					{
						Vector2 vector2149 = this.position;
						int num320 = this.width;
						int num321 = this.height;
						float single78 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2149, num320, num321, 227, single78, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 587, this.scale);
					Gore.NewGore(this.position, this.velocity, 590, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 588, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 589, this.scale);
				}
				else
				{
					for (int c4 = 0; (double)c4 < dmg / (double)(this.lifeMax * 50); c4++)
					{
						Vector2 vector2150 = this.position;
						int num322 = this.width;
						int num323 = this.height;
						float single79 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2150, num322, num323, 227, single79, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 382 || this.type == 390)
			{
				if (this.life <= 0)
				{
					for (int d4 = 0; d4 < 30; d4++)
					{
						Vector2 vector2151 = this.position;
						int num324 = this.width;
						int num325 = this.height;
						float single80 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2151, num324, num325, 227, single80, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 591, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 592, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 593, this.scale);
				}
				else
				{
					for (int e4 = 0; (double)e4 < dmg / (double)(this.lifeMax * 50); e4++)
					{
						Vector2 vector2152 = this.position;
						int num326 = this.width;
						int num327 = this.height;
						float single81 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2152, num326, num327, 227, single81, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 383)
			{
				if (this.life <= 0)
				{
					for (int f4 = 0; f4 < 30; f4++)
					{
						Vector2 vector2153 = this.position;
						int num328 = this.width;
						int num329 = this.height;
						float single82 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2153, num328, num329, 227, single82, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 594, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 595, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 596, this.scale);
				}
				else
				{
					for (int g4 = 0; (double)g4 < dmg / (double)(this.lifeMax * 50); g4++)
					{
						Vector2 vector2154 = this.position;
						int num330 = this.width;
						int num331 = this.height;
						float single83 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2154, num330, num331, 227, single83, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 384)
			{
				if (this.life <= 0)
				{
					for (int h4 = 0; h4 < 70; h4++)
					{
						Vector2 vector2155 = this.position;
						int num332 = this.width;
						int num333 = this.height;
						float single84 = -2.5f * (float)hitDirection;
						color = new Color();
						int num334 = Dust.NewDust(vector2155, num332, num333, 226, single84, -2.5f, 0, color, 1f);
						Main.dust[num334].scale = 0.5f;
					}
				}
				else
				{
					for (int i5 = 0; (double)i5 < dmg / (double)this.lifeMax * 50; i5++)
					{
						Vector2 vector2156 = this.position;
						int num335 = this.width;
						int num336 = this.height;
						float single85 = (float)(-1 * hitDirection);
						color = new Color();
						int num337 = Dust.NewDust(vector2156, num335, num336, 226, single85, -1f, 0, color, 1f);
						Main.dust[num337].position = Vector2.Lerp(Main.dust[num337].position, base.Center, 0.25f);
						Main.dust[num337].scale = 0.5f;
					}
				}
			}
			else if (this.type == 385)
			{
				if (this.life <= 0)
				{
					for (int j5 = 0; j5 < 30; j5++)
					{
						Vector2 vector2157 = this.position;
						int num338 = this.width;
						int num339 = this.height;
						float single86 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2157, num338, num339, 227, single86, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 597, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 598, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 599, this.scale);
				}
				else
				{
					for (int k5 = 0; (double)k5 < dmg / (double)(this.lifeMax * 50); k5++)
					{
						Vector2 vector2158 = this.position;
						int num340 = this.width;
						int num341 = this.height;
						float single87 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2158, num340, num341, 227, single87, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 386)
			{
				if (this.life <= 0)
				{
					for (int l5 = 0; l5 < 30; l5++)
					{
						Vector2 vector2159 = this.position;
						int num342 = this.width;
						int num343 = this.height;
						float single88 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2159, num342, num343, 227, single88, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 600, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 601, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 602, this.scale);
				}
				else
				{
					for (int m5 = 0; (double)m5 < dmg / (double)(this.lifeMax * 50); m5++)
					{
						Vector2 vector2160 = this.position;
						int num344 = this.width;
						int num345 = this.height;
						float single89 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2160, num344, num345, 227, single89, -1f, 0, color, 1f);
					}
				}
			}
			if (this.type == 387)
			{
				if (this.life <= 0)
				{
					for (int n5 = 0; n5 < 30; n5++)
					{
						Vector2 vector2161 = this.position;
						int num346 = this.width;
						int num347 = this.height;
						float single90 = -1.5f * (float)hitDirection;
						color = new Color();
						int num348 = Dust.NewDust(vector2161, num346, num347, 226, single90, -1.5f, 0, color, 1f);
						Main.dust[num348].scale = 0.5f;
					}
					Gore.NewGore(this.position, this.velocity, 603, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 603, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 604, this.scale);
				}
				else
				{
					for (int o5 = 0; (double)o5 < dmg / (double)this.lifeMax * 20; o5++)
					{
						Vector2 vector2162 = this.position;
						int num349 = this.width;
						int num350 = this.height;
						float single91 = (float)(-1 * hitDirection);
						color = new Color();
						int num351 = Dust.NewDust(vector2162, num349, num350, 226, single91, -1f, 0, color, 1f);
						Main.dust[num351].position = Vector2.Lerp(Main.dust[num351].position, base.Center, 0.25f);
						Main.dust[num351].scale = 0.5f;
					}
				}
			}
			if (this.type == 520)
			{
				if (this.life <= 0)
				{
					for (int p5 = 0; p5 < 30; p5++)
					{
						Vector2 vector2163 = this.position;
						int num352 = this.width;
						int num353 = this.height;
						float single92 = -1.5f * (float)hitDirection;
						color = new Color();
						int num354 = Dust.NewDust(vector2163, num352, num353, 226, single92, -1.5f, 0, color, 1f);
						Main.dust[num354].scale = 0.5f;
					}
					Gore.NewGore(this.position, this.velocity, 851, this.scale);
					Gore.NewGore(this.position, this.velocity, 852, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 848, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 849, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 80f), this.velocity, 850, this.scale);
				}
				else
				{
					for (int q5 = 0; (double)q5 < dmg / (double)this.lifeMax * 20; q5++)
					{
						Vector2 vector2164 = this.position;
						int num355 = this.width;
						int num356 = this.height;
						float single93 = (float)(-1 * hitDirection);
						color = new Color();
						int num357 = Dust.NewDust(vector2164, num355, num356, 226, single93, -1f, 0, color, 1f);
						Main.dust[num357].position = Vector2.Lerp(Main.dust[num357].position, base.Center, 0.25f);
						Main.dust[num357].scale = 0.5f;
					}
				}
			}
			else if (this.type == 389)
			{
				if (this.life <= 0)
				{
					for (int r5 = 0; r5 < 30; r5++)
					{
						Vector2 vector2165 = this.position;
						int num358 = this.width;
						int num359 = this.height;
						float single94 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2165, num358, num359, 227, single94, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 904, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 905, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 906, this.scale);
				}
				else
				{
					for (int s5 = 0; (double)s5 < dmg / (double)(this.lifeMax * 50); s5++)
					{
						Vector2 vector2166 = this.position;
						int num360 = this.width;
						int num361 = this.height;
						float single95 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2166, num360, num361, 227, single95, -1f, 0, color, 1f);
					}
				}
			}
			else if (this.type == 388)
			{
				if (this.life <= 0)
				{
					for (int t5 = 0; t5 < 10; t5++)
					{
						Vector2 vector2167 = this.position;
						int num362 = this.width;
						int num363 = this.height;
						float single96 = -2.5f * (float)hitDirection;
						color = new Color();
						int num364 = Dust.NewDust(vector2167, num362, num363, 226, single96, -2.5f, 0, color, 1f);
						Main.dust[num364].scale = 0.5f;
					}
					Vector2 rotationVector23 = this.velocity;
					if (this.ai[0] == 3f)
					{
						rotationVector23 = this.rotation.ToRotationVector2();
						if (this.spriteDirection == 1)
						{
							rotationVector23.X = rotationVector23.X * -1f;
						}
						rotationVector23 = rotationVector23 * 5f;
					}
					Gore.NewGore(base.Center - new Vector2(10f, 10f), rotationVector23, 605, this.scale);
					Gore.NewGore(base.Center - new Vector2(10f, 10f), rotationVector23, 606, this.scale);
				}
				else
				{
					for (int u5 = 0; (double)u5 < dmg / (double)(this.lifeMax * 50); u5++)
					{
						Vector2 vector2168 = this.position;
						int num365 = this.width;
						int num366 = this.height;
						float single97 = (float)(-1 * hitDirection);
						color = new Color();
						int num367 = Dust.NewDust(vector2168, num365, num366, 226, single97, -1f, 0, color, 1f);
						Main.dust[num367].position = Vector2.Lerp(Main.dust[num367].position, base.Center, 0.25f);
						Main.dust[num367].scale = 0.5f;
					}
				}
			}
			else if (this.type == 399)
			{
				if (this.life <= 0)
				{
					for (int v5 = 0; v5 < 10; v5++)
					{
						Vector2 vector2169 = this.position;
						int num368 = this.width;
						int num369 = this.height;
						float single98 = -2.5f * (float)hitDirection;
						color = new Color();
						int num370 = Dust.NewDust(vector2169, num368, num369, 226, single98, -2.5f, 0, color, 1f);
						Main.dust[num370].scale = 0.5f;
					}
					Vector2 rotationVector24 = this.velocity;
					if (this.ai[0] == 3f)
					{
						rotationVector24 = this.rotation.ToRotationVector2();
						if (this.spriteDirection == 1)
						{
							rotationVector24.X = rotationVector24.X * -1f;
						}
						rotationVector24 = rotationVector24 * 5f;
					}
					Gore.NewGore(base.Center - new Vector2(10f, 10f), rotationVector24, 898, this.scale);
					Gore.NewGore(base.Center - new Vector2(10f, 10f), rotationVector24, 899, this.scale);
				}
				else
				{
					for (int w5 = 0; (double)w5 < dmg / (double)(this.lifeMax * 50); w5++)
					{
						Vector2 vector2170 = this.position;
						int num371 = this.width;
						int num372 = this.height;
						float single99 = (float)(-1 * hitDirection);
						color = new Color();
						int num373 = Dust.NewDust(vector2170, num371, num372, 226, single99, -1f, 0, color, 1f);
						Main.dust[num373].position = Vector2.Lerp(Main.dust[num373].position, base.Center, 0.25f);
						Main.dust[num373].scale = 0.5f;
					}
				}
			}
			else if (this.type == 391)
			{
				if (this.life <= 0)
				{
					for (int x5 = 0; x5 < 30; x5++)
					{
						Vector2 vector2171 = this.position;
						int num374 = this.width;
						int num375 = this.height;
						float single100 = 2.5f * (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2171, num374, num375, 227, single100, -2.5f, 0, color, 1f);
					}
					Gore.NewGore(this.position + ((Vector2.UnitX * (float)this.width) / 2f), this.velocity, 607, this.scale);
					Gore.NewGore(this.position + ((Vector2.UnitX * (float)this.width) / 2f), this.velocity, 608, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 609, this.scale);
				}
				else
				{
					for (int y5 = 0; (double)y5 < dmg / (double)(this.lifeMax * 50); y5++)
					{
						Vector2 vector2172 = this.position;
						int num376 = this.width;
						int num377 = this.height;
						float single101 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2172, num376, num377, 227, single101, -1f, 0, color, 1f);
					}
				}
			}
			if (this.type != 392 && this.type != 394 && this.type != 393 && this.type != 395)
			{
				if (this.type == 482 || this.type == 483)
				{
					if (this.life <= 0)
					{
						for (int a5 = 0; a5 < 30; a5++)
						{
							Vector2 vector2173 = this.position;
							int num378 = this.width;
							int num379 = this.height;
							float single102 = 2.5f * (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2173, num378, num379, 240, single102, -2.5f, 0, color, 1f);
						}
						if (this.type == 482)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 718, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 719, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 720, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), this.velocity, 721, this.scale);
						}
					}
					else
					{
						for (int b5 = 0; (double)b5 < dmg / (double)(this.lifeMax * 50); b5++)
						{
							Vector2 vector2174 = this.position;
							int num380 = this.width;
							int num381 = this.height;
							float single103 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2174, num380, num381, 240, single103, -1f, 0, color, 1f);
						}
					}
				}
			}
			else if (this.life <= 0)
			{
				for (int c5 = 0; c5 < 30; c5++)
				{
					Vector2 vector2175 = this.position;
					int num382 = this.width;
					int num383 = this.height;
					float single104 = -1.5f * (float)hitDirection;
					color = new Color();
					int num384 = Dust.NewDust(vector2175, num382, num383, 228, single104, -1.5f, 0, color, 1f);
					Main.dust[num384].scale = 0.5f;
				}
				Vector2 center9 = base.Center;
				if (this.type == 395)
				{
					Gore.NewGore(center9 + new Vector2(-20f, -10f), this.velocity, 610, this.scale);
					Gore.NewGore(center9 + new Vector2(20f, -10f), this.velocity, 611, this.scale);
					Gore.NewGore(center9 + new Vector2(-50f, 0f), this.velocity, 612, this.scale);
					Gore.NewGore(center9 + new Vector2(50f, 0f), this.velocity, 613, this.scale);
					Gore.NewGore(center9 + new Vector2(-60f, 10f), this.velocity, 614, this.scale);
					Gore.NewGore(center9 + new Vector2(0f, 30f), this.velocity, 615, this.scale);
				}
				if (this.type == 393)
				{
					Gore.NewGore(center9, this.velocity, 616, this.scale);
				}
				if (this.type == 394)
				{
					Gore.NewGore(center9, this.velocity, 617, this.scale);
				}
			}
			else
			{
				for (int d5 = 0; (double)d5 < dmg / (double)this.lifeMax * 20; d5++)
				{
					Vector2 vector2176 = this.position;
					int num385 = this.width;
					int num386 = this.height;
					float single105 = (float)(-1 * hitDirection);
					color = new Color();
					int num387 = Dust.NewDust(vector2176, num385, num386, 228, single105, -1f, 0, color, 1f);
					Main.dust[num387].position = Vector2.Lerp(Main.dust[num387].position, base.Center, 0.25f);
					Main.dust[num387].scale = 0.5f;
				}
			}
			if (this.type >= 442 && this.type <= 448 || this.type == 539)
			{
				if (this.life <= 0)
				{
					for (int e5 = 0; e5 < 20; e5++)
					{
						Vector2 vector2177 = this.position;
						int num388 = this.width;
						int num389 = this.height;
						int num390 = Main.rand.Next(232, 234);
						float single106 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2177, num388, num389, num390, single106, -2f, 0, color, 1f);
					}
				}
				else
				{
					for (int f5 = 0; f5 < 10; f5++)
					{
						Vector2 vector2178 = this.position;
						int num391 = this.width;
						int num392 = this.height;
						int num393 = Main.rand.Next(232, 234);
						float single107 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2178, num391, num392, num393, single107, -1f, 0, color, 1f);
					}
				}
			}
			if (this.type == 333 || this.type == 334 || this.type == 335 || this.type == 336)
			{
				Color white = Color.White;
				if (this.type == 333)
				{
					white = new Color(73, 147, 221, 200);
				}
				if (this.type == 334)
				{
					white = new Color(24, 146, 79, 200);
				}
				if (this.type == 335)
				{
					white = new Color(194, 46, 50, 200);
				}
				if (this.type == 336)
				{
					white = new Color(228, 200, 1, 200);
				}
				if (this.life <= 0)
				{
					for (int g5 = 0; g5 < 50; g5++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 150, white, 1f);
					}
				}
				else
				{
					for (int h5 = 0; (double)h5 < dmg / (double)this.lifeMax * 100; h5++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 150, white, 1f);
					}
				}
			}
			if (this.type == 537)
			{
				if (this.life <= 0)
				{
					for (int i6 = 0; i6 < 50; i6++)
					{
						Vector2 vector2179 = this.position;
						int num394 = this.width;
						int num395 = this.height;
						float single108 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2179, num394, num395, 32, single108, -2f, 0, color, 1f);
					}
				}
				else
				{
					for (int j6 = 0; (double)j6 < dmg / (double)this.lifeMax * 100; j6++)
					{
						Vector2 vector2180 = this.position;
						int num396 = this.width;
						int num397 = this.height;
						float single109 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2180, num396, num397, 32, single109, -1f, 0, color, 1f);
					}
				}
			}
			if (this.type == 1 || this.type == 16 || this.type == 71 || this.type == 244 || this.type == 535)
			{
				if (this.life <= 0)
				{
					for (int k6 = 0; k6 < 50; k6++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, this.color, 1f);
					}
					if (Main.netMode != 1 && this.type == 16)
					{
						int num398 = Main.rand.Next(2) + 2;
						for (int l6 = 0; l6 < num398; l6++)
						{
							int num399 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num399].SetDefaults("Baby Slime");
							Main.npc[num399].velocity.X = this.velocity.X * 2f;
							Main.npc[num399].velocity.Y = this.velocity.Y;
							Main.npc[num399].velocity.X = Main.npc[num399].velocity.X + ((float)Main.rand.Next(-20, 20) * 0.1f + (float)(l6 * this.direction) * 0.3f);
							Main.npc[num399].velocity.Y = Main.npc[num399].velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)l6);
							Main.npc[num399].ai[0] = (float)(-1000 * Main.rand.Next(3));
							if (Main.netMode == 2 && num399 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num399, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
				else
				{
					for (int m6 = 0; (double)m6 < dmg / (double)this.lifeMax * 100; m6++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, this.color, 1f);
					}
				}
			}
			if (this.type == 352)
			{
				if (this.life <= 0)
				{
					for (int n6 = 0; n6 < 60; n6++)
					{
						Vector2 vector2181 = this.position;
						int num400 = this.width;
						int num401 = this.height;
						float single110 = (float)(2 * hitDirection);
						color = new Color();
						int num402 = Dust.NewDust(vector2181, num400, num401, 67, single110, -2f, 0, color, 1f);
						Main.dust[num402].noGravity = true;
					}
				}
				else
				{
					for (int o6 = 0; (double)o6 < dmg / (double)this.lifeMax * 100; o6++)
					{
						Vector2 vector2182 = this.position;
						int num403 = this.width;
						int num404 = this.height;
						float single111 = (float)hitDirection;
						color = new Color();
						int num405 = Dust.NewDust(vector2182, num403, num404, 67, single111, -1f, 0, color, 1f);
						Main.dust[num405].noGravity = true;
					}
				}
			}
			if (this.type >= 305 && this.type <= 314)
			{
				if (this.life <= 0)
				{
					for (int p6 = 0; p6 < 60; p6++)
					{
						Vector2 vector2183 = this.position;
						int num406 = this.width;
						int num407 = this.height;
						float single112 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2183, num406, num407, 194, single112, -2f, 0, color, 1.1f);
					}
					Gore.NewGore(this.position, this.velocity, 441, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 442, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 443, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 444, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 445, this.scale);
				}
				else
				{
					for (int q6 = 0; (double)q6 < dmg / (double)this.lifeMax * 100; q6++)
					{
						Vector2 vector2184 = this.position;
						int num408 = this.width;
						int num409 = this.height;
						float single113 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2184, num408, num409, 194, single113, -1f, 0, color, 1.1f);
					}
				}
			}
			if (this.type == 327)
			{
				if (this.life <= 0)
				{
					for (int r6 = 0; r6 < 60; r6++)
					{
						Vector2 vector2185 = this.position;
						int num410 = this.width;
						int num411 = this.height;
						float single114 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2185, num410, num411, 189, single114, -2f, 0, color, 1.1f);
					}
					for (int s6 = 476; s6 <= 484; s6++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, s6, this.scale);
					}
				}
				else
				{
					for (int t6 = 0; (double)t6 < dmg / (double)this.lifeMax * 100; t6++)
					{
						Vector2 vector2186 = this.position;
						int num412 = this.width;
						int num413 = this.height;
						float single115 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2186, num412, num413, 189, single115, -1f, 0, color, 1.1f);
					}
				}
			}
			if (this.type == 325)
			{
				if (this.life <= 0)
				{
					for (int u6 = 0; u6 < 60; u6++)
					{
						Vector2 vector2187 = this.position;
						int num414 = this.width;
						int num415 = this.height;
						float single116 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2187, num414, num415, 191, single116, -2f, 0, color, 1.1f);
					}
					for (int v6 = 469; v6 <= 475; v6++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, v6, this.scale);
					}
				}
				else
				{
					for (int w6 = 0; (double)w6 < dmg / (double)this.lifeMax * 100; w6++)
					{
						Vector2 vector2188 = this.position;
						int num416 = this.width;
						int num417 = this.height;
						float single117 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2188, num416, num417, 191, single117, -1f, 0, color, 1.1f);
					}
				}
			}
			if (this.type == 345 && this.life <= 0)
			{
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 513, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 515, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 516, this.scale);
			}
			if (this.type == 344)
			{
				if (this.life <= 0)
				{
					for (int x6 = 0; x6 < 60; x6++)
					{
						Vector2 vector2189 = this.position;
						int num418 = this.width;
						int num419 = this.height;
						float single118 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2189, num418, num419, 196, single118, -2f, 0, color, 1f);
					}
					for (int y6 = 508; y6 <= 512; y6++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, y6, this.scale);
					}
					for (int a6 = 509; a6 <= 512; a6++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, a6, this.scale);
					}
				}
				else
				{
					for (int b6 = 0; (double)b6 < dmg / (double)this.lifeMax * 100; b6++)
					{
						Vector2 vector2190 = this.position;
						int num420 = this.width;
						int num421 = this.height;
						float single119 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2190, num420, num421, 196, single119, -1f, 0, color, 1f);
					}
				}
			}
			if (this.type == 326)
			{
				if (this.life <= 0)
				{
					for (int c6 = 0; c6 < 60; c6++)
					{
						Vector2 vector2191 = this.position;
						int num422 = this.width;
						int num423 = this.height;
						float single120 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2191, num422, num423, 191, single120, -2f, 0, color, 1.1f);
					}
				}
				else
				{
					for (int d6 = 0; (double)d6 < dmg / (double)this.lifeMax * 100; d6++)
					{
						Vector2 vector2192 = this.position;
						int num424 = this.width;
						int num425 = this.height;
						float single121 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2192, num424, num425, 191, single121, -1f, 0, color, 1.1f);
					}
				}
			}
			if (this.type == 304)
			{
				if (this.life <= 0)
				{
					for (int e6 = 0; e6 < 60; e6++)
					{
						Vector2 vector2193 = this.position;
						int num426 = this.width;
						int num427 = this.height;
						float single122 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2193, num426, num427, 189, single122, -2f, 0, color, 1.3f);
					}
				}
				else
				{
					for (int f6 = 0; (double)f6 < dmg / (double)this.lifeMax * 100; f6++)
					{
						Vector2 vector2194 = this.position;
						int num428 = this.width;
						int num429 = this.height;
						float single123 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2194, num428, num429, 189, single123, -1f, 0, color, 1.3f);
					}
				}
			}
			if (this.type == 302)
			{
				if (this.life <= 0)
				{
					for (int g6 = 0; g6 < 50; g6++)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 440, this.scale);
				}
				else
				{
					for (int h6 = 0; (double)h6 < dmg / (double)this.lifeMax * 100; h6++)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
					}
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				if (this.life > 0)
				{
					for (int i7 = 0; (double)i7 < dmg / (double)this.lifeMax * 100; i7++)
					{
						Vector2 vector2195 = this.position;
						int num430 = this.width;
						int num431 = this.height;
						float single124 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2195, num430, num431, 148, single124, -1f, 0, color, 1f);
					}
				}
				else if (this.type != 246)
				{
					for (int j7 = 0; j7 < 50; j7++)
					{
						Vector2 vector2196 = this.position;
						int num432 = this.width;
						int num433 = this.height;
						float single125 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2196, num432, num433, 148, single125, -2f, 0, color, 1f);
					}
					if (this.type == 245)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 360, this.scale);
						Gore.NewGore(this.position, this.velocity, 361, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 364, this.scale);
						Gore.NewGore(this.position, this.velocity, 367, this.scale);
						Gore.NewGore(this.position, this.velocity, 366, this.scale);
					}
					else if (this.type != 249)
					{
						Gore.NewGore(this.position, this.velocity, 369, this.scale);
						Gore.NewGore(this.position, this.velocity, 371, this.scale);
						Gore.NewGore(this.position, this.velocity, 370, this.scale);
					}
					else
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 365, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
					}
				}
				else if (Main.netMode != 1)
				{
					NPC.NewNPC((int)base.Center.X, (int)this.position.Y + this.height, 249, this.whoAmI, 0f, 0f, 0f, 0f, 255);
				}
			}
			if (this.type == 288 && this.life <= 0)
			{
				for (int k7 = 0; k7 < 50; k7++)
				{
					Vector2 vector2197 = this.position;
					int num434 = this.width;
					int num435 = this.height;
					float x7 = this.velocity.X;
					float y7 = this.velocity.Y;
					color = new Color();
					int num436 = Dust.NewDust(vector2197, num434, num435, 180, x7, y7, 0, color, 1f);
					Dust dust92 = Main.dust[num436];
					dust92.velocity = dust92.velocity * 2f;
					Main.dust[num436].noGravity = true;
					Main.dust[num436].scale = 1.4f;
				}
			}
			if (this.type == 204)
			{
				if (this.life <= 0)
				{
					for (int l7 = 0; l7 < 50; l7++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(149, 208, 104), 1f);
					}
				}
				else
				{
					for (int m7 = 0; (double)m7 < dmg / (double)this.lifeMax * 100; m7++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(149, 208, 104), 1f);
					}
				}
			}
			if (this.type == 225)
			{
				if (this.life <= 0)
				{
					for (int n7 = 0; n7 < 50; n7++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(0, 80, 255, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 314, this.scale);
				}
				else
				{
					for (int o7 = 0; (double)o7 < dmg / (double)this.lifeMax * 100; o7++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(0, 80, 255, 100), 1f);
					}
				}
			}
			if (this.type == 243)
			{
				if (this.life <= 0)
				{
					for (int p7 = 0; p7 < 200; p7++)
					{
						Vector2 vector2198 = this.position;
						int num437 = this.width;
						int num438 = this.height;
						float single126 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2198, num437, num438, 161, single126, -2f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 359, this.scale);
				}
				else
				{
					for (int q7 = 0; (double)q7 < dmg / (double)this.lifeMax * 150; q7++)
					{
						Vector2 vector2199 = this.position;
						int num439 = this.width;
						int num440 = this.height;
						float single127 = (float)hitDirection;
						color = new Color();
						Dust.NewDust(vector2199, num439, num440, 161, single127, -1f, 0, color, 1f);
					}
				}
			}
			if ((this.type == 210 || this.type == 211) && this.life <= 0)
			{
				for (int r7 = 0; r7 < 6; r7++)
				{
					Vector2 vector2200 = this.position;
					int num441 = this.width;
					int num442 = this.height;
					float single128 = (float)(2 * hitDirection);
					color = new Color();
					int num443 = Dust.NewDust(vector2200, num441, num442, 150, single128, -2f, 0, color, 1f);
					if (Main.rand.Next(2) != 0)
					{
						Main.dust[num443].scale = 0.8f;
					}
					else
					{
						Main.dust[num443].noGravity = true;
						Main.dust[num443].scale = 1.5f;
					}
				}
			}
			if ((this.type == 355 || this.type == 358) && this.life <= 0)
			{
				for (int s7 = 0; s7 < 6; s7++)
				{
					Vector2 vector2201 = this.position;
					int num444 = this.width;
					int num445 = this.height;
					float single129 = (float)(2 * hitDirection);
					color = new Color();
					int num446 = Dust.NewDust(vector2201, num444, num445, 198, single129, -2f, 0, color, 1f);
					if (Main.rand.Next(2) != 0)
					{
						Main.dust[num446].scale = 0.8f * this.scale;
					}
					else
					{
						Main.dust[num446].noGravity = true;
						Main.dust[num446].scale = 1.5f * this.scale;
					}
				}
			}
			if (this.type == 356 && this.life <= 0)
			{
				for (int t7 = 0; t7 < 6; t7++)
				{
					Vector2 vector2202 = this.position;
					int num447 = this.width;
					int num448 = this.height;
					float single130 = (float)(2 * hitDirection);
					color = new Color();
					int num449 = Dust.NewDust(vector2202, num447, num448, 199, single130, -2f, 0, color, 1f);
					if (Main.rand.Next(2) != 0)
					{
						Main.dust[num449].scale = 0.8f * this.scale;
					}
					else
					{
						Main.dust[num449].noGravity = true;
						Main.dust[num449].scale = 1.5f * this.scale;
					}
				}
			}
			if (this.type >= 484 && this.type <= 487 && this.life <= 0)
			{
				for (int u7 = 0; u7 < 6; u7++)
				{
					Vector2 vector2203 = this.position;
					int num450 = this.width;
					int num451 = this.height;
					float single131 = (float)(2 * hitDirection);
					color = new Color();
					int num452 = Dust.NewDust(vector2203, num450, num451, 248 + this.type - 484, single131, -2f, 0, color, 1f);
					if (Main.rand.Next(2) != 0)
					{
						Main.dust[num452].scale = 0.7f * this.scale;
					}
					else
					{
						Main.dust[num452].noGravity = true;
						Main.dust[num452].scale = 1.2f * this.scale;
					}
				}
			}
			if (this.type == 357 && this.life <= 0)
			{
				for (int v7 = 0; v7 < 6; v7++)
				{
					Vector2 vector2204 = this.position;
					int num453 = this.width;
					int num454 = this.height;
					float single132 = (float)(2 * hitDirection);
					color = new Color();
					int num455 = Dust.NewDust(vector2204, num453, num454, 200, single132, -2f, 0, color, 1f);
					if (Main.rand.Next(2) != 0)
					{
						Main.dust[num455].scale = 0.7f * this.scale;
					}
					else
					{
						Main.dust[num455].noGravity = true;
						Main.dust[num455].scale = 1.2f * this.scale;
					}
				}
			}
			if (this.type == 377 && this.life <= 0)
			{
				for (int w7 = 0; w7 < 6; w7++)
				{
					Vector2 vector2205 = this.position;
					int num456 = this.width;
					int num457 = this.height;
					float single133 = (float)(2 * hitDirection);
					color = new Color();
					int num458 = Dust.NewDust(vector2205, num456, num457, 40, single133, -2f, 0, color, 1f);
					if (Main.rand.Next(2) != 0)
					{
						Main.dust[num458].scale = 0.7f * this.scale;
					}
					else
					{
						Main.dust[num458].noGravity = true;
						Main.dust[num458].scale = 1.2f * this.scale;
					}
				}
			}
			if (this.type == 374 || this.type == 375)
			{
				for (int x71 = 0; x71 < 6; x71++)
				{
					Vector2 vector2206 = this.position;
					int num459 = this.width;
					int num460 = this.height;
					color = new Color();
					int num461 = Dust.NewDust(vector2206, num459, num460, 165, 0f, 0f, 50, color, 1.5f);
					Dust dust93 = Main.dust[num461];
					dust93.velocity = dust93.velocity * 2f;
					Main.dust[num461].noGravity = true;
				}
			}
			if (this.type == 359)
			{
				if (this.life <= 0)
				{
					for (int y71 = 0; y71 < 6; y71++)
					{
						Vector2 vector2207 = this.position;
						int num462 = this.width;
						int num463 = this.height;
						float single134 = (float)(2 * hitDirection);
						color = new Color();
						int num464 = Dust.NewDust(vector2207, num462, num463, 201, single134, -2f, 0, color, 1f);
						if (Main.rand.Next(2) != 0)
						{
							Main.dust[num464].scale = 0.7f * this.scale;
						}
						else
						{
							Main.dust[num464].noGravity = true;
							Main.dust[num464].scale = 1.2f * this.scale;
						}
					}
				}
				Gore.NewGore(this.position, this.velocity, 547, this.scale);
				Gore.NewGore(this.position, this.velocity, 548, this.scale);
			}
			if (this.type == 360)
			{
				if (this.life <= 0)
				{
					for (int a7 = 0; a7 < 6; a7++)
					{
						Vector2 vector2208 = this.position;
						int num465 = this.width;
						int num466 = this.height;
						float single135 = (float)(2 * hitDirection);
						color = new Color();
						int num467 = Dust.NewDust(vector2208, num465, num466, 202, single135, -2f, 0, color, 1f);
						if (Main.rand.Next(2) != 0)
						{
							Main.dust[num467].scale = 0.7f * this.scale;
						}
						else
						{
							Main.dust[num467].noGravity = true;
							Main.dust[num467].scale = 1.2f * this.scale;
						}
					}
				}
				Gore.NewGore(this.position, this.velocity, 549, this.scale);
				Gore.NewGore(this.position, this.velocity, 550, this.scale);
			}
			if (this.type == 154)
			{
				if (this.life <= 0)
				{
					for (int b7 = 0; b7 < 50; b7++)
					{
						Vector2 vector2209 = new Vector2(this.position.X, this.position.Y);
						int num468 = this.width;
						int num469 = this.height;
						float x8 = this.velocity.X;
						float y8 = this.velocity.Y;
						color = new Color();
						int num470 = Dust.NewDust(vector2209, num468, num469, 67, x8, y8, 90, color, 1.5f);
						Main.dust[num470].noGravity = true;
						Dust dust94 = Main.dust[num470];
						dust94.velocity = dust94.velocity * 0.2f;
					}
					Gore.NewGore(this.position, this.velocity, 180, this.scale);
				}
				else
				{
					for (int c7 = 0; (double)c7 < dmg / (double)this.lifeMax * 50; c7++)
					{
						Vector2 vector2210 = new Vector2(this.position.X, this.position.Y);
						int num471 = this.width;
						int num472 = this.height;
						float x9 = this.velocity.X;
						float y9 = this.velocity.Y;
						color = new Color();
						int num473 = Dust.NewDust(vector2210, num471, num472, 67, x9, y9, 90, color, 1.5f);
						Main.dust[num473].noGravity = true;
						Dust dust95 = Main.dust[num473];
						dust95.velocity = dust95.velocity * 0.2f;
					}
				}
			}
			if (this.type == 147 || this.type == 184)
			{
				if (this.life <= 0)
				{
					for (int d7 = 0; d7 < 30; d7++)
					{
						Vector2 vector2211 = this.position;
						int num474 = this.width;
						int num475 = this.height;
						float single136 = (float)hitDirection;
						color = new Color();
						int num476 = Dust.NewDust(vector2211, num474, num475, 76, single136, -2f, 0, color, 1f);
						Main.dust[num476].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -2f, 100, new Color(97, 200, 255, 100), 1f);
					}
				}
				else
				{
					for (int e7 = 0; (double)e7 < dmg / (double)this.lifeMax * 50; e7++)
					{
						Vector2 vector2212 = this.position;
						int num477 = this.width;
						int num478 = this.height;
						float single137 = (float)hitDirection;
						color = new Color();
						int num479 = Dust.NewDust(vector2212, num477, num478, 76, single137, -1f, 0, color, 1f);
						Main.dust[num479].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(97, 200, 255, 100), 1f);
					}
				}
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				if (this.life <= 0)
				{
					for (int f7 = 0; f7 < 50; f7++)
					{
						Vector2 vector2213 = this.position;
						int num480 = this.width;
						int num481 = this.height;
						float single138 = (float)hitDirection;
						color = new Color();
						int num482 = Dust.NewDust(vector2213, num480, num481, 76, single138, -1f, 0, color, 1f);
						Main.dust[num482].noGravity = true;
						Dust dust96 = Main.dust[num482];
						dust96.scale = dust96.scale * 1.2f;
					}
				}
				else
				{
					for (int g7 = 0; (double)g7 < dmg / (double)this.lifeMax * 100; g7++)
					{
						Vector2 vector2214 = this.position;
						int num483 = this.width;
						int num484 = this.height;
						float single139 = (float)hitDirection;
						color = new Color();
						int num485 = Dust.NewDust(vector2214, num483, num484, 76, single139, -1f, 0, color, 1f);
						Main.dust[num485].noGravity = true;
					}
				}
			}
			if (this.type == 141)
			{
				if (this.life <= 0)
				{
					for (int h7 = 0; h7 < 50; h7++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, new Color(210, 230, 140), 1f);
					}
				}
				else
				{
					for (int i8 = 0; (double)i8 < dmg / (double)this.lifeMax * 100; i8++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, new Color(210, 230, 140), 1f);
					}
				}
			}
			if (this.type == 112)
			{
				for (int j8 = 0; j8 < 20; j8++)
				{
					Vector2 vector2215 = new Vector2(this.position.X, this.position.Y + 2f);
					int num486 = this.width;
					int num487 = this.height;
					color = new Color();
					int num488 = Dust.NewDust(vector2215, num486, num487, 18, 0f, 0f, 100, color, 2f);
					if (Main.rand.Next(2) != 0)
					{
						Dust dust97 = Main.dust[num488];
						dust97.velocity = dust97.velocity * 1.4f;
						Main.dust[num488].noGravity = true;
					}
					else
					{
						Dust dust98 = Main.dust[num488];
						dust98.scale = dust98.scale * 0.6f;
					}
				}
			}
			if (this.type == 183)
			{
				if (this.life <= 0)
				{
					for (int k8 = 0; k8 < 50; k8++)
					{
						int num489 = Dust.NewDust(this.position, this.width, this.height, 136, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Dust dust99 = Main.dust[num489];
						dust99.velocity = dust99.velocity * 2f;
					}
				}
				else
				{
					for (int l8 = 0; (double)l8 < dmg / (double)this.lifeMax * 100; l8++)
					{
						Dust.NewDust(this.position, this.width, this.height, 136, 0f, 0f, this.alpha, this.color, 1f);
					}
				}
			}
			if (this.type == 81 || this.type == 121)
			{
				if (this.life <= 0)
				{
					for (int m8 = 0; m8 < 50; m8++)
					{
						int num490 = Dust.NewDust(this.position, this.width, this.height, 14, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Dust dust100 = Main.dust[num490];
						dust100.velocity = dust100.velocity * 2f;
					}
					if (Main.netMode != 1)
					{
						if (this.type == 121)
						{
							int num491 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 81, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num491].SetDefaults("Slimer2");
							Main.npc[num491].velocity.X = this.velocity.X;
							Main.npc[num491].velocity.Y = this.velocity.Y;
							Gore.NewGore(this.position, this.velocity, 94, this.scale);
							if (Main.netMode == 2 && num491 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num491, 0f, 0f, 0f, 0, 0, 0);
							}
						}
						else if (this.scale >= 1f)
						{
							int num492 = Main.rand.Next(2) + 2;
							for (int n8 = 0; n8 < num492; n8++)
							{
								int num493 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num493].SetDefaults("Slimeling");
								Main.npc[num493].velocity.X = this.velocity.X * 3f;
								Main.npc[num493].velocity.Y = this.velocity.Y;
								Main.npc[num493].velocity.X = Main.npc[num493].velocity.X + ((float)Main.rand.Next(-10, 10) * 0.1f + (float)(n8 * this.direction) * 0.3f);
								Main.npc[num493].velocity.Y = Main.npc[num493].velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)n8);
								Main.npc[num493].ai[1] = (float)n8;
								if (Main.netMode == 2 && num493 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num493, 0f, 0f, 0f, 0, 0, 0);
								}
							}
						}
					}
				}
				else
				{
					for (int o8 = 0; (double)o8 < dmg / (double)this.lifeMax * 100; o8++)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
					}
				}
			}
			if (this.type == 120 || this.type == 137 || this.type == 138)
			{
				if (this.life <= 0)
				{
					for (int p8 = 0; p8 < 50; p8++)
					{
						Vector2 vector2216 = this.position;
						int num494 = this.width;
						int num495 = this.height;
						float single140 = (float)hitDirection;
						color = new Color();
						int num496 = Dust.NewDust(vector2216, num494, num495, 71, single140, 0f, 200, color, 1f);
						Dust dust101 = Main.dust[num496];
						dust101.velocity = dust101.velocity * 1.5f;
					}
				}
				else
				{
					for (int q8 = 0; (double)q8 < dmg / (double)this.lifeMax * 50; q8++)
					{
						Vector2 vector2217 = this.position;
						int num497 = this.width;
						int num498 = this.height;
						color = new Color();
						int num499 = Dust.NewDust(vector2217, num497, num498, 71, 0f, 0f, 200, color, 1f);
						Dust dust102 = Main.dust[num499];
						dust102.velocity = dust102.velocity * 1.5f;
					}
				}
			}
			if (this.type == 122)
			{
				if (this.life <= 0)
				{
					for (int r8 = 0; r8 < 50; r8++)
					{
						Vector2 vector2218 = this.position;
						int num500 = this.width;
						int num501 = this.height;
						float single141 = (float)hitDirection;
						color = new Color();
						int num502 = Dust.NewDust(vector2218, num500, num501, 72, single141, 0f, 200, color, 1f);
						Dust dust103 = Main.dust[num502];
						dust103.velocity = dust103.velocity * 1.5f;
					}
				}
				else
				{
					for (int s8 = 0; (double)s8 < dmg / (double)this.lifeMax * 50; s8++)
					{
						Vector2 vector2219 = this.position;
						int num503 = this.width;
						int num504 = this.height;
						color = new Color();
						int num505 = Dust.NewDust(vector2219, num503, num504, 72, 0f, 0f, 200, color, 1f);
						Dust dust104 = Main.dust[num505];
						dust104.velocity = dust104.velocity * 1.5f;
					}
				}
			}
			if (this.type == 75)
			{
				if (this.life <= 0)
				{
					for (int t8 = 0; t8 < 50; t8++)
					{
						int num506 = Dust.NewDust(this.position, this.width, this.height, 55, (float)hitDirection, 0f, 200, this.color, 1f);
						Dust dust105 = Main.dust[num506];
						dust105.velocity = dust105.velocity * 2f;
					}
				}
				else
				{
					for (int u8 = 0; (double)u8 < dmg / (double)this.lifeMax * 50; u8++)
					{
						Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
					}
				}
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				Color color1 = new Color(50, 120, 255, 100);
				if (this.type == 64)
				{
					color1 = new Color(225, 70, 140, 100);
				}
				if (this.type == 103)
				{
					color1 = new Color(70, 225, 140, 100);
				}
				if (this.life <= 0)
				{
					for (int v8 = 0; v8 < 25; v8++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 0, color1, 1f);
					}
					return;
				}
				for (int w8 = 0; (double)w8 < dmg / (double)this.lifeMax * 50; w8++)
				{
					Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 0, color1, 1f);
				}
				return;
			}
			if (this.type == 59 || this.type == 60 || this.type == 151)
			{
				if (this.life > 0)
				{
					for (int x81 = 0; (double)x81 < dmg / (double)this.lifeMax * 80; x81++)
					{
						Vector2 vector2220 = this.position;
						int num507 = this.width;
						int num508 = this.height;
						float single142 = (float)(hitDirection * 2);
						int num509 = this.alpha;
						color = new Color();
						int num510 = Dust.NewDust(vector2220, num507, num508, 6, single142, -1f, num509, color, 1.5f);
						if (Main.rand.Next(8) != 0)
						{
							Main.dust[num510].noGravity = true;
						}
					}
					return;
				}
				for (int y81 = 0; y81 < 40; y81++)
				{
					Vector2 vector2221 = this.position;
					int num511 = this.width;
					int num512 = this.height;
					float single143 = (float)(hitDirection * 2);
					int num513 = this.alpha;
					color = new Color();
					int num514 = Dust.NewDust(vector2221, num511, num512, 6, single143, -1f, num513, color, 1.5f);
					if (Main.rand.Next(8) != 0)
					{
						Main.dust[num514].noGravity = true;
					}
				}
				if (Main.expertMode && this.type == 59 && Main.netMode != 1)
				{
					try
					{
						int x10 = (int)(base.Center.X / 16f);
						int y10 = (int)(base.Center.Y / 16f);
						if (!WorldGen.SolidTile(x10, y10) && Main.tile[x10, y10].liquid == 0)
						{
							Main.tile[x10, y10].liquid = (byte)Main.rand.Next(50, 150);
							Main.tile[x10, y10].lava(true);
							Main.tile[x10, y10].honey(false);
							WorldGen.SquareTileFrame(x10, y10, true);
						}
					}
					catch (Exception ex)
					{
#if DEBUG
						Console.WriteLine(ex);
						System.Diagnostics.Debugger.Break();

#endif
					}
				}
			}
			else if (this.type != 50)
			{
				if (this.type == 153)
				{
					if (this.life > 0)
					{
						for (int a8 = 0; (double)a8 < dmg / (double)this.lifeMax * 30; a8++)
						{
							Vector2 vector2222 = this.position;
							int num515 = this.width;
							int num516 = this.height;
							float single144 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2222, num515, num516, 5, single144, -1f, 0, color, 1f);
						}
						return;
					}
					for (int b8 = 0; b8 < 15; b8++)
					{
						Vector2 vector2223 = this.position;
						int num517 = this.width;
						int num518 = this.height;
						float single145 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2223, num517, num518, 5, single145, -2f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 177, 1f);
					Gore.NewGore(this.position, this.velocity, 178, 1f);
					Gore.NewGore(this.position, this.velocity, 179, 1f);
					Gore.NewGore(this.position, this.velocity, 179, 1f);
					return;
				}
				if (this.type == 177)
				{
					if (this.life > 0)
					{
						for (int c8 = 0; (double)c8 < dmg / (double)this.lifeMax * 30; c8++)
						{
							Vector2 vector2224 = this.position;
							int num519 = this.width;
							int num520 = this.height;
							float single146 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2224, num519, num520, 5, single146, -1f, 0, color, 1f);
						}
						return;
					}
					for (int d8 = 0; d8 < 15; d8++)
					{
						Vector2 vector2225 = this.position;
						int num521 = this.width;
						int num522 = this.height;
						float single147 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2225, num521, num522, 5, single147, -2f, 0, color, 1f);
					}
					Gore.NewGore(this.position, this.velocity, 234, 1f);
					Gore.NewGore(this.position, this.velocity, 235, 1f);
					Gore.NewGore(this.position, this.velocity, 236, 1f);
					Gore.NewGore(this.position, this.velocity, 236, 1f);
					return;
				}
				if (this.type >= 494 && this.type <= 495)
				{
					if (this.life > 0)
					{
						for (int e8 = 0; (double)e8 < dmg / (double)this.lifeMax * 30; e8++)
						{
							Vector2 vector2226 = this.position;
							int num523 = this.width;
							int num524 = this.height;
							float single148 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2226, num523, num524, 5, single148, -1f, 0, color, 1f);
						}
						return;
					}
					for (int f8 = 0; f8 < 15; f8++)
					{
						Vector2 vector2227 = this.position;
						int num525 = this.width;
						int num526 = this.height;
						float single149 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2227, num525, num526, 5, single149, -2f, 0, color, 1f);
					}
					int num527 = (this.type - 494) * 2;
					Gore.NewGore(this.position, this.velocity, 736 + num527, 1f);
					Gore.NewGore(this.position, this.velocity, 735 + num527, 1f);
					return;
				}
				if (this.type >= 496 && this.type <= 497)
				{
					if (this.life > 0)
					{
						for (int g8 = 0; (double)g8 < dmg / (double)this.lifeMax * 30; g8++)
						{
							Vector2 vector2228 = this.position;
							int num528 = this.width;
							int num529 = this.height;
							float single150 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2228, num528, num529, 5, single150, -1f, 0, color, 1f);
						}
						return;
					}
					for (int h8 = 0; h8 < 15; h8++)
					{
						Vector2 vector2229 = this.position;
						int num530 = this.width;
						int num531 = this.height;
						float single151 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2229, num530, num531, 5, single151, -2f, 0, color, 1f);
					}
					int num532 = this.type - 496;
					Gore.NewGore(this.position, this.velocity, 739 + num532, 1f);
					return;
				}
				if (this.type >= 498 && this.type <= 506)
				{
					if (this.life > 0)
					{
						for (int i9 = 0; (double)i9 < dmg / (double)this.lifeMax * 30; i9++)
						{
							Vector2 vector2230 = this.position;
							int num533 = this.width;
							int num534 = this.height;
							float single152 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2230, num533, num534, 5, single152, -1f, 0, color, 1f);
						}
						return;
					}
					for (int j9 = 0; j9 < 15; j9++)
					{
						Vector2 vector2231 = this.position;
						int num535 = this.width;
						int num536 = this.height;
						float single153 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2231, num535, num536, 5, single153, -2f, 0, color, 1f);
					}
					int num537 = this.type - 498;
					Gore.NewGore(this.position, this.velocity, 750 + num537, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 16f), this.velocity, 741 + num537, 1f);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 18f), this.velocity, 759 + num537, 1f);
					return;
				}
				if (this.type == 49 || this.type == 51 || this.type == 93 || this.type == 150 || this.type == 152 || this.type == 226)
				{
					if (this.life > 0)
					{
						for (int k9 = 0; (double)k9 < dmg / (double)this.lifeMax * 30; k9++)
						{
							Vector2 vector2232 = this.position;
							int num538 = this.width;
							int num539 = this.height;
							float single154 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2232, num538, num539, 5, single154, -1f, 0, color, 1f);
						}
						return;
					}
					for (int l9 = 0; l9 < 15; l9++)
					{
						Vector2 vector2233 = this.position;
						int num540 = this.width;
						int num541 = this.height;
						float single155 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2233, num540, num541, 5, single155, -2f, 0, color, 1f);
					}
					if (this.type == 51)
					{
						Gore.NewGore(this.position, this.velocity, 83, 1f);
						return;
					}
					if (this.type == 93)
					{
						Gore.NewGore(this.position, this.velocity, 107, 1f);
						return;
					}
					if (this.type == 150)
					{
						Gore.NewGore(this.position, this.velocity, 164, 1f);
						Gore.NewGore(this.position, this.velocity, 165, 1f);
						return;
					}
					if (this.type == 152)
					{
						Gore.NewGore(this.position, this.velocity, 175, 1f);
						Gore.NewGore(this.position, this.velocity, 176, 1f);
						Gore.NewGore(this.position, this.velocity, 176, 1f);
						return;
					}
					if (this.type != 226)
					{
						Gore.NewGore(this.position, this.velocity, 82, 1f);
						return;
					}
					Gore.NewGore(this.position, this.velocity, 317, 1f);
					Gore.NewGore(this.position, this.velocity, 318, 1f);
					Gore.NewGore(this.position, this.velocity, 318, 1f);
					Gore.NewGore(this.position, this.velocity, 319, 1f);
					return;
				}
				if (this.type == 46 || this.type == 55 || this.type == 67 || this.type == 74 || this.type == 102 || this.type == 224 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 538)
				{
					if (this.life > 0)
					{
						for (int m9 = 0; (double)m9 < dmg / (double)this.lifeMax * 20; m9++)
						{
							Vector2 vector2234 = this.position;
							int num542 = this.width;
							int num543 = this.height;
							float single156 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2234, num542, num543, 5, single156, -1f, 0, color, 1f);
						}
						return;
					}
					for (int n9 = 0; n9 < 10; n9++)
					{
						Vector2 vector2235 = this.position;
						int num544 = this.width;
						int num545 = this.height;
						float single157 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2235, num544, num545, 5, single157, -2f, 0, color, 1f);
					}
					if (this.type == 46 || this.type == 303 || this.type == 337)
					{
						Gore.NewGore(this.position, this.velocity, 76, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 77, 1f);
						if (this.type == 303)
						{
							for (int o9 = 0; o9 < 10; o9++)
							{
								Vector2 vector2236 = this.position;
								int num546 = this.width;
								int num547 = this.height;
								float single158 = (float)(2 * hitDirection);
								color = new Color();
								Dust.NewDust(vector2236, num546, num547, 193, single158, -2f, 0, color, 1f);
							}
							return;
						}
					}
					else
					{
						if (this.type == 67)
						{
							Gore.NewGore(this.position, this.velocity, 95, 1f);
							Gore.NewGore(this.position, this.velocity, 95, 1f);
							Gore.NewGore(this.position, this.velocity, 96, 1f);
							return;
						}
						if (this.type == 55 || this.type == 230)
						{
							Gore.NewGore(this.position, this.velocity, 553, 1f);
							Gore.NewGore(this.position, this.velocity, 554, 1f);
							return;
						}
						if (this.type == 74)
						{
							Gore.NewGore(this.position, this.velocity, 100, 1f);
							return;
						}
						if (this.type == 297)
						{
							Gore.NewGore(this.position, this.velocity, 431, 1f);
							return;
						}
						if (this.type == 298)
						{
							Gore.NewGore(this.position, this.velocity, 432, 1f);
							return;
						}
						if (this.type == 299)
						{
							Gore.NewGore(this.position, this.velocity, 433, 1f);
							return;
						}
						if (this.type == 538)
						{
							Gore.NewGore(this.position, this.velocity, 897, 1f);
							return;
						}
						if (this.type == 300)
						{
							Gore.NewGore(this.position, this.velocity, 434, 1f);
							return;
						}
						if (this.type == 102)
						{
							Gore.NewGore(this.position, this.velocity, 116, 1f);
							return;
						}
						if (this.type == 224)
						{
							Gore.NewGore(this.position, this.velocity, 312, 1f);
							Gore.NewGore(this.position, this.velocity, 313, 1f);
							return;
						}
					}
				}
				else if (this.type == 148 || this.type == 149 || this.type == 168 || this.type == 470)
				{
					if (this.life > 0)
					{
						for (int p9 = 0; (double)p9 < dmg / (double)this.lifeMax * 20; p9++)
						{
							Vector2 vector2237 = this.position;
							int num548 = this.width;
							int num549 = this.height;
							float single159 = (float)hitDirection;
							color = new Color();
							Dust.NewDust(vector2237, num548, num549, 5, single159, -1f, 0, color, 1f);
						}
						return;
					}
					for (int q9 = 0; q9 < 10; q9++)
					{
						Vector2 vector2238 = this.position;
						int num550 = this.width;
						int num551 = this.height;
						float single160 = (float)(2 * hitDirection);
						color = new Color();
						Dust.NewDust(vector2238, num550, num551, 5, single160, -2f, 0, color, 1f);
					}
					if (this.type == 148)
					{
						Gore.NewGore(this.position, this.velocity, 160, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 161, 1f);
						return;
					}
					if (this.type == 149)
					{
						Gore.NewGore(this.position, this.velocity, 162, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 163, 1f);
						return;
					}
					if (this.type == 168)
					{
						Gore.NewGore(this.position, this.velocity, 215, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 216, 1f);
						return;
					}
					if (this.type == 470)
					{
						Gore.NewGore(this.position, this.velocity, 673, 1f);
						Gore.NewGore(this.position, this.velocity, 672, 1f);
						Gore.NewGore(this.position, this.velocity, 674, 1f);
						return;
					}
				}
				else
				{
					if (this.type == 361)
					{
						if (this.life > 0)
						{
							for (int r9 = 0; (double)r9 < dmg / (double)this.lifeMax * 20; r9++)
							{
								Vector2 vector2239 = this.position;
								int num552 = this.width;
								int num553 = this.height;
								float single161 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2239, num552, num553, 5, single161, -1f, 0, color, 1f);
							}
							return;
						}
						for (int s9 = 0; s9 < 10; s9++)
						{
							Vector2 vector2240 = this.position;
							int num554 = this.width;
							int num555 = this.height;
							float single162 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2240, num554, num555, 5, single162, -2f, 0, color, 1f);
						}
						Gore.NewGore(this.position, this.velocity, 551, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 552, 1f);
						return;
					}
					if (this.type == 366 || this.type == 367)
					{
						if (this.life > 0)
						{
							for (int t9 = 0; (double)t9 < dmg / (double)this.lifeMax * 20; t9++)
							{
								Vector2 vector2241 = this.position;
								int num556 = this.width;
								int num557 = this.height;
								float single163 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2241, num556, num557, 203, single163, -1f, 0, color, 1f);
							}
							return;
						}
						for (int u9 = 0; u9 < 10; u9++)
						{
							Vector2 vector2242 = this.position;
							int num558 = this.width;
							int num559 = this.height;
							float single164 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2242, num558, num559, 203, single164, -2f, 0, color, 1f);
						}
						if (this.type == 366)
						{
							Gore.NewGore(this.position, this.velocity, 561, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 562, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 563, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 564, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 565, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 566, 1f);
						return;
					}
					if (this.type >= 362 && this.type <= 365)
					{
						if (this.life > 0)
						{
							for (int v9 = 0; (double)v9 < dmg / (double)this.lifeMax * 20; v9++)
							{
								Vector2 vector2243 = this.position;
								int num560 = this.width;
								int num561 = this.height;
								float single165 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2243, num560, num561, 5, single165, -1f, 0, color, 1f);
							}
							return;
						}
						for (int w9 = 0; w9 < 10; w9++)
						{
							Vector2 vector2244 = this.position;
							int num562 = this.width;
							int num563 = this.height;
							float single166 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2244, num562, num563, 5, single166, -2f, 0, color, 1f);
						}
						if (this.type != 362 && this.type != 363)
						{
							Gore.NewGore(this.position, this.velocity, 558, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 559, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 560, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 555, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 556, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 557, 1f);
						return;
					}
					if (this.type == 348 || this.type == 349)
					{
						if (this.life > 0)
						{
							for (int x91 = 0; (double)x91 < dmg / (double)this.lifeMax * 20; x91++)
							{
								Vector2 vector2245 = this.position;
								int num564 = this.width;
								int num565 = this.height;
								float single167 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2245, num564, num565, 5, single167, -1f, 0, color, 1f);
							}
							return;
						}
						for (int y91 = 0; y91 < 10; y91++)
						{
							Vector2 vector2246 = this.position;
							int num566 = this.width;
							int num567 = this.height;
							float single168 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2246, num566, num567, 5, single168, -2f, 0, color, 1f);
						}
						Gore.NewGore(this.position, this.velocity, 528, 1f);
						Gore.NewGore(this.position, this.velocity, 529, 1f);
						Gore.NewGore(this.position, this.velocity, 530, 1f);
						Gore.NewGore(this.position, this.velocity, 531, 1f);
						Gore.NewGore(this.position, this.velocity, 532, 1f);
						return;
					}
					if (this.type == 351)
					{
						if (this.life > 0)
						{
							for (int a9 = 0; (double)a9 < dmg / (double)this.lifeMax * 20; a9++)
							{
								Vector2 vector2247 = this.position;
								int num568 = this.width;
								int num569 = this.height;
								float single169 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2247, num568, num569, 5, single169, -1f, 0, color, 1f);
							}
							return;
						}
						for (int b9 = 0; b9 < 10; b9++)
						{
							Vector2 vector2248 = this.position;
							int num570 = this.width;
							int num571 = this.height;
							float single170 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2248, num570, num571, 5, single170, -2f, 0, color, 1f);
						}
						Gore.NewGore(this.position, this.velocity, 538, 1f);
						Gore.NewGore(this.position, this.velocity, 539, 1f);
						Gore.NewGore(this.position, this.velocity, 540, 1f);
						Gore.NewGore(this.position, this.velocity, 541, 1f);
						Gore.NewGore(this.position, this.velocity, 542, 1f);
						return;
					}
					if (this.type == 350)
					{
						if (this.life > 0)
						{
							for (int c9 = 0; (double)c9 < dmg / (double)this.lifeMax * 20; c9++)
							{
								Vector2 vector2249 = this.position;
								int num572 = this.width;
								int num573 = this.height;
								float single171 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2249, num572, num573, 5, single171, -1f, 0, color, 1f);
							}
							return;
						}
						for (int d9 = 0; d9 < 10; d9++)
						{
							Vector2 vector2250 = this.position;
							int num574 = this.width;
							int num575 = this.height;
							float single172 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2250, num574, num575, 5, single172, -2f, 0, color, 1f);
						}
						Gore.NewGore(this.position, this.velocity, 533, 1f);
						Gore.NewGore(this.position, this.velocity, 534, 1f);
						Gore.NewGore(this.position, this.velocity, 535, 1f);
						Gore.NewGore(this.position, this.velocity, 536, 1f);
						return;
					}
					if (this.type == 47 || this.type == 57 || this.type == 58 || this.type == 464 || this.type == 465)
					{
						if (this.life > 0)
						{
							for (int e9 = 0; (double)e9 < dmg / (double)this.lifeMax * 20; e9++)
							{
								Vector2 vector2251 = this.position;
								int num576 = this.width;
								int num577 = this.height;
								float single173 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2251, num576, num577, 5, single173, -1f, 0, color, 1f);
							}
							return;
						}
						for (int f9 = 0; f9 < 10; f9++)
						{
							Vector2 vector2252 = this.position;
							int num578 = this.width;
							int num579 = this.height;
							float single174 = (float)(2 * hitDirection);
							color = new Color();
							Dust.NewDust(vector2252, num578, num579, 5, single174, -2f, 0, color, 1f);
						}
						if (this.type == 57)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 84, 1f);
							return;
						}
						if (this.type == 58)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 85, 1f);
							return;
						}
						if (this.type == 464)
						{
							Gore.NewGore(this.position, this.velocity, 668, 1f);
							Gore.NewGore(this.position, this.velocity, 669, 1f);
							return;
						}
						if (this.type == 465)
						{
							Gore.NewGore(this.position, this.velocity, 670, 1f);
							Gore.NewGore(this.position, this.velocity, 671, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 78, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 79, 1f);
						return;
					}
					if (this.type == 173 || this.type == 174 || this.type == 181 || this.type == 182 || this.type == 268)
					{
						if (this.life > 0)
						{
							for (int g9 = 0; (double)g9 < dmg / (double)this.lifeMax * 100; g9++)
							{
								Vector2 vector2253 = this.position;
								int num580 = this.width;
								int num581 = this.height;
								float single175 = (float)hitDirection;
								int num582 = this.alpha;
								color = new Color();
								Dust.NewDust(vector2253, num580, num581, 5, single175, -1f, num582, color, 1f);
							}
							return;
						}
						for (int h9 = 0; h9 < 50; h9++)
						{
							Vector2 vector2254 = this.position;
							int num583 = this.width;
							int num584 = this.height;
							float single176 = (float)(2 * hitDirection);
							int num585 = this.alpha;
							color = new Color();
							Dust.NewDust(vector2254, num583, num584, 5, single176, -2f, num585, color, 1f);
						}
						if (this.type == 173)
						{
							Gore.NewGore(this.position, this.velocity, 223, 1f);
							Gore.NewGore(this.position, this.velocity, 224, 1f);
							return;
						}
						if (this.type == 174)
						{
							Gore.NewGore(this.position, this.velocity, 225, 1f);
							Gore.NewGore(this.position, this.velocity, 226, 1f);
							return;
						}
						if (this.type == 181)
						{
							Gore.NewGore(this.position, this.velocity, 237, 1f);
							return;
						}
						if (this.type == 182)
						{
							Gore.NewGore(this.position, this.velocity, 238, 1f);
							Gore.NewGore(this.position, this.velocity, 239, 1f);
							return;
						}
						if (this.type == 268)
						{
							Gore.NewGore(this.position, this.velocity, 403, 1f);
							Gore.NewGore(this.position, this.velocity, 404, 1f);
							Gore.NewGore(this.position, this.velocity, 405, 1f);
							return;
						}
					}
					else
					{
						if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
						{
							if (this.life > 0)
							{
								for (int i10 = 0; (double)i10 < dmg / (double)this.lifeMax * 100; i10++)
								{
									Vector2 vector2255 = this.position;
									int num586 = this.width;
									int num587 = this.height;
									float single177 = (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2255, num586, num587, 5, single177, -1f, 0, color, 1f);
								}
								return;
							}
							for (int j10 = 0; j10 < 50; j10++)
							{
								Vector2 vector2256 = this.position;
								int num588 = this.width;
								int num589 = this.height;
								float single178 = (float)(2 * hitDirection);
								color = new Color();
								Dust.NewDust(vector2256, num588, num589, 5, single178, -2f, 0, color, 1f);
							}
							if (this.type == 190)
							{
								Gore.NewGore(this.position, this.velocity, 249, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
								return;
							}
							if (this.type == 191)
							{
								Gore.NewGore(this.position, this.velocity, 248, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
								return;
							}
							if (this.type == 192)
							{
								Gore.NewGore(this.position, this.velocity, 247, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
								return;
							}
							if (this.type == 193)
							{
								Gore.NewGore(this.position, this.velocity, 252, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 253, this.scale);
								return;
							}
							if (this.type == 194)
							{
								Gore.NewGore(this.position, this.velocity, 250, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 251, this.scale);
								return;
							}
							if (this.type == 317)
							{
								Gore.NewGore(this.position, this.velocity, 447, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 448, this.scale);
								return;
							}
							if (this.type == 318)
							{
								Gore.NewGore(this.position, this.velocity, 449, this.scale);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 450, this.scale);
								return;
							}
							Gore.NewGore(this.position, this.velocity, 1, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 157)
						{
							if (this.life > 0)
							{
								for (int k10 = 0; (double)k10 < dmg / (double)this.lifeMax * 100; k10++)
								{
									Vector2 vector2257 = this.position;
									int num590 = this.width;
									int num591 = this.height;
									float single179 = (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2257, num590, num591, 5, single179, -1f, 0, color, 1f);
								}
								return;
							}
							for (int l10 = 0; l10 < 50; l10++)
							{
								Vector2 vector2258 = this.position;
								int num592 = this.width;
								int num593 = this.height;
								float single180 = (float)(2 * hitDirection);
								color = new Color();
								Dust.NewDust(vector2258, num592, num593, 5, single180, -2f, 0, color, 1f);
							}
							Gore.NewGore(this.position, this.velocity, 186, 1f);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 187, 1f);
							return;
						}
						if (this.type == 133)
						{
							if (this.life <= 0)
							{
								for (int m10 = 0; m10 < 50; m10++)
								{
									Vector2 vector2259 = this.position;
									int num594 = this.width;
									int num595 = this.height;
									float single181 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2259, num594, num595, 5, single181, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 155, 1f);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 14f), this.velocity, 155, 1f);
								return;
							}
							for (int n10 = 0; (double)n10 < dmg / (double)this.lifeMax * 100; n10++)
							{
								Vector2 vector2260 = this.position;
								int num596 = this.width;
								int num597 = this.height;
								float single182 = (float)hitDirection;
								color = new Color();
								Dust.NewDust(vector2260, num596, num597, 5, single182, -1f, 0, color, 1f);
							}
							if ((float)this.life < (float)this.lifeMax * 0.5f && this.localAI[0] == 0f)
							{
								this.localAI[0] = 1f;
								Gore.NewGore(this.position, this.velocity, 1, 1f);
								return;
							}
						}
						else if (this.type == 69 || this.type == 509 || this.type == 508)
						{
							if (this.life > 0)
							{
								for (int o10 = 0; (double)o10 < dmg / (double)this.lifeMax * 100; o10++)
								{
									Vector2 vector2261 = this.position;
									int num598 = this.width;
									int num599 = this.height;
									float single183 = (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2261, num598, num599, 250, single183, -1f, 0, color, 1f);
								}
								return;
							}
							for (int p10 = 0; p10 < 50; p10++)
							{
								Vector2 vector2262 = this.position;
								int num600 = this.width;
								int num601 = this.height;
								float single184 = (float)(2 * hitDirection);
								color = new Color();
								Dust.NewDust(vector2262, num600, num601, 250, single184, -2f, 0, color, 1f);
							}
							if (this.type == 69)
							{
								Gore.NewGore(this.position, this.velocity, 97, 1f);
								Gore.NewGore(this.position, this.velocity, 98, 1f);
								return;
							}
							if (this.type == 508)
							{
								Gore.NewGore(this.position, this.velocity, 811, 1f);
								Gore.NewGore(this.position, this.velocity, 812, 1f);
								Gore.NewGore(this.position, this.velocity, 813, 1f);
								Gore.NewGore(this.position, this.velocity, 814, 1f);
								return;
							}
							if (this.type == 509)
							{
								Gore.NewGore(this.position, this.velocity, 815, 1f);
								Gore.NewGore(this.position, this.velocity, 816, 1f);
								Gore.NewGore(this.position, this.velocity, 817, 1f);
								Gore.NewGore(this.position, this.velocity, 818, 1f);
								Gore.NewGore(this.position, this.velocity, 818, 1f);
								return;
							}
						}
						else
						{
							if (this.type == 61)
							{
								if (this.life > 0)
								{
									for (int q10 = 0; (double)q10 < dmg / (double)this.lifeMax * 100; q10++)
									{
										Vector2 vector2263 = this.position;
										int num602 = this.width;
										int num603 = this.height;
										float single185 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2263, num602, num603, 5, single185, -1f, 0, color, 1f);
									}
									return;
								}
								for (int r10 = 0; r10 < 50; r10++)
								{
									Vector2 vector2264 = this.position;
									int num604 = this.width;
									int num605 = this.height;
									float single186 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2264, num604, num605, 5, single186, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 86, 1f);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 87, 1f);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 88, 1f);
								return;
							}
							if (this.type == 301)
							{
								if (this.life > 0)
								{
									for (int s10 = 0; (double)s10 < dmg / (double)this.lifeMax * 100; s10++)
									{
										Vector2 vector2265 = this.position;
										int num606 = this.width;
										int num607 = this.height;
										float single187 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2265, num606, num607, 5, single187, -1f, 0, color, 1f);
									}
									return;
								}
								for (int t10 = 0; t10 < 50; t10++)
								{
									Vector2 vector2266 = this.position;
									int num608 = this.width;
									int num609 = this.height;
									float single188 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2266, num608, num609, 5, single188, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 438, 1f);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 439, 1f);
								return;
							}
							if (this.type == 252)
							{
								if (this.life > 0)
								{
									for (int u10 = 0; (double)u10 < dmg / (double)this.lifeMax * 100; u10++)
									{
										Vector2 vector2267 = this.position;
										int num610 = this.width;
										int num611 = this.height;
										float single189 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2267, num610, num611, 5, single189, -1f, 0, color, 1f);
									}
									return;
								}
								for (int v10 = 0; v10 < 50; v10++)
								{
									Vector2 vector2268 = this.position;
									int num612 = this.width;
									int num613 = this.height;
									float single190 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2268, num612, num613, 5, single190, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 373, 1f);
								Gore.NewGore(this.position, this.velocity, 374, 1f);
								return;
							}
							if (this.type == 489)
							{
								if (this.life > 0)
								{
									for (int w10 = 0; (double)w10 < dmg / (double)this.lifeMax * 100; w10++)
									{
										Vector2 vector2269 = this.position;
										int num614 = this.width;
										int num615 = this.height;
										float single191 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2269, num614, num615, 5, single191, -1f, 0, color, 1f);
									}
									return;
								}
								for (int x101 = 0; x101 < 50; x101++)
								{
									Vector2 vector2270 = this.position;
									int num616 = this.width;
									int num617 = this.height;
									float single192 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2270, num616, num617, 5, single192, -2.5f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 722, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 723, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 723, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 724, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 724, this.scale);
								return;
							}
							if (this.type == 534)
							{
								if (this.life > 0)
								{
									for (int y101 = 0; (double)y101 < dmg / (double)this.lifeMax * 100; y101++)
									{
										Vector2 vector2271 = this.position;
										int num618 = this.width;
										int num619 = this.height;
										float single193 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2271, num618, num619, 5, single193, -1f, 0, color, 1f);
									}
									return;
								}
								for (int a10 = 0; a10 < 50; a10++)
								{
									Vector2 vector2272 = this.position;
									int num620 = this.width;
									int num621 = this.height;
									float single194 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2272, num620, num621, 5, single194, -2.5f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 894, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 895, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 895, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 896, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 896, this.scale);
								return;
							}
							if (this.type == 490)
							{
								if (this.life > 0)
								{
									for (int b10 = 0; (double)b10 < dmg / (double)this.lifeMax * 100; b10++)
									{
										Vector2 vector2273 = this.position;
										int num622 = this.width;
										int num623 = this.height;
										float single195 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2273, num622, num623, 5, single195, -1f, 0, color, 1f);
									}
									return;
								}
								for (int c10 = 0; c10 < 50; c10++)
								{
									Vector2 vector2274 = this.position;
									int num624 = this.width;
									int num625 = this.height;
									float single196 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2274, num624, num625, 5, single196, -2.5f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 725, this.scale);
								Gore.NewGore(this.position, this.velocity, 726, this.scale);
								Gore.NewGore(this.position, this.velocity, 727, this.scale);
								Gore.NewGore(this.position, this.velocity, 725 + Main.rand.Next(3), this.scale);
								Gore.NewGore(this.position, this.velocity, 725 + Main.rand.Next(3), this.scale);
								return;
							}
							if (this.type == 65)
							{
								if (this.life > 0)
								{
									for (int d10 = 0; (double)d10 < dmg / (double)this.lifeMax * 150; d10++)
									{
										Vector2 vector2275 = this.position;
										int num626 = this.width;
										int num627 = this.height;
										float single197 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2275, num626, num627, 5, single197, -1f, 0, color, 1f);
									}
									return;
								}
								for (int e10 = 0; e10 < 75; e10++)
								{
									Vector2 vector2276 = this.position;
									int num628 = this.width;
									int num629 = this.height;
									float single198 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2276, num628, num629, 5, single198, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity * 0.8f, 89, 1f);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 90, 1f);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 91, 1f);
								Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 92, 1f);
								return;
							}
							if (this.type == 195 || this.type == 196)
							{
								if (this.life > 0)
								{
									for (int f10 = 0; (double)f10 < dmg / (double)this.lifeMax * 150; f10++)
									{
										Vector2 vector2277 = this.position;
										int num630 = this.width;
										int num631 = this.height;
										float single199 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2277, num630, num631, 5, single199, -1f, 0, color, 1f);
									}
									return;
								}
								for (int g10 = 0; g10 < 75; g10++)
								{
									Vector2 vector2278 = this.position;
									int num632 = this.width;
									int num633 = this.height;
									float single200 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2278, num632, num633, 5, single200, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 254, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
								return;
							}
							if (this.type == 198 || this.type == 199)
							{
								if (this.life > 0)
								{
									for (int h10 = 0; (double)h10 < dmg / (double)this.lifeMax * 150; h10++)
									{
										Vector2 vector2279 = this.position;
										int num634 = this.width;
										int num635 = this.height;
										float single201 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2279, num634, num635, 5, single201, -1f, 0, color, 1f);
									}
									return;
								}
								for (int i11 = 0; i11 < 75; i11++)
								{
									Vector2 vector2280 = this.position;
									int num636 = this.width;
									int num637 = this.height;
									float single202 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2280, num636, num637, 5, single202, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 258, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 261, this.scale);
								return;
							}
							if (this.type == 206)
							{
								if (this.life > 0)
								{
									for (int j11 = 0; (double)j11 < dmg / (double)this.lifeMax * 150; j11++)
									{
										Vector2 vector2281 = this.position;
										int num638 = this.width;
										int num639 = this.height;
										float single203 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2281, num638, num639, 137, single203, -1f, 0, color, 1f);
									}
									return;
								}
								for (int k11 = 0; k11 < 75; k11++)
								{
									Vector2 vector2282 = this.position;
									int num640 = this.width;
									int num641 = this.height;
									float single204 = (float)(2 * hitDirection);
									color = new Color();
									Dust.NewDust(vector2282, num640, num641, 137, single204, -2f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 273, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
								return;
							}
							if (this.type == 342)
							{
								if (this.life > 0)
								{
									for (int l11 = 0; (double)l11 < dmg / (double)this.lifeMax * 100; l11++)
									{
										Vector2 vector2283 = this.position;
										int num642 = this.width;
										int num643 = this.height;
										float single205 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2283, num642, num643, 0, single205, -1f, 0, color, 1f);
									}
									return;
								}
								for (int m11 = 0; m11 < 50; m11++)
								{
									Vector2 vector2284 = this.position;
									int num644 = this.width;
									int num645 = this.height;
									float single206 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2284, num644, num645, 0, single206, -2.5f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 500, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
								return;
							}
							if (this.type >= 338 && this.type <= 340)
							{
								if (this.life > 0)
								{
									for (int n11 = 0; (double)n11 < dmg / (double)this.lifeMax * 100; n11++)
									{
										Vector2 vector2285 = this.position;
										int num646 = this.width;
										int num647 = this.height;
										float single207 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2285, num646, num647, 5, single207, -1f, 0, color, 1f);
									}
									return;
								}
								for (int o11 = 0; o11 < 50; o11++)
								{
									Vector2 vector2286 = this.position;
									int num648 = this.width;
									int num649 = this.height;
									float single208 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2286, num648, num649, 5, single208, -2.5f, 0, color, 1f);
								}
								if (this.type == 338)
								{
									Gore.NewGore(this.position, this.velocity, 494, this.scale);
								}
								if (this.type == 339)
								{
									Gore.NewGore(this.position, this.velocity, 495, this.scale);
								}
								if (this.type == 340)
								{
									Gore.NewGore(this.position, this.velocity, 496, this.scale);
								}
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 497, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 498, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 499, this.scale);
								return;
							}
							if (this.type == 343)
							{
								if (this.life > 0)
								{
									for (int p11 = 0; (double)p11 < dmg / (double)this.lifeMax * 100; p11++)
									{
										Vector2 vector2287 = this.position;
										int num650 = this.width;
										int num651 = this.height;
										float single209 = (float)hitDirection;
										color = new Color();
										Dust.NewDust(vector2287, num650, num651, 5, single209, -1f, 0, color, 1f);
									}
									return;
								}
								for (int q11 = 0; q11 < 50; q11++)
								{
									Vector2 vector2288 = this.position;
									int num652 = this.width;
									int num653 = this.height;
									float single210 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2288, num652, num653, 5, single210, -2.5f, 0, color, 1f);
								}
								Gore.NewGore(this.position, this.velocity, 503, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 504, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 505, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 506, this.scale);
								return;
							}
							if ((this.type < 430 || this.type > 436) && this.type != 3 && this.type != 52 && this.type != 53 && this.type != 536 && this.type != 104 && this.type != 109 && this.type != 331 && this.type != 332 && this.type != 132 && this.type != 161 && this.type != 162 && this.type != 186 && this.type != 187 && this.type != 188 && this.type != 189 && this.type != 200 && this.type != 223 && this.type != 251 && this.type != 319 && this.type != 320 && this.type != 321)
							{
								if (this.type == 83 || this.type == 84 || this.type == 179)
								{
									if (this.life > 0)
									{
										for (int r11 = 0; (double)r11 < dmg / (double)this.lifeMax * 50; r11++)
										{
											Vector2 vector2289 = this.position;
											int num654 = this.width;
											int num655 = this.height;
											color = new Color();
											int num656 = Dust.NewDust(vector2289, num654, num655, 31, 0f, 0f, 0, color, 1.5f);
											Main.dust[num656].noGravity = true;
										}
										return;
									}
									for (int s11 = 0; s11 < 20; s11++)
									{
										Vector2 vector2290 = this.position;
										int num657 = this.width;
										int num658 = this.height;
										color = new Color();
										int num659 = Dust.NewDust(vector2290, num657, num658, 31, 0f, 0f, 0, color, 1.5f);
										Dust dust106 = Main.dust[num659];
										dust106.velocity = dust106.velocity * 2f;
										Main.dust[num659].noGravity = true;
									}
									int num660 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
									Gore gore3 = Main.gore[num660];
									gore3.velocity = gore3.velocity * 0.5f;
									num660 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
									Gore gore4 = Main.gore[num660];
									gore4.velocity = gore4.velocity * 0.5f;
									num660 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
									Gore gore5 = Main.gore[num660];
									gore5.velocity = gore5.velocity * 0.5f;
									return;
								}
								if (this.type == 262 || this.type == 263 || this.type == 264)
								{
									if (this.life > 0)
									{
										for (int t11 = 0; (double)t11 < dmg / (double)this.lifeMax * 100; t11++)
										{
											if (this.type == 262 && this.life > this.lifeMax / 2 && Main.rand.Next(3) != 0)
											{
												Vector2 vector2291 = this.position;
												int num661 = this.width;
												int num662 = this.height;
												float single211 = (float)hitDirection;
												color = new Color();
												Dust.NewDust(vector2291, num661, num662, 166, single211, -1f, 0, color, 1f);
											}
											else if (this.type != 265 || Main.rand.Next(3) == 0)
											{
												Vector2 vector2292 = this.position;
												int num663 = this.width;
												int num664 = this.height;
												float single212 = (float)hitDirection;
												color = new Color();
												Dust.NewDust(vector2292, num663, num664, 167, single212, -1f, 0, color, 1f);
											}
											else
											{
												Vector2 vector2293 = this.position;
												int num665 = this.width;
												int num666 = this.height;
												float single213 = (float)hitDirection;
												color = new Color();
												Dust.NewDust(vector2293, num665, num666, 166, single213, -1f, 0, color, 1f);
											}
										}
										return;
									}
									for (int u11 = 0; u11 < 150; u11++)
									{
										if (this.type != 265 || Main.rand.Next(3) == 0)
										{
											Vector2 vector2294 = this.position;
											int num667 = this.width;
											int num668 = this.height;
											float single214 = (float)(2 * hitDirection);
											color = new Color();
											Dust.NewDust(vector2294, num667, num668, 167, single214, -2f, 0, color, 1f);
										}
										else
										{
											Vector2 vector2295 = this.position;
											int num669 = this.width;
											int num670 = this.height;
											float single215 = (float)(2 * hitDirection);
											color = new Color();
											Dust.NewDust(vector2295, num669, num670, 166, single215, -2f, 0, color, 1f);
										}
									}
									if (this.type == 262)
									{
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 381, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 382, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 383, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 384, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 385, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
									}
									if (this.type == 263)
									{
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 390, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 391, this.scale);
									}
									if (this.type == 264)
									{
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 388, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 389, this.scale);
										return;
									}
								}
								else if (this.type != 265)
								{
									if (this.type == 266)
									{
										if (this.life > 0)
										{
											for (int v11 = 0; (double)v11 < dmg / (double)this.lifeMax * 100; v11++)
											{
												Vector2 vector2296 = this.position;
												int num671 = this.width;
												int num672 = this.height;
												float single216 = (float)hitDirection;
												color = new Color();
												Dust.NewDust(vector2296, num671, num672, 5, single216, -1f, 0, color, 1f);
											}
											return;
										}
										for (int w11 = 0; w11 < 150; w11++)
										{
											Vector2 vector2297 = this.position;
											int num673 = this.width;
											int num674 = this.height;
											float single217 = (float)(2 * hitDirection);
											color = new Color();
											Dust.NewDust(vector2297, num673, num674, 5, single217, -2f, 0, color, 1f);
										}
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 396, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 397, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 398, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 399, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 400, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 401, 1f);
										return;
									}
									if (this.type == 267)
									{
										if (this.life > 0)
										{
											for (int x11 = 0; (double)x11 < dmg / (double)this.lifeMax * 50; x11++)
											{
												Vector2 vector2298 = this.position;
												int num675 = this.width;
												int num676 = this.height;
												float single218 = (float)hitDirection;
												color = new Color();
												Dust.NewDust(vector2298, num675, num676, 5, single218, -1f, 0, color, 1f);
											}
											return;
										}
										for (int y11 = 0; y11 < 20; y11++)
										{
											Vector2 vector2299 = this.position;
											int num677 = this.width;
											int num678 = this.height;
											float single219 = (float)(2 * hitDirection);
											color = new Color();
											Dust.NewDust(vector2299, num677, num678, 5, single219, -2f, 0, color, 1f);
										}
										Gore.NewGore(this.position, this.velocity, 402, 1f);
										return;
									}
									if (this.type == 4 || this.type == 126 || this.type == 125)
									{
										if (this.life > 0)
										{
											for (int a11 = 0; (double)a11 < dmg / (double)this.lifeMax * 100; a11++)
											{
												Vector2 vector2300 = this.position;
												int num679 = this.width;
												int num680 = this.height;
												float single220 = (float)hitDirection;
												color = new Color();
												Dust.NewDust(vector2300, num679, num680, 5, single220, -1f, 0, color, 1f);
											}
											return;
										}
										for (int b11 = 0; b11 < 150; b11++)
										{
											Vector2 vector2301 = this.position;
											int num681 = this.width;
											int num682 = this.height;
											float single221 = (float)(2 * hitDirection);
											color = new Color();
											Dust.NewDust(vector2301, num681, num682, 5, single221, -2f, 0, color, 1f);
										}
										for (int c11 = 0; c11 < 2; c11++)
										{
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 2, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 9, 1f);
											if (this.type == 4)
											{
												Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 10, 1f);
												Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
											}
											else if (this.type == 125)
											{
												Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 146, 1f);
											}
											else if (this.type == 126)
											{
												Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 145, 1f);
											}
										}
										if (this.type == 125 || this.type == 126)
										{
											for (int d11 = 0; d11 < 10; d11++)
											{
												Vector2 vector2302 = new Vector2(this.position.X, this.position.Y);
												int num683 = this.width;
												int num684 = this.height;
												color = new Color();
												int num685 = Dust.NewDust(vector2302, num683, num684, 31, 0f, 0f, 100, color, 1.5f);
												Dust dust107 = Main.dust[num685];
												dust107.velocity = dust107.velocity * 1.4f;
											}
											for (int e11 = 0; e11 < 5; e11++)
											{
												Vector2 vector2303 = new Vector2(this.position.X, this.position.Y);
												int num686 = this.width;
												int num687 = this.height;
												color = new Color();
												int num688 = Dust.NewDust(vector2303, num686, num687, 6, 0f, 0f, 100, color, 2.5f);
												Main.dust[num688].noGravity = true;
												Dust dust108 = Main.dust[num688];
												dust108.velocity = dust108.velocity * 5f;
												Vector2 vector2304 = new Vector2(this.position.X, this.position.Y);
												int num689 = this.width;
												int num690 = this.height;
												color = new Color();
												num688 = Dust.NewDust(vector2304, num689, num690, 6, 0f, 0f, 100, color, 1.5f);
												Dust dust109 = Main.dust[num688];
												dust109.velocity = dust109.velocity * 3f;
											}
											Vector2 vector2305 = new Vector2(this.position.X, this.position.Y);
											vector2 = new Vector2();
											int num691 = Gore.NewGore(vector2305, vector2, Main.rand.Next(61, 64), 1f);
											Gore gore6 = Main.gore[num691];
											gore6.velocity = gore6.velocity * 0.4f;
											Main.gore[num691].velocity.X = Main.gore[num691].velocity.X + 1f;
											Main.gore[num691].velocity.Y = Main.gore[num691].velocity.Y + 1f;
											Vector2 vector2306 = new Vector2(this.position.X, this.position.Y);
											vector2 = new Vector2();
											num691 = Gore.NewGore(vector2306, vector2, Main.rand.Next(61, 64), 1f);
											Gore gore7 = Main.gore[num691];
											gore7.velocity = gore7.velocity * 0.4f;
											Main.gore[num691].velocity.X = Main.gore[num691].velocity.X - 1f;
											Main.gore[num691].velocity.Y = Main.gore[num691].velocity.Y + 1f;
											Vector2 vector2307 = new Vector2(this.position.X, this.position.Y);
											vector2 = new Vector2();
											num691 = Gore.NewGore(vector2307, vector2, Main.rand.Next(61, 64), 1f);
											Gore gore8 = Main.gore[num691];
											gore8.velocity = gore8.velocity * 0.4f;
											Main.gore[num691].velocity.X = Main.gore[num691].velocity.X + 1f;
											Main.gore[num691].velocity.Y = Main.gore[num691].velocity.Y - 1f;
											Vector2 vector2308 = new Vector2(this.position.X, this.position.Y);
											vector2 = new Vector2();
											num691 = Gore.NewGore(vector2308, vector2, Main.rand.Next(61, 64), 1f);
											Gore gore9 = Main.gore[num691];
											gore9.velocity = gore9.velocity * 0.4f;
											Main.gore[num691].velocity.X = Main.gore[num691].velocity.X - 1f;
											Main.gore[num691].velocity.Y = Main.gore[num691].velocity.Y - 1f;
											return;
										}
									}
									else
									{
										if (this.type == 5)
										{
											if (this.life > 0)
											{
												for (int f11 = 0; (double)f11 < dmg / (double)this.lifeMax * 50; f11++)
												{
													Vector2 vector2309 = this.position;
													int num692 = this.width;
													int num693 = this.height;
													float single222 = (float)hitDirection;
													color = new Color();
													Dust.NewDust(vector2309, num692, num693, 5, single222, -1f, 0, color, 1f);
												}
												return;
											}
											for (int g11 = 0; g11 < 20; g11++)
											{
												Vector2 vector2310 = this.position;
												int num694 = this.width;
												int num695 = this.height;
												float single223 = (float)(2 * hitDirection);
												color = new Color();
												Dust.NewDust(vector2310, num694, num695, 5, single223, -2f, 0, color, 1f);
											}
											Gore.NewGore(this.position, this.velocity, 6, 1f);
											Gore.NewGore(this.position, this.velocity, 7, 1f);
											return;
										}
										if (this.type == 113 || this.type == 114)
										{
											if (this.life > 0)
											{
												for (int h11 = 0; h11 < 20; h11++)
												{
													Vector2 vector2311 = this.position;
													int num696 = this.width;
													int num697 = this.height;
													float single224 = (float)hitDirection;
													color = new Color();
													Dust.NewDust(vector2311, num696, num697, 5, single224, -1f, 0, color, 1f);
												}
												return;
											}
											for (int i12 = 0; i12 < 50; i12++)
											{
												Vector2 vector2312 = this.position;
												int num698 = this.width;
												int num699 = this.height;
												float single225 = (float)(2 * hitDirection);
												color = new Color();
												Dust.NewDust(vector2312, num698, num699, 5, single225, -1f, 0, color, 1f);
											}
											if (this.type == 114)
											{
												Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
												Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 139, this.scale);
												Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 139, this.scale);
												Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
												return;
											}
											Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
											Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 138, this.scale);
											Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 138, this.scale);
											Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
											if (Main.player[Main.myPlayer].position.Y / 16f > (float)(Main.maxTilesY - 250))
											{
												int y12 = (int)Main.screenPosition.Y;
												int num700 = y12 + Main.screenWidth;
												int x12 = (int)this.position.X;
												if (this.direction > 0)
												{
													x12 = x12 - 80;
												}
												int num701 = x12 + 140;
												int num702 = x12;
												for (int j12 = y12; j12 < num700; j12 = j12 + 50)
												{
													while (num702 < num701)
													{
														for (int k12 = 0; k12 < 5; k12++)
														{
															Vector2 vector2313 = new Vector2((float)num702, (float)j12);
															color = new Color();
															Dust.NewDust(vector2313, 32, 32, 5, (float)Main.rand.Next(-60, 61) * 0.1f, (float)Main.rand.Next(-60, 61) * 0.1f, 0, color, 1f);
														}
														Vector2 vector2314 = new Vector2((float)Main.rand.Next(-80, 81) * 0.1f, (float)Main.rand.Next(-60, 21) * 0.1f);
														Gore.NewGore(new Vector2((float)num702, (float)j12), vector2314, Main.rand.Next(140, 143), 1f);
														num702 = num702 + 46;
													}
													num702 = x12;
												}
												return;
											}
										}
										else
										{
											if (this.type == 115 || this.type == 116)
											{
												if (this.life > 0)
												{
													for (int l12 = 0; l12 < 5; l12++)
													{
														Vector2 vector2315 = this.position;
														int num703 = this.width;
														int num704 = this.height;
														float single226 = (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2315, num703, num704, 5, single226, -1f, 0, color, 1f);
													}
													return;
												}
												if (this.type != 115 || Main.netMode == 1)
												{
													for (int m12 = 0; m12 < 20; m12++)
													{
														Vector2 vector2316 = this.position;
														int num705 = this.width;
														int num706 = this.height;
														float single227 = (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2316, num705, num706, 5, single227, -1f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 132, this.scale);
													Gore.NewGore(this.position, this.velocity, 133, this.scale);
													return;
												}
												NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 116, 0, 0f, 0f, 0f, 0f, 255);
												for (int n12 = 0; n12 < 10; n12++)
												{
													Vector2 vector2317 = this.position;
													int num707 = this.width;
													int num708 = this.height;
													float single228 = (float)hitDirection;
													color = new Color();
													Dust.NewDust(vector2317, num707, num708, 5, single228, -1f, 0, color, 1f);
												}
												return;
											}
											if (this.type >= 117 && this.type <= 119)
											{
												if (this.life > 0)
												{
													for (int o12 = 0; o12 < 5; o12++)
													{
														Vector2 vector2318 = this.position;
														int num709 = this.width;
														int num710 = this.height;
														float single229 = (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2318, num709, num710, 5, single229, -1f, 0, color, 1f);
													}
													return;
												}
												for (int p12 = 0; p12 < 10; p12++)
												{
													Vector2 vector2319 = this.position;
													int num711 = this.width;
													int num712 = this.height;
													float single230 = (float)hitDirection;
													color = new Color();
													Dust.NewDust(vector2319, num711, num712, 5, single230, -1f, 0, color, 1f);
												}
												Gore.NewGore(this.position, this.velocity, 134 + this.type - 117, this.scale);
												return;
											}
											if (this.type == 217 || this.type == 218 || this.type == 219)
											{
												if (this.life > 0)
												{
													for (int q12 = 0; (double)q12 < dmg / (double)this.lifeMax * 100; q12++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
													}
													return;
												}
												for (int r12 = 0; r12 < 50; r12++)
												{
													Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
												}
												if (this.type == 217)
												{
													Gore.NewGore(this.position, this.velocity, 292, this.scale);
													Gore.NewGore(this.position, this.velocity, 293, this.scale);
												}
												if (this.type == 218)
												{
													Gore.NewGore(this.position, this.velocity, 295, this.scale);
													Gore.NewGore(this.position, this.velocity, 296, this.scale);
												}
												if (this.type == 219)
												{
													Gore.NewGore(this.position, this.velocity, 294, this.scale);
													return;
												}
											}
											else
											{
												if (this.type == 222)
												{
													if (this.life > 0)
													{
														for (int s12 = 0; (double)s12 < dmg / (double)this.lifeMax * 100; s12++)
														{
															Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
														}
														return;
													}
													for (int t12 = 0; t12 < 50; t12++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
													}
													Gore.NewGore(new Vector2(this.position.X, this.position.Y - 35f), this.velocity, 303, this.scale);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y - 45f), this.velocity, 304, this.scale);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 305, this.scale);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 306, this.scale);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 307, this.scale);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 308, this.scale);
													return;
												}
												if (this.type == 6 || this.type == 94 || this.type == 166)
												{
													if (this.life > 0)
													{
														for (int u12 = 0; (double)u12 < dmg / (double)this.lifeMax * 100; u12++)
														{
															Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
														}
														return;
													}
													for (int v12 = 0; v12 < 50; v12++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
													}
													if (this.type == 94)
													{
														num2 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
														num2 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
														num2 = Gore.NewGore(this.position, this.velocity, 109, this.scale);
														num2 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
														return;
													}
													if (this.type == 166)
													{
														num2 = Gore.NewGore(this.position, this.velocity, 209, this.scale);
														num2 = Gore.NewGore(this.position, this.velocity, 210, this.scale);
														num2 = Gore.NewGore(this.position, this.velocity, 211, this.scale);
														return;
													}
													num2 = Gore.NewGore(this.position, this.velocity, 14, this.scale);
													Main.gore[num2].alpha = this.alpha;
													num2 = Gore.NewGore(this.position, this.velocity, 15, this.scale);
													Main.gore[num2].alpha = this.alpha;
													return;
												}
												if (this.type == 101)
												{
													if (this.life > 0)
													{
														for (int w12 = 0; (double)w12 < dmg / (double)this.lifeMax * 100; w12++)
														{
															Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
														}
														return;
													}
													for (int x121 = 0; x121 < 50; x121++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
													}
													Gore.NewGore(this.position, this.velocity, 110, this.scale);
													Gore.NewGore(this.position, this.velocity, 114, this.scale);
													Gore.NewGore(this.position, this.velocity, 114, this.scale);
													Gore.NewGore(this.position, this.velocity, 115, this.scale);
													return;
												}
												if (this.type == 7 || this.type == 8 || this.type == 9)
												{
													if (this.life > 0)
													{
														for (int y121 = 0; (double)y121 < dmg / (double)this.lifeMax * 100; y121++)
														{
															Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
														}
														return;
													}
													for (int a12 = 0; a12 < 50; a12++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
													}
													int num713 = Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
													Main.gore[num713].alpha = this.alpha;
													return;
												}
												if (this.type == 98 || this.type == 99 || this.type == 100)
												{
													if (this.life > 0)
													{
														for (int b12 = 0; (double)b12 < dmg / (double)this.lifeMax * 100; b12++)
														{
															Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
														}
														return;
													}
													for (int c12 = 0; c12 < 50; c12++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
													}
													int num714 = Gore.NewGore(this.position, this.velocity, 110, 1f);
													Main.gore[num714].alpha = this.alpha;
													return;
												}
												if (this.type == 10 || this.type == 11 || this.type == 12)
												{
													if (this.life > 0)
													{
														for (int d12 = 0; (double)d12 < dmg / (double)this.lifeMax * 50; d12++)
														{
															Vector2 vector2320 = this.position;
															int num715 = this.width;
															int num716 = this.height;
															float single231 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2320, num715, num716, 5, single231, -1f, 0, color, 1f);
														}
														return;
													}
													for (int e12 = 0; e12 < 10; e12++)
													{
														Vector2 vector2321 = this.position;
														int num717 = this.width;
														int num718 = this.height;
														float single232 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2321, num717, num718, 5, single232, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
													return;
												}
												if (this.type == 95 || this.type == 96 || this.type == 97)
												{
													if (this.life > 0)
													{
														for (int f12 = 0; (double)f12 < dmg / (double)this.lifeMax * 50; f12++)
														{
															Vector2 vector2322 = this.position;
															int num719 = this.width;
															int num720 = this.height;
															float single233 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2322, num719, num720, 5, single233, -1f, 0, color, 1f);
														}
														return;
													}
													for (int g12 = 0; g12 < 10; g12++)
													{
														Vector2 vector2323 = this.position;
														int num721 = this.width;
														int num722 = this.height;
														float single234 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2323, num721, num722, 5, single234, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, this.type - 95 + 111, 1f);
													return;
												}
												if (this.type == 13 || this.type == 14 || this.type == 15)
												{
													if (this.life > 0)
													{
														for (int h12 = 0; (double)h12 < dmg / (double)this.lifeMax * 100; h12++)
														{
															Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
														}
														return;
													}
													for (int i13 = 0; i13 < 50; i13++)
													{
														Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
													}
													if (this.type == 13)
													{
														Gore.NewGore(this.position, this.velocity, 24, 1f);
														Gore.NewGore(this.position, this.velocity, 25, 1f);
														return;
													}
													if (this.type == 14)
													{
														Gore.NewGore(this.position, this.velocity, 26, 1f);
														Gore.NewGore(this.position, this.velocity, 27, 1f);
														return;
													}
													Gore.NewGore(this.position, this.velocity, 28, 1f);
													Gore.NewGore(this.position, this.velocity, 29, 1f);
													return;
												}
												if (this.type == 17)
												{
													if (this.life > 0)
													{
														for (int j13 = 0; (double)j13 < dmg / (double)this.lifeMax * 100; j13++)
														{
															Vector2 vector2324 = this.position;
															int num723 = this.width;
															int num724 = this.height;
															float single235 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2324, num723, num724, 5, single235, -1f, 0, color, 1f);
														}
														return;
													}
													for (int k13 = 0; k13 < 50; k13++)
													{
														Vector2 vector2325 = this.position;
														int num725 = this.width;
														int num726 = this.height;
														float single236 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2325, num725, num726, 5, single236, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 30, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
													return;
												}
												if (this.type == 441)
												{
													if (this.life > 0)
													{
														for (int l13 = 0; (double)l13 < dmg / (double)this.lifeMax * 100; l13++)
														{
															Vector2 vector2326 = this.position;
															int num727 = this.width;
															int num728 = this.height;
															float single237 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2326, num727, num728, 5, single237, -1f, 0, color, 1f);
														}
														return;
													}
													for (int m13 = 0; m13 < 50; m13++)
													{
														Vector2 vector2327 = this.position;
														int num729 = this.width;
														int num730 = this.height;
														float single238 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2327, num729, num730, 5, single238, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 768, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 769, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 770, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
													return;
												}
												if (this.type == 86)
												{
													if (this.life > 0)
													{
														for (int n13 = 0; (double)n13 < dmg / (double)this.lifeMax * 100; n13++)
														{
															Vector2 vector2328 = this.position;
															int num731 = this.width;
															int num732 = this.height;
															float single239 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2328, num731, num732, 5, single239, -1f, 0, color, 1f);
														}
														return;
													}
													for (int o13 = 0; o13 < 50; o13++)
													{
														Vector2 vector2329 = this.position;
														int num733 = this.width;
														int num734 = this.height;
														float single240 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2329, num733, num734, 5, single240, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 101, 1f);
													Gore.NewGore(this.position, this.velocity, 102, 1f);
													Gore.NewGore(this.position, this.velocity, 103, 1f);
													Gore.NewGore(this.position, this.velocity, 103, 1f);
													Gore.NewGore(this.position, this.velocity, 104, 1f);
													Gore.NewGore(this.position, this.velocity, 104, 1f);
													Gore.NewGore(this.position, this.velocity, 105, 1f);
													return;
												}
												if (this.type == 155)
												{
													if (this.life > 0)
													{
														for (int p13 = 0; (double)p13 < dmg / (double)this.lifeMax * 100; p13++)
														{
															Vector2 vector2330 = this.position;
															int num735 = this.width;
															int num736 = this.height;
															float single241 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2330, num735, num736, 5, single241, -1f, 0, color, 1f);
														}
														return;
													}
													for (int q13 = 0; q13 < 50; q13++)
													{
														Vector2 vector2331 = this.position;
														int num737 = this.width;
														int num738 = this.height;
														float single242 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2331, num737, num738, 5, single242, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 181, 1f);
													Gore.NewGore(this.position, this.velocity, 182, 1f);
													Gore.NewGore(this.position, this.velocity, 183, 1f);
													Gore.NewGore(this.position, this.velocity, 183, 1f);
													return;
												}
												if (this.type == 329)
												{
													if (this.life > 0)
													{
														for (int r13 = 0; (double)r13 < dmg / (double)this.lifeMax * 100; r13++)
														{
															Vector2 vector2332 = this.position;
															int num739 = this.width;
															int num740 = this.height;
															float single243 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2332, num739, num740, 5, single243, -1f, 0, color, 1f);
														}
														return;
													}
													for (int s13 = 0; s13 < 50; s13++)
													{
														Vector2 vector2333 = this.position;
														int num741 = this.width;
														int num742 = this.height;
														float single244 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2333, num741, num742, 5, single244, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 485, 1f);
													Gore.NewGore(this.position, this.velocity, 486, 1f);
													Gore.NewGore(this.position, this.velocity, 487, 1f);
													return;
												}
												if (this.type == 163 || this.type == 238)
												{
													if (this.life > 0)
													{
														for (int t13 = 0; (double)t13 < dmg / (double)this.lifeMax * 100; t13++)
														{
															Vector2 vector2334 = this.position;
															int num743 = this.width;
															int num744 = this.height;
															float single245 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2334, num743, num744, 18, single245, -1f, 0, color, 1f);
														}
														return;
													}
													for (int u13 = 0; u13 < 50; u13++)
													{
														Vector2 vector2335 = this.position;
														int num745 = this.width;
														int num746 = this.height;
														float single246 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2335, num745, num746, 18, single246, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 205, 1f);
													Gore.NewGore(this.position, this.velocity, 206, 1f);
													Gore.NewGore(this.position, this.velocity, 206, 1f);
													Gore.NewGore(this.position, this.velocity, 206, 1f);
													Gore.NewGore(this.position, this.velocity, 206, 1f);
													return;
												}
												if (this.type == 164 || this.type == 165)
												{
													if (this.life > 0)
													{
														for (int v13 = 0; (double)v13 < dmg / (double)this.lifeMax * 100; v13++)
														{
															Vector2 vector2336 = this.position;
															int num747 = this.width;
															int num748 = this.height;
															float single247 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2336, num747, num748, 18, single247, -1f, 0, color, 1f);
														}
														return;
													}
													for (int w13 = 0; w13 < 50; w13++)
													{
														Vector2 vector2337 = this.position;
														int num749 = this.width;
														int num750 = this.height;
														float single248 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2337, num749, num750, 18, single248, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 207, 1f);
													Gore.NewGore(this.position, this.velocity, 208, 1f);
													Gore.NewGore(this.position, this.velocity, 208, 1f);
													Gore.NewGore(this.position, this.velocity, 208, 1f);
													Gore.NewGore(this.position, this.velocity, 208, 1f);
													return;
												}
												if (this.type == 239 || this.type == 240)
												{
													if (this.life > 0)
													{
														for (int x13 = 0; (double)x13 < dmg / (double)this.lifeMax * 100; x13++)
														{
															Vector2 vector2338 = this.position;
															int num751 = this.width;
															int num752 = this.height;
															float single249 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2338, num751, num752, 5, single249, -1f, 0, color, 1f);
														}
														return;
													}
													for (int y13 = 0; y13 < 50; y13++)
													{
														Vector2 vector2339 = this.position;
														int num753 = this.width;
														int num754 = this.height;
														float single250 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2339, num753, num754, 5, single250, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 351, 1f);
													Gore.NewGore(this.position, this.velocity, 352, 1f);
													Gore.NewGore(this.position, this.velocity, 352, 1f);
													Gore.NewGore(this.position, this.velocity, 353, 1f);
													Gore.NewGore(this.position, this.velocity, 353, 1f);
													return;
												}
												if (this.type == 236 || this.type == 237)
												{
													if (this.life > 0)
													{
														for (int a13 = 0; (double)a13 < dmg / (double)this.lifeMax * 100; a13++)
														{
															Vector2 vector2340 = this.position;
															int num755 = this.width;
															int num756 = this.height;
															float single251 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2340, num755, num756, 18, single251, -1f, 0, color, 1f);
														}
														return;
													}
													for (int b13 = 0; b13 < 50; b13++)
													{
														Vector2 vector2341 = this.position;
														int num757 = this.width;
														int num758 = this.height;
														float single252 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2341, num757, num758, 18, single252, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 332, 1f);
													Gore.NewGore(this.position, this.velocity, 333, 1f);
													Gore.NewGore(this.position, this.velocity, 334, 1f);
													Gore.NewGore(this.position, this.velocity, 335, 1f);
													Gore.NewGore(this.position, this.velocity, 335, 1f);
													return;
												}
												if (this.type == 241)
												{
													if (this.life > 0)
													{
														for (int c13 = 0; (double)c13 < dmg / (double)this.lifeMax * 100; c13++)
														{
															Vector2 vector2342 = this.position;
															int num759 = this.width;
															int num760 = this.height;
															float single253 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2342, num759, num760, 5, single253, -1f, 0, color, 1f);
														}
														return;
													}
													for (int d13 = 0; d13 < 50; d13++)
													{
														Vector2 vector2343 = this.position;
														int num761 = this.width;
														int num762 = this.height;
														float single254 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2343, num761, num762, 5, single254, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 354, 1f);
													Gore.NewGore(this.position, this.velocity, 355, 1f);
													return;
												}
												if (this.type == 242)
												{
													if (this.life > 0)
													{
														for (int e13 = 0; (double)e13 < dmg / (double)this.lifeMax * 100; e13++)
														{
															Vector2 vector2344 = this.position;
															int num763 = this.width;
															int num764 = this.height;
															float single255 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2344, num763, num764, 5, single255, -1f, 0, color, 1f);
														}
														return;
													}
													for (int f13 = 0; f13 < 50; f13++)
													{
														Vector2 vector2345 = this.position;
														int num765 = this.width;
														int num766 = this.height;
														float single256 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2345, num765, num766, 5, single256, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 356, 1f);
													Gore.NewGore(this.position, this.velocity, 357, 1f);
													Gore.NewGore(this.position, this.velocity, 357, 1f);
													Gore.NewGore(this.position, this.velocity, 358, 1f);
													Gore.NewGore(this.position, this.velocity, 358, 1f);
													return;
												}
												if (this.type >= 105 && this.type <= 108)
												{
													if (this.life > 0)
													{
														for (int g13 = 0; (double)g13 < dmg / (double)this.lifeMax * 100; g13++)
														{
															Vector2 vector2346 = this.position;
															int num767 = this.width;
															int num768 = this.height;
															float single257 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2346, num767, num768, 5, single257, -1f, 0, color, 1f);
														}
														return;
													}
													for (int h13 = 0; h13 < 50; h13++)
													{
														Vector2 vector2347 = this.position;
														int num769 = this.width;
														int num770 = this.height;
														float single258 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2347, num769, num770, 5, single258, -2.5f, 0, color, 1f);
													}
													if (this.type != 105 && this.type != 107)
													{
														Gore.NewGore(this.position, this.velocity, 127, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
														return;
													}
													Gore.NewGore(this.position, this.velocity, 124, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
													return;
												}
												if (this.type == 123 || this.type == 124)
												{
													if (this.life > 0)
													{
														for (int i14 = 0; (double)i14 < dmg / (double)this.lifeMax * 100; i14++)
														{
															Vector2 vector2348 = this.position;
															int num771 = this.width;
															int num772 = this.height;
															float single259 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2348, num771, num772, 5, single259, -1f, 0, color, 1f);
														}
														return;
													}
													for (int j14 = 0; j14 < 50; j14++)
													{
														Vector2 vector2349 = this.position;
														int num773 = this.width;
														int num774 = this.height;
														float single260 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2349, num773, num774, 5, single260, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 151, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
													return;
												}
												if (this.type == 22)
												{
													if (this.life > 0)
													{
														for (int k14 = 0; (double)k14 < dmg / (double)this.lifeMax * 100; k14++)
														{
															Vector2 vector2350 = this.position;
															int num775 = this.width;
															int num776 = this.height;
															float single261 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2350, num775, num776, 5, single261, -1f, 0, color, 1f);
														}
														return;
													}
													for (int l14 = 0; l14 < 50; l14++)
													{
														Vector2 vector2351 = this.position;
														int num777 = this.width;
														int num778 = this.height;
														float single262 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2351, num777, num778, 5, single262, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 73, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
													return;
												}
												if (this.type == 368)
												{
													if (this.life > 0)
													{
														for (int m14 = 0; (double)m14 < dmg / (double)this.lifeMax * 100; m14++)
														{
															Vector2 vector2352 = this.position;
															int num779 = this.width;
															int num780 = this.height;
															float single263 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2352, num779, num780, 5, single263, -1f, 0, color, 1f);
														}
														return;
													}
													for (int n14 = 0; n14 < 50; n14++)
													{
														Vector2 vector2353 = this.position;
														int num781 = this.width;
														int num782 = this.height;
														float single264 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2353, num781, num782, 5, single264, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 567, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
													return;
												}
												if (this.type == 369 || this.type == 376)
												{
													if (this.life > 0)
													{
														return;
													}
													for (int o14 = 0; o14 < 25; o14++)
													{
														Vector2 vector2354 = new Vector2(this.position.X, this.position.Y);
														int num783 = this.width;
														int num784 = this.height;
														color = new Color();
														int num785 = Dust.NewDust(vector2354, num783, num784, 31, 0f, 0f, 100, color, 2f);
														Dust dust110 = Main.dust[num785];
														dust110.velocity = dust110.velocity * 1.4f;
														Main.dust[num785].noLight = true;
														Main.dust[num785].noGravity = true;
													}
													int num786 = 0;
													Vector2 vector2355 = new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f);
													vector2 = new Vector2();
													num786 = Gore.NewGore(vector2355, vector2, Main.rand.Next(61, 64), 1f);
													Main.gore[num786].scale = 1f;
													Main.gore[num786].velocity.X = Main.gore[num786].velocity.X + 1f;
													Main.gore[num786].velocity.Y = Main.gore[num786].velocity.Y + 1f;
													Vector2 vector2356 = new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f);
													vector2 = new Vector2();
													num786 = Gore.NewGore(vector2356, vector2, Main.rand.Next(61, 64), 1f);
													Main.gore[num786].scale = 1f;
													Main.gore[num786].velocity.X = Main.gore[num786].velocity.X - 1f;
													Main.gore[num786].velocity.Y = Main.gore[num786].velocity.Y + 1f;
													Vector2 vector2357 = new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f);
													vector2 = new Vector2();
													num786 = Gore.NewGore(vector2357, vector2, Main.rand.Next(61, 64), 1f);
													Main.gore[num786].scale = 1f;
													Main.gore[num786].velocity.X = Main.gore[num786].velocity.X + 1f;
													Main.gore[num786].velocity.Y = Main.gore[num786].velocity.Y - 1f;
													Vector2 vector2358 = new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f);
													vector2 = new Vector2();
													num786 = Gore.NewGore(vector2358, vector2, Main.rand.Next(61, 64), 1f);
													Main.gore[num786].scale = 1f;
													Main.gore[num786].velocity.X = Main.gore[num786].velocity.X - 1f;
													Main.gore[num786].velocity.Y = Main.gore[num786].velocity.Y - 1f;
													return;
												}
												if (this.type == 227)
												{
													if (this.life > 0)
													{
														for (int p14 = 0; (double)p14 < dmg / (double)this.lifeMax * 100; p14++)
														{
															Vector2 vector2359 = this.position;
															int num787 = this.width;
															int num788 = this.height;
															float single265 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2359, num787, num788, 5, single265, -1f, 0, color, 1f);
														}
														return;
													}
													for (int q14 = 0; q14 < 50; q14++)
													{
														Vector2 vector2360 = this.position;
														int num789 = this.width;
														int num790 = this.height;
														float single266 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2360, num789, num790, 5, single266, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 320, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 321, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 322, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
													return;
												}
												if (this.type == 228)
												{
													if (this.life > 0)
													{
														for (int r14 = 0; (double)r14 < dmg / (double)this.lifeMax * 100; r14++)
														{
															Vector2 vector2361 = this.position;
															int num791 = this.width;
															int num792 = this.height;
															float single267 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2361, num791, num792, 5, single267, -1f, 0, color, 1f);
														}
														return;
													}
													for (int s14 = 0; s14 < 50; s14++)
													{
														Vector2 vector2362 = this.position;
														int num793 = this.width;
														int num794 = this.height;
														float single268 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2362, num793, num794, 5, single268, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 324, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 325, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 326, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
													return;
												}
												if (this.type == 229)
												{
													if (this.life > 0)
													{
														for (int t14 = 0; (double)t14 < dmg / (double)this.lifeMax * 100; t14++)
														{
															Vector2 vector2363 = this.position;
															int num795 = this.width;
															int num796 = this.height;
															float single269 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2363, num795, num796, 5, single269, -1f, 0, color, 1f);
														}
														return;
													}
													for (int u14 = 0; u14 < 50; u14++)
													{
														Vector2 vector2364 = this.position;
														int num797 = this.width;
														int num798 = this.height;
														float single270 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2364, num797, num798, 5, single270, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 328, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
													return;
												}
												if (this.type == 142)
												{
													if (this.life > 0)
													{
														for (int v14 = 0; (double)v14 < dmg / (double)this.lifeMax * 100; v14++)
														{
															Vector2 vector2365 = this.position;
															int num799 = this.width;
															int num800 = this.height;
															float single271 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2365, num799, num800, 5, single271, -1f, 0, color, 1f);
														}
														return;
													}
													for (int w14 = 0; w14 < 50; w14++)
													{
														Vector2 vector2366 = this.position;
														int num801 = this.width;
														int num802 = this.height;
														float single272 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2366, num801, num802, 5, single272, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 157, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
													return;
												}
												if (this.type == 178)
												{
													if (this.life > 0)
													{
														for (int x14 = 0; (double)x14 < dmg / (double)this.lifeMax * 100; x14++)
														{
															Vector2 vector2367 = this.position;
															int num803 = this.width;
															int num804 = this.height;
															float single273 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2367, num803, num804, 5, single273, -1f, 0, color, 1f);
														}
														return;
													}
													for (int y14 = 0; y14 < 50; y14++)
													{
														Vector2 vector2368 = this.position;
														int num805 = this.width;
														int num806 = this.height;
														float single274 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2368, num805, num806, 5, single274, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 231, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 233, 1f);
													return;
												}
												if (this.type == 353 || this.type == 354)
												{
													if (this.life > 0)
													{
														for (int a14 = 0; (double)a14 < dmg / (double)this.lifeMax * 100; a14++)
														{
															Vector2 vector2369 = this.position;
															int num807 = this.width;
															int num808 = this.height;
															float single275 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2369, num807, num808, 5, single275, -1f, 0, color, 1f);
														}
														return;
													}
													for (int b14 = 0; b14 < 50; b14++)
													{
														Vector2 vector2370 = this.position;
														int num809 = this.width;
														int num810 = this.height;
														float single276 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2370, num809, num810, 5, single276, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 543, 1f);
													Gore.NewGore(this.position, this.velocity, 545, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
													return;
												}
												if (this.type == 37 || this.type == 54)
												{
													if (this.life > 0)
													{
														for (int c14 = 0; (double)c14 < dmg / (double)this.lifeMax * 100; c14++)
														{
															Vector2 vector2371 = this.position;
															int num811 = this.width;
															int num812 = this.height;
															float single277 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2371, num811, num812, 5, single277, -1f, 0, color, 1f);
														}
														return;
													}
													for (int d14 = 0; d14 < 50; d14++)
													{
														Vector2 vector2372 = this.position;
														int num813 = this.width;
														int num814 = this.height;
														float single278 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2372, num813, num814, 5, single278, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 58, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
													return;
												}
												if (this.type == 441)
												{
													if (this.life > 0)
													{
														for (int e14 = 0; (double)e14 < dmg / (double)this.lifeMax * 100; e14++)
														{
															Vector2 vector2373 = this.position;
															int num815 = this.width;
															int num816 = this.height;
															float single279 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2373, num815, num816, 5, single279, -1f, 0, color, 1f);
														}
														return;
													}
													for (int f14 = 0; f14 < 50; f14++)
													{
														Vector2 vector2374 = this.position;
														int num817 = this.width;
														int num818 = this.height;
														float single280 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2374, num817, num818, 5, single280, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 768, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 769, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 770, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 771, 1f);
													return;
												}
												if (this.type == 160)
												{
													if (this.life > 0)
													{
														for (int g14 = 0; (double)g14 < dmg / (double)this.lifeMax * 100; g14++)
														{
															Vector2 vector2375 = this.position;
															int num819 = this.width;
															int num820 = this.height;
															float single281 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2375, num819, num820, 26, single281, -1f, 0, color, 1f);
														}
														return;
													}
													for (int h14 = 0; h14 < 50; h14++)
													{
														Vector2 vector2376 = this.position;
														int num821 = this.width;
														int num822 = this.height;
														float single282 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2376, num821, num822, 26, single282, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 188, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
													return;
												}
												if (this.type == 18)
												{
													if (this.life > 0)
													{
														for (int i15 = 0; (double)i15 < dmg / (double)this.lifeMax * 100; i15++)
														{
															Vector2 vector2377 = this.position;
															int num823 = this.width;
															int num824 = this.height;
															float single283 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2377, num823, num824, 5, single283, -1f, 0, color, 1f);
														}
														return;
													}
													for (int j15 = 0; j15 < 50; j15++)
													{
														Vector2 vector2378 = this.position;
														int num825 = this.width;
														int num826 = this.height;
														float single284 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2378, num825, num826, 5, single284, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 33, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
													return;
												}
												if (this.type == 19)
												{
													if (this.life > 0)
													{
														for (int k15 = 0; (double)k15 < dmg / (double)this.lifeMax * 100; k15++)
														{
															Vector2 vector2379 = this.position;
															int num827 = this.width;
															int num828 = this.height;
															float single285 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2379, num827, num828, 5, single285, -1f, 0, color, 1f);
														}
														return;
													}
													for (int l15 = 0; l15 < 50; l15++)
													{
														Vector2 vector2380 = this.position;
														int num829 = this.width;
														int num830 = this.height;
														float single286 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2380, num829, num830, 5, single286, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 36, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
													return;
												}
												if (this.type == 38)
												{
													if (this.life > 0)
													{
														for (int m15 = 0; (double)m15 < dmg / (double)this.lifeMax * 100; m15++)
														{
															Vector2 vector2381 = this.position;
															int num831 = this.width;
															int num832 = this.height;
															float single287 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2381, num831, num832, 5, single287, -1f, 0, color, 1f);
														}
														return;
													}
													for (int n15 = 0; n15 < 50; n15++)
													{
														Vector2 vector2382 = this.position;
														int num833 = this.width;
														int num834 = this.height;
														float single288 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2382, num833, num834, 5, single288, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 64, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
													return;
												}
												if (this.type == 20)
												{
													if (this.life > 0)
													{
														for (int o15 = 0; (double)o15 < dmg / (double)this.lifeMax * 100; o15++)
														{
															Vector2 vector2383 = this.position;
															int num835 = this.width;
															int num836 = this.height;
															float single289 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2383, num835, num836, 5, single289, -1f, 0, color, 1f);
														}
														return;
													}
													for (int p15 = 0; p15 < 50; p15++)
													{
														Vector2 vector2384 = this.position;
														int num837 = this.width;
														int num838 = this.height;
														float single290 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2384, num837, num838, 5, single290, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 39, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
													return;
												}
												if (this.type == 207)
												{
													if (this.life > 0)
													{
														for (int q15 = 0; (double)q15 < dmg / (double)this.lifeMax * 100; q15++)
														{
															Vector2 vector2385 = this.position;
															int num839 = this.width;
															int num840 = this.height;
															float single291 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2385, num839, num840, 5, single291, -1f, 0, color, 1f);
														}
														return;
													}
													for (int r15 = 0; r15 < 50; r15++)
													{
														Vector2 vector2386 = this.position;
														int num841 = this.width;
														int num842 = this.height;
														float single292 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2386, num841, num842, 5, single292, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 283, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
													return;
												}
												if (this.type == 208)
												{
													if (this.life > 0)
													{
														for (int s15 = 0; (double)s15 < dmg / (double)this.lifeMax * 100; s15++)
														{
															Vector2 vector2387 = this.position;
															int num843 = this.width;
															int num844 = this.height;
															float single293 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2387, num843, num844, 5, single293, -1f, 0, color, 1f);
														}
														return;
													}
													for (int t15 = 0; t15 < 50; t15++)
													{
														Vector2 vector2388 = this.position;
														int num845 = this.width;
														int num846 = this.height;
														float single294 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2388, num845, num846, 5, single294, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 286, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
													return;
												}
												if (this.type == 209)
												{
													if (this.life > 0)
													{
														for (int u15 = 0; (double)u15 < dmg / (double)this.lifeMax * 100; u15++)
														{
															Vector2 vector2389 = this.position;
															int num847 = this.width;
															int num848 = this.height;
															float single295 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2389, num847, num848, 5, single295, -1f, 0, color, 1f);
														}
														return;
													}
													for (int v15 = 0; v15 < 50; v15++)
													{
														Vector2 vector2390 = this.position;
														int num849 = this.width;
														int num850 = this.height;
														float single296 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2390, num849, num850, 5, single296, -2.5f, 0, color, 1f);
													}
													Gore.NewGore(this.position, this.velocity, 289, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
													Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
													return;
												}
												if (this.type < 212 || this.type > 216)
												{
													if (this.type == 220 || this.type == 221)
													{
														if (this.life > 0)
														{
															for (int w15 = 0; (double)w15 < dmg / (double)this.lifeMax * 50; w15++)
															{
																Vector2 vector2391 = this.position;
																int num851 = this.width;
																int num852 = this.height;
																float single297 = (float)hitDirection;
																color = new Color();
																Dust.NewDust(vector2391, num851, num852, 151, single297, -1f, 0, color, 0.7f);
															}
															return;
														}
														for (int x15 = 0; x15 < 20; x15++)
														{
															Vector2 vector2392 = this.position;
															int num853 = this.width;
															int num854 = this.height;
															float single298 = 2.5f * (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2392, num853, num854, 151, single298, -2.5f, 0, color, 0.7f);
														}
														if (this.type != 221)
														{
															Gore.NewGore(this.position, this.velocity, 297, this.scale);
															return;
														}
														Gore.NewGore(this.position, this.velocity, 298, this.scale);
														Gore.NewGore(this.position, this.velocity, 299, this.scale);
														return;
													}
													if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 32 || this.type == 44 || this.type == 45 || this.type == 77 || this.type == 110 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type == 291 || this.type == 292 || this.type == 293 || this.type >= 322 && this.type <= 324 || this.type == 481 || this.type >= 449 && this.type <= 452)
													{
														if (this.life > 0)
														{
															for (int y15 = 0; (double)y15 < dmg / (double)this.lifeMax * 50; y15++)
															{
																Vector2 vector2393 = this.position;
																int num855 = this.width;
																int num856 = this.height;
																float single299 = (float)hitDirection;
																color = new Color();
																Dust.NewDust(vector2393, num855, num856, 26, single299, -1f, 0, color, 1f);
															}
															return;
														}
														for (int a15 = 0; a15 < 20; a15++)
														{
															Vector2 vector2394 = this.position;
															int num857 = this.width;
															int num858 = this.height;
															float single300 = 2.5f * (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2394, num857, num858, 26, single300, -2.5f, 0, color, 1f);
														}
														if (this.type == 167)
														{
															Gore.NewGore(this.position, this.velocity, 213, this.scale);
															Gore.NewGore(this.position, this.velocity, 214, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
															return;
														}
														if (this.type == 197)
														{
															Gore.NewGore(this.position, this.velocity, 257, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
															return;
														}
														if (this.type == 481)
														{
															Gore.NewGore(this.position, this.velocity, 695, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 696, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 696, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 697, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 697, this.scale);
															return;
														}
														if (this.type == 201 || this.type == 450)
														{
															Gore.NewGore(this.position, this.velocity, 265, this.scale);
															Gore.NewGore(this.position, this.velocity, 267, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
															return;
														}
														if (this.type == 202 || this.type == 451)
														{
															Gore.NewGore(this.position, this.velocity, 268, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
															return;
														}
														if (this.type == 203 || this.type == 452)
														{
															Gore.NewGore(this.position, this.velocity, 269, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
															return;
														}
														if (this.type == 322)
														{
															Gore.NewGore(this.position, this.velocity, 460, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 461, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 462, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 461, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 462, this.scale);
															return;
														}
														if (this.type == 323)
														{
															Gore.NewGore(this.position, this.velocity, 463, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 465, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
															return;
														}
														if (this.type == 324)
														{
															Gore.NewGore(this.position, this.velocity, 466, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
															return;
														}
														Gore.NewGore(this.position, this.velocity, 42, this.scale);
														if (this.type == 77)
														{
															Gore.NewGore(this.position, this.velocity, 106, this.scale);
														}
														if (this.type == 110)
														{
															Gore.NewGore(this.position, this.velocity, 130, this.scale);
														}
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
														if (this.type == 110)
														{
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
														}
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
														return;
													}
													if (this.type == 453)
													{
														if (this.life > 0)
														{
															for (int b15 = 0; (double)b15 < dmg / (double)this.lifeMax * 50; b15++)
															{
																Vector2 vector2395 = this.position;
																int num859 = this.width;
																int num860 = this.height;
																float single301 = (float)hitDirection;
																color = new Color();
																Dust.NewDust(vector2395, num859, num860, 26, single301, -1f, 0, color, 1f);
															}
															return;
														}
														for (int c15 = 0; c15 < 20; c15++)
														{
															Vector2 vector2396 = this.position;
															int num861 = this.width;
															int num862 = this.height;
															float single302 = 2.5f * (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2396, num861, num862, 26, single302, -2.5f, 0, color, 1f);
														}
														Gore.NewGore(this.position, this.velocity, 638, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 639, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 640, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 641, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 642, this.scale);
														return;
													}
													if ((this.type < 269 || this.type > 276) && (this.type < 281 || this.type > 286))
													{
														if (this.type >= 277 && this.type <= 280)
														{
															if (this.life > 0)
															{
																for (int d15 = 0; (double)d15 < dmg / (double)this.lifeMax * 100; d15++)
																{
																	Vector2 vector2397 = this.position;
																	int num863 = this.width;
																	int num864 = this.height;
																	float single303 = (float)hitDirection;
																	color = new Color();
																	int num865 = Dust.NewDust(vector2397, num863, num864, 174, single303, -1f, 0, color, 1f);
																	Main.dust[num865].scale = 1.1f;
																	Main.dust[num865].noGravity = true;
																}
																return;
															}
															for (int e15 = 0; e15 < 75; e15++)
															{
																Vector2 vector2398 = this.position;
																int num866 = this.width;
																int num867 = this.height;
																float single304 = 1.5f * (float)hitDirection;
																color = new Color();
																int num868 = Dust.NewDust(vector2398, num866, num867, 174, single304, -0.5f, 0, color, 1f);
																Dust dust111 = Main.dust[num868];
																dust111.velocity = dust111.velocity * 2f;
																Main.dust[num868].scale = 1.4f;
																Main.dust[num868].noGravity = true;
															}
															return;
														}
														if (this.type == 341)
														{
															int num869 = 196;
															if (this.life > 0)
															{
																for (int f15 = 0; (double)f15 < dmg / (double)this.lifeMax * 50; f15++)
																{
																	Vector2 vector2399 = this.position;
																	int num870 = this.width;
																	int num871 = this.height;
																	color = new Color();
																	Dust.NewDust(vector2399, num870, num871, num869, 0f, 0f, 0, color, 1f);
																}
																return;
															}
															for (int g15 = 0; g15 < 20; g15++)
															{
																Vector2 vector2400 = this.position;
																int num872 = this.width;
																int num873 = this.height;
																color = new Color();
																Dust.NewDust(vector2400, num872, num873, num869, 0f, 0f, 0, color, 1f);
															}
															int num874 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
															Gore gore10 = Main.gore[num874];
															gore10.velocity = gore10.velocity * 0.3f;
															num874 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
															Gore gore11 = Main.gore[num874];
															gore11.velocity = gore11.velocity * 0.3f;
															num874 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
															Gore gore12 = Main.gore[num874];
															gore12.velocity = gore12.velocity * 0.3f;
															return;
														}
														if (this.type == 85)
														{
															int num875 = 7;
															if (this.ai[3] == 2f)
															{
																num875 = 10;
															}
															if (this.ai[3] == 3f)
															{
																num875 = 37;
															}
															if (this.life > 0)
															{
																for (int h15 = 0; (double)h15 < dmg / (double)this.lifeMax * 50; h15++)
																{
																	Vector2 vector2401 = this.position;
																	int num876 = this.width;
																	int num877 = this.height;
																	color = new Color();
																	Dust.NewDust(vector2401, num876, num877, num875, 0f, 0f, 0, color, 1f);
																}
																return;
															}
															for (int i16 = 0; i16 < 20; i16++)
															{
																Vector2 vector2402 = this.position;
																int num878 = this.width;
																int num879 = this.height;
																color = new Color();
																Dust.NewDust(vector2402, num878, num879, num875, 0f, 0f, 0, color, 1f);
															}
															int num880 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
															Gore gore13 = Main.gore[num880];
															gore13.velocity = gore13.velocity * 0.3f;
															num880 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
															Gore gore14 = Main.gore[num880];
															gore14.velocity = gore14.velocity * 0.3f;
															num880 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
															Gore gore15 = Main.gore[num880];
															gore15.velocity = gore15.velocity * 0.3f;
															return;
														}
														if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
														{
															int num881 = 31;
															if (this.life > 0)
															{
																for (int j16 = 0; (double)j16 < dmg / (double)this.lifeMax * 50; j16++)
																{
																	Vector2 vector2403 = this.position;
																	int num882 = this.width;
																	int num883 = this.height;
																	color = new Color();
																	Dust.NewDust(vector2403, num882, num883, num881, 0f, 0f, 0, color, 1f);
																}
																return;
															}
															for (int k16 = 0; k16 < 20; k16++)
															{
																Vector2 vector2404 = this.position;
																int num884 = this.width;
																int num885 = this.height;
																color = new Color();
																Dust.NewDust(vector2404, num884, num885, num881, 0f, 0f, 0, color, 1f);
															}
															int num886 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 61, this.scale);
															Gore gore16 = Main.gore[num886];
															gore16.velocity = gore16.velocity * 0.3f;
															num886 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 62, this.scale);
															Gore gore17 = Main.gore[num886];
															gore17.velocity = gore17.velocity * 0.3f;
															num886 = Gore.NewGore(base.Center, new Vector2((float)hitDirection, 0f), 63, this.scale);
															Gore gore18 = Main.gore[num886];
															gore18.velocity = gore18.velocity * 0.3f;
															return;
														}
														if (this.type == 169)
														{
															if (this.life <= 0)
															{
																for (int l16 = 0; l16 < 100; l16++)
																{
																	Vector2 vector2405 = this.position;
																	int num887 = this.width;
																	int num888 = this.height;
																	color = new Color();
																	int num889 = Dust.NewDust(vector2405, num887, num888, 92, 0f, 0f, 0, color, 1.5f);
																	Main.dust[num889].scale = 1.5f;
																	Dust dust112 = Main.dust[num889];
																	dust112.velocity = dust112.velocity * 2f;
																	Main.dust[num889].noGravity = true;
																}
																return;
															}
															for (int m16 = 0; (double)m16 < dmg / (double)this.lifeMax * 50; m16++)
															{
																Vector2 vector2406 = this.position;
																int num890 = this.width;
																int num891 = this.height;
																color = new Color();
																int num892 = Dust.NewDust(vector2406, num890, num891, 92, 0f, 0f, 0, color, 1.5f);
																Dust dust113 = Main.dust[num892];
																dust113.velocity = dust113.velocity * 1.5f;
																Main.dust[num892].noGravity = true;
															}
															return;
														}
														if (this.type == 170 || this.type == 180)
														{
															if (this.life > 0)
															{
																for (int n16 = 0; (double)n16 < dmg / (double)this.lifeMax * 50; n16++)
																{
																	Vector2 vector2407 = this.position;
																	int num893 = this.width;
																	int num894 = this.height;
																	color = new Color();
																	int num895 = Dust.NewDust(vector2407, num893, num894, 54, 0f, 0f, 0, color, 1.5f);
																	Dust dust114 = Main.dust[num895];
																	dust114.velocity = dust114.velocity * 1.5f;
																	Main.dust[num895].noGravity = true;
																}
																return;
															}
															for (int o16 = 0; o16 < 10; o16++)
															{
																Vector2 vector2408 = this.position;
																int num896 = this.width;
																int num897 = this.height;
																color = new Color();
																int num898 = Dust.NewDust(vector2408, num896, num897, 54, 0f, 0f, 0, color, 1.5f);
																Dust dust115 = Main.dust[num898];
																dust115.velocity = dust115.velocity * 2f;
																Main.dust[num898].noGravity = true;
															}
															for (int p16 = 0; p16 < 4; p16++)
															{
																int num899 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore19 = Main.gore[num899];
																gore19.velocity = gore19.velocity * 0.3f;
															}
															return;
														}
														if (this.type == 171)
														{
															if (this.life > 0)
															{
																for (int q16 = 0; (double)q16 < dmg / (double)this.lifeMax * 50; q16++)
																{
																	Vector2 vector2409 = this.position;
																	int num900 = this.width;
																	int num901 = this.height;
																	color = new Color();
																	int num902 = Dust.NewDust(vector2409, num900, num901, 16, 0f, 0f, 0, color, 1.5f);
																	Dust dust116 = Main.dust[num902];
																	dust116.velocity = dust116.velocity * 1.5f;
																	Main.dust[num902].noGravity = true;
																}
																return;
															}
															for (int r16 = 0; r16 < 10; r16++)
															{
																Vector2 vector2410 = this.position;
																int num903 = this.width;
																int num904 = this.height;
																color = new Color();
																int num905 = Dust.NewDust(vector2410, num903, num904, 16, 0f, 0f, 0, color, 1.5f);
																Dust dust117 = Main.dust[num905];
																dust117.velocity = dust117.velocity * 2f;
																Main.dust[num905].noGravity = true;
															}
															for (int s16 = 0; s16 < 4; s16++)
															{
																int num906 = 11 + s16;
																if (num906 > 13)
																{
																	num906 = Main.rand.Next(11, 14);
																}
																int num907 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), num906, this.scale);
																Gore gore20 = Main.gore[num907];
																gore20.velocity = gore20.velocity * 0.3f;
															}
															return;
														}
														if (this.type != 290)
														{
															if (this.type >= 87 && this.type <= 92)
															{
																if (this.life > 0)
																{
																	for (int t16 = 0; (double)t16 < dmg / (double)this.lifeMax * 50; t16++)
																	{
																		Vector2 vector2411 = this.position;
																		int num908 = this.width;
																		int num909 = this.height;
																		color = new Color();
																		int num910 = Dust.NewDust(vector2411, num908, num909, 16, 0f, 0f, 0, color, 1.5f);
																		Dust dust118 = Main.dust[num910];
																		dust118.velocity = dust118.velocity * 1.5f;
																		Main.dust[num910].noGravity = true;
																	}
																	return;
																}
																for (int u16 = 0; u16 < 10; u16++)
																{
																	Vector2 vector2412 = this.position;
																	int num911 = this.width;
																	int num912 = this.height;
																	color = new Color();
																	int num913 = Dust.NewDust(vector2412, num911, num912, 16, 0f, 0f, 0, color, 1.5f);
																	Dust dust119 = Main.dust[num913];
																	dust119.velocity = dust119.velocity * 2f;
																	Main.dust[num913].noGravity = true;
																}
																int num914 = Main.rand.Next(1, 4);
																for (int v16 = 0; v16 < num914; v16++)
																{
																	int num915 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
																	Gore gore21 = Main.gore[num915];
																	gore21.velocity = gore21.velocity * 0.8f;
																}
																return;
															}
															if (this.type == 78 || this.type == 79 || this.type == 80)
															{
																if (this.life > 0)
																{
																	for (int w16 = 0; (double)w16 < dmg / (double)this.lifeMax * 50; w16++)
																	{
																		Vector2 vector2413 = this.position;
																		int num916 = this.width;
																		int num917 = this.height;
																		color = new Color();
																		int num918 = Dust.NewDust(vector2413, num916, num917, 31, 0f, 0f, 0, color, 1.5f);
																		Dust dust120 = Main.dust[num918];
																		dust120.velocity = dust120.velocity * 2f;
																		Main.dust[num918].noGravity = true;
																	}
																	return;
																}
																for (int x16 = 0; x16 < 20; x16++)
																{
																	Vector2 vector2414 = this.position;
																	int num919 = this.width;
																	int num920 = this.height;
																	color = new Color();
																	int num921 = Dust.NewDust(vector2414, num919, num920, 31, 0f, 0f, 0, color, 1.5f);
																	Dust dust121 = Main.dust[num921];
																	dust121.velocity = dust121.velocity * 2f;
																	Main.dust[num921].noGravity = true;
																}
																int num922 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
																Gore gore22 = Main.gore[num922];
																gore22.velocity = gore22.velocity * 0.3f;
																num922 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
																Gore gore23 = Main.gore[num922];
																gore23.velocity = gore23.velocity * 0.3f;
																num922 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
																Gore gore24 = Main.gore[num922];
																gore24.velocity = gore24.velocity * 0.3f;
																return;
															}
															if (this.type == 82 || this.type == 158 || this.type == 159 || this.type == 250 || this.type == 253)
															{
																if (this.life > 0)
																{
																	for (int y16 = 0; (double)y16 < dmg / (double)this.lifeMax * 50; y16++)
																	{
																		Vector2 vector2415 = this.position;
																		int num923 = this.width;
																		int num924 = this.height;
																		color = new Color();
																		int num925 = Dust.NewDust(vector2415, num923, num924, 54, 0f, 0f, 50, color, 1.5f);
																		Dust dust122 = Main.dust[num925];
																		dust122.velocity = dust122.velocity * 2f;
																		Main.dust[num925].noGravity = true;
																	}
																	return;
																}
																for (int a16 = 0; a16 < 20; a16++)
																{
																	Vector2 vector2416 = this.position;
																	int num926 = this.width;
																	int num927 = this.height;
																	color = new Color();
																	int num928 = Dust.NewDust(vector2416, num926, num927, 54, 0f, 0f, 50, color, 1.5f);
																	Dust dust123 = Main.dust[num928];
																	dust123.velocity = dust123.velocity * 2f;
																	Main.dust[num928].noGravity = true;
																}
																int num929 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore25 = Main.gore[num929];
																gore25.velocity = gore25.velocity * 0.3f;
																num929 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore26 = Main.gore[num929];
																gore26.velocity = gore26.velocity * 0.3f;
																num929 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore27 = Main.gore[num929];
																gore27.velocity = gore27.velocity * 0.3f;
																return;
															}
															if (this.type == 316 || this.type == 330)
															{
																if (this.life <= 0)
																{
																	for (int b16 = 0; b16 < 50; b16++)
																	{
																		int num930 = Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
																		Main.dust[num930].noGravity = true;
																	}
																	return;
																}
																for (int c16 = 0; (double)c16 < dmg / (double)this.lifeMax * 100; c16++)
																{
																	int num931 = Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
																	Main.dust[num931].noGravity = true;
																}
																return;
															}
															if (this.type == 315)
															{
																if (this.life > 0)
																{
																	for (int d16 = 0; (double)d16 < dmg / (double)this.lifeMax * 50; d16++)
																	{
																		Vector2 vector2417 = this.position;
																		int num932 = this.width;
																		int num933 = this.height;
																		color = new Color();
																		int num934 = Dust.NewDust(vector2417, num932, num933, 54, 0f, 0f, 50, color, 1.5f);
																		Dust dust124 = Main.dust[num934];
																		dust124.velocity = dust124.velocity * 2f;
																		Main.dust[num934].noGravity = true;
																	}
																	return;
																}
																for (int e16 = 0; e16 < 20; e16++)
																{
																	Vector2 vector2418 = this.position;
																	int num935 = this.width;
																	int num936 = this.height;
																	color = new Color();
																	int num937 = Dust.NewDust(vector2418, num935, num936, 54, 0f, 0f, 50, color, 1.5f);
																	Dust dust125 = Main.dust[num937];
																	dust125.velocity = dust125.velocity * 2f;
																	Main.dust[num937].noGravity = true;
																}
																int num938 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore28 = Main.gore[num938];
																gore28.velocity = gore28.velocity * 0.3f;
																num938 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore29 = Main.gore[num938];
																gore29.velocity = gore29.velocity * 0.3f;
																num938 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore30 = Main.gore[num938];
																gore30.velocity = gore30.velocity * 0.3f;
																num938 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)hitDirection, 0f), 446, this.scale);
																Gore gore31 = Main.gore[num938];
																gore31.velocity = gore31.velocity * 0.1f;
																return;
															}
															if (this.type == 254 || this.type == 255 || this.type == 256 || this.type == 257 || this.type == 258 || this.type == 259 || this.type == 260 || this.type == 261)
															{
																if (this.life > 0)
																{
																	for (int f16 = 0; (double)f16 < dmg / (double)this.lifeMax * 50; f16++)
																	{
																		Vector2 vector2419 = this.position;
																		int num939 = this.width;
																		int num940 = this.height;
																		color = new Color();
																		int num941 = Dust.NewDust(vector2419, num939, num940, 165, 0f, 0f, 50, color, 1.5f);
																		Dust dust126 = Main.dust[num941];
																		dust126.velocity = dust126.velocity * 2f;
																		Main.dust[num941].noGravity = true;
																	}
																	return;
																}
																for (int g16 = 0; g16 < 20; g16++)
																{
																	Vector2 vector2420 = this.position;
																	int num942 = this.width;
																	int num943 = this.height;
																	color = new Color();
																	int num944 = Dust.NewDust(vector2420, num942, num943, 165, 0f, 0f, 50, color, 1.5f);
																	Dust dust127 = Main.dust[num944];
																	dust127.velocity = dust127.velocity * 2f;
																	Main.dust[num944].noGravity = true;
																}
																if (this.type != 261)
																{
																	int num945 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 375, this.scale);
																	Gore gore32 = Main.gore[num945];
																	gore32.velocity = gore32.velocity * 0.3f;
																	num945 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 376, this.scale);
																	Gore gore33 = Main.gore[num945];
																	gore33.velocity = gore33.velocity * 0.3f;
																	num945 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 377, this.scale);
																	Gore gore34 = Main.gore[num945];
																	gore34.velocity = gore34.velocity * 0.3f;
																	return;
																}
															}
															else if (this.type != 140)
															{
																if (this.type == 39 || this.type == 40 || this.type == 41)
																{
																	if (this.life > 0)
																	{
																		for (int h16 = 0; (double)h16 < dmg / (double)this.lifeMax * 50; h16++)
																		{
																			Vector2 vector2421 = this.position;
																			int num946 = this.width;
																			int num947 = this.height;
																			float single305 = (float)hitDirection;
																			color = new Color();
																			Dust.NewDust(vector2421, num946, num947, 26, single305, -1f, 0, color, 1f);
																		}
																		return;
																	}
																	for (int i17 = 0; i17 < 20; i17++)
																	{
																		Vector2 vector2422 = this.position;
																		int num948 = this.width;
																		int num949 = this.height;
																		float single306 = 2.5f * (float)hitDirection;
																		color = new Color();
																		Dust.NewDust(vector2422, num948, num949, 26, single306, -2.5f, 0, color, 1f);
																	}
																	Gore.NewGore(this.position, this.velocity, this.type - 39 + 67, 1f);
																	return;
																}
																if (this.type == 34)
																{
																	if (this.life <= 0)
																	{
																		for (int j17 = 0; j17 < 15; j17++)
																		{
																			Vector2 vector2423 = new Vector2(this.position.X, this.position.Y);
																			int num950 = this.width;
																			int num951 = this.height;
																			color = new Color();
																			int num952 = Dust.NewDust(vector2423, num950, num951, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1.8f);
																			Main.dust[num952].noLight = true;
																			Main.dust[num952].noGravity = true;
																			Dust dust128 = Main.dust[num952];
																			dust128.velocity = dust128.velocity * 1.3f;
																			Vector2 vector2424 = new Vector2(this.position.X, this.position.Y);
																			int num953 = this.width;
																			int num954 = this.height;
																			color = new Color();
																			num952 = Dust.NewDust(vector2424, num953, num954, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, color, 0.9f);
																			Main.dust[num952].noLight = true;
																			Dust dust129 = Main.dust[num952];
																			dust129.velocity = dust129.velocity * 1.3f;
																		}
																		return;
																	}
																	for (int k17 = 0; (double)k17 < dmg / (double)this.lifeMax * 30; k17++)
																	{
																		Vector2 vector2425 = new Vector2(this.position.X, this.position.Y);
																		int num955 = this.width;
																		int num956 = this.height;
																		color = new Color();
																		int num957 = Dust.NewDust(vector2425, num955, num956, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1.8f);
																		Main.dust[num957].noLight = true;
																		Main.dust[num957].noGravity = true;
																		Dust dust130 = Main.dust[num957];
																		dust130.velocity = dust130.velocity * 1.3f;
																		Vector2 vector2426 = new Vector2(this.position.X, this.position.Y);
																		int num958 = this.width;
																		int num959 = this.height;
																		color = new Color();
																		num957 = Dust.NewDust(vector2426, num958, num959, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, color, 0.9f);
																		Main.dust[num957].noLight = true;
																		Dust dust131 = Main.dust[num957];
																		dust131.velocity = dust131.velocity * 1.3f;
																	}
																	return;
																}
																if (this.type == 289)
																{
																	if (this.life <= 0)
																	{
																		for (int l17 = 0; l17 < 50; l17++)
																		{
																			Vector2 vector2427 = new Vector2(this.position.X, this.position.Y);
																			int num960 = this.width;
																			int num961 = this.height;
																			color = new Color();
																			int num962 = Dust.NewDust(vector2427, num960, num961, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1.8f);
																			Main.dust[num962].noLight = true;
																			Main.dust[num962].noGravity = true;
																			Dust dust132 = Main.dust[num962];
																			dust132.velocity = dust132.velocity * 1.3f;
																		}
																		return;
																	}
																	for (int m17 = 0; (double)m17 < dmg / (double)this.lifeMax * 30; m17++)
																	{
																		Vector2 vector2428 = new Vector2(this.position.X, this.position.Y);
																		int num963 = this.width;
																		int num964 = this.height;
																		color = new Color();
																		int num965 = Dust.NewDust(vector2428, num963, num964, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1.8f);
																		Main.dust[num965].noLight = true;
																		Main.dust[num965].noGravity = true;
																		Dust dust133 = Main.dust[num965];
																		dust133.velocity = dust133.velocity * 1.3f;
																	}
																	return;
																}
																if (this.type == 35 || this.type == 36)
																{
																	if (this.life > 0)
																	{
																		for (int n17 = 0; (double)n17 < dmg / (double)this.lifeMax * 100; n17++)
																		{
																			Vector2 vector2429 = this.position;
																			int num966 = this.width;
																			int num967 = this.height;
																			float single307 = (float)hitDirection;
																			color = new Color();
																			Dust.NewDust(vector2429, num966, num967, 26, single307, -1f, 0, color, 1f);
																		}
																		return;
																	}
																	for (int o17 = 0; o17 < 150; o17++)
																	{
																		Vector2 vector2430 = this.position;
																		int num968 = this.width;
																		int num969 = this.height;
																		float single308 = 2.5f * (float)hitDirection;
																		color = new Color();
																		Dust.NewDust(vector2430, num968, num969, 26, single308, -2.5f, 0, color, 1f);
																	}
																	if (this.type == 35)
																	{
																		Gore.NewGore(this.position, this.velocity, 54, 1f);
																		Gore.NewGore(this.position, this.velocity, 55, 1f);
																		return;
																	}
																	Gore.NewGore(this.position, this.velocity, 56, 1f);
																	Gore.NewGore(this.position, this.velocity, 57, 1f);
																	Gore.NewGore(this.position, this.velocity, 57, 1f);
																	Gore.NewGore(this.position, this.velocity, 57, 1f);
																	return;
																}
																if (this.type == 139)
																{
																	if (this.life <= 0)
																	{
																		for (int p17 = 0; p17 < 10; p17++)
																		{
																			Vector2 vector2431 = new Vector2(this.position.X, this.position.Y);
																			int num970 = this.width;
																			int num971 = this.height;
																			color = new Color();
																			int num972 = Dust.NewDust(vector2431, num970, num971, 31, 0f, 0f, 100, color, 1.5f);
																			Dust dust134 = Main.dust[num972];
																			dust134.velocity = dust134.velocity * 1.4f;
																		}
																		for (int q17 = 0; q17 < 5; q17++)
																		{
																			Vector2 vector2432 = new Vector2(this.position.X, this.position.Y);
																			int num973 = this.width;
																			int num974 = this.height;
																			color = new Color();
																			int num975 = Dust.NewDust(vector2432, num973, num974, 6, 0f, 0f, 100, color, 2.5f);
																			Main.dust[num975].noGravity = true;
																			Dust dust135 = Main.dust[num975];
																			dust135.velocity = dust135.velocity * 5f;
																			Vector2 vector2433 = new Vector2(this.position.X, this.position.Y);
																			int num976 = this.width;
																			int num977 = this.height;
																			color = new Color();
																			num975 = Dust.NewDust(vector2433, num976, num977, 6, 0f, 0f, 100, color, 1.5f);
																			Dust dust136 = Main.dust[num975];
																			dust136.velocity = dust136.velocity * 3f;
																		}
																		Vector2 vector2434 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		int num978 = Gore.NewGore(vector2434, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore35 = Main.gore[num978];
																		gore35.velocity = gore35.velocity * 0.4f;
																		Main.gore[num978].velocity.X = Main.gore[num978].velocity.X + 1f;
																		Main.gore[num978].velocity.Y = Main.gore[num978].velocity.Y + 1f;
																		Vector2 vector2435 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num978 = Gore.NewGore(vector2435, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore36 = Main.gore[num978];
																		gore36.velocity = gore36.velocity * 0.4f;
																		Main.gore[num978].velocity.X = Main.gore[num978].velocity.X - 1f;
																		Main.gore[num978].velocity.Y = Main.gore[num978].velocity.Y + 1f;
																		Vector2 vector2436 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num978 = Gore.NewGore(vector2436, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore37 = Main.gore[num978];
																		gore37.velocity = gore37.velocity * 0.4f;
																		Main.gore[num978].velocity.X = Main.gore[num978].velocity.X + 1f;
																		Main.gore[num978].velocity.Y = Main.gore[num978].velocity.Y - 1f;
																		Vector2 vector2437 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num978 = Gore.NewGore(vector2437, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore38 = Main.gore[num978];
																		gore38.velocity = gore38.velocity * 0.4f;
																		Main.gore[num978].velocity.X = Main.gore[num978].velocity.X - 1f;
																		Main.gore[num978].velocity.Y = Main.gore[num978].velocity.Y - 1f;
																		return;
																	}
																}
																else if (this.type == 467)
																{
																	if (this.life <= 0)
																	{
																		for (int r17 = 0; r17 < 7; r17++)
																		{
																			Vector2 vector2438 = new Vector2(this.position.X, this.position.Y);
																			int num979 = this.width;
																			int num980 = this.height;
																			color = new Color();
																			int num981 = Dust.NewDust(vector2438, num979, num980, 31, 0f, 0f, 100, color, 1.5f);
																			Dust dust137 = Main.dust[num981];
																			dust137.velocity = dust137.velocity * 1.4f;
																		}
																		for (int s17 = 0; s17 < 3; s17++)
																		{
																			Vector2 vector2439 = new Vector2(this.position.X, this.position.Y);
																			int num982 = this.width;
																			int num983 = this.height;
																			color = new Color();
																			int num984 = Dust.NewDust(vector2439, num982, num983, 6, 0f, 0f, 100, color, 2.5f);
																			Main.dust[num984].noGravity = true;
																			Dust dust138 = Main.dust[num984];
																			dust138.velocity = dust138.velocity * 5f;
																			Vector2 vector2440 = new Vector2(this.position.X, this.position.Y);
																			int num985 = this.width;
																			int num986 = this.height;
																			color = new Color();
																			num984 = Dust.NewDust(vector2440, num985, num986, 6, 0f, 0f, 100, color, 1.5f);
																			Dust dust139 = Main.dust[num984];
																			dust139.velocity = dust139.velocity * 3f;
																		}
																		Gore.NewGore(this.position, this.velocity, 660, 1f);
																		Gore.NewGore(this.position, this.velocity, 660, 1f);
																		return;
																	}
																}
																else if (this.type >= 134 && this.type <= 136)
																{
																	if (this.type == 135 && this.life > 0 && Main.netMode != 1 && this.ai[2] == 0f && Main.rand.Next(25) == 0)
																	{
																		this.ai[2] = 1f;
																		int num987 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 139, 0, 0f, 0f, 0f, 0f, 255);
																		if (Main.netMode == 2 && num987 < 200)
																		{
																			NetMessage.SendData(23, -1, -1, "", num987, 0f, 0f, 0f, 0, 0, 0);
																		}
																		this.netUpdate = true;
																	}
																	if (this.life <= 0)
																	{
																		Gore.NewGore(this.position, this.velocity, 156, 1f);
																		if (Main.rand.Next(2) == 0)
																		{
																			for (int t17 = 0; t17 < 10; t17++)
																			{
																				Vector2 vector2441 = new Vector2(this.position.X, this.position.Y);
																				int num988 = this.width;
																				int num989 = this.height;
																				color = new Color();
																				int num990 = Dust.NewDust(vector2441, num988, num989, 31, 0f, 0f, 100, color, 1.5f);
																				Dust dust140 = Main.dust[num990];
																				dust140.velocity = dust140.velocity * 1.4f;
																			}
																			for (int u17 = 0; u17 < 5; u17++)
																			{
																				Vector2 vector2442 = new Vector2(this.position.X, this.position.Y);
																				int num991 = this.width;
																				int num992 = this.height;
																				color = new Color();
																				int num993 = Dust.NewDust(vector2442, num991, num992, 6, 0f, 0f, 100, color, 2.5f);
																				Main.dust[num993].noGravity = true;
																				Dust dust141 = Main.dust[num993];
																				dust141.velocity = dust141.velocity * 5f;
																				Vector2 vector2443 = new Vector2(this.position.X, this.position.Y);
																				int num994 = this.width;
																				int num995 = this.height;
																				color = new Color();
																				num993 = Dust.NewDust(vector2443, num994, num995, 6, 0f, 0f, 100, color, 1.5f);
																				Dust dust142 = Main.dust[num993];
																				dust142.velocity = dust142.velocity * 3f;
																			}
																			Vector2 vector2444 = new Vector2(this.position.X, this.position.Y);
																			vector2 = new Vector2();
																			int num996 = Gore.NewGore(vector2444, vector2, Main.rand.Next(61, 64), 1f);
																			Gore gore39 = Main.gore[num996];
																			gore39.velocity = gore39.velocity * 0.4f;
																			Main.gore[num996].velocity.X = Main.gore[num996].velocity.X + 1f;
																			Main.gore[num996].velocity.Y = Main.gore[num996].velocity.Y + 1f;
																			Vector2 vector2445 = new Vector2(this.position.X, this.position.Y);
																			vector2 = new Vector2();
																			num996 = Gore.NewGore(vector2445, vector2, Main.rand.Next(61, 64), 1f);
																			Gore gore40 = Main.gore[num996];
																			gore40.velocity = gore40.velocity * 0.4f;
																			Main.gore[num996].velocity.X = Main.gore[num996].velocity.X - 1f;
																			Main.gore[num996].velocity.Y = Main.gore[num996].velocity.Y + 1f;
																			Vector2 vector2446 = new Vector2(this.position.X, this.position.Y);
																			vector2 = new Vector2();
																			num996 = Gore.NewGore(vector2446, vector2, Main.rand.Next(61, 64), 1f);
																			Gore gore41 = Main.gore[num996];
																			gore41.velocity = gore41.velocity * 0.4f;
																			Main.gore[num996].velocity.X = Main.gore[num996].velocity.X + 1f;
																			Main.gore[num996].velocity.Y = Main.gore[num996].velocity.Y - 1f;
																			Vector2 vector2447 = new Vector2(this.position.X, this.position.Y);
																			vector2 = new Vector2();
																			num996 = Gore.NewGore(vector2447, vector2, Main.rand.Next(61, 64), 1f);
																			Gore gore42 = Main.gore[num996];
																			gore42.velocity = gore42.velocity * 0.4f;
																			Main.gore[num996].velocity.X = Main.gore[num996].velocity.X - 1f;
																			Main.gore[num996].velocity.Y = Main.gore[num996].velocity.Y - 1f;
																			return;
																		}
																	}
																}
																else if (this.type == 347)
																{
																	if (this.life <= 0)
																	{
																		Gore.NewGore(this.position, this.velocity, 524, 1f);
																		Gore.NewGore(this.position, this.velocity, 525, 1f);
																		Gore.NewGore(this.position, this.velocity, 526, 1f);
																		Gore.NewGore(this.position, this.velocity, 527, 1f);
																		for (int v17 = 0; v17 < 7; v17++)
																		{
																			Vector2 vector2448 = new Vector2(this.position.X, this.position.Y);
																			int num997 = this.width;
																			int num998 = this.height;
																			color = new Color();
																			int num999 = Dust.NewDust(vector2448, num997, num998, 31, 0f, 0f, 100, color, 1.5f);
																			Dust dust143 = Main.dust[num999];
																			dust143.velocity = dust143.velocity * 1.4f;
																		}
																		for (int w17 = 0; w17 < 4; w17++)
																		{
																			Vector2 vector2449 = new Vector2(this.position.X, this.position.Y);
																			int num1000 = this.width;
																			int num1001 = this.height;
																			color = new Color();
																			int num1002 = Dust.NewDust(vector2449, num1000, num1001, 6, 0f, 0f, 100, color, 2.5f);
																			Main.dust[num1002].noGravity = true;
																			Dust dust144 = Main.dust[num1002];
																			dust144.velocity = dust144.velocity * 5f;
																			Vector2 vector2450 = new Vector2(this.position.X, this.position.Y);
																			int num1003 = this.width;
																			int num1004 = this.height;
																			color = new Color();
																			num1002 = Dust.NewDust(vector2450, num1003, num1004, 6, 0f, 0f, 100, color, 1.5f);
																			Dust dust145 = Main.dust[num1002];
																			dust145.velocity = dust145.velocity * 3f;
																		}
																		Vector2 vector2451 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		int num1005 = Gore.NewGore(vector2451, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore43 = Main.gore[num1005];
																		gore43.velocity = gore43.velocity * 0.4f;
																		Main.gore[num1005].velocity.X = Main.gore[num1005].velocity.X + 1f;
																		Main.gore[num1005].velocity.Y = Main.gore[num1005].velocity.Y + 1f;
																		Vector2 vector2452 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1005 = Gore.NewGore(vector2452, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore44 = Main.gore[num1005];
																		gore44.velocity = gore44.velocity * 0.4f;
																		Main.gore[num1005].velocity.X = Main.gore[num1005].velocity.X - 1f;
																		Main.gore[num1005].velocity.Y = Main.gore[num1005].velocity.Y - 1f;
																		return;
																	}
																}
																else if (this.type == 346)
																{
																	if (this.life <= 0)
																	{
																		Gore.NewGore(this.position, this.velocity, 518, 1f);
																		Gore.NewGore(this.position, this.velocity, 519, 1f);
																		Gore.NewGore(this.position, this.velocity, 520, 1f);
																		Gore.NewGore(this.position, this.velocity, 521, 1f);
																		Gore.NewGore(this.position, this.velocity, 522, 1f);
																		Gore.NewGore(this.position, this.velocity, 523, 1f);
																		for (int x17 = 0; x17 < 10; x17++)
																		{
																			Vector2 vector2453 = new Vector2(this.position.X, this.position.Y);
																			int num1006 = this.width;
																			int num1007 = this.height;
																			color = new Color();
																			int num1008 = Dust.NewDust(vector2453, num1006, num1007, 31, 0f, 0f, 100, color, 1.5f);
																			Dust dust146 = Main.dust[num1008];
																			dust146.velocity = dust146.velocity * 1.4f;
																		}
																		for (int y17 = 0; y17 < 5; y17++)
																		{
																			Vector2 vector2454 = new Vector2(this.position.X, this.position.Y);
																			int num1009 = this.width;
																			int num1010 = this.height;
																			color = new Color();
																			int num1011 = Dust.NewDust(vector2454, num1009, num1010, 6, 0f, 0f, 100, color, 2.5f);
																			Main.dust[num1011].noGravity = true;
																			Dust dust147 = Main.dust[num1011];
																			dust147.velocity = dust147.velocity * 5f;
																			Vector2 vector2455 = new Vector2(this.position.X, this.position.Y);
																			int num1012 = this.width;
																			int num1013 = this.height;
																			color = new Color();
																			num1011 = Dust.NewDust(vector2455, num1012, num1013, 6, 0f, 0f, 100, color, 1.5f);
																			Dust dust148 = Main.dust[num1011];
																			dust148.velocity = dust148.velocity * 3f;
																		}
																		Vector2 vector2456 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		int num1014 = Gore.NewGore(vector2456, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore45 = Main.gore[num1014];
																		gore45.velocity = gore45.velocity * 0.4f;
																		Main.gore[num1014].velocity.X = Main.gore[num1014].velocity.X + 1f;
																		Main.gore[num1014].velocity.Y = Main.gore[num1014].velocity.Y + 1f;
																		Vector2 vector2457 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1014 = Gore.NewGore(vector2457, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore46 = Main.gore[num1014];
																		gore46.velocity = gore46.velocity * 0.4f;
																		Main.gore[num1014].velocity.X = Main.gore[num1014].velocity.X - 1f;
																		Main.gore[num1014].velocity.Y = Main.gore[num1014].velocity.Y + 1f;
																		Vector2 vector2458 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1014 = Gore.NewGore(vector2458, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore47 = Main.gore[num1014];
																		gore47.velocity = gore47.velocity * 0.4f;
																		Main.gore[num1014].velocity.X = Main.gore[num1014].velocity.X + 1f;
																		Main.gore[num1014].velocity.Y = Main.gore[num1014].velocity.Y - 1f;
																		Vector2 vector2459 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1014 = Gore.NewGore(vector2459, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore48 = Main.gore[num1014];
																		gore48.velocity = gore48.velocity * 0.4f;
																		Main.gore[num1014].velocity.X = Main.gore[num1014].velocity.X - 1f;
																		Main.gore[num1014].velocity.Y = Main.gore[num1014].velocity.Y - 1f;
																		return;
																	}
																}
																else if (this.type == 127)
																{
																	if (this.life <= 0)
																	{
																		Gore.NewGore(this.position, this.velocity, 149, 1f);
																		Gore.NewGore(this.position, this.velocity, 150, 1f);
																		for (int a17 = 0; a17 < 10; a17++)
																		{
																			Vector2 vector2460 = new Vector2(this.position.X, this.position.Y);
																			int num1015 = this.width;
																			int num1016 = this.height;
																			color = new Color();
																			int num1017 = Dust.NewDust(vector2460, num1015, num1016, 31, 0f, 0f, 100, color, 1.5f);
																			Dust dust149 = Main.dust[num1017];
																			dust149.velocity = dust149.velocity * 1.4f;
																		}
																		for (int b17 = 0; b17 < 5; b17++)
																		{
																			Vector2 vector2461 = new Vector2(this.position.X, this.position.Y);
																			int num1018 = this.width;
																			int num1019 = this.height;
																			color = new Color();
																			int num1020 = Dust.NewDust(vector2461, num1018, num1019, 6, 0f, 0f, 100, color, 2.5f);
																			Main.dust[num1020].noGravity = true;
																			Dust dust150 = Main.dust[num1020];
																			dust150.velocity = dust150.velocity * 5f;
																			Vector2 vector2462 = new Vector2(this.position.X, this.position.Y);
																			int num1021 = this.width;
																			int num1022 = this.height;
																			color = new Color();
																			num1020 = Dust.NewDust(vector2462, num1021, num1022, 6, 0f, 0f, 100, color, 1.5f);
																			Dust dust151 = Main.dust[num1020];
																			dust151.velocity = dust151.velocity * 3f;
																		}
																		Vector2 vector2463 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		int num1023 = Gore.NewGore(vector2463, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore49 = Main.gore[num1023];
																		gore49.velocity = gore49.velocity * 0.4f;
																		Main.gore[num1023].velocity.X = Main.gore[num1023].velocity.X + 1f;
																		Main.gore[num1023].velocity.Y = Main.gore[num1023].velocity.Y + 1f;
																		Vector2 vector2464 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1023 = Gore.NewGore(vector2464, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore50 = Main.gore[num1023];
																		gore50.velocity = gore50.velocity * 0.4f;
																		Main.gore[num1023].velocity.X = Main.gore[num1023].velocity.X - 1f;
																		Main.gore[num1023].velocity.Y = Main.gore[num1023].velocity.Y + 1f;
																		Vector2 vector2465 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1023 = Gore.NewGore(vector2465, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore51 = Main.gore[num1023];
																		gore51.velocity = gore51.velocity * 0.4f;
																		Main.gore[num1023].velocity.X = Main.gore[num1023].velocity.X + 1f;
																		Main.gore[num1023].velocity.Y = Main.gore[num1023].velocity.Y - 1f;
																		Vector2 vector2466 = new Vector2(this.position.X, this.position.Y);
																		vector2 = new Vector2();
																		num1023 = Gore.NewGore(vector2466, vector2, Main.rand.Next(61, 64), 1f);
																		Gore gore52 = Main.gore[num1023];
																		gore52.velocity = gore52.velocity * 0.4f;
																		Main.gore[num1023].velocity.X = Main.gore[num1023].velocity.X - 1f;
																		Main.gore[num1023].velocity.Y = Main.gore[num1023].velocity.Y - 1f;
																		return;
																	}
																}
																else if (this.type < 128 || this.type > 131)
																{
																	if (this.type == 23)
																	{
																		if (this.life > 0)
																		{
																			for (int c17 = 0; (double)c17 < dmg / (double)this.lifeMax * 100; c17++)
																			{
																				int num1024 = 25;
																				if (Main.rand.Next(2) == 0)
																				{
																					num1024 = 6;
																				}
																				Vector2 vector2467 = this.position;
																				int num1025 = this.width;
																				int num1026 = this.height;
																				float single309 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2467, num1025, num1026, num1024, single309, -1f, 0, color, 1f);
																				Vector2 vector2468 = new Vector2(this.position.X, this.position.Y);
																				int num1027 = this.width;
																				int num1028 = this.height;
																				color = new Color();
																				int num1029 = Dust.NewDust(vector2468, num1027, num1028, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color, 2f);
																				Main.dust[num1029].noGravity = true;
																			}
																			return;
																		}
																		for (int d17 = 0; d17 < 50; d17++)
																		{
																			int num1030 = 25;
																			if (Main.rand.Next(2) == 0)
																			{
																				num1030 = 6;
																			}
																			Vector2 vector2469 = this.position;
																			int num1031 = this.width;
																			int num1032 = this.height;
																			float single310 = (float)(2 * hitDirection);
																			color = new Color();
																			Dust.NewDust(vector2469, num1031, num1032, num1030, single310, -2f, 0, color, 1f);
																		}
																		for (int e17 = 0; e17 < 50; e17++)
																		{
																			Vector2 vector2470 = new Vector2(this.position.X, this.position.Y);
																			int num1033 = this.width;
																			int num1034 = this.height;
																			color = new Color();
																			int num1035 = Dust.NewDust(vector2470, num1033, num1034, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color, 2.5f);
																			Dust dust152 = Main.dust[num1035];
																			dust152.velocity = dust152.velocity * 6f;
																			Main.dust[num1035].noGravity = true;
																		}
																		return;
																	}
																	if (this.type == 24)
																	{
																		if (this.life > 0)
																		{
																			for (int f17 = 0; (double)f17 < dmg / (double)this.lifeMax * 100; f17++)
																			{
																				Vector2 vector2471 = new Vector2(this.position.X, this.position.Y);
																				int num1036 = this.width;
																				int num1037 = this.height;
																				float x18 = this.velocity.X;
																				float y18 = this.velocity.Y;
																				color = new Color();
																				int num1038 = Dust.NewDust(vector2471, num1036, num1037, 6, x18, y18, 100, color, 2.5f);
																				Main.dust[num1038].noGravity = true;
																			}
																			return;
																		}
																		for (int g17 = 0; g17 < 50; g17++)
																		{
																			Vector2 vector2472 = new Vector2(this.position.X, this.position.Y);
																			int num1039 = this.width;
																			int num1040 = this.height;
																			float x19 = this.velocity.X;
																			float y19 = this.velocity.Y;
																			color = new Color();
																			int num1041 = Dust.NewDust(vector2472, num1039, num1040, 6, x19, y19, 100, color, 2.5f);
																			Main.dust[num1041].noGravity = true;
																			Dust dust153 = Main.dust[num1041];
																			dust153.velocity = dust153.velocity * 2f;
																		}
																		Gore.NewGore(this.position, this.velocity, 45, 1f);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
																		return;
																	}
																	if (this.type == 25)
																	{
																		Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
																		for (int h17 = 0; h17 < 20; h17++)
																		{
																			Vector2 vector2473 = new Vector2(this.position.X, this.position.Y);
																			int num1042 = this.width;
																			int num1043 = this.height;
																			color = new Color();
																			int num1044 = Dust.NewDust(vector2473, num1042, num1043, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 2f);
																			Main.dust[num1044].noGravity = true;
																			Dust dust154 = Main.dust[num1044];
																			dust154.velocity = dust154.velocity * 2f;
																			Vector2 vector2474 = new Vector2(this.position.X, this.position.Y);
																			int num1045 = this.width;
																			int num1046 = this.height;
																			color = new Color();
																			num1044 = Dust.NewDust(vector2474, num1045, num1046, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1f);
																			Dust dust155 = Main.dust[num1044];
																			dust155.velocity = dust155.velocity * 2f;
																		}
																		return;
																	}
																	if (this.type == 33)
																	{
																		Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
																		for (int i18 = 0; i18 < 20; i18++)
																		{
																			Vector2 vector2475 = new Vector2(this.position.X, this.position.Y);
																			int num1047 = this.width;
																			int num1048 = this.height;
																			color = new Color();
																			int num1049 = Dust.NewDust(vector2475, num1047, num1048, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1.2f);
																			Main.dust[num1049].noGravity = true;
																			Dust dust156 = Main.dust[num1049];
																			dust156.velocity = dust156.velocity * 2f;
																			Vector2 vector2476 = new Vector2(this.position.X, this.position.Y);
																			int num1050 = this.width;
																			int num1051 = this.height;
																			color = new Color();
																			num1049 = Dust.NewDust(vector2476, num1050, num1051, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 0.6f);
																			Dust dust157 = Main.dust[num1049];
																			dust157.velocity = dust157.velocity * 2f;
																		}
																		return;
																	}
																	if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 73 || this.type == 111)
																	{
																		if (this.life > 0)
																		{
																			for (int j18 = 0; (double)j18 < dmg / (double)this.lifeMax * 100; j18++)
																			{
																				Vector2 vector2477 = this.position;
																				int num1052 = this.width;
																				int num1053 = this.height;
																				float single311 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2477, num1052, num1053, 5, single311, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int k18 = 0; k18 < 50; k18++)
																		{
																			Vector2 vector2478 = this.position;
																			int num1054 = this.width;
																			int num1055 = this.height;
																			float single312 = 2.5f * (float)hitDirection;
																			color = new Color();
																			Dust.NewDust(vector2478, num1054, num1055, 5, single312, -2.5f, 0, color, 1f);
																		}
																		int num1056 = 48;
																		int num1057 = 49;
																		int num1058 = 50;
																		if (this.type == 111)
																		{
																			num1056 = 623;
																			num1057 = 624;
																			num1058 = 625;
																		}
																		else if (this.type == 26)
																		{
																			num1056 = 626;
																			num1057 = 627;
																			num1058 = 628;
																		}
																		else if (this.type == 73)
																		{
																			num1056 = 629;
																			num1057 = 630;
																			num1058 = 631;
																		}
																		else if (this.type == 27)
																		{
																			num1056 = 632;
																			num1057 = 633;
																			num1058 = 634;
																		}
																		else if (this.type == 28)
																		{
																			num1056 = 635;
																			num1057 = 636;
																			num1058 = 637;
																		}
																		Gore.NewGore(this.position, this.velocity, num1056, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num1057, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, num1057, this.scale);
																		if (this.type == 111)
																		{
																			Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
																		}
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num1058, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, num1058, this.scale);
																		return;
																	}
																	if (this.type == 471)
																	{
																		if (this.life > 0)
																		{
																			for (int l18 = 0; (double)l18 < dmg / (double)this.lifeMax * 100; l18++)
																			{
																				Vector2 vector2479 = this.position;
																				int num1059 = this.width;
																				int num1060 = this.height;
																				float single313 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2479, num1059, num1060, 5, single313, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int m18 = 0; m18 < 50; m18++)
																		{
																			Vector2 vector2480 = this.position;
																			int num1061 = this.width;
																			int num1062 = this.height;
																			float single314 = 2.5f * (float)hitDirection;
																			color = new Color();
																			Dust.NewDust(vector2480, num1061, num1062, 5, single314, -2.5f, 0, color, 1f);
																		}
																		Gore.NewGore(this.position, this.velocity, 675, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 676, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 677, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 678, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 678, this.scale);
																		return;
																	}
																	if (this.type == 472)
																	{
																		if (this.life > 0)
																		{
																			for (int n18 = 0; (double)n18 < dmg / (double)this.lifeMax * 100; n18++)
																			{
																				Vector2 vector2481 = this.position;
																				int num1063 = this.width;
																				int num1064 = this.height;
																				float single315 = (float)hitDirection;
																				color = new Color();
																				int num1065 = Dust.NewDust(vector2481, num1063, num1064, 5, single315, -1f, 0, color, 1f);
																				if (Main.rand.Next(3) != 0)
																				{
																					Main.dust[num1065].noGravity = true;
																				}
																				Main.dust[num1065].alpha = 100;
																			}
																			return;
																		}
																		for (int o18 = 0; o18 < 50; o18++)
																		{
																			Vector2 vector2482 = this.position;
																			int num1066 = this.width;
																			int num1067 = this.height;
																			float single316 = 2.5f * (float)hitDirection;
																			color = new Color();
																			int num1068 = Dust.NewDust(vector2482, num1066, num1067, 5, single316, -2.5f, 0, color, 1f);
																			if (Main.rand.Next(3) != 0)
																			{
																				Main.dust[num1068].noGravity = true;
																			}
																			Main.dust[num1068].alpha = 100;
																		}
																		Gore.NewGore(this.position, this.velocity, 679, this.scale);
																		Gore.NewGore(this.position, this.velocity, 680, this.scale);
																		return;
																	}
																	if (this.type == 480)
																	{
																		if (this.life > 0)
																		{
																			for (int p18 = 0; (double)p18 < dmg / (double)this.lifeMax * 100; p18++)
																			{
																				Vector2 vector2483 = this.position;
																				int num1069 = this.width;
																				int num1070 = this.height;
																				float single317 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2483, num1069, num1070, 5, single317, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int q18 = 0; q18 < 50; q18++)
																		{
																			Vector2 vector2484 = this.position;
																			int num1071 = this.width;
																			int num1072 = this.height;
																			float single318 = 2.5f * (float)hitDirection;
																			color = new Color();
																			Dust.NewDust(vector2484, num1071, num1072, 5, single318, -2.5f, 0, color, 1f);
																		}
																		Gore.NewGore(this.position, this.velocity, 692, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 693, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 693, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 694, this.scale);
																		Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 694, this.scale);
																		return;
																	}
																	if (this.type == 185)
																	{
																		if (this.life > 0)
																		{
																			for (int r18 = 0; (double)r18 < dmg / (double)this.lifeMax * 100; r18++)
																			{
																				Vector2 vector2485 = this.position;
																				int num1073 = this.width;
																				int num1074 = this.height;
																				float single319 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2485, num1073, num1074, 5, single319, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int s18 = 0; s18 < 50; s18++)
																		{
																			Vector2 vector2486 = this.position;
																			int num1075 = this.width;
																			int num1076 = this.height;
																			float single320 = 2.5f * (float)hitDirection;
																			color = new Color();
																			Dust.NewDust(vector2486, num1075, num1076, 5, single320, -2.5f, 0, color, 1f);
																		}
																		Gore.NewGore(this.position, this.velocity, 240, this.scale);
																		return;
																	}
																	if (this.type == 30)
																	{
																		Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
																		for (int t18 = 0; t18 < 20; t18++)
																		{
																			Vector2 vector2487 = new Vector2(this.position.X, this.position.Y);
																			int num1077 = this.width;
																			int num1078 = this.height;
																			color = new Color();
																			int num1079 = Dust.NewDust(vector2487, num1077, num1078, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 2f);
																			Main.dust[num1079].noGravity = true;
																			Dust dust158 = Main.dust[num1079];
																			dust158.velocity = dust158.velocity * 2f;
																			Vector2 vector2488 = new Vector2(this.position.X, this.position.Y);
																			int num1080 = this.width;
																			int num1081 = this.height;
																			color = new Color();
																			num1079 = Dust.NewDust(vector2488, num1080, num1081, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color, 1f);
																			Dust dust159 = Main.dust[num1079];
																			dust159.velocity = dust159.velocity * 2f;
																		}
																		return;
																	}
																	if (this.type == 42 || this.type == 176 || this.type == 205 || this.type >= 231 && this.type <= 235)
																	{
																		if (this.life > 0)
																		{
																			for (int u18 = 0; (double)u18 < dmg / (double)this.lifeMax * 100; u18++)
																			{
																				Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
																			}
																			return;
																		}
																		for (int v18 = 0; v18 < 50; v18++)
																		{
																			Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
																		}
																		if (this.type == 205)
																		{
																			Gore.NewGore(this.position, this.velocity, 270, this.scale);
																			Gore.NewGore(this.position, this.velocity, 271, this.scale);
																			Gore.NewGore(this.position, this.velocity, 271, this.scale);
																			Gore.NewGore(this.position, this.velocity, 272, this.scale);
																			return;
																		}
																		if (this.type == 176)
																		{
																			Gore.NewGore(this.position, this.velocity, 229, this.scale);
																			Gore.NewGore(this.position, this.velocity, 230, this.scale);
																			return;
																		}
																		Gore.NewGore(this.position, this.velocity, 70, this.scale);
																		Gore.NewGore(this.position, this.velocity, 71, this.scale);
																		return;
																	}
																	if (this.type == 43 || this.type == 56)
																	{
																		if (this.life > 0)
																		{
																			for (int w18 = 0; (double)w18 < dmg / (double)this.lifeMax * 100; w18++)
																			{
																				Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
																			}
																			return;
																		}
																		for (int x181 = 0; x181 < 50; x181++)
																		{
																			Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
																		}
																		Gore.NewGore(this.position, this.velocity, 72, 1f);
																		Gore.NewGore(this.position, this.velocity, 72, 1f);
																		return;
																	}
																	if (this.type == 175)
																	{
																		if (this.life > 0)
																		{
																			for (int y181 = 0; (double)y181 < dmg / (double)this.lifeMax * 100; y181++)
																			{
																				Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
																			}
																			return;
																		}
																		for (int a18 = 0; a18 < 50; a18++)
																		{
																			Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
																		}
																		Gore.NewGore(this.position, this.velocity, 227, 1f);
																		Gore.NewGore(this.position, this.velocity, 228, 1f);
																		return;
																	}
																	if (this.type == 48)
																	{
																		if (this.life > 0)
																		{
																			for (int b18 = 0; (double)b18 < dmg / (double)this.lifeMax * 100; b18++)
																			{
																				Vector2 vector2489 = this.position;
																				int num1082 = this.width;
																				int num1083 = this.height;
																				float single321 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2489, num1082, num1083, 5, single321, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int c18 = 0; c18 < 50; c18++)
																		{
																			Vector2 vector2490 = this.position;
																			int num1084 = this.width;
																			int num1085 = this.height;
																			float single322 = (float)(2 * hitDirection);
																			color = new Color();
																			Dust.NewDust(vector2490, num1084, num1085, 5, single322, -2f, 0, color, 1f);
																		}
																		Gore.NewGore(this.position, this.velocity, 80, 1f);
																		Gore.NewGore(this.position, this.velocity, 81, 1f);
																		return;
																	}
																	if (this.type == 62 || this.type == 66)
																	{
																		if (this.life > 0)
																		{
																			for (int d18 = 0; (double)d18 < dmg / (double)this.lifeMax * 100; d18++)
																			{
																				Vector2 vector2491 = this.position;
																				int num1086 = this.width;
																				int num1087 = this.height;
																				float single323 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2491, num1086, num1087, 5, single323, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int e18 = 0; e18 < 50; e18++)
																		{
																			Vector2 vector2492 = this.position;
																			int num1088 = this.width;
																			int num1089 = this.height;
																			float single324 = (float)(2 * hitDirection);
																			color = new Color();
																			Dust.NewDust(vector2492, num1088, num1089, 5, single324, -2f, 0, color, 1f);
																		}
																		Gore.NewGore(this.position, this.velocity, 93, 1f);
																		Gore.NewGore(this.position, this.velocity, 94, 1f);
																		Gore.NewGore(this.position, this.velocity, 94, 1f);
																		return;
																	}
																	if (this.type == 156)
																	{
																		if (this.life > 0)
																		{
																			for (int f18 = 0; (double)f18 < dmg / (double)this.lifeMax * 100; f18++)
																			{
																				Vector2 vector2493 = this.position;
																				int num1090 = this.width;
																				int num1091 = this.height;
																				float single325 = (float)hitDirection;
																				color = new Color();
																				Dust.NewDust(vector2493, num1090, num1091, 5, single325, -1f, 0, color, 1f);
																			}
																			return;
																		}
																		for (int g18 = 0; g18 < 50; g18++)
																		{
																			Vector2 vector2494 = this.position;
																			int num1092 = this.width;
																			int num1093 = this.height;
																			float single326 = (float)(2 * hitDirection);
																			color = new Color();
																			Dust.NewDust(vector2494, num1092, num1093, 5, single326, -2f, 0, color, 1f);
																		}
																		Gore.NewGore(this.position, this.velocity, 184, 1f);
																		Gore.NewGore(this.position, this.velocity, 185, 1f);
																		Gore.NewGore(this.position, this.velocity, 185, 1f);
																	}
																}
																else if (this.life <= 0)
																{
																	Gore.NewGore(this.position, this.velocity, 147, 1f);
																	Gore.NewGore(this.position, this.velocity, 148, 1f);
																	for (int h18 = 0; h18 < 10; h18++)
																	{
																		Vector2 vector2495 = new Vector2(this.position.X, this.position.Y);
																		int num1094 = this.width;
																		int num1095 = this.height;
																		color = new Color();
																		int num1096 = Dust.NewDust(vector2495, num1094, num1095, 31, 0f, 0f, 100, color, 1.5f);
																		Dust dust160 = Main.dust[num1096];
																		dust160.velocity = dust160.velocity * 1.4f;
																	}
																	for (int i19 = 0; i19 < 5; i19++)
																	{
																		Vector2 vector2496 = new Vector2(this.position.X, this.position.Y);
																		int num1097 = this.width;
																		int num1098 = this.height;
																		color = new Color();
																		int num1099 = Dust.NewDust(vector2496, num1097, num1098, 6, 0f, 0f, 100, color, 2.5f);
																		Main.dust[num1099].noGravity = true;
																		Dust dust161 = Main.dust[num1099];
																		dust161.velocity = dust161.velocity * 5f;
																		Vector2 vector2497 = new Vector2(this.position.X, this.position.Y);
																		int num1100 = this.width;
																		int num1101 = this.height;
																		color = new Color();
																		num1099 = Dust.NewDust(vector2497, num1100, num1101, 6, 0f, 0f, 100, color, 1.5f);
																		Dust dust162 = Main.dust[num1099];
																		dust162.velocity = dust162.velocity * 3f;
																	}
																	Vector2 vector2498 = new Vector2(this.position.X, this.position.Y);
																	vector2 = new Vector2();
																	int num1102 = Gore.NewGore(vector2498, vector2, Main.rand.Next(61, 64), 1f);
																	Gore gore53 = Main.gore[num1102];
																	gore53.velocity = gore53.velocity * 0.4f;
																	Main.gore[num1102].velocity.X = Main.gore[num1102].velocity.X + 1f;
																	Main.gore[num1102].velocity.Y = Main.gore[num1102].velocity.Y + 1f;
																	Vector2 vector2499 = new Vector2(this.position.X, this.position.Y);
																	vector2 = new Vector2();
																	num1102 = Gore.NewGore(vector2499, vector2, Main.rand.Next(61, 64), 1f);
																	Gore gore54 = Main.gore[num1102];
																	gore54.velocity = gore54.velocity * 0.4f;
																	Main.gore[num1102].velocity.X = Main.gore[num1102].velocity.X - 1f;
																	Main.gore[num1102].velocity.Y = Main.gore[num1102].velocity.Y + 1f;
																	Vector2 vector2500 = new Vector2(this.position.X, this.position.Y);
																	vector2 = new Vector2();
																	num1102 = Gore.NewGore(vector2500, vector2, Main.rand.Next(61, 64), 1f);
																	Gore gore55 = Main.gore[num1102];
																	gore55.velocity = gore55.velocity * 0.4f;
																	Main.gore[num1102].velocity.X = Main.gore[num1102].velocity.X + 1f;
																	Main.gore[num1102].velocity.Y = Main.gore[num1102].velocity.Y - 1f;
																	Vector2 vector2501 = new Vector2(this.position.X, this.position.Y);
																	vector2 = new Vector2();
																	num1102 = Gore.NewGore(vector2501, vector2, Main.rand.Next(61, 64), 1f);
																	Gore gore56 = Main.gore[num1102];
																	gore56.velocity = gore56.velocity * 0.4f;
																	Main.gore[num1102].velocity.X = Main.gore[num1102].velocity.X - 1f;
																	Main.gore[num1102].velocity.Y = Main.gore[num1102].velocity.Y - 1f;
																	return;
																}
															}
															else if (this.life <= 0)
															{
																for (int j19 = 0; j19 < 20; j19++)
																{
																	Vector2 vector2502 = this.position;
																	int num1103 = this.width;
																	int num1104 = this.height;
																	color = new Color();
																	int num1105 = Dust.NewDust(vector2502, num1103, num1104, 54, 0f, 0f, 50, color, 1.5f);
																	Dust dust163 = Main.dust[num1105];
																	dust163.velocity = dust163.velocity * 2f;
																	Main.dust[num1105].noGravity = true;
																}
																int num1106 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore57 = Main.gore[num1106];
																gore57.velocity = gore57.velocity * 0.3f;
																num1106 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore58 = Main.gore[num1106];
																gore58.velocity = gore58.velocity * 0.3f;
																num1106 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
																Gore gore59 = Main.gore[num1106];
																gore59.velocity = gore59.velocity * 0.3f;
																return;
															}
														}
														else if (this.life <= 0)
														{
															for (int k19 = 0; k19 < 10; k19++)
															{
																Vector2 vector2503 = this.position;
																int num1107 = this.width;
																int num1108 = this.height;
																color = new Color();
																int num1109 = Dust.NewDust(vector2503, num1107, num1108, 16, 0f, 0f, 0, color, 1.5f);
																Dust dust164 = Main.dust[num1109];
																dust164.velocity = dust164.velocity * 2f;
																Main.dust[num1109].noGravity = true;
															}
															Vector2 vector2504 = new Vector2(this.position.X, this.position.Y);
															vector2 = new Vector2();
															int num1110 = Gore.NewGore(vector2504, vector2, Main.rand.Next(11, 14), this.scale);
															Gore gore60 = Main.gore[num1110];
															gore60.velocity = gore60.velocity * 0.5f;
															Vector2 vector2505 = new Vector2(this.position.X, this.position.Y + 20f);
															vector2 = new Vector2();
															num1110 = Gore.NewGore(vector2505, vector2, Main.rand.Next(11, 14), this.scale);
															Gore gore61 = Main.gore[num1110];
															gore61.velocity = gore61.velocity * 0.5f;
															Vector2 vector2506 = new Vector2(this.position.X, this.position.Y + 40f);
															vector2 = new Vector2();
															num1110 = Gore.NewGore(vector2506, vector2, Main.rand.Next(11, 14), this.scale);
															Gore gore62 = Main.gore[num1110];
															gore62.velocity = gore62.velocity * 0.5f;
															return;
														}
													}
													else
													{
														if (this.life > 0)
														{
															for (int l19 = 0; (double)l19 < dmg / (double)this.lifeMax * 50; l19++)
															{
																Vector2 vector2507 = this.position;
																int num1111 = this.width;
																int num1112 = this.height;
																float single327 = (float)hitDirection;
																color = new Color();
																Dust.NewDust(vector2507, num1111, num1112, 26, single327, -1f, 0, color, 1f);
															}
															return;
														}
														for (int m19 = 0; m19 < 20; m19++)
														{
															Vector2 vector2508 = this.position;
															int num1113 = this.width;
															int num1114 = this.height;
															float single328 = 2.5f * (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2508, num1113, num1114, 26, single328, -2.5f, 0, color, 1f);
														}
														Gore.NewGore(this.position, this.velocity, 42, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
														if (this.type == 269)
														{
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 406, this.scale);
														}
														if (this.type == 270)
														{
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 407, this.scale);
														}
														if (this.type == 271 || this.type == 272)
														{
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 408, this.scale);
														}
														if (this.type == 274)
														{
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 409, this.scale);
														}
														if (this.type == 276)
														{
															Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 410, this.scale);
															return;
														}
													}
												}
												else
												{
													if (this.life > 0)
													{
														for (int n19 = 0; (double)n19 < dmg / (double)this.lifeMax * 100; n19++)
														{
															Vector2 vector2509 = this.position;
															int num1115 = this.width;
															int num1116 = this.height;
															float single329 = (float)hitDirection;
															color = new Color();
															Dust.NewDust(vector2509, num1115, num1116, 5, single329, -1f, 0, color, 1f);
														}
														return;
													}
													for (int o19 = 0; o19 < 50; o19++)
													{
														Vector2 vector2510 = this.position;
														int num1117 = this.width;
														int num1118 = this.height;
														float single330 = 2.5f * (float)hitDirection;
														color = new Color();
														Dust.NewDust(vector2510, num1117, num1118, 5, single330, -2.5f, 0, color, 1f);
													}
													if (this.type == 212)
													{
														Gore.NewGore(this.position, this.velocity, 336, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
														return;
													}
													if (this.type == 213)
													{
														Gore.NewGore(this.position, this.velocity, 339, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
														return;
													}
													if (this.type == 214)
													{
														Gore.NewGore(this.position, this.velocity, 342, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
														return;
													}
													if (this.type == 215)
													{
														Gore.NewGore(this.position, this.velocity, 345, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
														return;
													}
													if (this.type == 216)
													{
														Gore.NewGore(this.position, this.velocity, 348, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
														Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
														return;
													}
												}
											}
										}
									}
								}
								else if (this.life < 0)
								{
									for (int p19 = 0; p19 < 15; p19++)
									{
										if (Main.rand.Next(3) == 0)
										{
											Vector2 vector2511 = this.position;
											int num1119 = this.width;
											int num1120 = this.height;
											float single331 = (float)hitDirection;
											color = new Color();
											Dust.NewDust(vector2511, num1119, num1120, 167, single331, -1f, 0, color, 1f);
										}
										else
										{
											Vector2 vector2512 = this.position;
											int num1121 = this.width;
											int num1122 = this.height;
											float single332 = (float)hitDirection;
											color = new Color();
											Dust.NewDust(vector2512, num1121, num1122, 166, single332, -1f, 0, color, 1f);
										}
									}
									return;
								}
							}
							else if (this.life <= 0)
							{
								for (int q19 = 0; q19 < 50; q19++)
								{
									Vector2 vector2513 = this.position;
									int num1123 = this.width;
									int num1124 = this.height;
									float single333 = 2.5f * (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2513, num1123, num1124, 5, single333, -2.5f, 0, color, 1f);
								}
								if (this.type == 187 || this.type == 433)
								{
									for (int r19 = 0; r19 < 25; r19++)
									{
										Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
									}
								}
								if (this.type == 104)
								{
									Gore.NewGore(this.position, this.velocity, 117, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
									return;
								}
								if (this.type == 331)
								{
									Gore.NewGore(this.position, this.velocity, 488, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
									return;
								}
								if (this.type == 332)
								{
									Gore.NewGore(this.position, this.velocity, 491, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
									return;
								}
								if (this.type == 109)
								{
									Gore.NewGore(this.position, this.velocity, 121, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 46f), this.velocity, 120, this.scale);
									return;
								}
								if (this.type == 161)
								{
									Gore.NewGore(this.position, this.velocity, 191, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
									return;
								}
								if (this.type == 162)
								{
									Gore.NewGore(this.position, this.velocity, 194, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
									return;
								}
								if (this.type == 188 || this.type == 434)
								{
									Gore.NewGore(this.position, this.velocity, 243, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
									return;
								}
								if (this.type == 200 || this.type == 436)
								{
									Gore.NewGore(this.position, this.velocity, 262, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
									return;
								}
								if (this.type == 319)
								{
									Gore.NewGore(this.position, this.velocity, 451, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
									return;
								}
								if (this.type == 320)
								{
									Gore.NewGore(this.position, this.velocity, 454, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 455, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
									return;
								}
								if (this.type == 321)
								{
									Gore.NewGore(this.position, this.velocity, 457, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
									return;
								}
								if (this.type == 223)
								{
									Gore.NewGore(this.position, this.velocity, 309, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
									Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
									return;
								}
								if (this.type == 132)
								{
									Gore.NewGore(this.position, this.velocity, 154, 1f);
								}
								else if (this.type == 186 || this.type == 432)
								{
									Gore.NewGore(this.position, this.velocity, 241, 1f);
								}
								else if (this.type == 189 || this.type == 435)
								{
									Gore.NewGore(this.position, this.velocity, 246, 1f);
								}
								else if (this.type == 251)
								{
									Gore.NewGore(this.position, this.velocity, 372, 1f);
								}
								else if (this.type != 187 && this.type != 433)
								{
									Gore.NewGore(this.position, this.velocity, 3, 1f);
								}
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
								if (this.type == 186 || this.type == 432)
								{
									Gore.NewGore(this.position, this.velocity, 242, 1f);
								}
								if ((this.type == 186 || this.type == 432) && Main.rand.Next(2) == 0)
								{
									Gore.NewGore(this.position, this.velocity, 242, 1f);
									return;
								}
							}
							else
							{
								for (int s19 = 0; (double)s19 < dmg / (double)this.lifeMax * 100; s19++)
								{
									Vector2 vector2514 = this.position;
									int num1125 = this.width;
									int num1126 = this.height;
									float single334 = (float)hitDirection;
									color = new Color();
									Dust.NewDust(vector2514, num1125, num1126, 5, single334, -1f, 0, color, 1f);
								}
								if (this.type == 186 && Main.rand.Next(5) == 0)
								{
									Gore.NewGore(this.position, this.velocity, 242, 1f);
								}
								if (this.type == 187)
								{
									for (int t19 = 0; (double)t19 < dmg / (double)this.lifeMax * 200; t19++)
									{
										Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
									}
									return;
								}
							}
						}
					}
				}
			}
			else
			{
				if (this.life > 0)
				{
					for (int u19 = 0; (double)u19 < dmg / (double)this.lifeMax * 300; u19++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 175, new Color(0, 80, 255, 100), 1f);
					}
					return;
				}
				for (int v19 = 0; v19 < 200; v19++)
				{
					Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 175, new Color(0, 80, 255, 100), 1f);
				}
				Gore.NewGore(base.Center + new Vector2(-40f, (float)(-this.height / 2)), this.velocity, 734, 1f);
				if (Main.netMode != 1)
				{
					int num1127 = Main.rand.Next(4) + 4;
					for (int w19 = 0; w19 < num1127; w19++)
					{
						int x20 = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
						int y20 = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
						int num1128 = NPC.NewNPC(x20, y20, 1, 0, 0f, 0f, 0f, 0f, 255);
						Main.npc[num1128].SetDefaults(1, -1f);
						Main.npc[num1128].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
						Main.npc[num1128].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
						Main.npc[num1128].ai[0] = (float)(-1000 * Main.rand.Next(3));
						Main.npc[num1128].ai[1] = 0f;
						if (Main.netMode == 2 && num1128 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num1128, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					return;
				}
			}
		}

		public void IdleSounds()
		{
			if ((this.type == 239 || this.type == 240) && Main.rand.Next(900) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(24, 26));
				return;
			}
			if ((this.type == 62 || this.type == 156) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(26, 30));
				return;
			}
			if (this.type == 177 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(30, 32));
				return;
			}
			if (this.type == 226 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 32);
				return;
			}
			if (this.type == 153 && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 33);
				return;
			}
			if (this.wet && (this.type == 63 || this.type == 64 || this.type == 103) && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(34, 36));
				return;
			}
			if ((this.type == 198 || this.type == 199) && Main.rand.Next(1000) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(36, 38));
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(38, 41));
				return;
			}
			if (this.type == 250 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(41, 44));
				return;
			}
			if (this.type == 508 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 44);
				return;
			}
			if (this.type == 509 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(44, 47));
				return;
			}
			if (this.type == 494 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 47);
				return;
			}
			if (this.type == 467 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(48, 50));
				return;
			}
			if (this.type == 468 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(50, 53));
				return;
			}
			if (this.type == 288 && Main.rand.Next(400) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(53, 55));
				return;
			}
			if ((this.type == 524 || this.type == 525 || this.type == 526 || this.type == 527) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(55, 57));
				return;
			}
			if ((this.type == 496 || this.type == 497) && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(57, 59));
				return;
			}
			if (this.type == 389 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(59, 61));
				return;
			}
			if (this.type == 471 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(61, 63));
				return;
			}
			if (this.type == 482 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(63, 66));
				return;
			}
			if (this.type == 388 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(66, 69));
				return;
			}
			if (this.type == 520 && Main.rand.Next(800) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(69, 73));
				return;
			}
			if (this.type == 477 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 73);
				return;
			}
			if (this.type == 258 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(74, 78));
				return;
			}
			if (this.type == 252 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 78);
				return;
			}
			if (this.type == 469 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(79, 81));
				return;
			}
			if ((this.type == 253 || this.type == 82) && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(81, 84));
				return;
			}
			if (this.type >= 498 && this.type <= 506 && Main.rand.Next(600) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(84, 86));
				return;
			}
			if (this.type == 391 && Main.rand.Next(700) == 0)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, Main.rand.Next(86, 87));
			}
		}

		public static int[,,,] InitializeMoonLordAttacks()
		{
			int[,,,] moonLordAttacksArray = null;
			if (NPC.MoonLordAttacksArray == null)
			{
				moonLordAttacksArray = new int[3, 3, 2, 5];
			}
			else
			{
				moonLordAttacksArray = NPC.MoonLordAttacksArray;
				for (int i = 0; i < moonLordAttacksArray.GetLength(0); i++)
				{
					for (int j = 0; j < moonLordAttacksArray.GetLength(1); j++)
					{
						for (int k = 0; k < moonLordAttacksArray.GetLength(2); k++)
						{
							for (int l = 0; l < moonLordAttacksArray.GetLength(3); l++)
							{
								moonLordAttacksArray[i, j, k, l] = 0;
							}
						}
					}
				}
			}
			moonLordAttacksArray[0, 0, 0, 0] = 0;
			moonLordAttacksArray[0, 0, 1, 0] = 60;
			moonLordAttacksArray[0, 0, 0, 1] = 1;
			moonLordAttacksArray[0, 0, 1, 1] = 70;
			moonLordAttacksArray[0, 0, 0, 2] = 2;
			moonLordAttacksArray[0, 0, 1, 2] = 330;
			moonLordAttacksArray[0, 0, 0, 3] = 0;
			moonLordAttacksArray[0, 0, 1, 3] = 60;
			moonLordAttacksArray[0, 0, 0, 4] = 3;
			moonLordAttacksArray[0, 0, 1, 4] = 90;
			moonLordAttacksArray[0, 1, 0, 0] = 1;
			moonLordAttacksArray[0, 1, 1, 0] = 70;
			moonLordAttacksArray[0, 1, 0, 1] = 0;
			moonLordAttacksArray[0, 1, 1, 1] = 120;
			moonLordAttacksArray[0, 1, 0, 2] = 3;
			moonLordAttacksArray[0, 1, 1, 2] = 90;
			moonLordAttacksArray[0, 1, 0, 3] = 0;
			moonLordAttacksArray[0, 1, 1, 3] = 120;
			moonLordAttacksArray[0, 1, 0, 4] = 2;
			moonLordAttacksArray[0, 1, 1, 4] = 390;
			moonLordAttacksArray[0, 2, 0, 0] = 3;
			moonLordAttacksArray[0, 2, 1, 0] = 90;
			moonLordAttacksArray[0, 2, 0, 1] = 0;
			moonLordAttacksArray[0, 2, 1, 1] = 120;
			moonLordAttacksArray[0, 2, 0, 2] = 2;
			moonLordAttacksArray[0, 2, 1, 2] = 435;
			moonLordAttacksArray[0, 2, 0, 3] = 0;
			moonLordAttacksArray[0, 2, 1, 3] = 120;
			moonLordAttacksArray[0, 2, 0, 4] = 1;
			moonLordAttacksArray[0, 2, 1, 4] = 375;
			moonLordAttacksArray[1, 0, 0, 0] = 0;
			moonLordAttacksArray[1, 0, 1, 0] = 0;
			moonLordAttacksArray[1, 0, 0, 1] = 0;
			moonLordAttacksArray[1, 0, 1, 1] = 0;
			moonLordAttacksArray[1, 0, 0, 2] = 0;
			moonLordAttacksArray[1, 0, 1, 2] = 0;
			moonLordAttacksArray[1, 0, 0, 3] = 0;
			moonLordAttacksArray[1, 0, 1, 3] = 0;
			moonLordAttacksArray[1, 0, 0, 4] = 0;
			moonLordAttacksArray[1, 0, 1, 4] = 0;
			moonLordAttacksArray[1, 1, 0, 0] = 0;
			moonLordAttacksArray[1, 1, 1, 0] = 0;
			moonLordAttacksArray[1, 1, 0, 1] = 0;
			moonLordAttacksArray[1, 1, 1, 1] = 0;
			moonLordAttacksArray[1, 1, 0, 2] = 0;
			moonLordAttacksArray[1, 1, 1, 2] = 0;
			moonLordAttacksArray[1, 1, 0, 3] = 0;
			moonLordAttacksArray[1, 1, 1, 3] = 0;
			moonLordAttacksArray[1, 1, 0, 4] = 0;
			moonLordAttacksArray[1, 1, 1, 4] = 0;
			moonLordAttacksArray[1, 2, 0, 0] = 0;
			moonLordAttacksArray[1, 2, 1, 0] = 0;
			moonLordAttacksArray[1, 2, 0, 1] = 0;
			moonLordAttacksArray[1, 2, 1, 1] = 0;
			moonLordAttacksArray[1, 2, 0, 2] = 0;
			moonLordAttacksArray[1, 2, 1, 2] = 0;
			moonLordAttacksArray[1, 2, 0, 3] = 0;
			moonLordAttacksArray[1, 2, 1, 3] = 0;
			moonLordAttacksArray[1, 2, 0, 4] = 0;
			moonLordAttacksArray[1, 2, 1, 4] = 0;
			moonLordAttacksArray[2, 0, 0, 0] = 0;
			moonLordAttacksArray[2, 0, 1, 0] = 0;
			moonLordAttacksArray[2, 0, 0, 1] = 0;
			moonLordAttacksArray[2, 0, 1, 1] = 0;
			moonLordAttacksArray[2, 0, 0, 2] = 0;
			moonLordAttacksArray[2, 0, 1, 2] = 0;
			moonLordAttacksArray[2, 0, 0, 3] = 0;
			moonLordAttacksArray[2, 0, 1, 3] = 0;
			moonLordAttacksArray[2, 0, 0, 4] = 0;
			moonLordAttacksArray[2, 0, 1, 4] = 0;
			moonLordAttacksArray[2, 1, 0, 0] = 0;
			moonLordAttacksArray[2, 1, 1, 0] = 0;
			moonLordAttacksArray[2, 1, 0, 1] = 0;
			moonLordAttacksArray[2, 1, 1, 1] = 0;
			moonLordAttacksArray[2, 1, 0, 2] = 0;
			moonLordAttacksArray[2, 1, 1, 2] = 0;
			moonLordAttacksArray[2, 1, 0, 3] = 0;
			moonLordAttacksArray[2, 1, 1, 3] = 0;
			moonLordAttacksArray[2, 1, 0, 4] = 0;
			moonLordAttacksArray[2, 1, 1, 4] = 0;
			moonLordAttacksArray[2, 2, 0, 0] = 0;
			moonLordAttacksArray[2, 2, 1, 0] = 0;
			moonLordAttacksArray[2, 2, 0, 1] = 0;
			moonLordAttacksArray[2, 2, 1, 1] = 0;
			moonLordAttacksArray[2, 2, 0, 2] = 0;
			moonLordAttacksArray[2, 2, 1, 2] = 0;
			moonLordAttacksArray[2, 2, 0, 3] = 0;
			moonLordAttacksArray[2, 2, 1, 3] = 0;
			moonLordAttacksArray[2, 2, 0, 4] = 0;
			moonLordAttacksArray[2, 2, 1, 4] = 0;
			NPC.InitializeMoonLordAttacks2();
			return moonLordAttacksArray;
		}

		public static int[,] InitializeMoonLordAttacks2()
		{
			int[,] moonLordAttacksArray2 = null;
			if (NPC.MoonLordAttacksArray2 == null)
			{
				moonLordAttacksArray2 = new int[2, 10];
			}
			else
			{
				moonLordAttacksArray2 = NPC.MoonLordAttacksArray2;
				for (int i = 0; i < moonLordAttacksArray2.GetLength(0); i++)
				{
					for (int j = 0; j < moonLordAttacksArray2.GetLength(1); j++)
					{
						moonLordAttacksArray2[i, j] = 0;
					}
				}
			}
			moonLordAttacksArray2[0, 0] = 0;
			moonLordAttacksArray2[1, 0] = 90;
			moonLordAttacksArray2[0, 1] = 1;
			moonLordAttacksArray2[1, 1] = 90;
			moonLordAttacksArray2[0, 2] = 0;
			moonLordAttacksArray2[1, 2] = 90;
			moonLordAttacksArray2[0, 3] = 2;
			moonLordAttacksArray2[1, 3] = 135;
			moonLordAttacksArray2[0, 4] = 0;
			moonLordAttacksArray2[1, 4] = 90;
			moonLordAttacksArray2[0, 5] = 3;
			moonLordAttacksArray2[1, 5] = 200;
			moonLordAttacksArray2[0, 6] = 0;
			moonLordAttacksArray2[1, 6] = 90;
			moonLordAttacksArray2[0, 7] = 4;
			moonLordAttacksArray2[1, 7] = 375;
			moonLordAttacksArray2[0, 8] = 0;
			moonLordAttacksArray2[1, 8] = 90;
			moonLordAttacksArray2[0, 9] = 2;
			moonLordAttacksArray2[1, 9] = 135;
			return moonLordAttacksArray2;
		}

		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num1 = 0;
			int num2 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == type)
				{
					num++;
					Vector2 vector2 = new Vector2(x, y);
					float single = Main.npc[i].position.X - vector2.X;
					float single1 = Main.npc[i].position.Y - vector2.Y;
					float single2 = (float)Math.Sqrt((double)(single * single + single1 * single1));
					if (single2 < 200f)
					{
						num1++;
					}
					if (single2 < 600f)
					{
						num2++;
					}
				}
			}
			if (num1 < 3 && num2 < 6 && num < 10)
			{
				return true;
			}
			return false;
		}

		public void moneyPing(Vector2 pos)
		{
			Main.PlaySound(38, pos, 1);
			int num = 244;
			if (this.extraValue >= 1000000f)
			{
				num = 247;
			}
			else if (this.extraValue >= 10000f)
			{
				num = 246;
			}
			else if (this.extraValue >= 100f)
			{
				num = 245;
			}
			for (int i = 0; i < 20; i++)
			{
				Vector2 vector2 = pos - new Vector2(1f, 2f);
				Color color = new Color();
				int num1 = Dust.NewDust(vector2, 10, 14, num, 0f, 0f, 254, color, 0.25f);
				Dust dust = Main.dust[num1];
				dust.velocity = dust.velocity * 0.2f;
			}
		}

		public static bool NearSpikeBall(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].aiStyle == 20)
				{
					Rectangle rectangle1 = new Rectangle((int)Main.npc[i].ai[1], (int)Main.npc[i].ai[2], 20, 20);
					if (rectangle.Intersects(rectangle1))
					{
						return true;
					}
				}
			}
			return false;
		}

		public void netDefaults(int type)
		{
			if (type >= 0)
			{
				this.SetDefaults(type, -1f);
			}
			else
			{
				if (type == -1)
				{
					this.SetDefaults("Slimeling");
					return;
				}
				if (type == -2)
				{
					this.SetDefaults("Slimer2");
					return;
				}
				if (type == -3)
				{
					this.SetDefaults("Green Slime");
					return;
				}
				if (type == -4)
				{
					this.SetDefaults("Pinky");
					return;
				}
				if (type == -5)
				{
					this.SetDefaults("Baby Slime");
					return;
				}
				if (type == -6)
				{
					this.SetDefaults("Black Slime");
					return;
				}
				if (type == -7)
				{
					this.SetDefaults("Purple Slime");
					return;
				}
				if (type == -8)
				{
					this.SetDefaults("Red Slime");
					return;
				}
				if (type == -9)
				{
					this.SetDefaults("Yellow Slime");
					return;
				}
				if (type == -10)
				{
					this.SetDefaults("Jungle Slime");
					return;
				}
				if (type == -11)
				{
					this.SetDefaults("Little Eater");
					return;
				}
				if (type == -12)
				{
					this.SetDefaults("Big Eater");
					return;
				}
				if (type == -13)
				{
					this.SetDefaults("Short Bones");
					return;
				}
				if (type == -14)
				{
					this.SetDefaults("Big Boned");
					return;
				}
				if (type == -15)
				{
					this.SetDefaults("Heavy Skeleton");
					return;
				}
				if (type == -16)
				{
					this.SetDefaults("Little Stinger");
					return;
				}
				if (type == -17)
				{
					this.SetDefaults("Big Stinger");
					return;
				}
				if (type == -18)
				{
					this.SetDefaults("Tiny Moss Hornet");
					return;
				}
				if (type == -19)
				{
					this.SetDefaults("Little Moss Hornet");
					return;
				}
				if (type == -20)
				{
					this.SetDefaults("Big Moss Hornet");
					return;
				}
				if (type == -21)
				{
					this.SetDefaults("Giant Moss Hornet");
					return;
				}
				if (type == -22)
				{
					this.SetDefaults("Little Crimera");
					return;
				}
				if (type == -23)
				{
					this.SetDefaults("Big Crimera");
					return;
				}
				if (type == -24)
				{
					this.SetDefaults("Little Crimslime");
					return;
				}
				if (type == -25)
				{
					this.SetDefaults("Big Crimslime");
					return;
				}
				if (type == -26)
				{
					this.SetDefaults("Small Zombie");
					return;
				}
				if (type == -27)
				{
					this.SetDefaults("Big Zombie");
					return;
				}
				if (type == -28)
				{
					this.SetDefaults("Small Bald Zombie");
					return;
				}
				if (type == -29)
				{
					this.SetDefaults("Big Bald Zombie");
					return;
				}
				if (type == -30)
				{
					this.SetDefaults("Small Pincushion Zombie");
					return;
				}
				if (type == -31)
				{
					this.SetDefaults("Big Pincushion Zombie");
					return;
				}
				if (type == -32)
				{
					this.SetDefaults("Small Slimed Zombie");
					return;
				}
				if (type == -33)
				{
					this.SetDefaults("Big Slimed Zombie");
					return;
				}
				if (type == -34)
				{
					this.SetDefaults("Small Swamp Zombie");
					return;
				}
				if (type == -35)
				{
					this.SetDefaults("Big Swamp Zombie");
					return;
				}
				if (type == -36)
				{
					this.SetDefaults("Small Twiggy Zombie");
					return;
				}
				if (type == -37)
				{
					this.SetDefaults("Big Twiggy Zombie");
					return;
				}
				if (type == -38)
				{
					this.SetDefaults("Cataract Eye 2");
					return;
				}
				if (type == -39)
				{
					this.SetDefaults("Sleepy Eye 2");
					return;
				}
				if (type == -40)
				{
					this.SetDefaults("Dialated Eye 2");
					return;
				}
				if (type == -41)
				{
					this.SetDefaults("Green Eye 2");
					return;
				}
				if (type == -42)
				{
					this.SetDefaults("Purple Eye 2");
					return;
				}
				if (type == -43)
				{
					this.SetDefaults("Demon Eye 2");
					return;
				}
				if (type == -44)
				{
					this.SetDefaults("Small Female Zombie");
					return;
				}
				if (type == -45)
				{
					this.SetDefaults("Big Female Zombie");
					return;
				}
				if (type == -46)
				{
					this.SetDefaults("Small Skeleton");
					return;
				}
				if (type == -47)
				{
					this.SetDefaults("Big Skeleton");
					return;
				}
				if (type == -48)
				{
					this.SetDefaults("Small Headache Skeleton");
					return;
				}
				if (type == -49)
				{
					this.SetDefaults("Big Headache Skeleton");
					return;
				}
				if (type == -50)
				{
					this.SetDefaults("Small Misassembled Skeleton");
					return;
				}
				if (type == -51)
				{
					this.SetDefaults("Big Misassembled Skeleton");
					return;
				}
				if (type == -52)
				{
					this.SetDefaults("Small Pantless Skeleton");
					return;
				}
				if (type == -53)
				{
					this.SetDefaults("Big Pantless Skeleton");
					return;
				}
				if (type == -54)
				{
					this.SetDefaults("Small Rain Zombie");
					return;
				}
				if (type == -55)
				{
					this.SetDefaults("Big Rain Zombie");
					return;
				}
				if (type == -56)
				{
					this.SetDefaults("Little Hornet Fatty");
					return;
				}
				if (type == -57)
				{
					this.SetDefaults("Big Hornet Fatty");
					return;
				}
				if (type == -58)
				{
					this.SetDefaults("Little Hornet Honey");
					return;
				}
				if (type == -59)
				{
					this.SetDefaults("Big Hornet Honey");
					return;
				}
				if (type == -60)
				{
					this.SetDefaults("Little Hornet Leafy");
					return;
				}
				if (type == -61)
				{
					this.SetDefaults("Big Hornet Leafy");
					return;
				}
				if (type == -62)
				{
					this.SetDefaults("Little Hornet Spikey");
					return;
				}
				if (type == -63)
				{
					this.SetDefaults("Big Hornet Spikey");
					return;
				}
				if (type == -64)
				{
					this.SetDefaults("Little Hornet Stingy");
					return;
				}
				if (type == -65)
				{
					this.SetDefaults("Big Hornet Stingy");
					return;
				}
			}
		}

		public static int NewNPC(int X, int Y, int Type, int Start = 0, float ai0 = 0f, float ai1 = 0f, float ai2 = 0f, float ai3 = 0f, int Target = 255)
		{
			int num = -1;
			if (Type != 222)
			{
				int start = Start;
				while (start < 200)
				{
					if (Main.npc[start].active)
					{
						start++;
					}
					else
					{
						num = start;
						break;
					}
				}
			}
			else
			{
				int num1 = 199;
				while (num1 >= 0)
				{
					if (Main.npc[num1].active)
					{
						num1--;
					}
					else
					{
						num = num1;
						goto Label0;
					}
				}
			}
		Label0:
			if (num < 0)
			{
				return 200;
			}
			Main.npc[num] = new NPC();
			Main.npc[num].SetDefaults(Type, -1f);
			if (NPC.TypeToNum(Type) != -1 || Type == 453)
			{
				Main.npc[num].displayName = NPC.getNewNPCName(Type);
			}
			Main.npc[num].position.X = (float)(X - Main.npc[num].width / 2);
			Main.npc[num].position.Y = (float)(Y - Main.npc[num].height);
			Main.npc[num].active = true;
			Main.npc[num].timeLeft = (int)((double)NPC.activeTime * 1.25);
			Main.npc[num].wet = Collision.WetCollision(Main.npc[num].position, Main.npc[num].width, Main.npc[num].height);
			Main.npc[num].ai[0] = ai0;
			Main.npc[num].ai[1] = ai1;
			Main.npc[num].ai[2] = ai2;
			Main.npc[num].ai[3] = ai3;
			Main.npc[num].target = Target;
			if (Type == 50)
			{
				if (Main.netMode == 0)
				{
					Main.NewText(string.Concat(Main.npc[num].name, " ", Lang.misc[16]), 175, 75, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, string.Concat(Main.npc[num].name, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
				}
			}
			return num;
		}

		public void NPCLoot()
		{
			int num;
			int[] numArray;
			int num1;
			if (Main.netMode == 1 || this.type >= 540)
			{
				return;
			}
			bool flag = (!NPC.downedMechBoss1 || !NPC.downedMechBoss2 ? false : NPC.downedMechBoss3);
			int num2 = this.type;
			switch (num2)
			{
				case 13:
				case 14:
				case 15:
					{
						if (!this.boss)
						{
							break;
						}
						AchievementsHelper.NotifyNPCKilled(this);
						break;
					}
				default:
					{
						switch (num2)
						{
							case 125:
							case 126:
								{
									if (NPC.AnyNPCs((this.type == 126 ? 125 : 126)))
									{
										goto Label0;
									}
									AchievementsHelper.NotifyNPCKilled(this);
									AchievementsHelper.CheckMechaMayhem(this.type);
									break;
								}
							case 127:
								{
									AchievementsHelper.CheckMechaMayhem(this.type);
									AchievementsHelper.NotifyNPCKilled(this);
									break;
								}
							default:
								{
									if (num2 == 134)
									{
										goto case 127;
									}
									AchievementsHelper.NotifyNPCKilled(this);
									break;
								}
						}
						break;
					}
			}
		Label0:
			int num3 = Item.NPCtoBanner(this.BannerID());
			if (num3 > 0 && !NPCID.Sets.ExcludedFromDeathTally[this.type])
			{
				NPC.killCount[num3] = NPC.killCount[num3] + 1;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(83, -1, -1, "", num3, 0f, 0f, 0f, 0, 0, 0);
				}
				if (NPC.killCount[num3] % 50 == 0 && num3 > 0)
				{
					int nPC = Item.BannerToNPC(num3);
					(new NPC()).netDefaults(nPC);
					int num4 = this.FindClosestPlayer();
					object[] objArray = new object[] { "The ", NPC.killCount[num3], "th ", Lang.npcName(nPC, false), " has been defeated!" };
					string str = string.Concat(objArray);
					if (num4 >= 0 && num4 < 255)
					{
						objArray = new object[] { Main.player[num4].name, " has defeated the ", NPC.killCount[num3], "th ", Lang.npcName(nPC, false), "!" };
						str = string.Concat(objArray);
					}
					if (Main.netMode == 0)
					{
						Main.NewText(str, 250, 250, 0, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, str, 255, 250f, 250f, 0f, 0, 0, 0);
					}
					int num5 = 1615 + num3 - 1;
					if (num3 >= 249)
					{
						num5 = 3593 + num3 - 249;
					}
					else if (num3 >= 186)
					{
						num5 = 3390 + num3 - 186;
					}
					else if (num3 >= 88)
					{
						num5 = 2897 + num3 - 88;
					}
					Vector2 vector2 = this.position;
					if (num4 >= 0 && num4 < 255)
					{
						vector2 = Main.player[num4].position;
					}
					Item.NewItem((int)vector2.X, (int)vector2.Y, this.width, this.height, num5, 1, false, 0, false);
				}
			}
			if (this.type == 23 && Main.hardMode)
			{
				return;
			}
			if ((this.type == 170 || this.type == 180 || this.type == 171) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3532, 1, false, 0, false);
			}
			num2 = this.type;
			if (num2 <= 122)
			{
				if (num2 > 80)
				{
					switch (num2)
					{
						case 84:
						case 86:
							{
								break;
							}
						case 85:
							{
								goto Label2;
							}
						default:
							{
								switch (num2)
								{
									case 120:
									case 122:
										{
											break;
										}
									default:
										{
											goto Label2;
										}
								}
								break;
							}
					}
				}
				else
				{
					if (num2 == 75 || num2 == 80)
					{
						goto Label3;
					}
					goto Label2;
				}
			}
			else if (num2 <= 171)
			{
				switch (num2)
				{
					case 137:
					case 138:
						{
							break;
						}
					default:
						{
							if (num2 == 171)
							{
								break;
							}
							goto Label2;
						}
				}
			}
			else if (num2 != 244 && num2 != 475)
			{
				goto Label2;
			}
		Label3:
			num1 = (Main.expertMode ? 150 : 200);
			if (Main.rand.Next(num1) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3260, 1, false, 0, false);
			}
		Label2:
			if (Main.slimeRain && Main.slimeRainNPC[this.type] && !NPC.AnyNPCs(50))
			{
				int num6 = 150;
				if (NPC.downedSlimeKing)
				{
					num6 = num6 / 2;
				}
				Main.slimeRainKillCount = Main.slimeRainKillCount + 1;
				if (Main.slimeRainKillCount >= num6)
				{
					NPC.SpawnOnPlayer(this.FindClosestPlayer(), 50);
					Main.slimeRainKillCount = -num6 / 2;
				}
			}
			if (!Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneDungeon)
			{
				bool flag1 = false;
				if (Main.expertMode && Main.rand.Next(5) == 0)
				{
					flag1 = true;
				}
				else if (Main.rand.Next(5) == 0)
				{
					flag1 = true;
				}
				if (this.boss)
				{
					flag1 = false;
				}
				num2 = this.type;
				switch (num2)
				{
					case 13:
					case 14:
					case 15:
						{
							flag1 = false;
							break;
						}
				}
				if (Main.hardMode && this.lifeMax > 1 && this.damage > 0 && !this.friendly && (double)this.position.Y > Main.rockLayer * 16 && flag1 && this.type != 121 && this.@value > 0f)
				{
					if (Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt || Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 521, 1, false, 0, false);
					}
					if (Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 520, 1, false, 0, false);
					}
				}
			}
			if (this.type == 1 && this.ai[1] > 0f)
			{
				int num7 = (int)this.ai[1];
				if (num7 > 0 && num7 < 3601)
				{
					int num8 = 1;
					if (num7 == 8)
					{
						num8 = Main.rand.Next(5, 11);
					}
					else if (num7 == 166)
					{
						num8 = Main.rand.Next(2, 7);
					}
					else if (num7 == 965)
					{
						num8 = Main.rand.Next(20, 46);
					}
					else if (num7 >= 11 && num7 <= 14 || num7 >= 699 && num7 <= 702)
					{
						num8 = Main.rand.Next(3, 9);
						if (Main.rand.Next(2) == 0)
						{
							num8 = num8 + 5;
						}
					}
					else if (num7 == 71)
					{
						num8 = Main.rand.Next(50, 100);
					}
					else if (num7 == 72)
					{
						num8 = Main.rand.Next(20, 100);
					}
					else if (num7 == 73)
					{
						num8 = Main.rand.Next(1, 3);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num7, num8, false, 0, false);
				}
			}
			if (this.type == 22 && this.displayName == "Andrew")
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 867, 1, false, 0, false);
			}
			if (this.type == 353 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3352, 1, false, 0, false);
			}
			if (this.type == 441 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3351, 1, false, 0, false);
			}
			if (this.type == 227 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3350, 1, false, 0, false);
			}
			if (this.type == 208 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3548, Main.rand.Next(30, 61), false, 0, false);
			}
			if (this.type == 207 && Main.rand.Next(8) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3349, 1, false, 0, false);
			}
			if (Main.hardMode && this.@value > 0f)
			{
				if (!NPC.downedMechBoss1 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 556, 1, false, 0, false);
				}
				else if (!NPC.downedMechBoss2 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 544, 1, false, 0, false);
				}
				else if (!NPC.downedMechBoss3 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 557, 1, false, 0, false);
				}
			}
			if (Main.halloween && this.@value > 0f && this.@value < 500f && this.damage < 40 && this.defense < 20)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1825, 1, false, 0, false);
				}
				else if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1827, 1, false, 0, false);
				}
			}
			if (Main.hardMode && this.@value > 0f)
			{
				if (Main.rand.Next(2500) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneJungle)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1533, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneCorrupt)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1534, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneCrimson)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1535, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneHoly)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1536, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].ZoneSnow)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1537, 1, false, 0, false);
				}
			}
			if (this.type == 68)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1169, 1, false, 0, false);
			}
			if (Main.snowMoon)
			{
				int num9 = NPC.waveCount;
				if (Main.expertMode)
				{
					num9 = num9 + 7;
				}
				int num10 = (int)((double)(30 - num9) / 2.5);
				if (Main.expertMode)
				{
					num10 = num10 - 2;
				}
				if (num10 < 1)
				{
					num10 = 1;
				}
				if (this.type == 344)
				{
					NPC.downedChristmasTree = true;
				}
				if (this.type == 345)
				{
					NPC.downedChristmasIceQueen = true;
				}
				if (this.type == 346)
				{
					NPC.downedChristmasSantank = true;
				}
				if ((this.type == 344 || this.type == 345 || this.type == 346) && Main.rand.Next(num10) == 0 && num9 >= 15)
				{
					int num11 = 4;
					if (num9 == 16)
					{
						num11 = 4;
					}
					if (num9 == 17)
					{
						num11 = 3;
					}
					if (num9 == 18)
					{
						num11 = 3;
					}
					if (num9 == 19)
					{
						num11 = 2;
					}
					if (num9 >= 20)
					{
						num11 = 2;
					}
					if (Main.expertMode && Main.rand.Next(3) == 0)
					{
						num11--;
					}
					if (Main.rand.Next(num11) == 0)
					{
						if (this.type == 344)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1962, 1, false, 0, false);
						}
						if (this.type == 345)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1960, 1, false, 0, false);
						}
						if (this.type == 346)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1961, 1, false, 0, false);
						}
					}
				}
				if (Main.rand.Next(num10) == 0)
				{
					if (this.type == 344)
					{
						int num12 = Main.rand.Next(3);
						if (Main.rand.Next(15) != 0)
						{
							if (num12 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1916, 1, false, 0, false);
							}
							if (num12 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1928, 1, false, -1, false);
							}
							if (num12 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1930, 1, false, -1, false);
							}
						}
						else
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1871, 1, false, -1, false);
						}
					}
					if (this.type == 346)
					{
						int num13 = Main.rand.Next(2);
						if (num13 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1910, 1, false, -1, false);
						}
						if (num13 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1929, 1, false, -1, false);
						}
					}
					if (this.type == 345)
					{
						if (NPC.waveCount >= 15 && Main.rand.Next(30) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1914, 1, false, 0, false);
						}
						else if (Main.rand.Next(15) != 0)
						{
							int num14 = Main.rand.Next(3);
							if (num14 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1931, 1, false, -1, false);
							}
							if (num14 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1946, 1, false, -1, false);
							}
							if (num14 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1947, 1, false, -1, false);
							}
						}
						else
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1959, 1, false, 0, false);
						}
					}
				}
			}
			if (this.type == 341)
			{
				int num15 = Main.rand.Next(5, 11);
				for (int i = 0; i < num15; i++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
				if (Main.xMas)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false);
				}
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(5) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1943 + Main.rand.Next(3), 1, false, 0, false);
			}
			if (this.type == 342 && Main.rand.Next(3) != 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (Main.pumpkinMoon)
			{
				if (this.type == 325)
				{
					NPC.downedHalloweenTree = true;
				}
				if (this.type == 327)
				{
					NPC.downedHalloweenKing = true;
				}
				int num16 = NPC.waveCount;
				if (Main.expertMode)
				{
					num16 = num16 + 6;
				}
				int num17 = (int)((double)(17 - num16) / 1.25);
				if (Main.expertMode)
				{
					num17--;
				}
				if (num17 < 1)
				{
					num17 = 1;
				}
				if (num16 >= 15)
				{
					if (this.type == 325)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1855, 1, false, 0, false);
					}
					if (this.type == 327)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1856, 1, false, 0, false);
					}
				}
				if (Main.rand.Next(num17) == 0)
				{
					if (this.type == 315 && Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1857, 1, false, 0, false);
					}
					if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false);
					}
					if (this.type == 325)
					{
						int num18 = Main.rand.Next(5);
						if (num18 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1829, 1, false, 0, false);
						}
						if (num18 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1831, 1, false, 0, false);
						}
						if (num18 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1835, 1, false, -1, false);
						}
						if (num18 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false);
						}
						if (num18 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1837, 1, false, 0, false);
						}
						if (num18 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1845, 1, false, -1, false);
						}
					}
					if (this.type == 327)
					{
						int num19 = Main.rand.Next(7);
						if (num19 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1782, 1, false, -1, false);
						}
						if (num19 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false);
						}
						if (num19 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1784, 1, false, -1, false);
						}
						if (num19 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false);
						}
						if (num19 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1811, 1, false, 0, false);
						}
						if (num19 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1826, 1, false, -1, false);
						}
						if (num19 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1801, 1, false, -1, false);
						}
						if (num19 == 5)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1802, 1, false, -1, false);
						}
						if (num19 == 6)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1798, 1, false, 0, false);
						}
					}
				}
			}
			if (this.type == 325)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false);
			}
			if (this.type == 326)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false);
			}
			if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 326 && Main.rand.Next(6) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 329 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 330 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 315)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (Main.halloween && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.type != 23 && this.@value > 0f && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1774, 1, false, 0, false);
			}
			if (Main.xMas && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.@value > 0f && Main.rand.Next(13) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false);
			}
			if (this.lifeMax > 5 && this.@value > 0f && !this.friendly && Main.hardMode && this.position.Y / 16f > (float)(Main.maxTilesY - 200) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2701, Main.rand.Next(20, 51), false, 0, false);
			}
			if (this.type == 325 || this.type == 327 || this.type == 344 || this.type == 345 || this.type == 346)
			{
				int num20 = Main.rand.Next(6) + 6;
				for (int j = 0; j < num20; j++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 156 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1518, 1, false, 0, false);
			}
			if (this.type == 243 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1519, 1, false, 0, false);
			}
			if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1517, 1, false, 0, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1520, 1, false, 0, false);
			}
			if (this.type == 176 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1521, 1, false, 0, false);
			}
			if (this.type == 48 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1516, 1, false, 0, false);
			}
			if (this.type == 205 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1611, 1, false, 0, false);
			}
			if (this.type == 483 || this.type == 482)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3086, Main.rand.Next(5, 11), false, -1, false);
			}
			if (!Main.hardMode && Main.rand.Next(100) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && Main.rand.Next(4) == 0 && this.position.Y / 16f > (float)(Main.maxTilesY - 350) && NPC.downedBoss3)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3282, 1, false, -1, false);
			}
			if (Main.hardMode && Main.player[this.target].ZoneSnow && Main.rand.Next(80) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && this.@value > 0f)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3289, 1, false, -1, false);
			}
			else if (Main.hardMode && Main.rand.Next(200) == 0 && this.target >= 0 && this.lifeMax > 5 && !this.friendly && this.@value > 0f)
			{
				if (Main.player[this.target].ZoneJungle && NPC.downedMechBossAny)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3286, 1, false, -1, false);
				}
				else if (Main.player[this.target].ZoneDungeon && NPC.downedPlantBoss)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3291, 1, false, -1, false);
				}
				else if ((double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2 && !Main.player[this.target].ZoneDungeon && Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3290, 1, false, -1, false);
				}
			}
			int num21 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num21 = 2;
			}
			for (int k = 0; k < num21; k++)
			{
				if (this.type == 461 && Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 497, 1, false, -1, false);
				}
				if ((this.type == 159 || this.type == 158) && Main.rand.Next(35) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 900, 1, false, -1, false);
				}
				if (this.type == 251 && Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1311, 1, false, -1, false);
				}
				if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
				{
					if (this.type == 477)
					{
						if (Main.rand.Next(4) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1570, 1, false, -1, false);
							k++;
						}
						else if (Main.rand.Next(3) == 0 && NPC.downedPlantBoss)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3292, 1, false, -1, false);
							k++;
						}
					}
					if (this.type == 253 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1327, 1, false, -1, false);
					}
				}
				if (NPC.downedPlantBoss)
				{
					if (this.type == 460 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3098, 1, false, -1, false);
					}
					if (this.type == 468 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3105, 1, false, -1, false);
					}
					if (this.type == 466 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3106, 1, false, -1, false);
					}
					if (this.type == 467 && Main.rand.Next(40) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3249, 1, false, -1, false);
					}
					if (this.type == 463 && Main.rand.Next(25) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3107, 1, false, -1, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3108, Main.rand.Next(100, 201), false, -1, false);
					}
				}
			}
			if (Main.bloodMoon && Main.hardMode && Main.rand.Next(1000) == 0 && this.@value > 0f)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1314, 1, false, -1, false);
			}
			if (this.type == 77 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 723, 1, false, -1, false);
			}
			num = -1;
			int num22 = -1;
			if (Main.rand.Next(100) == 0 || Main.expertMode && Main.rand.Next(100) == 0)
			{
				num2 = this.type;
				if (num2 <= 109)
				{
					if (num2 > 42)
					{
						switch (num2)
						{
							case 75:
								{
									num = (Main.rand.Next(2) != 0 ? 890 : 889);
									if (Main.rand.Next(100) != 0)
									{
										break;
									}
									if (num != 889)
									{
										num22 = 889;
										break;
									}
									else
									{
										num22 = 890;
										break;
									}
								}
							case 76:
							case 85:
							case 86:
							case 87:
							case 88:
							case 89:
							case 90:
							case 91:
							case 92:
								{
									break;
								}
							case 77:
								{
									goto Label7;
								}
							case 78:
							case 82:
								{
									num = 889;
									break;
								}
							case 79:
								{
									num = (Main.rand.Next(2) != 0 ? 890 : 888);
									if (Main.rand.Next(100) != 0)
									{
										break;
									}
									if (num != 888)
									{
										num22 = 888;
										break;
									}
									else
									{
										num22 = 890;
										break;
									}
								}
							case 80:
							case 93:
								{
									num = 893;
									break;
								}
							case 81:
								{
									num = 888;
									break;
								}
							case 83:
							case 84:
								{
									goto Label8;
								}
							case 94:
								{
									goto Label4;
								}
							case 102:
							case 104:
								{
									goto Label6;
								}
							case 103:
								{
									num = 890;
									break;
								}
							default:
								{
									if (num2 == 109)
									{
										goto case 93;
									}
									break;
								}
						}
					}
					else
					{
						if (num2 == 34)
						{
							goto Label8;
						}
						if (num2 == 42)
						{
							goto Label5;
						}
					}
				}
				else if (num2 > 179)
				{
					if (num2 == 182)
					{
						goto Label4;
					}
					switch (num2)
					{
						case 231:
						case 232:
						case 233:
						case 234:
						case 235:
							{
								goto Label5;
							}
						default:
							{
								switch (num2)
								{
									case 269:
									case 270:
									case 271:
									case 272:
										{
											goto Label6;
										}
									case 273:
									case 274:
									case 275:
									case 276:
										{
											goto Label7;
										}
								}
								break;
							}
					}
				}
				else
				{
					if (num2 == 141 || num2 == 176)
					{
						goto Label5;
					}
					if (num2 == 179)
					{
						goto Label8;
					}
				}
			}
			int num23 = 1;
			if (Main.expertMode && Main.rand.Next(2) == 0)
			{
				num23 = 2;
			}
			for (int l = 0; l < num23; l++)
			{
				if (this.type == 290)
				{
					if (Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1513, 1, false, -1, false);
					}
					else if (Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 938, 1, false, -1, false);
					}
				}
				if (this.type == 287 && Main.rand.Next(6) == 0)
				{
					if (Main.rand.Next(2) != 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 977, 1, false, -1, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 963, 1, false, -1, false);
					}
				}
				if (this.type == 291)
				{
					if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1300, 1, false, -1, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1254, 1, false, -1, false);
					}
				}
				if (this.type == 292)
				{
					if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1514, 1, false, -1, false);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 679, 1, false, -1, false);
					}
				}
				if (this.type == 293 && Main.rand.Next(18) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 759, 1, false, -1, false);
				}
				if ((this.type == 281 || this.type == 282) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1446, 1, false, -1, false);
				}
				if ((this.type == 283 || this.type == 284) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1444, 1, false, -1, false);
				}
				if ((this.type == 285 || this.type == 286) && Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1445, 1, false, -1, false);
				}
				if (this.type >= 269 && this.type <= 280)
				{
					if (Main.rand.Next(400) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1183, 1, false, -1, false);
					}
					else if (Main.rand.Next(300) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1266, 1, false, -1, false);
					}
					else if (Main.rand.Next(200) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 671, 1, false, -1, false);
					}
				}
			}
			if (this.lifeMax > 100 && this.type != 288 && this.@value > 0f && this.target >= 0 && Main.hardMode && NPC.downedPlantBoss && Main.player[this.target].ZoneDungeon)
			{
				int num24 = 13;
				if (Main.expertMode)
				{
					num24 = 9;
				}
				if (Main.rand.Next(num24) == 0 && Main.wallDungeon[Main.tile[(int)base.Center.X / 16, (int)base.Center.Y / 16].wall])
				{
					NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 288, 0, 0f, 0f, 0f, 0f, 255);
				}
			}
			if (this.type == 288)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false);
			}
			if (this.type == 156 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 683, 1, false, -1, false);
			}
			if ((this.type == 195 || this.type == 196) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3102, 1, false, -1, false);
			}
			if (this.type == 245)
			{
				if (!Main.expertMode)
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2110, 1, false, -1, false);
					}
					int num25 = Main.rand.Next(8);
					if (num25 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1258, 1, false, -1, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false);
					}
					else if (num25 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1122, 1, false, -1, false);
					}
					else if (num25 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 899, 1, false, -1, false);
					}
					else if (num25 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1248, 1, false, -1, false);
					}
					else if (num25 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1294, 1, false, -1, false);
					}
					else if (num25 == 5)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1295, 1, false, -1, false);
					}
					else if (num25 == 6)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1296, 1, false, -1, false);
					}
					else if (num25 == 7)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1297, 1, false, -1, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2218, Main.rand.Next(4, 9), false, -1, false);
				}
				else
				{
					this.DropBossBags();
				}
				NPC.downedGolemBoss = true;
			}
			if (this.type == 471 && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3052, 1, false, -1, false);
				}
				else if (Main.rand.Next(2) != 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3054, 1, false, -1, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3053, 1, false, -1, false);
				}
			}
			if (this.type == 268)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(2, 6), false, 0, false);
			}
			if (this.type == 370)
			{
				NPC.downedFishron = true;
				if (!Main.expertMode)
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2588, 1, false, -1, false);
					}
					if (Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2609, 1, false, -1, false);
					}
					int num26 = Main.rand.Next(5);
					if (num26 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2611, 1, false, -1, false);
					}
					else if (num26 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2624, 1, false, -1, false);
					}
					else if (num26 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2622, 1, false, -1, false);
					}
					else if (num26 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2621, 1, false, -1, false);
					}
					else if (num26 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2623, 1, false, -1, false);
					}
				}
				else
				{
					this.DropBossBags();
				}
			}
			if (this.type == 109 && !NPC.downedClown)
			{
				NPC.downedClown = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 153 && Main.rand.Next(17) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1328, 1, false, -1, false);
			}
			if (this.type == 120 && Main.rand.Next(500) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1326, 1, false, -1, false);
			}
			if (this.type == 49 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1325, 1, false, -1, false);
			}
			if (this.type == 185 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 951, 1, false, -1, false);
			}
			if (this.type == 44 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1320, 1, false, -1, false);
			}
			if (this.type == 44 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 88, 1, false, -1, false);
			}
			if (this.type == 110 && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1321, 1, false, -1, false);
			}
			if (this.type == 60 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
			}
			if (this.type == 151 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
			}
			if (this.type == 24 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1323, 1, false, -1, false);
			}
			if (this.type == 109 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false);
			}
			if (this.type == 163 || this.type == 238)
			{
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1308, 1, false, -1, false);
				}
				if (!Main.expertMode)
				{
					if (Main.rand.Next(4) != 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false);
						}
						else if (Main.rand.Next(2) != 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false);
						}
						else
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 3), false, 0, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(2, 4), false, 0, false);
				}
				else if (Main.rand.Next(2) != 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false);
				}
			}
			if (Main.hardMode && (this.type == 197 || this.type == 206 || this.type == 169 || this.type == 154) && Main.rand.Next(180) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1306, 1, false, -1, false);
			}
			if (this.type == 244)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false);
			}
			if (this.type == 250 && Main.rand.Next(15) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1244, 1, false, -1, false);
			}
			if (this.type == 172)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 754, 1, false, -1, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 755, 1, false, -1, false);
			}
			if (this.type == 110 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 682, 1, false, -1, false);
			}
			if (this.type == 154 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1253, 1, false, -1, false);
			}
			if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 726, 1, false, -1, false);
			}
			if (this.type == 243)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2161, 1, false, -1, false);
			}
			if (this.type == 480 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3269, 1, false, -1, false);
			}
			if (this.type == 198 || this.type == 199 || this.type == 226)
			{
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1172, 1, false, -1, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1293, 1, false, -1, false);
				}
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2766, Main.rand.Next(1, 3), false, -1, false);
				}
			}
			if (this.type == 78 || this.type == 79 || this.type == 80)
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 870, 1, false, -1, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 871, 1, false, -1, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 872, 1, false, -1, false);
				}
			}
			if (this.type == 473)
			{
				int num27 = Main.rand.Next(5);
				if (num27 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3008, 1, false, -1, false);
				}
				else if (num27 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3014, 1, false, -1, false);
				}
				else if (num27 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3012, 1, false, -1, false);
				}
				else if (num27 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3015, 1, false, -1, false);
				}
				else if (num27 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3023, 1, false, -1, false);
				}
			}
			else if (this.type == 474)
			{
				int num28 = Main.rand.Next(5);
				if (num28 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3006, 1, false, -1, false);
				}
				else if (num28 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3007, 1, false, -1, false);
				}
				else if (num28 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3013, 1, false, -1, false);
				}
				else if (num28 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3016, 1, false, -1, false);
				}
				else if (num28 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3020, 1, false, -1, false);
				}
			}
			else if (this.type != 475)
			{
				int num29 = this.type;
			}
			else
			{
				int num30 = Main.rand.Next(4);
				if (num30 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3029, 1, false, -1, false);
				}
				else if (num30 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3030, 1, false, -1, false);
				}
				else if (num30 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3051, 1, false, -1, false);
				}
				else if (num30 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3022, 1, false, -1, false);
				}
			}
			if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 499, Main.rand.Next(5, 11), false, -1, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 500, Main.rand.Next(5, 16), false, -1, false);
			}
			if (this.type == 85 && this.@value > 0f)
			{
				if (this.ai[3] != 4f)
				{
					int num31 = Main.rand.Next(6);
					if (num31 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 437, 1, false, -1, false);
					}
					else if (num31 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 517, 1, false, -1, false);
					}
					else if (num31 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 535, 1, false, -1, false);
					}
					else if (num31 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 536, 1, false, -1, false);
					}
					else if (num31 != 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 554, 1, false, -1, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 532, 1, false, -1, false);
					}
				}
				else if (Main.rand.Next(20) != 0)
				{
					int num32 = Main.rand.Next(3);
					if (num32 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 676, 1, false, -1, false);
					}
					else if (num32 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 725, 1, false, -1, false);
					}
					else if (num32 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1264, 1, false, -1, false);
					}
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1312, 1, false, -1, false);
				}
			}
			if (this.type == 87)
			{
				if (!Main.expertMode)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11) * 2, false, 0, false);
				}
			}
			if (this.type >= 212 && this.type <= 215)
			{
				if (Main.rand.Next(8000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				if (Main.rand.Next(4000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1277, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1278, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1279, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1280, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1704, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1705, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1710, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1716, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1720, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2379, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2389, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2405, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2843, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2663, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2238, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2133, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2137, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2143, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2147, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2151, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2155, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3263, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3264, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3265, 1, false, 0, false);
				}
			}
			else if (this.type == 216)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
			}
			else if (this.type == 491)
			{
				if (Main.rand.Next(400) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
				}
				else if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3033, 1, false, -1, false);
				}
				else if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
			}
			if ((this.type == 161 || this.type == 431) && Main.rand.Next(50) == 0)
			{
				int num33 = Main.rand.Next(3);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 803 + num33, 1, false, 0, false);
			}
			if (this.type == 217)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1115, 1, false, -1, false);
			}
			if (this.type == 218)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1116, 1, false, -1, false);
			}
			if (this.type == 219)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1117, 1, false, -1, false);
			}
			if (this.type == 220)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1118, 1, false, -1, false);
			}
			if (this.type == 221)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1119, 1, false, -1, false);
			}
			if (this.type == 167 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 879, 1, false, -1, false);
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type == 79)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
				}
			}
			else if (this.type == 80 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false);
			}
			if (this.type == 525)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(1, 4), false, 0, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
				}
			}
			if (this.type == 526)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
				}
			}
			if (this.type == 527 && Main.rand.Next(15) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false);
			}
			if (this.type == 532 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3380, 1, false, 0, false);
			}
			if (this.type == 528)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2802, 1, false, 0, false);
				}
			}
			else if (this.type == 529 && Main.rand.Next(25) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2801, 1, false, 0, false);
			}
			if ((this.type == 49 || this.type == 51 || this.type == 150 || this.type == 93) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false);
			}
			if ((this.type == 16 || this.type == 185 || this.type == 167 || this.type == 197) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
			}
			if (this.type == 58 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
			}
			if (this.type >= 494 && this.type <= 506)
			{
				if (Main.rand.Next(80) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false);
				}
				else if (Main.rand.Next(80) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
				}
				else if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3285, 1, false, -1, false);
				}
			}
			if (this.type != 21 && this.type != 201 && this.type != 202 && this.type != 203 && this.type != 322 && this.type != 323 && this.type != 324 && (this.type < 449 || this.type > 452))
			{
				if (this.type == 6)
				{
					if (Main.rand.Next(175) == 0)
					{
						int num34 = Main.rand.Next(3);
						if (num34 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 956, 1, false, -1, false);
						}
						else if (num34 != 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 958, 1, false, -1, false);
						}
						else
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 957, 1, false, -1, false);
						}
					}
				}
				else if (this.type != 42 && this.type != 43 && (this.type < 231 || this.type > 235))
				{
					if (this.type == 31 || this.type == 32 || this.type == 294 || this.type == 295 || this.type == 296)
					{
						if (Main.rand.Next(450) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 959, 1, false, -1, false);
						}
						if (Main.rand.Next(300) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1307, 1, false, -1, false);
						}
					}
				}
				else if (Main.rand.Next(100) == 0)
				{
					int num35 = Main.rand.Next(3);
					if (num35 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 960, 1, false, -1, false);
					}
					else if (num35 != 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 962, 1, false, -1, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 961, 1, false, -1, false);
					}
				}
			}
			else if (Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 954, 1, false, -1, false);
			}
			else if (Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 955, 1, false, -1, false);
			}
			else if (Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1166, 1, false, -1, false);
			}
			else if (Main.rand.Next(500) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1274, 1, false, -1, false);
			}
			if ((this.type == 174 || this.type == 179 || this.type == 182 || this.type == 183) && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 996, 1, false, 0, false);
			}
			if (this.type == 101 || this.type == 98)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false);
			}
			if (this.type == 86)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 526, 1, false, 0, false);
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 856, 1, false, 0, false);
				}
			}
			if (this.type == 186 || this.type == 432)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false);
			}
			if (this.type == 225)
			{
				if (Main.rand.Next(45) != 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 7), false, 0, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1243, 1, false, 0, false);
				}
			}
			if (this.type == 537)
			{
				int num36 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num36++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num36 = num36 + Main.rand.Next(2);
					}
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num36, false, 0, false);
				int num37 = 8000;
				if (Main.expertMode)
				{
					num37 = (int)((double)num37 * 0.7);
				}
				if (Main.rand.Next(num37) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
				}
			}
			if (this.type >= 333 && this.type <= 336 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1906, 1, false, 0, false);
			}
			if (this.netID == -4)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3111, Main.rand.Next(25, 51), false, 0, false);
				int num38 = 100;
				if (Main.expertMode)
				{
					num38 = (int)((double)num38 * 0.7);
				}
				if (Main.rand.Next(num38) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
				}
			}
			else if (this.type == 1 || this.type == 16 || this.type == 138 || this.type == 141 || this.type == 147 || this.type == 184 || this.type == 187 || this.type == 204 || this.type == 302 || this.type >= 333 && this.type <= 336 || this.type == 535)
			{
				int num39 = Main.rand.Next(1, 3);
				if (Main.expertMode)
				{
					if (this.netID == -7)
					{
						num39++;
					}
					if (this.netID == -8 || this.netID == -9)
					{
						num39 = num39 + Main.rand.Next(2);
					}
				}
				int num40 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, num39, false, 0, false);
				if (this.netID <= 1 && this.netID != -1 && this.netID != -2 && this.netID != -5 && this.netID != -6)
				{
					Main.item[num40].color = this.color;
					NetMessage.SendData(88, -1, -1, "", num40, 1f, 0f, 0f, 0, 0, 0);
				}
				int num41 = 10000;
				if (Main.expertMode)
				{
					num41 = (int)((double)num41 * 0.7);
				}
				if (Main.rand.Next(num41) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
				}
			}
			if (this.type == 75)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false);
			}
			if (this.type == 81 || this.type == 183)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false);
			}
			if (this.type == 122)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type == 71)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
			}
			if (this.type == 2 || this.type == 317 || this.type == 318 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 133)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 38, 1, false, 0, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 236, 1, false, 0, false);
				}
			}
			if (this.type == 104 && Main.rand.Next(60) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 485, 1, false, -1, false);
			}
			if (this.type == 58)
			{
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
				}
				else if (Main.rand.Next(30) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
				}
			}
			if (this.type == 102 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
			}
			if (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 319 || this.type == 320 || this.type == 321 || this.type >= 430 && this.type <= 436)
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 216, 1, false, -1, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1304, 1, false, -1, false);
				}
			}
			if ((this.type == 489 || this.type == 490) && (Main.expertMode || Main.rand.Next(2) == 0))
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3212, 1, false, -1, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3213, 1, false, -1, false);
				}
			}
			if (this.type == 223 && Main.rand.Next(20) == 0)
			{
				if (Main.rand.Next(2) != 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1136, 1, false, -1, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1135, 1, false, -1, false);
				}
			}
			if (this.type == 66)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 267, 1, false, 0, false);
			}
			if ((this.type == 62 || this.type == 66) && Main.rand.Next(35) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 272, 1, false, -1, false);
			}
			if (this.@value > 0f && Main.hardMode && (double)(this.position.Y / 16f) < Main.worldSurface + 10 && (base.Center.X / 16f < 380f || base.Center.X / 16f > (float)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1315, 1, false, 0, false);
			}
			if (this.type == 52)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 251, 1, false, 0, false);
			}
			if (this.type == 53)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 239, 1, false, 0, false);
			}
			if (this.type == 536)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3478, 1, false, 0, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3479, 1, false, 0, false);
			}
			if (this.type == 54)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 260, 1, false, 0, false);
			}
			if (this.type == 368)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2222, 1, false, 0, false);
			}
			if ((this.type == 69 || this.type == 509 || this.type == 508) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 323, Main.rand.Next(1, 3), false, 0, false);
			}
			if (this.type == 73)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false);
			}
			if ((this.type == 483 || this.type == 482) && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3109, 1, false, 0, false);
			}
			if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, 1, false, 0, false);
			}
			if ((this.type == 181 || this.type == 173 || this.type == 239 || this.type == 182 || this.type == 240) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1330, 1, false, 0, false);
			}
			if (this.type == 7 || this.type == 8 || this.type == 9)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false);
			}
			if ((this.type == 10 || this.type == 11 || this.type == 12 || this.type == 95 || this.type == 96 || this.type == 97) && (Main.rand.Next(50) == 0 || Main.expertMode && Main.rand.Next(50) == 0))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 215, 1, false, 0, false);
			}
			if (this.type == 47 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 243, 1, false, 0, false);
			}
			if (this.type == 4)
			{
				if (!Main.expertMode)
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2112, 1, false, -1, false);
					}
					if (Main.rand.Next(40) == 0 || Main.expertMode && Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1299, 1, false, 0, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3097, 1, false, -1, false);
					}
					int num42 = 1;
					if (Main.expertMode)
					{
						num42 = 2;
					}
					for (int m = 0; m < num42; m++)
					{
						if (!WorldGen.crimson)
						{
							int num43 = Main.rand.Next(30) + 20;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, num43, false, 0, false);
							num43 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num43, false, 0, false);
							num43 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num43, false, 0, false);
							num43 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num43, false, 0, false);
							num43 = Main.rand.Next(3) + 1;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 59, num43, false, 0, false);
						}
						else
						{
							int num44 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num44, false, 0, false);
							num44 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num44, false, 0, false);
							num44 = Main.rand.Next(20) + 10;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num44, false, 0, false);
							num44 = Main.rand.Next(3) + 1;
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2171, num44, false, 0, false);
						}
					}
				}
				else
				{
					this.DropBossBags();
				}
			}
			if (this.type == 266)
			{
				if (!Main.expertMode)
				{
					int num45 = Main.rand.Next(20, 46);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num45, false, 0, false);
					num45 = Main.rand.Next(20, 46);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num45, false, 0, false);
					if (Main.expertMode)
					{
						num45 = Main.rand.Next(30, 51);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num45, false, 0, false);
						num45 = Main.rand.Next(30, 51);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num45, false, 0, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2104, 1, false, -1, false);
					}
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3060, 1, false, 0, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3223, 1, false, 0, false);
					}
				}
				else
				{
					this.DropBossBags();
				}
			}
			if (this.type == 267 && NPC.AnyNPCs(266))
			{
				int num46 = Main.rand.Next(2, 6);
				if (Main.rand.Next(3) != 0)
				{
					if (Main.expertMode)
					{
						num46 = num46 + Main.rand.Next(2, 6);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1329, num46, false, 0, false);
				}
				if (Main.rand.Next(3) != 0)
				{
					num46 = Main.rand.Next(5, 13);
					if (Main.expertMode)
					{
						num46 = num46 + Main.rand.Next(6, 14);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, num46, false, 0, false);
				}
				if (Main.rand.Next(2) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				int num47 = Main.rand.Next(1, 3);
				if (Main.rand.Next(2) == 0)
				{
					if (Main.expertMode)
					{
						num47++;
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 86, num47, false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					num47 = Main.rand.Next(2, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num47, false, 0, false);
				}
				if (this.boss)
				{
					if (!Main.expertMode)
					{
						num47 = Main.rand.Next(10, 30);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num47, false, 0, false);
						num47 = Main.rand.Next(10, 31);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num47, false, 0, false);
						if (Main.expertMode)
						{
							num47 = Main.rand.Next(10, 30);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num47, false, 0, false);
							num47 = Main.rand.Next(10, 31);
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, num47, false, 0, false);
						}
						if (Main.expertMode)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3224, 1, false, 0, false);
						}
						if (Main.rand.Next(20) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 994, 1, false, 0, false);
						}
						if (Main.rand.Next(7) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2111, 1, false, -1, false);
						}
					}
					else
					{
						this.DropBossBags();
					}
				}
				if (Main.rand.Next(4) == 0 && Main.player[Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 222)
			{
				if (!Main.expertMode)
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2108, 1, false, -1, false);
					}
					int num48 = Main.rand.Next(3);
					if (num48 == 0)
					{
						num48 = 1121;
					}
					else if (num48 == 1)
					{
						num48 = 1123;
					}
					else if (num48 == 2)
					{
						num48 = 2888;
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num48, 1, false, -1, false);
					if (Main.expertMode)
					{
						int num49 = Main.rand.Next(3);
						if (num49 == 0)
						{
							num49 = 1121;
						}
						else if (num49 == 1)
						{
							num49 = 1123;
						}
						else if (num49 == 2)
						{
							num49 = 2888;
						}
						while (num49 == num48)
						{
							num49 = Main.rand.Next(3);
							if (num49 == 0)
							{
								num49 = 1121;
							}
							else if (num49 != 1)
							{
								if (num49 != 2)
								{
									continue;
								}
								num49 = 2888;
							}
							else
							{
								num49 = 1123;
							}
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num49, 1, false, -1, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1132, 1, false, -1, false);
					}
					if (Main.expertMode && Main.rand.Next(15) == 0 || Main.rand.Next(15) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1170, 1, false, 0, false);
					}
					if (Main.expertMode && Main.rand.Next(20) == 0 || Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2502, 1, false, 0, false);
					}
					if (Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false);
					}
					else if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(842, 845), 1, false, 0, false);
					}
					if (Main.rand.Next(4) != 0 || Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false);
						if (Main.expertMode)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false);
						}
					}
					if (!Main.expertMode)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(16, 27), false, 0, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(44, 67), false, 0, false);
					}
				}
				else
				{
					this.DropBossBags();
				}
				NPC.downedQueenBee = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 35)
			{
				if (Main.expertMode)
				{
					this.DropBossBags();
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1281, 1, false, -1, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1273, 1, false, -1, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1313, 1, false, -1, false);
				}
			}
			if (this.type == 113)
			{
				if (!Main.expertMode)
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2105, 1, false, -1, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 367, 1, false, -1, false);
					if (Main.expertMode)
					{
						int num50 = Main.rand.Next(4);
						num50 = (num50 != 3 ? 489 + num50 : 2998);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num50, 1, false, -1, false);
						int num51 = Main.rand.Next(3);
						if (num51 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false);
						}
						else if (num51 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false);
						}
						else if (num51 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false);
						}
					}
					else if (Main.rand.Next(2) != 0)
					{
						int num52 = Main.rand.Next(3);
						if (num52 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false);
						}
						else if (num52 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false);
						}
						else if (num52 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false);
						}
					}
					else
					{
						int num53 = Main.rand.Next(4);
						num53 = (num53 != 3 ? 489 + num53 : 2998);
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num53, 1, false, -1, false);
					}
				}
				else
				{
					this.DropBossBags();
				}
				if (Main.netMode != 1)
				{
					int x = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int y = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					int num54 = this.width / 2 / 16 + 1;
					for (int n = x - num54; n <= x + num54; n++)
					{
						for (int o = y - num54; o <= y + num54; o++)
						{
							if ((n == x - num54 || n == x + num54 || o == y - num54 || o == y + num54) && !Main.tile[n, o].active())
							{
								Main.tile[n, o].type = (ushort)((WorldGen.crimson ? 347 : 140));
								Main.tile[n, o].active(true);
							}
							Main.tile[n, o].lava(false);
							Main.tile[n, o].liquid = 0;
							if (Main.netMode != 2)
							{
								WorldGen.SquareTileFrame(n, o, true);
							}
							else
							{
								NetMessage.SendTileSquare(-1, n, o, 1);
							}
						}
					}
				}
			}
			if (this.type == 439)
			{
				NPC.downedAncientCultist = true;
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3372, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3549, 1, false, -1, false);
				WorldGen.TriggerLunarApocalypse();
			}
			if (this.type == 398)
			{
				NPC.downedMoonlord = true;
				NPC.LunarApocalypseIsUp = false;
				if (!Main.expertMode)
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3373, 1, false, -1, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3384, 1, false, -1, false);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3460, Main.rand.Next(70, 91), false, -1, false);
					Random random = Main.rand;
					numArray = new int[] { 3063, 3389, 3065, 1553, 3546, 3541, 3570, 3571, 3569 };
					int num55 = Utils.SelectRandom<int>(random, numArray);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num55, 1, false, -1, false);
				}
				else
				{
					this.DropBossBags();
				}
			}
			num2 = this.type;
			if (num2 <= 493)
			{
				switch (num2)
				{
					case 402:
					case 405:
					case 407:
					case 409:
					case 411:
						{
							if (this.type == 406 && Main.rand.Next(3) != 0 || NPC.ShieldStrengthTowerStardust <= 0)
							{
								break;
							}
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(493), 0f);
							break;
						}
					case 403:
					case 404:
					case 406:
					case 408:
					case 410:
					case 428:
						{
							break;
						}
					case 412:
					case 413:
					case 414:
					case 415:
					case 416:
					case 417:
					case 418:
					case 419:
						{
							goto Label10;
						}
					case 420:
					case 421:
					case 423:
					case 424:
						{
							if (NPC.ShieldStrengthTowerNebula <= 0)
							{
								break;
							}
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(507), 0f);
							break;
						}
					case 422:
						{
							int num56 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num56 = (int)((float)num56 * 1.5f);
							}
							for (int p = 0; p < num56; p++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3456, Main.rand.Next(1, 4), false, 0, false);
							}
							NPC.downedTowerVortex = true;
							NPC.TowerActiveVortex = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							break;
						}
					case 425:
					case 426:
					case 427:
					case 429:
						{
							if (NPC.ShieldStrengthTowerVortex <= 0)
							{
								break;
							}
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(422), 0f);
							break;
						}
					default:
						{
							if (num2 == 493)
							{
								int num57 = Main.rand.Next(25, 41) / 2;
								if (Main.expertMode)
								{
									num57 = (int)((float)num57 * 1.5f);
								}
								for (int q = 0; q < num57; q++)
								{
									Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3459, Main.rand.Next(1, 4), false, 0, false);
								}
								NPC.downedTowerStardust = true;
								NPC.TowerActiveStardust = false;
								WorldGen.UpdateLunarApocalypse();
								WorldGen.MessageLunarApocalypse();
								break;
							}
							else
							{
								break;
							}
						}
				}
			}
			else if (num2 == 507)
			{
				int num58 = Main.rand.Next(25, 41) / 2;
				if (Main.expertMode)
				{
					num58 = (int)((float)num58 * 1.5f);
				}
				for (int r = 0; r < num58; r++)
				{
					Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3457, Main.rand.Next(1, 4), false, 0, false);
				}
				NPC.downedTowerNebula = true;
				NPC.TowerActiveNebula = false;
				WorldGen.UpdateLunarApocalypse();
				WorldGen.MessageLunarApocalypse();
			}
			else
			{
				switch (num2)
				{
					case 517:
						{
							int num59 = Main.rand.Next(25, 41) / 2;
							if (Main.expertMode)
							{
								num59 = (int)((float)num59 * 1.5f);
							}
							for (int s = 0; s < num59; s++)
							{
								Item.NewItem((int)this.position.X + Main.rand.Next(this.width), (int)this.position.Y + Main.rand.Next(this.height), 2, 2, 3458, Main.rand.Next(1, 4), false, 0, false);
							}
							NPC.downedTowerSolar = true;
							NPC.TowerActiveSolar = false;
							WorldGen.UpdateLunarApocalypse();
							WorldGen.MessageLunarApocalypse();
							break;
						}
					case 518:
						{
							goto Label10;
						}
				}
			}
		Label16:
			num2 = this.type;
			switch (num2)
			{
				case 381:
				case 382:
				case 383:
				case 385:
				case 386:
				case 389:
				case 390:
					{
						if (Main.rand.Next(8) != 0)
						{
							goto case 388;
						}
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2860, Main.rand.Next(8, 21), false, 0, false);
						goto case 388;
					}
				case 384:
				case 387:
				case 388:
					{
						num2 = this.type;
						if (num2 == 383 || num2 == 386 || num2 == 389)
						{
							if (Main.rand.Next(200) == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2806, 1, false, 0, false);
							}
							if (Main.rand.Next(200) == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2807, 1, false, 0, false);
							}
							if (Main.rand.Next(200) == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2808, 1, false, 0, false);
							}
						}
						num2 = this.type;
						switch (num2)
						{
							case 381:
							case 382:
							case 385:
								{
									if (Main.rand.Next(200) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2803, 1, false, 0, false);
									}
									if (Main.rand.Next(200) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2804, 1, false, 0, false);
									}
									if (Main.rand.Next(200) != 0)
									{
										goto case 384;
									}
									Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2805, 1, false, 0, false);
									goto case 384;
								}
							case 383:
							case 384:
								{
									if (this.type == 395)
									{
										int x1 = (int)this.position.X;
										int y1 = (int)this.position.Y;
										int num60 = this.width;
										int num61 = this.height;
										Random random1 = Main.rand;
										numArray = new int[] { 2797, 2749, 2795, 2798, 2796, 2882, 2880, 2769, 2800 };
										Item.NewItem(x1, y1, num60, num61, Utils.SelectRandom<int>(random1, numArray), 1, false, 0, false);
									}
									if (this.type == 390 && Main.rand.Next(100) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2771, 1, false, 0, false);
									}
									if ((this.type == 116 || this.type == 117 || this.type == 118 || this.type == 119) && (!Main.expertMode || Main.rand.Next(5) == 0))
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
									}
									if (this.type == 139 && Main.rand.Next(2) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
									}
									if (this.type == 63 || this.type == 64 || this.type == 103)
									{
										if (Main.rand.Next(100) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1303, 1, false, -1, false);
										}
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false);
									}
									if (this.type == 481 && Main.rand.Next(2) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3094, Main.rand.Next(40, 81), false, 0, false);
									}
									if (this.type == 481 && Main.rand.Next(20) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3187 + Main.rand.Next(3), 1, false, 0, false);
									}
									if (this.type == 21 || this.type == 44 || this.type == 167 || this.type == 201 || this.type == 202 || this.type == 481 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324 || this.type >= 449 && this.type <= 452)
									{
										if (Main.rand.Next(25) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
										}
										else if (this.type == 44)
										{
											if (Main.rand.Next(20) != 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false);
											}
											else
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false);
											}
										}
									}
									if (this.type == 45)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 238, 1, false, 0, false);
									}
									if (this.type == 50)
									{
										if (Main.slimeRain)
										{
											Main.StopSlimeRain(true);
											AchievementsHelper.NotifyProgressionEvent(16);
										}
										if (!Main.expertMode)
										{
											if (Main.rand.Next(4) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2430, 1, false, 0, false);
											}
											if (Main.rand.Next(7) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2493, 1, false, -1, false);
											}
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false);
											Main.rand.Next(2);
											if (Main.rand.Next(3) != 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2610, 1, false, 0, false);
											}
											else
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2585, 1, false, 0, false);
											}
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 998, 1, false, 0, false);
										}
										else
										{
											this.DropBossBags();
										}
										NPC.downedSlimeKing = true;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
										}
									}
									if (this.type == 23 && Main.rand.Next(50) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 116, 1, false, 0, false);
									}
									if (this.type == 24 && Main.rand.Next(250) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 244, 1, false, 0, false);
									}
									if (this.type == 31 || this.type == 32 || this.type == 34)
									{
										if (Main.rand.Next(250) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 932, 1, false, 0, false);
										}
										else if (Main.rand.Next(100) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3095, 1, false, 0, false);
										}
										else if (Main.rand.Next(65) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
										}
										else if (!Main.expertMode)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false);
										}
										if (Main.expertMode)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(2, 7), false, 0, false);
										}
									}
									if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111)
									{
										if (Main.rand.Next(200) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 160, 1, false, 0, false);
										}
										else if (Main.rand.Next(2) == 0)
										{
											int num62 = Main.rand.Next(1, 6);
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 161, num62, false, 0, false);
										}
									}
									if (this.type == 175 && Main.rand.Next(100) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1265, 1, false, -1, false);
									}
									if ((this.type == 42 || this.type >= 231 && this.type <= 235) && (Main.expertMode || Main.rand.Next(3) != 0))
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
									}
									if (this.type == 204 && (Main.expertMode || Main.rand.Next(2) == 0))
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
									}
									if (this.type == 43 && (Main.expertMode || Main.rand.Next(2) == 0))
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 210, 1, false, 0, false);
									}
									if (this.type == 65)
									{
										if (Main.rand.Next(50) != 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false);
										}
										else
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 268, 1, false, 0, false);
										}
									}
									if (this.type == 48 && Main.rand.Next(2) == 0)
									{
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 320, 1, false, 0, false);
									}
									if (this.type == 125 || this.type == 126)
									{
										int num63 = 125;
										if (this.type == 125)
										{
											num63 = 126;
										}
										if (NPC.AnyNPCs(num63))
										{
											this.value = 0f;
											this.boss = false;
										}
										else if (!Main.expertMode)
										{
											if (Main.rand.Next(7) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2106, 1, false, -1, false);
											}
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false);
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
										}
										else
										{
											this.DropBossBags();
										}
									}
									else if (Main.expertMode)
									{
										if (this.type == 127 || this.type == 134)
										{
											this.DropBossBags();
										}
									}
									else if (this.type == 127)
									{
										if (Main.rand.Next(7) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2107, 1, false, -1, false);
										}
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false);
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
									}
									else if (this.type == 134)
									{
										if (Main.rand.Next(7) == 0)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2113, 1, false, -1, false);
										}
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false);
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
									}
									if (this.type == 262)
									{
										if (!Main.expertMode)
										{
											if (Main.rand.Next(7) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2109, 1, false, -1, false);
											}
											if (!Main.expertMode)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, 1, false, -1, false);
											}
											else
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, Main.rand.Next(2, 4), false, -1, false);
											}
											if (Main.rand.Next(20) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1182, 1, false, -1, false);
											}
											if (Main.rand.Next(50) == 0 || Main.expertMode && Main.rand.Next(50) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1305, 1, false, -1, false);
											}
											if (Main.rand.Next(4) == 0 || Main.expertMode)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1157, 1, false, -1, false);
											}
											if (Main.rand.Next(10) == 0)
											{
												Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3021, 1, false, -1, false);
											}
											int num64 = 1;
											if (Main.expertMode)
											{
												num64 = 2;
											}
											int num65 = 0;
											for (int t = 0; t < num64; t++)
											{
												int num66 = Main.rand.Next(7);
												if (!NPC.downedPlantBoss)
												{
													num66 = 0;
												}
												if (t != 0)
												{
													while (num65 == num66)
													{
														num66 = Main.rand.Next(6);
													}
												}
												else
												{
													num65 = num66;
												}
												if (num66 == 0)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 758, 1, false, -1, false);
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 771, Main.rand.Next(50, 150), false, 0, false);
												}
												else if (num66 == 1)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1255, 1, false, -1, false);
												}
												else if (num66 == 2)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 788, 1, false, -1, false);
												}
												else if (num66 == 3)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1178, 1, false, -1, false);
												}
												else if (num66 == 4)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1259, 1, false, -1, false);
												}
												else if (num66 == 5)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1155, 1, false, -1, false);
												}
												else if (num66 == 6)
												{
													Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3018, 1, false, -1, false);
												}
											}
										}
										else
										{
											this.DropBossBags();
										}
										if (!NPC.downedPlantBoss)
										{
											if (Main.netMode == 0)
											{
												Main.NewText(Lang.misc[33], 50, 255, 130, false);
											}
											else if (Main.netMode == 2)
											{
												NetMessage.SendData(25, -1, -1, Lang.misc[33], 255, 50f, 255f, 130f, 0, 0, 0);
											}
										}
										NPC.downedPlantBoss = true;
									}
									if ((this.boss || this.type == 125 || this.type == 126 || this.type == 491) && Main.rand.Next(10) == 0)
									{
										if (this.type == 4)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1360, 1, false, 0, false);
										}
										if (this.type == 13 || this.type == 14 || this.type == 15)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1361, 1, false, 0, false);
										}
										if (this.type == 266)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1362, 1, false, 0, false);
										}
										if (this.type == 35)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1363, 1, false, 0, false);
										}
										if (this.type == 222)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1364, 1, false, 0, false);
										}
										if (this.type == 113)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1365, 1, false, 0, false);
										}
										if (this.type == 134)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1366, 1, false, 0, false);
										}
										if (this.type == 127)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1367, 1, false, 0, false);
										}
										if (this.type == 125)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1368, 1, false, 0, false);
										}
										if (this.type == 126)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1369, 1, false, 0, false);
										}
										if (this.type == 262)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1370, 1, false, 0, false);
										}
										if (this.type == 245)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1371, 1, false, 0, false);
										}
										if (this.type == 50)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2489, 1, false, 0, false);
										}
										if (this.type == 370)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2589, 1, false, 0, false);
										}
										if (this.type == 439)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3357, 1, false, 0, false);
										}
										if (this.type == 491)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3359, 1, false, 0, false);
										}
										if (this.type == 395)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3358, 1, false, 0, false);
										}
										if (this.type == 398)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3595, 1, false, 0, false);
										}
									}
									if (this.boss)
									{
										if (this.type == 4)
										{
											NPC.downedBoss1 = true;
										}
										else if (this.type == 13 || this.type == 14 || this.type == 15)
										{
											NPC.downedBoss2 = true;
											this.name = "Eater of Worlds";
										}
										else if (this.type == 266)
										{
											NPC.downedBoss2 = true;
											this.name = "Brain of Cthulu";
										}
										else if (this.type != 35)
										{
											this.name = this.displayName;
										}
										else
										{
											NPC.downedBoss3 = true;
											this.name = "Skeletron";
										}
										if (this.type == 127)
										{
											NPC.downedMechBoss3 = true;
											NPC.downedMechBossAny = true;
										}
										if (this.type == 134)
										{
											NPC.downedMechBoss1 = true;
											NPC.downedMechBossAny = true;
										}
										string str1 = this.name;
										if (this.displayName != "")
										{
											str1 = this.displayName;
										}
										int num67 = Main.rand.Next(5, 16);
										int num68 = 28;
										if (this.type == 113)
										{
											num68 = 188;
										}
										else if (this.type == 222)
										{
											num68 = 1134;
										}
										else if (this.type > 113 && this.type < 222)
										{
											num68 = 499;
										}
										else if (this.type == 245 || this.type == 262)
										{
											num68 = 499;
										}
										else if (this.type == 370)
										{
											num68 = 499;
										}
										else if (this.type == 395)
										{
											num68 = 499;
										}
										else if (this.type == 439)
										{
											num68 = 499;
										}
										else if (this.type == 398)
										{
											num68 = 499;
										}
										Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num68, num67, false, 0, false);
										int num69 = Main.rand.Next(5) + 5;
										for (int u = 0; u < num69; u++)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
										}
										if (this.type == 125 || this.type == 126)
										{
											NPC.downedMechBoss2 = true;
											NPC.downedMechBossAny = true;
											if (Main.netMode == 0)
											{
												Main.NewText(string.Concat("The Twins ", Lang.misc[50]), 175, 75, 255, false);
											}
											else if (Main.netMode == 2)
											{
												NetMessage.SendData(25, -1, -1, string.Concat("The Twins ", Lang.misc[50]), 255, 175f, 75f, 255f, 0, 0, 0);
											}
										}
										else if (this.type == 398)
										{
											if (Main.netMode == 0)
											{
												Main.NewText(string.Concat("Moon Lord ", Lang.misc[17]), 175, 75, 255, false);
											}
											else if (Main.netMode == 2)
											{
												NetMessage.SendData(25, -1, -1, string.Concat("Moon Lord ", Lang.misc[17]), 255, 175f, 75f, 255f, 0, 0, 0);
											}
										}
										else if (Main.netMode == 0)
										{
											Main.NewText(string.Concat(str1, " ", Lang.misc[17]), 175, 75, 255, false);
										}
										else if (Main.netMode == 2)
										{
											NetMessage.SendData(25, -1, -1, string.Concat(str1, " ", Lang.misc[17]), 255, 175f, 75f, 255f, 0, 0, 0);
										}
										if (this.type == 113 && Main.netMode != 1)
										{
											bool flag2 = Main.hardMode;
											WorldGen.StartHardmode();
											if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && !flag2)
											{
												if (Main.netMode == 0)
												{
													Main.NewText(Lang.misc[32], 50, 255, 130, false);
												}
												else if (Main.netMode == 2)
												{
													NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
												}
											}
										}
										if (Main.netMode == 2)
										{
											NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
										}
									}
									if (!flag && NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && Main.hardMode)
									{
										if (Main.netMode == 0)
										{
											Main.NewText(Lang.misc[32], 50, 255, 130, false);
										}
										else if (Main.netMode == 2)
										{
											NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
										}
									}
									if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
									{
										int num70 = Player.FindClosest(this.position, this.width, this.height);
										if (Main.rand.Next(2) == 0 && Main.player[num70].statMana < Main.player[num70].statManaMax2)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
										}
										else if (Main.rand.Next(2) == 0 && Main.player[num70].statLife < Main.player[num70].statLifeMax2)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
										}
									}
									if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(2) == 0 && this.lifeMax > 1 && this.damage > 0)
									{
										int num71 = Player.FindClosest(this.position, this.width, this.height);
										if (Main.player[num71].statMana < Main.player[num71].statManaMax2)
										{
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
										}
									}
									float single = this.@value;
									if (this.midas)
									{
										single = single * (1f + (float)Main.rand.Next(10, 50) * 0.01f);
									}
									single = single * (1f + (float)Main.rand.Next(-20, 21) * 0.01f);
									if (Main.rand.Next(5) == 0)
									{
										single = single * (1f + (float)Main.rand.Next(5, 11) * 0.01f);
									}
									if (Main.rand.Next(10) == 0)
									{
										single = single * (1f + (float)Main.rand.Next(10, 21) * 0.01f);
									}
									if (Main.rand.Next(15) == 0)
									{
										single = single * (1f + (float)Main.rand.Next(15, 31) * 0.01f);
									}
									if (Main.rand.Next(20) == 0)
									{
										single = single * (1f + (float)Main.rand.Next(20, 41) * 0.01f);
									}
									single = single + this.extraValue;
									while ((int)single > 0)
									{
										if (single > 1000000f)
										{
											int num72 = (int)(single / 1000000f);
											if (num72 > 50 && Main.rand.Next(5) == 0)
											{
												num72 = num72 / (Main.rand.Next(3) + 1);
											}
											if (Main.rand.Next(5) == 0)
											{
												num72 = num72 / (Main.rand.Next(3) + 1);
											}
											single = single - (float)(1000000 * num72);
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 74, num72, false, 0, false);
										}
										else if (single > 10000f)
										{
											int num73 = (int)(single / 10000f);
											if (num73 > 50 && Main.rand.Next(5) == 0)
											{
												num73 = num73 / (Main.rand.Next(3) + 1);
											}
											if (Main.rand.Next(5) == 0)
											{
												num73 = num73 / (Main.rand.Next(3) + 1);
											}
											single = single - (float)(10000 * num73);
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 73, num73, false, 0, false);
										}
										else if (single <= 100f)
										{
											int num74 = (int)single;
											if (num74 > 50 && Main.rand.Next(5) == 0)
											{
												num74 = num74 / (Main.rand.Next(3) + 1);
											}
											if (Main.rand.Next(5) == 0)
											{
												num74 = num74 / (Main.rand.Next(4) + 1);
											}
											if (num74 < 1)
											{
												num74 = 1;
											}
											single = single - (float)num74;
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 71, num74, false, 0, false);
										}
										else
										{
											int num75 = (int)(single / 100f);
											if (num75 > 50 && Main.rand.Next(5) == 0)
											{
												num75 = num75 / (Main.rand.Next(3) + 1);
											}
											if (Main.rand.Next(5) == 0)
											{
												num75 = num75 / (Main.rand.Next(3) + 1);
											}
											single = single - (float)(100 * num75);
											Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 72, num75, false, 0, false);
										}
									}
									return;
								}
							default:
								{
									if (num2 != 390)
									{
										goto case 384;
									}
									else
									{
										goto case 385;
									}
								}
						}
					}
				default:
					{
						if (num2 != 520)
						{
							goto case 388;
						}
						else
						{
							goto case 390;
						}
					}
			}
		Label4:
			num = 892;
			goto Label15;
		Label5:
			num = 887;
			goto Label15;
		Label6:
			num = 885;
			goto Label15;
		Label7:
			num = 886;
			goto Label15;
		Label8:
			num = 891;
			goto Label15;
		Label10:
			if (NPC.ShieldStrengthTowerSolar > 0)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 629, 0, 0f, Main.myPlayer, (float)NPC.FindFirstNPC(517), 0f);
				goto Label16;
			}
			else
			{
				goto Label16;
			}

		Label15:
			{
				if (num != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num, 1, false, -1, false);
				}
				if (num22 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num22, 1, false, -1, false);
				}
			}
		}

		public static int NumToType(int type)
		{
			if (type == 2)
			{
				return 17;
			}
			if (type == 3)
			{
				return 18;
			}
			if (type == 6)
			{
				return 19;
			}
			if (type == 5)
			{
				return 20;
			}
			if (type == 1)
			{
				return 22;
			}
			if (type == 4)
			{
				return 38;
			}
			if (type == 7)
			{
				return 54;
			}
			if (type == 9)
			{
				return 107;
			}
			if (type == 10)
			{
				return 108;
			}
			if (type == 8)
			{
				return 124;
			}
			if (type == 11)
			{
				return 142;
			}
			if (type == 12)
			{
				return 160;
			}
			if (type == 13)
			{
				return 178;
			}
			if (type == 14)
			{
				return 207;
			}
			if (type == 15)
			{
				return 208;
			}
			if (type == 16)
			{
				return 209;
			}
			if (type == 17)
			{
				return 227;
			}
			if (type == 18)
			{
				return 228;
			}
			if (type == 19)
			{
				return 229;
			}
			if (type == 20)
			{
				return 353;
			}
			if (type == 21)
			{
				return 368;
			}
			if (type == 22)
			{
				return 369;
			}
			if (type == 23)
			{
				return 441;
			}
			return -1;
		}

		public void PlayerInteraction(int player)
		{
			if (this.playerInteraction[player])
			{
				return;
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				for (int i = 0; i < 200; i++)
				{
					if (i != this.whoAmI && Main.npc[i].active && (Main.npc[i].type == 13 || Main.npc[i].type == 14 || Main.npc[i].type == 15))
					{
						Main.npc[i].playerInteraction[player] = true;
					}
				}
			}
			if (this.type == 134 || this.type == 135 || this.type == 136)
			{
				for (int j = 0; j < 200; j++)
				{
					if (j != this.whoAmI && Main.npc[j].active && (Main.npc[j].type == 134 || Main.npc[j].type == 135 || Main.npc[j].type == 136))
					{
						Main.npc[j].playerInteraction[player] = true;
					}
				}
			}
			if (this.type == 35 || this.type == 36)
			{
				for (int k = 0; k < 200; k++)
				{
					if (k != this.whoAmI && Main.npc[k].active && (Main.npc[k].type == 35 || Main.npc[k].type == 36))
					{
						Main.npc[k].playerInteraction[player] = true;
					}
				}
			}
			if (this.type == 113 || this.type == 114)
			{
				for (int l = 0; l < 200; l++)
				{
					if (l != this.whoAmI && Main.npc[l].active && (Main.npc[l].type == 113 || Main.npc[l].type == 114))
					{
						Main.npc[l].playerInteraction[player] = true;
					}
				}
			}
			if (this.type >= 127 && this.type <= 131)
			{
				for (int m = 0; m < 200; m++)
				{
					if (m != this.whoAmI && Main.npc[m].active && Main.npc[m].type >= 127 && Main.npc[m].type <= 131)
					{
						Main.npc[m].playerInteraction[player] = true;
					}
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				for (int n = 0; n < 200; n++)
				{
					if (n != this.whoAmI && Main.npc[n].active && Main.npc[n].type >= 245 && Main.npc[n].type <= 249)
					{
						Main.npc[n].playerInteraction[player] = true;
					}
				}
			}
			if ((this.type == 396 || this.type == 397) && Main.npc[(int)this.ai[3]].active && Main.npc[(int)this.ai[3]].type == 398)
			{
				Main.npc[(int)this.ai[3]].playerInteraction[player] = true;
			}
			if ((this.type == 393 || this.type == 394) && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 395)
			{
				Main.npc[(int)this.ai[0]].playerInteraction[player] = true;
			}
			if (this.type == 492 && Main.npc[(int)this.ai[0]].active && Main.npc[(int)this.ai[0]].type == 491)
			{
				Main.npc[(int)this.ai[0]].playerInteraction[player] = true;
			}
			this.playerInteraction[player] = true;
		}

		public void ReflectProjectile(int i)
		{
			Main.PlaySound(3, (int)Main.projectile[i].position.X, (int)Main.projectile[i].position.Y, this.soundHit);
			for (int num = 0; num < 3; num++)
			{
				Vector2 vector2 = Main.projectile[i].position;
				int num1 = Main.projectile[i].width;
				int num2 = Main.projectile[i].height;
				Color color = new Color();
				int num3 = Dust.NewDust(vector2, num1, num2, 31, 0f, 0f, 0, color, 1f);
				Dust dust = Main.dust[num3];
				dust.velocity = dust.velocity * 0.3f;
			}
			Main.projectile[i].hostile = true;
			Main.projectile[i].friendly = false;
			Vector2 center = Main.player[Main.projectile[i].owner].Center - Main.projectile[i].Center;
			center.Normalize();
			center = center * Main.projectile[i].oldVelocity.Length();
			Main.projectile[i].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
			Main.projectile[i].velocity.Normalize();
			Projectile projectile = Main.projectile[i];
			projectile.velocity = projectile.velocity * center.Length();
			Projectile projectile1 = Main.projectile[i];
			projectile1.velocity = projectile1.velocity + (center * 20f);
			Main.projectile[i].velocity.Normalize();
			Projectile projectile2 = Main.projectile[i];
			projectile2.velocity = projectile2.velocity * center.Length();
			Projectile projectile3 = Main.projectile[i];
			projectile3.damage = projectile3.damage / 2;
			Main.projectile[i].penetrate = 1;
		}

		public void ReflectProjectiles(Rectangle myRect)
		{
			for (int i = 0; i < 1000; i++)
			{
				if (Main.projectile[i].active && Main.projectile[i].CanReflect() && myRect.Intersects(Main.projectile[i].Hitbox))
				{
					this.ReflectProjectile(i);
				}
			}
		}

		public static void ReleaseNPC(int x, int y, int Type, int Style, int who)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(71, -1, -1, "", x, (float)y, (float)Type, (float)Style, 0, 0, 0);
				return;
			}
			if (Main.npcCatchable[Type] && NPC.CanReleaseNPCs(who))
			{
				if (Type == 148)
				{
					int type = Type + Main.rand.Next(2);
					int num = NPC.NewNPC(x, y, type, 0, 0f, 0f, 0f, 0f, 255);
					Main.npc[num].releaseOwner = (short)who;
					return;
				}
				int num1 = NPC.NewNPC(x, y, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Type == 356)
				{
					Main.npc[num1].ai[2] = (float)Style;
				}
				Main.npc[num1].releaseOwner = (short)who;
			}
		}

		public static void ResetKillCount()
		{
			for (int i = 0; i < 540; i++)
			{
				NPC.killCount[i] = 0;
			}
		}

		public void scaleStats()
		{
			if (!Main.expertMode)
			{
				return;
			}
			if (this.friendly)
			{
				int num = this.life;
			}
			if (this.type != 397 && this.type != 396 && this.type != 398 && (this.life <= 5 || this.damage == 0 || this.friendly || this.townNPC))
			{
				return;
			}
			if (this.type != 5 && (this.type < 13 || this.type > 15) && this.type != 267 && (this.type < 113 || this.type > 119) && Main.hardMode && !this.boss && this.lifeMax < 1000)
			{
				int num1 = this.damage + this.defense + this.lifeMax / 4;
				int num2 = 80;
				if (NPC.downedPlantBoss)
				{
					num2 = num2 + 20;
				}
				if (num1 < num2)
				{
					float single = (float)(num2 / num1);
					this.damage = (int)((double)((float)this.damage * single) * 0.9);
					this.defense = (int)((float)this.defense * single);
					this.lifeMax = (int)((double)((float)this.lifeMax * single) * 1.1);
					this.@value = (float)((int)((double)(this.@value * single) * 0.8));
				}
			}
			this.@value = (float)((int)((double)this.@value * 2.5));
			this.lifeMax = (int)((float)this.lifeMax * Main.expertLife);
			this.damage = (int)((float)this.damage * Main.expertDamage);
			NPC nPC = this;
			nPC.knockBackResist = nPC.knockBackResist * Main.expertKnockBack;
			int num3 = 0;
			float single1 = 1f;
			float single2 = 0.35f;
			if (Main.netMode != 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active)
					{
						num3++;
					}
				}
				for (int j = 1; j < num3; j++)
				{
					single1 = single1 + single2;
					single2 = single2 + (1f - single2) / 3f;
				}
			}
			if (single1 > 8f)
			{
				single1 = (single1 * 2f + 8f) / 3f;
			}
			if (single1 > 1000f)
			{
				single1 = 1000f;
			}
			if (this.type == 5)
			{
				this.lifeMax = (int)((float)this.lifeMax * 0.75f);
			}
			if (this.type == 4)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)single1);
			}
			if (this.type >= 13 && this.type <= 15)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				if (this.type == 13)
				{
					this.damage = (int)((double)this.damage * 1.1);
				}
				if (this.type == 14)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				if (this.type == 15)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				NPC nPC1 = this;
				nPC1.scale = nPC1.scale * 1.2f;
				NPC nPC2 = this;
				nPC2.defense = nPC2.defense + 2;
			}
			if (this.type == 266)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)single1);
				this.damage = (int)((double)this.damage * 0.9);
				NPC nPC3 = this;
				nPC3.scale = nPC3.scale * 1.05f;
			}
			if (this.type == 50)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 471)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(single1 * 2f + 1f) / 3);
			}
			if (this.type == 472)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.85 * (double)(single1 + 1f) / 2);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 222)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				this.damage = (int)((double)this.damage * 0.9);
			}
			if (this.type == 210 || this.type == 211)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
			}
			if (this.type == 35)
			{
				this.lifeMax = (int)((float)this.lifeMax * single1);
				this.damage = (int)((double)this.damage * 1.1);
			}
			else if (this.type == 36)
			{
				this.lifeMax = (int)((double)this.lifeMax * 1.3 * (double)single1);
				this.damage = (int)((double)this.damage * 1.1);
			}
			if (this.type == 113 || this.type == 114)
			{
				NPC nPC4 = this;
				nPC4.defense = nPC4.defense + 6;
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				this.damage = (int)((double)this.damage * 1.5);
			}
			else if (this.type == 115)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				if (num3 > 1)
				{
					NPC nPC5 = this;
					nPC5.knockBackResist = nPC5.knockBackResist * (1f - single2);
				}
				NPC nPC6 = this;
				nPC6.defense = nPC6.defense + 6;
			}
			else if (this.type == 116)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				if (num3 > 1)
				{
					NPC nPC7 = this;
					nPC7.knockBackResist = nPC7.knockBackResist * (1f - single2);
				}
			}
			else if (this.type == 117 || this.type == 118 || this.type == 119)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.8);
			}
			if (this.type >= 134 && this.type <= 136)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)single1);
				if (this.type == 134)
				{
					this.damage = this.damage * 2;
				}
				if (this.type == 135)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				if (this.type == 136)
				{
					this.damage = (int)((double)this.damage * 0.8);
				}
				NPC nPC8 = this;
				nPC8.scale = nPC8.scale * 1.05f;
			}
			else if (this.type == 139)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.65 * (double)(single1 * 2f + 1f) / 3);
				this.damage = (int)((double)this.damage * 0.75);
				NPC nPC9 = this;
				nPC9.scale = nPC9.scale * 1.05f;
			}
			if (this.type >= 127 && this.type <= 131)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				this.damage = (int)((double)this.damage * 0.85);
			}
			if (this.type >= 125 && this.type <= 126)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type >= 262 && this.type <= 262)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.7 * (double)single1);
				this.damage = (int)((double)this.damage * 1.15);
			}
			if (this.type >= 245 && this.type <= 249)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)single1);
				this.damage = (int)((double)this.damage * 0.8);
			}
			if (this.type == 370)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.6 * (double)single1);
				this.damage = (int)((double)this.damage * 0.7);
			}
			else if (this.type == 371 || this.type == 372 || this.type == 373)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75);
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 439 || this.type == 440 || this.type >= 454 && this.type <= 459 || this.type == 522 || this.type == 523)
			{
				this.lifeMax = (int)((float)this.lifeMax * 0.625f * single1);
				this.damage = (int)((double)this.damage * 0.75);
			}
			if (this.type == 397 || this.type == 396 || this.type == 398)
			{
				this.lifeMax = (int)((double)this.lifeMax * 0.75 * (double)single1);
				this.damage = (int)((double)this.damage * 0.75);
			}
			switch (this.type)
			{
				case 305:
				case 306:
				case 307:
				case 308:
				case 309:
				case 310:
				case 311:
				case 312:
				case 313:
				case 314:
				case 315:
				case 326:
				case 329:
				case 330:
				{
					this.lifeMax = (int)((double)this.lifeMax * 0.75);
					this.damage = (int)((double)this.damage * 0.75);
					switch (this.type)
					{
						case 338:
						case 339:
						case 340:
						case 341:
						case 342:
						case 343:
						case 347:
						case 348:
						case 349:
						case 350:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.75);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
						case 344:
						case 345:
						case 346:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.65);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
					}
					this.defDefense = this.defense;
					this.defDamage = this.damage;
					this.life = this.lifeMax;
					return;
				}
				case 316:
				case 317:
				case 318:
				case 319:
				case 320:
				case 321:
				case 322:
				case 323:
				case 324:
				case 328:
				{
					switch (this.type)
					{
						case 338:
						case 339:
						case 340:
						case 341:
						case 342:
						case 343:
						case 347:
						case 348:
						case 349:
						case 350:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.75);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
						case 344:
						case 345:
						case 346:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.65);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
					}
					this.defDefense = this.defense;
					this.defDamage = this.damage;
					this.life = this.lifeMax;
					return;
				}
				case 325:
				case 327:
				{
					this.lifeMax = (int)((double)this.lifeMax * 0.65);
					this.damage = (int)((double)this.damage * 0.75);
					switch (this.type)
					{
						case 338:
						case 339:
						case 340:
						case 341:
						case 342:
						case 343:
						case 347:
						case 348:
						case 349:
						case 350:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.75);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
						case 344:
						case 345:
						case 346:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.65);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
					}
					this.defDefense = this.defense;
					this.defDamage = this.damage;
					this.life = this.lifeMax;
					return;
				}
				default:
				{
					switch (this.type)
					{
						case 338:
						case 339:
						case 340:
						case 341:
						case 342:
						case 343:
						case 347:
						case 348:
						case 349:
						case 350:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.75);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
						case 344:
						case 345:
						case 346:
						{
							this.lifeMax = (int)((double)this.lifeMax * 0.65);
							this.damage = (int)((double)this.damage * 0.75);
							break;
						}
					}
					this.defDefense = this.defense;
					this.defDamage = this.damage;
					this.life = this.lifeMax;
					return;
				}
			}
		}

		public void SetDefaults(string Name)
		{
			bool flag = false;
			this.SetDefaults(0, -1f);
			if (Name == "Slimeling")
			{
				this.SetDefaults(81, 0.6f);
				this.name = Name;
				this.damage = 45;
				this.defense = 10;
				this.life = 90;
				NPC nPC = this;
				nPC.knockBackResist = nPC.knockBackResist * 1.2f;
				this.@value = 100f;
				this.netID = -1;
				flag = true;
			}
			else if (Name == "Slimer2")
			{
				this.SetDefaults(81, 0.9f);
				this.displayName = "Slimer";
				this.name = Name;
				this.damage = 45;
				this.defense = 20;
				this.life = 90;
				NPC nPC1 = this;
				nPC1.knockBackResist = nPC1.knockBackResist * 1.2f;
				this.@value = 100f;
				this.netID = -2;
				flag = true;
			}
			else if (Name == "Green Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 6;
				this.defense = 0;
				this.life = 14;
				NPC nPC2 = this;
				nPC2.knockBackResist = nPC2.knockBackResist * 1.2f;
				this.color = new Color(0, 220, 40, 100);
				this.@value = 3f;
				this.netID = -3;
				flag = true;
			}
			else if (Name == "Pinky")
			{
				this.SetDefaults(1, 0.6f);
				this.name = Name;
				this.damage = 5;
				this.defense = 5;
				this.life = 150;
				NPC nPC3 = this;
				nPC3.knockBackResist = nPC3.knockBackResist * 1.4f;
				this.color = new Color(250, 30, 90, 90);
				this.@value = 10000f;
				this.netID = -4;
				flag = true;
			}
			else if (Name == "Baby Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 13;
				this.defense = 4;
				this.life = 30;
				NPC nPC4 = this;
				nPC4.knockBackResist = nPC4.knockBackResist * 0.95f;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.@value = 10f;
				this.netID = -5;
				flag = true;
			}
			else if (Name == "Black Slime")
			{
				this.SetDefaults(1, 1.05f);
				this.name = Name;
				this.damage = 15;
				this.defense = 4;
				this.life = 45;
				this.color = new Color(0, 0, 0, 50);
				this.@value = 20f;
				this.netID = -6;
				flag = true;
			}
			else if (Name == "Purple Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 12;
				this.defense = 6;
				this.life = 40;
				NPC nPC5 = this;
				nPC5.knockBackResist = nPC5.knockBackResist * 0.9f;
				this.color = new Color(200, 0, 255, 150);
				this.@value = 10f;
				this.netID = -7;
				flag = true;
			}
			else if (Name == "Red Slime")
			{
				this.SetDefaults(1, 1.025f);
				this.name = Name;
				this.damage = 12;
				this.defense = 4;
				this.life = 35;
				this.color = new Color(255, 30, 0, 100);
				this.@value = 8f;
				this.netID = -8;
				flag = true;
			}
			else if (Name == "Yellow Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 15;
				this.defense = 7;
				this.life = 45;
				this.color = new Color(255, 255, 0, 100);
				this.@value = 10f;
				this.netID = -9;
				flag = true;
			}
			else if (Name == "Jungle Slime")
			{
				this.SetDefaults(1, 1.1f);
				this.name = Name;
				this.damage = 18;
				this.defense = 6;
				this.life = 60;
				this.color = new Color(143, 215, 93, 100);
				this.@value = 500f;
				this.netID = -10;
				flag = true;
			}
			else if (Name == "Little Eater")
			{
				this.SetDefaults(6, 0.85f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC6 = this;
				nPC6.knockBackResist = nPC6.knockBackResist * (2f - this.scale);
				this.netID = -11;
			}
			else if (Name == "Big Eater")
			{
				this.SetDefaults(6, 1.15f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC7 = this;
				nPC7.knockBackResist = nPC7.knockBackResist * (2f - this.scale);
				this.netID = -12;
			}
			else if (Name == "Short Bones")
			{
				this.SetDefaults(31, 0.9f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.netID = -13;
			}
			else if (Name == "Big Boned")
			{
				this.SetDefaults(31, 1.15f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = (int)((double)((float)this.life * this.scale) * 1.1);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = 2f;
				NPC nPC8 = this;
				nPC8.knockBackResist = nPC8.knockBackResist * (2f - this.scale);
				this.netID = -14;
			}
			else if (Name == "Heavy Skeleton")
			{
				this.SetDefaults(77, 1.15f);
				this.name = Name;
				this.displayName = "Armored Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = 400;
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = 2f;
				NPC nPC9 = this;
				nPC9.knockBackResist = nPC9.knockBackResist * (2f - this.scale);
				this.height = 44;
				this.netID = -15;
			}
			else if (Name == "Little Stinger")
			{
				this.SetDefaults(42, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC10 = this;
				nPC10.knockBackResist = nPC10.knockBackResist * (2f - this.scale);
				this.netID = -16;
			}
			else if (Name == "Big Stinger")
			{
				this.SetDefaults(42, 1.2f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC11 = this;
				nPC11.knockBackResist = nPC11.knockBackResist * (2f - this.scale);
				this.netID = -17;
			}
			else if (Name == "Tiny Moss Hornet")
			{
				this.SetDefaults(176, 0.8f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC12 = this;
				nPC12.knockBackResist = nPC12.knockBackResist * (2f - this.scale);
				this.netID = -18;
			}
			else if (Name == "Little Moss Hornet")
			{
				this.SetDefaults(176, 0.9f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC13 = this;
				nPC13.knockBackResist = nPC13.knockBackResist * (2f - this.scale);
				this.netID = -19;
			}
			else if (Name == "Big Moss Hornet")
			{
				this.SetDefaults(176, 1.1f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC14 = this;
				nPC14.knockBackResist = nPC14.knockBackResist * (2f - this.scale);
				this.netID = -20;
			}
			else if (Name == "Giant Moss Hornet")
			{
				this.SetDefaults(176, 1.2f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC15 = this;
				nPC15.knockBackResist = nPC15.knockBackResist * (2f - this.scale);
				this.netID = -21;
			}
			else if (Name == "Little Crimera")
			{
				this.SetDefaults(173, 0.85f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC16 = this;
				nPC16.knockBackResist = nPC16.knockBackResist * (2f - this.scale);
				this.netID = -22;
			}
			else if (Name == "Big Crimera")
			{
				this.SetDefaults(173, 1.15f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC17 = this;
				nPC17.knockBackResist = nPC17.knockBackResist * (2f - this.scale);
				this.netID = -23;
			}
			else if (Name == "Little Crimslime")
			{
				this.SetDefaults(183, 0.85f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC18 = this;
				nPC18.knockBackResist = nPC18.knockBackResist * (2f - this.scale);
				this.netID = -24;
			}
			else if (Name == "Big Crimslime")
			{
				this.SetDefaults(183, 1.15f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC19 = this;
				nPC19.knockBackResist = nPC19.knockBackResist * (2f - this.scale);
				this.netID = -25;
			}
			else if (Name == "Small Zombie")
			{
				this.SetDefaults(3, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC20 = this;
				nPC20.knockBackResist = nPC20.knockBackResist * (2f - this.scale);
				this.netID = -26;
			}
			else if (Name == "Big Zombie")
			{
				this.SetDefaults(3, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC21 = this;
				nPC21.knockBackResist = nPC21.knockBackResist * (2f - this.scale);
				this.netID = -27;
			}
			else if (Name == "Small Bald Zombie")
			{
				this.SetDefaults(132, 0.85f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC22 = this;
				nPC22.knockBackResist = nPC22.knockBackResist * (2f - this.scale);
				this.netID = -28;
			}
			else if (Name == "Big Bald Zombie")
			{
				this.SetDefaults(132, 1.15f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC23 = this;
				nPC23.knockBackResist = nPC23.knockBackResist * (2f - this.scale);
				this.netID = -29;
			}
			else if (Name == "Small Pincushion Zombie")
			{
				this.SetDefaults(186, 0.93f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC24 = this;
				nPC24.knockBackResist = nPC24.knockBackResist * (2f - this.scale);
				this.netID = -30;
			}
			else if (Name == "Big Pincushion Zombie")
			{
				this.SetDefaults(186, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC25 = this;
				nPC25.knockBackResist = nPC25.knockBackResist * (2f - this.scale);
				this.netID = -31;
			}
			else if (Name == "Small Slimed Zombie")
			{
				this.SetDefaults(187, 0.89f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC26 = this;
				nPC26.knockBackResist = nPC26.knockBackResist * (2f - this.scale);
				this.netID = -32;
			}
			else if (Name == "Big Slimed Zombie")
			{
				this.SetDefaults(187, 1.11f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC27 = this;
				nPC27.knockBackResist = nPC27.knockBackResist * (2f - this.scale);
				this.netID = -33;
			}
			else if (Name == "Small Swamp Zombie")
			{
				this.SetDefaults(188, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC28 = this;
				nPC28.knockBackResist = nPC28.knockBackResist * (2f - this.scale);
				this.netID = -34;
			}
			else if (Name == "Big Swamp Zombie")
			{
				this.SetDefaults(188, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC29 = this;
				nPC29.knockBackResist = nPC29.knockBackResist * (2f - this.scale);
				this.netID = -35;
			}
			else if (Name == "Small Twiggy Zombie")
			{
				this.SetDefaults(189, 0.92f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC30 = this;
				nPC30.knockBackResist = nPC30.knockBackResist * (2f - this.scale);
				this.netID = -36;
			}
			else if (Name == "Big Twiggy Zombie")
			{
				this.SetDefaults(189, 1.08f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC31 = this;
				nPC31.knockBackResist = nPC31.knockBackResist * (2f - this.scale);
				this.netID = -37;
			}
			else if (Name == "Cataract Eye 2")
			{
				this.SetDefaults(190, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC32 = this;
				nPC32.knockBackResist = nPC32.knockBackResist * (2f - this.scale);
				this.netID = -38;
			}
			else if (Name == "Sleepy Eye 2")
			{
				this.SetDefaults(191, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC33 = this;
				nPC33.knockBackResist = nPC33.knockBackResist * (2f - this.scale);
				this.netID = -39;
			}
			else if (Name == "Dialated Eye 2")
			{
				this.SetDefaults(192, 0.9f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC34 = this;
				nPC34.knockBackResist = nPC34.knockBackResist * (2f - this.scale);
				this.netID = -40;
			}
			else if (Name == "Green Eye 2")
			{
				this.SetDefaults(193, 0.85f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC35 = this;
				nPC35.knockBackResist = nPC35.knockBackResist * (2f - this.scale);
				this.netID = -41;
			}
			else if (Name == "Purple Eye 2")
			{
				this.SetDefaults(194, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC36 = this;
				nPC36.knockBackResist = nPC36.knockBackResist * (2f - this.scale);
				this.netID = -42;
			}
			else if (Name == "Demon Eye 2")
			{
				this.SetDefaults(2, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC37 = this;
				nPC37.knockBackResist = nPC37.knockBackResist * (2f - this.scale);
				this.netID = -43;
			}
			else if (Name == "Small Female Zombie")
			{
				this.SetDefaults(200, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC38 = this;
				nPC38.knockBackResist = nPC38.knockBackResist * (2f - this.scale);
				this.netID = -44;
			}
			else if (Name == "Big Female Zombie")
			{
				this.SetDefaults(200, 1.05f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC39 = this;
				nPC39.knockBackResist = nPC39.knockBackResist * (2f - this.scale);
				this.netID = -45;
			}
			else if (Name == "Small Skeleton")
			{
				this.SetDefaults(21, 0.9f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC40 = this;
				nPC40.knockBackResist = nPC40.knockBackResist * (2f - this.scale);
				this.netID = -46;
			}
			else if (Name == "Big Skeleton")
			{
				this.SetDefaults(21, 1.1f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC41 = this;
				nPC41.knockBackResist = nPC41.knockBackResist * (2f - this.scale);
				this.netID = -47;
			}
			else if (Name == "Small Headache Skeleton")
			{
				this.SetDefaults(201, 0.93f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC42 = this;
				nPC42.knockBackResist = nPC42.knockBackResist * (2f - this.scale);
				this.netID = -48;
			}
			else if (Name == "Big Headache Skeleton")
			{
				this.SetDefaults(201, 1.07f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC43 = this;
				nPC43.knockBackResist = nPC43.knockBackResist * (2f - this.scale);
				this.netID = -49;
			}
			else if (Name == "Small Misassembled Skeleton")
			{
				this.SetDefaults(202, 0.87f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC44 = this;
				nPC44.knockBackResist = nPC44.knockBackResist * (2f - this.scale);
				this.netID = -50;
			}
			else if (Name == "Big Misassembled Skeleton")
			{
				this.SetDefaults(202, 1.13f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC45 = this;
				nPC45.knockBackResist = nPC45.knockBackResist * (2f - this.scale);
				this.netID = -51;
			}
			else if (Name == "Small Pantless Skeleton")
			{
				this.SetDefaults(203, 0.85f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC46 = this;
				nPC46.knockBackResist = nPC46.knockBackResist * (2f - this.scale);
				this.netID = -52;
			}
			else if (Name == "Big Pantless Skeleton")
			{
				this.SetDefaults(203, 1.15f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC47 = this;
				nPC47.knockBackResist = nPC47.knockBackResist * (2f - this.scale);
				this.netID = -53;
			}
			else if (Name == "Small Rain Zombie")
			{
				this.SetDefaults(223, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC48 = this;
				nPC48.knockBackResist = nPC48.knockBackResist * (2f - this.scale);
				this.netID = -54;
			}
			else if (Name == "Big Rain Zombie")
			{
				this.SetDefaults(223, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC49 = this;
				nPC49.knockBackResist = nPC49.knockBackResist * (2f - this.scale);
				this.netID = -55;
			}
			else if (Name == "Little Hornet Fatty")
			{
				this.SetDefaults(231, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC50 = this;
				nPC50.knockBackResist = nPC50.knockBackResist * (2f - this.scale);
				this.netID = -56;
			}
			else if (Name == "Big Hornet Fatty")
			{
				this.SetDefaults(231, 1.25f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC51 = this;
				nPC51.knockBackResist = nPC51.knockBackResist * (2f - this.scale);
				this.netID = -57;
			}
			else if (Name == "Little Hornet Honey")
			{
				this.SetDefaults(232, 0.8f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC52 = this;
				nPC52.knockBackResist = nPC52.knockBackResist * (2f - this.scale);
				this.netID = -58;
			}
			else if (Name == "Big Hornet Honey")
			{
				this.SetDefaults(232, 1.15f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC53 = this;
				nPC53.knockBackResist = nPC53.knockBackResist * (2f - this.scale);
				this.netID = -59;
			}
			else if (Name == "Little Hornet Leafy")
			{
				this.SetDefaults(233, 0.92f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC54 = this;
				nPC54.knockBackResist = nPC54.knockBackResist * (2f - this.scale);
				this.netID = -60;
			}
			else if (Name == "Big Hornet Leafy")
			{
				this.SetDefaults(233, 1.1f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC55 = this;
				nPC55.knockBackResist = nPC55.knockBackResist * (2f - this.scale);
				this.netID = -61;
			}
			else if (Name == "Little Hornet Spikey")
			{
				this.SetDefaults(234, 0.78f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC56 = this;
				nPC56.knockBackResist = nPC56.knockBackResist * (2f - this.scale);
				this.netID = -62;
			}
			else if (Name == "Big Hornet Spikey")
			{
				this.SetDefaults(234, 1.16f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC57 = this;
				nPC57.knockBackResist = nPC57.knockBackResist * (2f - this.scale);
				this.netID = -63;
			}
			else if (Name == "Little Hornet Stingy")
			{
				this.SetDefaults(235, 0.87f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC58 = this;
				nPC58.knockBackResist = nPC58.knockBackResist * (2f - this.scale);
				this.netID = -64;
			}
			else if (Name == "Big Hornet Stingy")
			{
				this.SetDefaults(235, 1.21f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.@value = (float)((int)((float)this.@value * this.scale));
				this.npcSlots = this.npcSlots * this.scale;
				NPC nPC59 = this;
				nPC59.knockBackResist = nPC59.knockBackResist * (2f - this.scale);
				this.netID = -65;
			}
			else if (Name == "")
			{
				this.active = false;
			}
			else
			{
				for (int i = 1; i < 540; i++)
				{
					if (Main.npcName[i] == Name)
					{
						this.SetDefaults(i, -1f);
						return;
					}
				}
				this.SetDefaults(0, -1f);
				this.active = false;
			}
			this.displayName = Lang.npcName(this.netID, false);
			this.lifeMax = this.life;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			if (Main.expertMode && flag)
			{
				this.scaleStats();
			}
		}

		public void SetDefaults(int Type, float scaleOverride = -1f)
		{
			this.takenDamageMultiplier = 1f;
			this.extraValue = 0f;
			for (int i = 0; i < (int)this.playerInteraction.Length; i++)
			{
				this.playerInteraction[i] = false;
			}
			this.rarity = 0;
			this.dontCountMe = false;
			this.releaseOwner = 255;
			this.catchItem = 0;
			this.npcNameLookup = 0;
			this.netStream = 32;
			bool flag = false;
			this.netID = 0;
			this.netAlways = false;
			this.netSpam = 0;
			int trailCacheLength = 10;
			if (Type >= 0)
			{
				trailCacheLength = NPCID.Sets.TrailCacheLength[Type];
			}
			if (trailCacheLength != (int)this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, trailCacheLength);
				Array.Resize<float>(ref this.oldRot, trailCacheLength);
			}
			for (int j = 0; j < (int)this.oldPos.Length; j++)
			{
				this.oldRot[j] = 0f;
				this.oldPos[j].X = 0f;
				this.oldPos[j].Y = 0f;
			}
			for (int k = 0; k < 5; k++)
			{
				this.buffTime[k] = 0;
				this.buffType[k] = 0;
			}
			for (int l = 0; l < 191; l++)
			{
				this.buffImmune[l] = false;
			}
			this.setFrameSize = false;
			this.buffImmune[31] = true;
			this.netSkip = -2;
			this.realLife = -1;
			this.lifeRegen = 0;
			this.lifeRegenCount = 0;
			this.poisoned = false;
			this.soulDrain = false;
			this.venom = false;
			this.shadowFlame = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.confused = false;
			this.loveStruck = false;
			this.stinky = false;
			this.dryadWard = false;
			this.onFire2 = false;
			this.justHit = false;
			this.dontTakeDamage = false;
			this.npcSlots = 1f;
			this.lavaImmune = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.townNPC = false;
			this.homeless = false;
			this.homeTileX = -1;
			this.homeTileY = -1;
			this.friendly = false;
			this.behindTiles = false;
			this.boss = false;
			this.noTileCollide = false;
			this.rotation = 0f;
			this.active = true;
			this.alpha = 0;
			this.color = new Color();
			this.collideX = false;
			this.collideY = false;
			this.direction = 0;
			this.oldDirection = this.direction;
			this.frameCounter = 0;
			this.netUpdate = true;
			this.netUpdate2 = false;
			this.knockBackResist = 1f;
			this.name = "";
			this.displayName = "";
			this.noGravity = false;
			this.scale = 1f;
			this.soundHit = 0;
			this.soundKilled = 0;
			this.spriteDirection = -1;
			this.target = 255;
			this.oldTarget = this.target;
			this.targetRect = new Rectangle();
			this.timeLeft = NPC.activeTime;
			this.type = Type;
			this.@value = 0f;
			this.coldDamage = false;
			this.trapImmune = false;
			this.hide = false;
			this.immortal = false;
			this.chaseable = true;
			this.breath = 200;
			this.breathCounter = 0;
			this.reflectingProjectiles = false;
			this.canGhostHeal = true;
			this.javelined = false;
			this.daybreak = false;
			this.celled = false;
			this.dryadBane = false;
			for (int m = 0; m < NPC.maxAI; m++)
			{
				this.ai[m] = 0f;
			}
			for (int n = 0; n < NPC.maxAI; n++)
			{
				this.localAI[n] = 0f;
			}
			if (this.type == 1)
			{
				this.name = "Blue Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.color = new Color(0, 80, 255, 100);
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 2)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 3)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 430)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 431)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 432)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 433)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.@value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 434)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 435)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.@value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 436)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 4)
			{
				this.name = "Eye of Cthulhu";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 4;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 2800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.@value = 30000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 5)
			{
				this.name = "Servant of Cthulhu";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 5;
				this.damage = 12;
				this.defense = 0;
				this.lifeMax = 8;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 6)
			{
				this.npcSlots = 1f;
				this.name = "Eater of Souls";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.@value = 90f;
			}
			else if (this.type == 7)
			{
				this.displayName = "Devourer";
				this.npcSlots = 3.5f;
				this.name = "Devourer Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 31;
				this.defense = 2;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 140f;
				this.netAlways = true;
			}
			else if (this.type == 8)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 9)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 140f;
				this.dontCountMe = true;
			}
			else if (this.type == 10)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 8;
				this.defense = 0;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 40f;
			}
			else if (this.type == 11)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 12)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 40f;
				this.dontCountMe = true;
			}
			else if (this.type == 13)
			{
				this.displayName = "Eater of Worlds";
				this.npcSlots = 5f;
				this.name = "Eater of Worlds Head";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 2;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 14)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 4;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 15)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 16)
			{
				this.npcSlots = 2f;
				this.name = "Mother Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 20;
				this.defense = 7;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.@value = 75f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 17)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 18)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Nurse";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 19)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Arms Dealer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 20)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dryad";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 21)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 22)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Guide";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 23)
			{
				this.name = "Meteor Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 6;
				this.lifeMax = 26;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.@value = 80f;
				this.knockBackResist = 0.4f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 24)
			{
				this.npcSlots = 3f;
				this.name = "Fire Imp";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 30;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.lavaImmune = true;
				this.@value = 350f;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 25)
			{
				this.name = "Burning Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 100;
			}
			else if (this.type == 31)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 8;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.8f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 32)
			{
				this.name = "Dark Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 140f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 33)
			{
				this.name = "Water Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 255;
				this.knockBackResist = 0f;
			}
			else if (this.type == 34)
			{
				this.name = "Cursed Skull";
				this.width = 26;
				this.height = 28;
				this.aiStyle = 10;
				this.damage = 35;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.@value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 35)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Head";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 32;
				this.defense = 10;
				this.lifeMax = 4400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.@value = 50000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				bool flag1 = true;
				this.buffImmune[183] = true;
				bool flag2 = flag1;
				bool flag3 = flag2;
				this.buffImmune[169] = flag2;
				this.buffImmune[189] = flag3;
			}
			else if (this.type == 36)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Hand";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 12;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 37)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Old Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 38)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Demolitionist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 39)
			{
				this.npcSlots = 6f;
				this.name = "Bone Serpent Head";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 40)
			{
				this.name = "Bone Serpent Body";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 41)
			{
				this.name = "Bone Serpent Tail";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 10;
				this.defense = 18;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 42)
			{
				this.name = "Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 48;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.@value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 43)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Man Eater";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 34;
				this.defense = 10;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.@value = 350f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 44)
			{
				this.name = "Undead Miner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 9;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 250f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 45)
			{
				this.name = "Tim";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 4;
			}
			else if (this.type == 46 || this.type == 303 || this.type == 337)
			{
				this.name = "Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2019;
			}
			else if (this.type == 47)
			{
				this.name = "Corrupt Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 48)
			{
				this.name = "Harpy";
				this.width = 24;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.@value = 300f;
			}
			else if (this.type == 49)
			{
				this.npcSlots = 0.5f;
				this.name = "Cave Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 13;
				this.defense = 2;
				this.lifeMax = 16;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.@value = 90f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 50)
			{
				this.boss = true;
				this.name = "King Slime";
				this.width = 98;
				this.height = 92;
				this.aiStyle = 15;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 2000;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 30;
				this.@value = 10000f;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.timeLeft = NPC.activeTime * 30;
			}
			else if (this.type == 51)
			{
				this.npcSlots = 0.5f;
				this.name = "Jungle Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.@value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 52)
			{
				this.name = "Doctor Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 53)
			{
				this.name = "The Groom";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 54)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Clothier";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 55)
			{
				this.noGravity = true;
				this.name = "Goldfish";
				this.width = 20;
				this.height = 18;
				this.aiStyle = 16;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.catchItem = 261;
			}
			else if (this.type == 56)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Snatcher";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.@value = 90f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 57)
			{
				this.noGravity = true;
				this.name = "Corrupt Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
			}
			else if (this.type == 58)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Piranha";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 25;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 50f;
			}
			else if (this.type == 59)
			{
				this.name = "Lava Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 15;
				this.defense = 10;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 1.1f;
				this.alpha = 50;
				this.lavaImmune = true;
				this.@value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 60)
			{
				this.npcSlots = 0.5f;
				this.name = "Hellbat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 35;
				this.defense = 8;
				this.lifeMax = 46;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.@value = 120f;
				this.scale = 1.1f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 61)
			{
				this.name = "Vulture";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 17;
				this.damage = 15;
				this.defense = 4;
				this.lifeMax = 40;
				this.knockBackResist = 0.8f;
				this.soundHit = 28;
				this.soundKilled = 31;
				this.@value = 60f;
			}
			else if (this.type == 62)
			{
				this.npcSlots = 2f;
				this.name = "Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 120;
				this.soundHit = 21;
				this.knockBackResist = 0.8f;
				this.soundKilled = 24;
				this.@value = 300f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 63)
			{
				this.noGravity = true;
				this.name = "Blue Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 25;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.@value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 64)
			{
				this.noGravity = true;
				this.name = "Pink Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.@value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 65)
			{
				this.noGravity = true;
				this.name = "Shark";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 16;
				this.damage = 40;
				this.defense = 2;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 400f;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 66)
			{
				this.npcSlots = 2f;
				this.name = "Voodoo Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 1000f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 67)
			{
				this.name = "Crab";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 60f;
			}
			else if (this.type == 68)
			{
				this.name = "Dungeon Guardian";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 1000;
				this.defense = 9999;
				this.lifeMax = 9999;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				bool flag4 = true;
				this.buffImmune[183] = true;
				bool flag5 = flag4;
				bool flag6 = flag5;
				this.buffImmune[169] = flag5;
				this.buffImmune[189] = flag6;
			}
			else if (this.type == 69)
			{
				this.name = "Antlion";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 19;
				this.damage = 10;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 31;
				this.soundKilled = 34;
				this.knockBackResist = 0f;
				this.@value = 60f;
				this.behindTiles = true;
			}
			else if (this.type == 70)
			{
				this.npcSlots = 0.3f;
				this.name = "Spike Ball";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 20;
				this.damage = 32;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.scale = 1.5f;
			}
			else if (this.type == 71)
			{
				this.npcSlots = 2f;
				this.name = "Dungeon Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 30;
				this.defense = 7;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 60;
				this.@value = 150f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 72)
			{
				this.npcSlots = 0.3f;
				this.name = "Blazing Wheel";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 21;
				this.damage = 24;
				this.defense = 100;
				this.lifeMax = 100;
				this.alpha = 100;
				this.behindTiles = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 73)
			{
				this.name = "Goblin Scout";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.@value = 200f;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.name = "Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				if (this.type == 74)
				{
					this.catchItem = 2015;
				}
				if (this.type == 297)
				{
					this.catchItem = 2016;
				}
				if (this.type == 298)
				{
					this.catchItem = 2017;
				}
				this.npcSlots = 0.4f;
			}
			else if (this.type == 75)
			{
				this.noGravity = true;
				this.name = "Pixie";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.@value = 350f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 77)
			{
				this.name = "Armored Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 78)
			{
				this.name = "Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 130;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.6f;
				this.@value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 79)
			{
				this.name = "Dark Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.@value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 80)
			{
				this.name = "Light Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.55f;
				this.@value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 81)
			{
				this.name = "Corrupt Slime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 170;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.@value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 82)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Wraith";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 54;
				this.soundKilled = 52;
				this.alpha = 100;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 83)
			{
				this.name = "Cursed Hammer";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 84)
			{
				this.name = "Enchanted Sword";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 85)
			{
				this.name = "Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.@value = 100000f;
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 4;
			}
			else if (this.type == 86)
			{
				this.name = "Unicorn";
				this.width = 46;
				this.height = 42;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0.3f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 87)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Wyvern Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 88)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Legs";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 89)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 2000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 90)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 2";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 91)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 3";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 92)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.dontCountMe = true;
			}
			else if (this.type == 93)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 16;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 4;
				this.@value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 94)
			{
				this.npcSlots = 1f;
				this.name = "Corruptor";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 5;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.55f;
				this.@value = 500f;
			}
			else if (this.type == 95)
			{
				this.displayName = "Digger";
				this.name = "Digger Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 45;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.@value = 300f;
			}
			else if (this.type == 96)
			{
				this.displayName = "Digger";
				this.name = "Digger Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 28;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.@value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 97)
			{
				this.displayName = "Digger";
				this.name = "Digger Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.@value = 300f;
				this.dontCountMe = true;
			}
			else if (this.type == 98)
			{
				this.displayName = "World Feeder";
				this.npcSlots = 3.5f;
				this.name = "Seeker Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 70;
				this.defense = 36;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 700f;
			}
			else if (this.type == 99)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 55;
				this.defense = 40;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 100)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 44;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 700f;
				this.dontCountMe = true;
			}
			else if (this.type == 101)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.name = "Clinger";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 320;
				this.soundHit = 1;
				this.knockBackResist = 0.2f;
				this.soundKilled = 1;
				this.@value = 600f;
			}
			else if (this.type == 102)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Angler Fish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
			}
			else if (this.type == 103)
			{
				this.noGravity = true;
				this.name = "Green Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 120;
				this.soundHit = 25;
				this.soundKilled = 28;
				this.@value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 104)
			{
				this.name = "Werewolf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 350;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 105)
			{
				this.friendly = true;
				this.name = "Bound Goblin";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 106)
			{
				this.friendly = true;
				this.name = "Bound Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 107)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Goblin Tinkerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 108)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 109)
			{
				this.name = "Clown";
				this.width = 34;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 8000f;
			}
			else if (this.type == 110)
			{
				this.name = "Skeleton Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 112)
			{
				this.name = "Vile Spit";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 65;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 9;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.scale = 0.9f;
				this.alpha = 80;
			}
			else if (this.type == 113)
			{
				this.npcSlots = 10f;
				this.name = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 27;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.@value = 80000f;
			}
			else if (this.type == 114)
			{
				this.name = "Wall of Flesh Eye";
				this.displayName = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 28;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.@value = 80000f;
			}
			else if (this.type == 115)
			{
				this.name = "The Hungry";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 29;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 240;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.behindTiles = true;
				this.noTileCollide = true;
				this.knockBackResist = 1.1f;
			}
			else if (this.type == 116)
			{
				this.name = "The Hungry II";
				this.displayName = "The Hungry";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 9;
				this.knockBackResist = 0.8f;
				this.soundKilled = 12;
			}
			else if (this.type == 117)
			{
				this.displayName = "Leech";
				this.name = "Leech Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 118)
			{
				this.displayName = "Leech";
				this.name = "Leech Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 6;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 119)
			{
				this.displayName = "Leech";
				this.name = "Leech Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 120)
			{
				this.name = "Chaos Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 370;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.@value = 600f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 121)
			{
				this.name = "Slimer";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 20;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.alpha = 55;
				this.knockBackResist = 0.8f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 122)
			{
				this.noGravity = true;
				this.name = "Gastropod";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 600f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 123)
			{
				this.friendly = true;
				this.name = "Bound Mechanic";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 124)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Mechanic";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 125)
			{
				this.name = "Retinazer";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 30;
				this.defense = 10;
				this.damage = 45;
				this.lifeMax = 20000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.@value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 126)
			{
				this.name = "Spazmatism";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 31;
				this.defense = 10;
				this.damage = 50;
				this.lifeMax = 23000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.@value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 127)
			{
				this.name = "Skeletron Prime";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 32;
				this.damage = 47;
				this.defense = 24;
				this.lifeMax = 28000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.@value = 120000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				bool flag7 = true;
				this.buffImmune[183] = true;
				bool flag8 = flag7;
				bool flag9 = flag8;
				this.buffImmune[169] = flag8;
				this.buffImmune[189] = flag9;
				this.boss = true;
			}
			else if (this.type == 128)
			{
				this.name = "Prime Cannon";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 35;
				this.damage = 30;
				this.defense = 23;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 129)
			{
				this.name = "Prime Saw";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 33;
				this.damage = 56;
				this.defense = 38;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 130)
			{
				this.name = "Prime Vice";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 34;
				this.damage = 52;
				this.defense = 34;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 131)
			{
				this.name = "Prime Laser";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 36;
				this.damage = 29;
				this.defense = 20;
				this.lifeMax = 6000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 132)
			{
				this.displayName = "Zombie";
				this.name = "Bald Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 5;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 133)
			{
				this.name = "Wandering Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 134)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.defense = 0;
				this.damage = 70;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 120000f;
				this.scale = 1.25f;
				this.boss = true;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 135)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 55;
				this.defense = 30;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.netAlways = true;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 136)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 40;
				this.defense = 35;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 1.25f;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
				this.dontCountMe = true;
				this.alpha = 255;
			}
			else if (this.type == 139)
			{
				this.npcSlots = 1f;
				this.name = "Probe";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.knockBackResist = 0.8f;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 137)
			{
				this.name = "Illuminant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 138)
			{
				this.name = "Illuminant Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.85f;
				this.scale = 1.05f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 140)
			{
				this.name = "Possessed Armor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
			}
			else if (this.type == 141)
			{
				this.name = "Toxic Sludge";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.@value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 142)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Santa Claus";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 143)
			{
				this.name = "Snowman Gangsta";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 144)
			{
				this.name = "Mister Stabby";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 240;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 145)
			{
				this.name = "Snow Balla";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 55;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.@value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 147)
			{
				this.name = "Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.@value = 50f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 148)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 149)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 150)
			{
				this.npcSlots = 0.5f;
				this.name = "Ice Bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 18;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.@value = 250f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 151)
			{
				this.npcSlots = 0.5f;
				this.name = "Lava bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 4;
				this.@value = 400f;
				this.scale = 1.15f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 152)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Flying Fox";
				this.width = 38;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 4;
				this.@value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 153)
			{
				this.npcSlots = 2f;
				this.name = "Giant Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 470;
				this.soundHit = 24;
				this.knockBackResist = 0.3f;
				this.soundKilled = 27;
				this.@value = 500f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 154)
			{
				this.npcSlots = 1.5f;
				this.name = "Ice Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 24;
				this.knockBackResist = 0.3f;
				this.soundKilled = 27;
				this.@value = 450f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 155)
			{
				this.name = "Wolf";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 156)
			{
				this.npcSlots = 2f;
				this.name = "Red Devil";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 40;
				this.lifeMax = 600;
				this.soundHit = 21;
				this.knockBackResist = 0.5f;
				this.soundKilled = 24;
				this.@value = 1200f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 157)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Arapaima";
				this.width = 74;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
			}
			else if (this.type == 160)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Truffle";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 161)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 163)
			{
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 40;
				this.lifeMax = 350;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				this.timeLeft = NPC.activeTime * 2;
			}
			else if (this.type == 238)
			{
				this.noGravity = true;
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 350;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.@value = 500f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 164)
			{
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.@value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 165)
			{
				this.noGravity = true;
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 29;
				this.soundKilled = 31;
				this.knockBackResist = 0.25f;
				this.@value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 167)
			{
				this.name = "Undead Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 200f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 168)
			{
				this.name = "Corrupt Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 169)
			{
				this.noGravity = true;
				this.name = "Ice Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.@value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
				this.buffImmune[44] = true;
				this.coldDamage = true;
			}
			else if (this.type == 170)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.@value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 171)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.@value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 172)
			{
				this.name = "Rune Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 200;
				this.defense = 30;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = 5000f;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 173)
			{
				this.npcSlots = 1f;
				this.name = "Crimera";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.@value = 90f;
			}
			else if (this.type == 174)
			{
				this.npcSlots = 1f;
				this.name = "Herpling";
				this.width = 52;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 450f;
			}
			else if (this.type == 175)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Angry Trapper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.25f;
				this.soundKilled = 1;
				this.@value = 650f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 176)
			{
				this.name = "Moss Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.@value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 177)
			{
				this.npcSlots = 1f;
				this.name = "Derpling";
				this.width = 58;
				this.height = 44;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 300;
				this.soundHit = 22;
				this.soundKilled = 25;
				this.knockBackResist = 0.5f;
				this.@value = 500f;
			}
			else if (this.type == 178)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Steampunker";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 179)
			{
				this.name = "Crimson Axe";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 180)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 27;
				this.soundKilled = 30;
				this.knockBackResist = 0.5f;
				this.@value = 4000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 181)
			{
				this.name = "Face Monster";
				this.width = 18;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 182)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Floaty Gross";
				this.width = 24;
				this.height = 62;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 240;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.alpha = 100;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 183)
			{
				this.name = "Crimslime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 60;
				this.defense = 26;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.@value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 184)
			{
				this.name = "Spiked Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 12;
				this.defense = 8;
				this.lifeMax = 60;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.@value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 185)
			{
				this.name = "Snow Flinx";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 1.1f;
				this.@value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 186)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 187)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.@value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 188)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 189)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.@value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 190)
			{
				this.name = "Cataract Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 4;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.@value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 191)
			{
				this.name = "Sleepy Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.@value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 192)
			{
				this.name = "Dialated Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 193)
			{
				this.name = "Green Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 194)
			{
				this.name = "Purple Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 14;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 195)
			{
				this.name = "Lost Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 42;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.rarity = 1;
			}
			else if (this.type == 196)
			{
				this.name = "Nymph";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 10000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 197)
			{
				this.name = "Armored Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 28;
				this.lifeMax = 280;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 198)
			{
				this.name = "Lihzahrd";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 26;
				this.soundKilled = 29;
				this.knockBackResist = 0.4f;
				this.@value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 199)
			{
				this.name = "Lihzahrd";
				this.width = 42;
				this.height = 30;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 26;
				this.soundKilled = 29;
				this.knockBackResist = 0f;
				this.@value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 200)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 201)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 202)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 203)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 204)
			{
				this.name = "Spiked Jungle Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 28;
				this.defense = 8;
				this.lifeMax = 65;
				this.scale = 1.15f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.@value = 300f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 205)
			{
				this.name = "Moth";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.knockBackResist = 0.4f;
				this.soundKilled = 1;
				this.@value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.rarity = 2;
			}
			else if (this.type == 206)
			{
				this.name = "Icy Merman";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 280;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.@value = 500f;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 207)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dye Trader";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 208)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Party Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 209)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Cyborg";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 210)
			{
				this.name = "Bee";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 5;
				this.damage = 20;
				this.defense = 5;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 211)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 5;
				this.damage = 15;
				this.defense = 2;
				this.lifeMax = 10;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 212)
			{
				this.name = "Pirate Deckhand";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 17;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.@value = 700f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 213)
			{
				this.name = "Pirate Corsair";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 22;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 214)
			{
				this.name = "Pirate Deadeye";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 225;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 215)
			{
				this.name = "Pirate Crossbower";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 20;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.@value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 216)
			{
				this.name = "Pirate Captain";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 3000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.@value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 217)
			{
				this.name = "Cochineal Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.@value = 60f;
			}
			else if (this.type == 218)
			{
				this.name = "Cyan Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.@value = 60f;
			}
			else if (this.type == 219)
			{
				this.name = "Lac Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.@value = 60f;
			}
			else if (this.type == 220)
			{
				this.name = "Sea Snail";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 60f;
			}
			else if (this.type == 221)
			{
				this.noGravity = true;
				this.name = "Squid";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 222)
			{
				this.name = "Queen Bee";
				this.width = 66;
				this.height = 66;
				this.aiStyle = 43;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 3400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.@value = 100000f;
				this.npcSlots = 7f;
			}
			else if (this.type == 223)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.@value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 224)
			{
				this.name = "Flying Fish";
				this.width = 32;
				this.height = 18;
				this.aiStyle = 44;
				this.damage = 9;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.@value = 90f;
				this.buffImmune[31] = false;
			}
			if (this.type == 225)
			{
				this.name = "Umbrella Slime";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 1;
				this.damage = 10;
				this.defense = 5;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.75f;
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 226)
			{
				this.npcSlots = 0.5f;
				this.name = "Flying Snake";
				this.width = 34;
				this.height = 50;
				this.aiStyle = 14;
				this.damage = 85;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 23;
				this.knockBackResist = 0.65f;
				this.soundKilled = 26;
				this.@value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 227)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Painter";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 228)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Witch Doctor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 229)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Pirate";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 230)
			{
				this.name = "Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 261;
			}
			else if (this.type == 231)
			{
				this.name = "Hornet Fatty";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.3f;
				this.soundKilled = 1;
				this.@value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 232)
			{
				this.name = "Hornet Honey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.@value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 233)
			{
				this.name = "Hornet Leafy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.45f;
				this.soundKilled = 1;
				this.@value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 234)
			{
				this.name = "Hornet Spikey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 32;
				this.defense = 6;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.55f;
				this.soundKilled = 1;
				this.@value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 235)
			{
				this.name = "Hornet Stingy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 34;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.@value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 236)
			{
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.@value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 237)
			{
				this.noGravity = true;
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.@value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 239)
			{
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 20;
				this.soundKilled = 23;
				this.knockBackResist = 0.5f;
				this.@value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 240)
			{
				this.noGravity = true;
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 20;
				this.soundKilled = 23;
				this.knockBackResist = 0.5f;
				this.@value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 241)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Blood Feeder";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.@value = 350f;
			}
			else if (this.type == 242)
			{
				this.noGravity = true;
				this.name = "Blood Jelly";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.@value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 243)
			{
				this.name = "Ice Golem";
				this.width = 30;
				this.height = 114;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 4000;
				this.soundHit = 5;
				this.soundKilled = 7;
				this.knockBackResist = 0.05f;
				this.@value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.coldDamage = true;
				this.rarity = 2;
			}
			else if (this.type == 244)
			{
				this.name = "Rainbow Slime";
				this.width = 60;
				this.height = 42;
				this.aiStyle = 1;
				this.damage = 85;
				this.defense = 26;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.@value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 245)
			{
				this.name = "Golem";
				this.width = 140;
				this.height = 140;
				this.aiStyle = 45;
				this.damage = 72;
				this.defense = 26;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.@value = (float)Item.buyPrice(0, 15, 0, 0);
				this.alpha = 255;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 246)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 46;
				this.damage = 64;
				this.defense = 20;
				this.lifeMax = 16000;
				this.soundHit = 4;
				this.soundKilled = 0;
				this.knockBackResist = 0f;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 247 || this.type == 248)
			{
				this.noGravity = true;
				this.name = "Golem Fist";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 47;
				this.damage = 59;
				this.defense = 28;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 249)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 48;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 11000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 250)
			{
				this.name = "Angry Nimbus";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 49;
				this.damage = 50;
				this.defense = 24;
				this.lifeMax = 300;
				this.soundHit = 30;
				this.soundKilled = 33;
				this.knockBackResist = 0.3f;
				this.@value = 300f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 251)
			{
				this.name = "Eyezor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = (float)Item.buyPrice(0, 0, 50, 0);
				this.buffImmune[31] = false;
			}
			else if (this.type == 252)
			{
				this.noGravity = true;
				this.npcSlots = 0.5f;
				this.name = "Parrot";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 80;
				this.defense = 12;
				this.lifeMax = 100;
				this.soundHit = 46;
				this.knockBackResist = 0.7f;
				this.soundKilled = 48;
				this.@value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 254)
			{
				this.name = "Spore Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 255)
			{
				this.name = "Spore Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.@value = 1200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 256)
			{
				this.noGravity = true;
				this.name = "Fungo Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 90;
				this.defense = 20;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.@value = 1200f;
				this.alpha = 20;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 257)
			{
				this.name = "Anomura Fungus";
				this.width = 44;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 24;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.@value = 1300f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 258)
			{
				this.name = "Mushi Ladybug";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 45;
				this.soundKilled = 47;
				this.knockBackResist = 0.3f;
				this.@value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 259)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Fungi Bulb";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.damage = 24;
				this.defense = 4;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.@value = 350f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 260)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Giant Fungi Bulb";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.@value = 1250f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 261)
			{
				this.name = "Fungi Spore";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.damage = 80;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 262)
			{
				this.noTileCollide = true;
				this.name = "Plantera";
				this.width = 86;
				this.height = 86;
				this.aiStyle = 51;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 30000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.@value = (float)Item.buyPrice(0, 15, 0, 0);
				this.noGravity = true;
				this.boss = true;
				this.npcSlots = 16f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 263)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Plantera's Hook";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 52;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 4000;
				this.dontTakeDamage = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.buffImmune[20] = true;
			}
			else if (this.type == 264)
			{
				this.name = "Plantera's Tentacle";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 53;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 265)
			{
				this.name = "Spore";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 50;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 266)
			{
				this.name = "Brain of Cthulhu";
				this.dontTakeDamage = true;
				this.width = 160;
				this.height = 110;
				this.aiStyle = 54;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 1000;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.@value = 50000f;
				this.npcSlots = 6f;
			}
			else if (this.type == 267)
			{
				this.name = "Creeper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 268)
			{
				this.noGravity = true;
				this.name = "Ichor Sticker";
				this.width = 28;
				this.height = 56;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 340;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.6f;
				this.@value = 450f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 269)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 270)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 50;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 271)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.25f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 272)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 273)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 274)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 275)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 276)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 85;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 277)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 32;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 278)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 48;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 279)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 280)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 34;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 281)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 282)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 28;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 283)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.@value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 284)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 24;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 285)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.@value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 286)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 60;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.@value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 287)
			{
				this.name = "Bone Lee";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 42;
				this.lifeMax = 1000;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 1;
			}
			else if (this.type == 288)
			{
				this.name = "Dungeon Spirit";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 56;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 200;
				this.knockBackResist = 0.2f;
				this.soundHit = 36;
				this.soundKilled = 39;
				this.@value = 500f;
				this.noTileCollide = true;
				this.noGravity = true;
				flag = true;
			}
			else if (this.type == 289)
			{
				this.name = "Giant Cursed Skull";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 10;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.@value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 290)
			{
				this.name = "Paladin";
				this.width = 34;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 5000;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.@value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
				this.rarity = 1;
			}
			else if (this.type == 291)
			{
				this.name = "Skeleton Sniper";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 292)
			{
				this.name = "Tactical Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 293)
			{
				this.name = "Skeleton Commando";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 294)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 34;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.9f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 295)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 296)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 299)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2018;
			}
			else if (this.type == 300)
			{
				this.name = "Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2003;
			}
			else if (this.type == 301)
			{
				this.name = "Raven";
				this.width = 36;
				this.height = 26;
				this.aiStyle = 17;
				this.damage = 12;
				this.defense = 2;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.@value = 50f;
			}
			if (this.type == 302)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 304)
			{
				this.name = "Hoppin' Jack";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 175;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.5f;
				this.npcSlots = 0.3f;
			}
			else if (this.type >= 305 && this.type <= 314)
			{
				this.name = "Scarecrow";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.@value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 305 || this.type == 310)
				{
					this.damage = 60;
					this.defense = 18;
					this.lifeMax = 500;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 306 || this.type == 311)
				{
					this.damage = 52;
					this.defense = 14;
					this.lifeMax = 400;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 307 || this.type == 312)
				{
					this.damage = 78;
					this.defense = 16;
					this.lifeMax = 600;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
				else if (this.type == 308 || this.type == 313)
				{
					this.damage = 66;
					this.defense = 14;
					this.lifeMax = 650;
					this.knockBackResist = 0.35f;
					this.scale = 0.95f;
				}
				else if (this.type == 309 || this.type == 314)
				{
					this.damage = 52;
					this.defense = 26;
					this.lifeMax = 450;
					this.knockBackResist = 0.5f;
					this.scale = 1.1f;
				}
			}
			else if (this.type == 315)
			{
				this.name = "Headless Horseman";
				this.width = 74;
				this.height = 70;
				this.aiStyle = 26;
				this.damage = 130;
				this.defense = 40;
				this.lifeMax = 10000;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				flag = true;
			}
			else if (this.type == 316)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Ghost";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 40;
				this.defense = 14;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.@value = 700f;
				flag = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 317)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.@value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 318)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.@value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 319)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.@value = 85f;
				this.buffImmune[31] = false;
				this.scale = 0.9f;
			}
			else if (this.type == 320)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 105f;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 321)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = 120f;
				this.buffImmune[31] = false;
				this.scale = 1.1f;
			}
			else if (this.type == 322)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 23;
				this.defense = 0;
				this.lifeMax = 115;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 323)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 324)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 325)
			{
				this.name = "Mourning Wood";
				this.width = 164;
				this.height = 154;
				this.aiStyle = 57;
				this.damage = 120;
				this.defense = 28;
				this.lifeMax = 12000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				flag = true;
			}
			else if (this.type == 326)
			{
				this.name = "Splinterling";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.@value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 327)
			{
				this.name = "Pumpking";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 58;
				this.damage = 50;
				this.defense = 36;
				this.lifeMax = 22000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.@value = 50000f;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 328)
			{
				this.name = "Pumpking";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 59;
				this.damage = 65;
				this.defense = 14;
				this.lifeMax = 5000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 329)
			{
				this.name = "Hellhound";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.@value = 3000f;
				flag = true;
			}
			else if (this.type == 330)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Poltergeist";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 90;
				this.defense = 44;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.@value = 4500f;
				flag = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 331)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 332)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 60f;
				this.buffImmune[31] = false;
			}
			if (this.type == 333)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 334)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 6;
				this.defense = 2;
				this.lifeMax = 23;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 0.9f;
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 335)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 3;
				this.lifeMax = 29;
				this.scale = 1.05f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 336)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 5;
				this.defense = 1;
				this.lifeMax = 22;
				this.scale = 0.85f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type >= 338 && this.type <= 340)
			{
				this.name = "Zombie Elf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 338)
				{
					this.damage = 65;
					this.defense = 18;
					this.lifeMax = 600;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 339)
				{
					this.damage = 52;
					this.defense = 24;
					this.lifeMax = 700;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 340)
				{
					this.damage = 78;
					this.defense = 14;
					this.lifeMax = 500;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
			}
			else if (this.type == 341)
			{
				this.name = "Present Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.@value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 342)
			{
				this.name = "Gingerbread Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 26;
				this.lifeMax = 750;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.@value = 1800f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 343)
			{
				this.name = "Yeti";
				this.width = 38;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 140;
				this.defense = 50;
				this.lifeMax = 3500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.@value = 3000f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 344)
			{
				this.name = "Everscream";
				this.width = 172;
				this.height = 130;
				this.aiStyle = 57;
				this.damage = 110;
				this.defense = 38;
				this.lifeMax = 13000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 345)
			{
				this.name = "Ice Queen";
				this.width = 130;
				this.height = 140;
				this.aiStyle = 60;
				this.damage = 120;
				this.defense = 38;
				this.lifeMax = 34000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.buffImmune[20] = true;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 5f;
				this.coldDamage = true;
			}
			else if (this.type == 346)
			{
				this.name = "Santa-NK1";
				this.width = 112;
				this.height = 140;
				this.aiStyle = 61;
				this.damage = 120;
				this.defense = 56;
				this.lifeMax = 18000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.@value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 4f;
			}
			else if (this.type == 347)
			{
				this.name = "Elf Copter";
				this.width = 50;
				this.height = 50;
				this.aiStyle = 62;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 1200;
				this.soundHit = 4;
				this.knockBackResist = 0.4f;
				this.soundKilled = 14;
				this.@value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 348)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.@value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 349)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 42;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.@value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 350)
			{
				this.name = "Elf Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 900;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.45f;
				this.@value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 351)
			{
				this.name = "Krampus";
				this.width = 18;
				this.height = 90;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 2500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.@value = 3000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 1.75f;
			}
			else if (this.type == 352)
			{
				this.name = "Flocko";
				this.width = 54;
				this.height = 54;
				this.aiStyle = 63;
				this.damage = 75;
				this.defense = 8;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.npcSlots = 2f;
				this.coldDamage = true;
			}
			else if (this.type == 353)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Stylist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 354)
			{
				this.friendly = true;
				this.name = "Webbed Stylist";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
				this.rarity = 1;
			}
			else if (this.type == 355)
			{
				this.name = "Firefly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 1992;
			}
			else if (this.type == 356)
			{
				this.name = "Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 1994;
			}
			else if (this.type == 357)
			{
				this.name = "Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2002;
				this.friendly = true;
			}
			else if (this.type == 358)
			{
				this.name = "Lightning Bug";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 2004;
			}
			else if (this.type == 359)
			{
				this.name = "Snail";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2006;
			}
			else if (this.type == 360)
			{
				this.name = "Glowing Snail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2007;
			}
			else if (this.type == 361)
			{
				this.name = "Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2121;
			}
			else if (this.type == 362)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 363)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 364)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 365)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 366 || this.type == 367)
			{
				this.name = "Scorpion";
				this.width = 26;
				this.height = 18;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = (short)(2156 + this.type - 366);
			}
			else if (this.type == 368)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Travelling Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 369)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Angler";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 370)
			{
				this.name = "Duke Fishron";
				this.width = 150;
				this.height = 100;
				this.aiStyle = 69;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 50000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 14;
				this.soundKilled = 20;
				this.@value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = true;
				this.buffImmune[44] = true;
			}
			else if (this.type == 371)
			{
				this.name = "Detonating Bubble";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 70;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 372)
			{
				this.noGravity = true;
				this.name = "Sharkron";
				this.width = 120;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 100;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 373)
			{
				this.noGravity = true;
				this.name = "Sharkron2";
				this.displayName = "Sharkron";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 120;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 374)
			{
				this.name = "Truffle Worm";
				this.width = 20;
				this.height = 10;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
				this.rarity = 4;
			}
			else if (this.type == 375)
			{
				this.displayName = "Truffle Worm";
				this.name = "Truffle Worm Digger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 6;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
			}
			else if (this.type == 376)
			{
				this.friendly = true;
				this.name = "Sleeping Angler";
				this.width = 34;
				this.height = 8;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 377)
			{
				this.name = "Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2740;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 378)
			{
				this.npcSlots = 1f;
				this.name = "Chattering Teeth Bomb";
				this.width = 20;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.@value = 450f;
			}
			else if (this.type >= 379 && this.type <= 380)
			{
				this.name = "Lunatic Cultist Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.55f;
				this.@value = 1000f;
				this.npcSlots = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type >= 381 && this.type <= 382)
			{
				this.name = "Martian Ranger";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 25;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.@value = 1000f;
			}
			else if (this.type == 383)
			{
				this.name = "Martian Officer";
				this.lifeMax = 300;
				this.defense = 50;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.@value = 1200f;
				this.knockBackResist = 0.25f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 384)
			{
				this.name = "Bubble Shield";
				this.lifeMax = 1000;
				this.width = 18;
				this.defense = 20;
				this.height = 40;
				this.aiStyle = 72;
				this.soundHit = 1;
				this.soundKilled = 1;
				flag = true;
				this.npcSlots = 0f;
				this.noTileCollide = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 385)
			{
				this.name = "Martian Grunty";
				this.lifeMax = 750;
				this.defense = 30;
				this.damage = 80;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.@value = 600f;
				this.knockBackResist = 0f;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 386)
			{
				this.name = "Martian Engineer";
				this.lifeMax = 400;
				this.defense = 34;
				this.damage = 40;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 43;
				this.soundKilled = 45;
				this.@value = 1200f;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 387)
			{
				this.name = "Tesla Turret";
				this.width = 20;
				this.height = 50;
				this.aiStyle = 73;
				this.damage = 10;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 53;
				this.soundKilled = 56;
				this.knockBackResist = 0f;
				this.buffImmune[31] = true;
				this.canGhostHeal = false;
			}
			else if (this.type == 388)
			{
				this.name = "Martian Drone";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 74;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 42;
				this.knockBackResist = 0.4f;
				this.soundKilled = 44;
				this.@value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
				this.canGhostHeal = false;
			}
			else if (this.type == 389)
			{
				this.name = "Gigazapper";
				this.lifeMax = 600;
				this.defense = 38;
				this.damage = 75;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 39;
				this.soundKilled = 57;
				this.@value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.3f;
			}
			else if (this.type == 390)
			{
				this.name = "Scutlix Gunner";
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 350;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 1200f;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 391)
			{
				this.name = "Scutlix";
				this.lifeMax = 600;
				this.defense = 30;
				this.damage = 85;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 51;
				this.soundKilled = 54;
				this.@value = 1200f;
				this.npcSlots = 0.5f;
				this.knockBackResist = 0.1f;
			}
			else if (this.type == 392)
			{
				this.name = "Martian Saucer";
				this.lifeMax = 100;
				this.defense = 100;
				this.damage = 50;
				this.width = 150;
				this.height = 80;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.@value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				flag = true;
			}
			else if (this.type == 393)
			{
				this.name = "Saucer Turret";
				this.lifeMax = 5000;
				this.defense = 20;
				this.damage = 60;
				this.width = 40;
				this.height = 16;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.@value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 394)
			{
				this.name = "Saucer Cannon";
				this.lifeMax = 3500;
				this.defense = 20;
				this.damage = 60;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.@value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 395)
			{
				this.name = "Saucer Core";
				this.lifeMax = 10000;
				this.defense = 0;
				this.damage = 80;
				this.width = 46;
				this.height = 36;
				this.aiStyle = 76;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.@value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				flag = true;
			}
			else if (this.type == 399)
			{
				this.name = "Martian Probe";
				this.defense = 5;
				this.damage = 5;
				this.lifeMax = 150;
				this.aiStyle = 80;
				this.width = 42;
				this.height = 72;
				this.@value = 0f;
				this.knockBackResist = 0f;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.timeLeft = NPC.activeTime * 30;
				this.chaseable = false;
			}
			else if (this.type == 396)
			{
				this.name = "Moon Lord Head";
				this.lifeMax = 45000;
				this.defense = 50;
				this.damage = 0;
				this.width = 38;
				this.height = 56;
				this.aiStyle = 79;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.@value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
			}
			else if (this.type == 397)
			{
				this.name = "Moon Lord Hand";
				this.lifeMax = 25000;
				this.defense = 40;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 78;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.@value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.boss = true;
				this.hide = true;
			}
			else if (this.type == 398)
			{
				this.name = "Moon Lord Core";
				this.lifeMax = 50000;
				this.defense = 70;
				this.damage = 0;
				this.width = 46;
				this.height = 66;
				this.aiStyle = 77;
				this.soundHit = 57;
				this.soundKilled = 0;
				this.@value = 0f;
				this.npcSlots = 6f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.boss = true;
				this.behindTiles = true;
				this.hide = true;
			}
			else if (this.type == 400)
			{
				this.name = "True Eye of Cthulhu";
				this.defense = 0;
				this.damage = 60;
				this.lifeMax = 100;
				this.aiStyle = 81;
				this.width = 60;
				this.height = 60;
				this.@value = 0f;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.noTileCollide = true;
			}
			else if (this.type == 401)
			{
				this.name = "Moon Leech Clot";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 82;
				this.soundHit = 57;
				this.soundKilled = 62;
				this.@value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.hide = true;
			}
			else if (this.type == 437)
			{
				this.name = "Lunar Tablet";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 54;
				this.height = 54;
				this.aiStyle = 83;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.@value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.netAlways = true;
			}
			else if (this.type == 438)
			{
				this.name = "Lunar Devote";
				this.lifeMax = 400;
				this.defense = 0;
				this.damage = 0;
				this.width = 22;
				this.height = 40;
				this.aiStyle = 83;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 0f;
				this.npcSlots = 0f;
				this.knockBackResist = 0f;
				this.lavaImmune = true;
				this.netAlways = true;
				this.chaseable = false;
			}
			else if (this.type == 439)
			{
				this.name = "Ancient Cultist";
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 50;
				this.defense = 42;
				this.lifeMax = 32000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 55;
				this.soundKilled = 59;
				this.@value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
			}
			else if (this.type == 440)
			{
				this.name = "Ancient Cultist";
				this.width = 24;
				this.height = 50;
				this.aiStyle = 84;
				this.damage = 0;
				this.defense = 35;
				this.lifeMax = 10000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 0f;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				flag = true;
				this.chaseable = false;
			}
			else if (this.type == 442)
			{
				this.name = "Gold Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.catchItem = 2889;
				this.npcSlots = 0.4f;
				this.rarity = 3;
			}
			else if (this.type == 443)
			{
				this.name = "Gold Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2890;
				this.rarity = 3;
			}
			else if (this.type == 444)
			{
				this.name = "Gold Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 2891;
				this.rarity = 3;
			}
			else if (this.type == 445)
			{
				this.name = "Gold Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2892;
				this.rarity = 3;
			}
			else if (this.type == 446)
			{
				this.name = "Gold Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2893;
				this.npcSlots = 0.1f;
				this.rarity = 3;
			}
			else if (this.type == 447)
			{
				this.name = "Gold Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2894;
				this.rarity = 3;
			}
			else if (this.type == 448)
			{
				this.name = "Gold Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2895;
				this.friendly = true;
				this.rarity = 3;
			}
			else if (this.type == 449)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 450)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 451)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 452)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 453)
			{
				this.friendly = true;
				this.name = "Skeleton Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.npcSlots = 7f;
			}
			else if (this.type == 454)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Phantasm Dragon Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
			}
			else if (this.type == 459)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.name = "Phantasm Dragon Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 455 || this.type == 456 || this.type == 457 || this.type == 458)
			{
				this.displayName = "Phantasm Dragon";
				this.noTileCollide = true;
				this.name = "Phantasm Dragon Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 56;
				this.soundKilled = 60;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 0f;
				this.scale = 1f;
				flag = true;
				this.alpha = 255;
				this.dontCountMe = true;
			}
			else if (this.type == 464)
			{
				this.name = "Crimson Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 465)
			{
				this.noGravity = true;
				this.name = "Crimson Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 31;
				this.defense = 7;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
			}
			else if (this.type == 470)
			{
				this.name = "Crimtane Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 21;
				this.defense = 5;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 473 || this.type == 474 || this.type == 475 || this.type == 476)
			{
				this.name = "Big Mimic";
				this.width = 28;
				this.height = 44;
				this.aiStyle = 87;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 3500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.@value = 30000f;
				this.knockBackResist = 0.1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.rarity = 2;
			}
			else if (this.type == 480)
			{
				this.name = "Medusa";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.15f;
				this.@value = 1000f;
			}
			else if (this.type == 481)
			{
				this.name = "Hoplite";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 12;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.@value = 300f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 482)
			{
				this.name = "Grolem";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 18;
				this.lifeMax = 110;
				this.soundHit = 41;
				this.soundKilled = 44;
				this.knockBackResist = 0.35f;
				this.@value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 483)
			{
				this.npcSlots = 0.5f;
				this.name = "Grelimental";
				this.width = 20;
				this.height = 30;
				this.aiStyle = 91;
				this.damage = 28;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 7;
				this.knockBackResist = 0.6f;
				this.soundKilled = 6;
				this.@value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type >= 484 && this.type <= 487)
			{
				this.name = "Grub";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = (short)(3191 + this.type - 484);
				this.friendly = true;
			}
			else if (this.type == 488)
			{
				this.name = "Target Dummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 92;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 1000;
				this.soundHit = 15;
				this.soundKilled = 2;
				this.knockBackResist = 0f;
				this.@value = 0f;
				this.immortal = true;
			}
			else if (this.type == 489)
			{
				this.name = "Blood Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 75;
				this.soundHit = 18;
				this.soundKilled = 21;
				this.knockBackResist = 0.4f;
				this.@value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 490)
			{
				this.noGravity = true;
				this.name = "Drippler";
				this.width = 28;
				this.height = 30;
				this.aiStyle = 22;
				this.damage = 28;
				this.defense = 14;
				this.lifeMax = 50;
				this.soundHit = 19;
				this.knockBackResist = 0.6f;
				this.soundKilled = 22;
				this.@value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 491)
			{
				this.noGravity = true;
				this.name = "Flying Dutchman";
				this.width = 350;
				this.height = 120;
				this.aiStyle = 93;
				this.damage = 0;
				this.defense = 100;
				this.lifeMax = 50;
				this.soundHit = 19;
				this.knockBackResist = 0f;
				this.soundKilled = 22;
				this.@value = 0f;
				flag = true;
				this.dontTakeDamage = true;
			}
			else if (this.type == 492)
			{
				this.name = "Dutchman Cannon";
				this.lifeMax = 2000;
				this.defense = 20;
				this.damage = 30;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 75;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.@value = 0f;
				this.npcSlots = 1f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.hide = true;
			}
			else if (this.type >= 494 && this.type <= 495)
			{
				this.name = "Crawdad";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 6;
				this.lifeMax = 50;
				this.soundHit = 33;
				this.soundKilled = 36;
				this.@value = 120f;
			}
			else if (this.type >= 496 && this.type <= 497)
			{
				this.name = "Giant Shelly";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 39;
				this.damage = 16;
				this.defense = 12;
				this.lifeMax = 50;
				this.soundHit = 38;
				this.soundKilled = 41;
				this.knockBackResist = 0.75f;
				this.@value = 120f;
			}
			else if (this.type >= 498 && this.type <= 506)
			{
				this.name = "Salamander";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 50;
				this.soundKilled = 53;
				this.knockBackResist = 0.45f;
				this.@value = 120f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 441)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Tax Collector";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 513)
			{
				this.displayName = "Tomb Crawler";
				this.npcSlots = 4f;
				this.name = "Tomb Crawler Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 34;
				this.defense = 0;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 140f;
			}
			else if (this.type == 514)
			{
				this.displayName = "Tomb Crawler";
				this.name = "Tomb Crawler Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 12;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 515)
			{
				this.displayName = "Tomb Crawler";
				this.name = "Tomb Crawler Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 20;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 140f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 510)
			{
				this.displayName = "Dune Splicer";
				this.npcSlots = 5f;
				this.name = "Dune Splicer Head";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.damage = 58;
				this.defense = 0;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 700f;
			}
			else if (this.type == 511)
			{
				this.displayName = "Dune Splicer";
				this.name = "Dune Splicer Body";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 54;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 512)
			{
				this.displayName = "Dune Splicer";
				this.name = "Dune Splicer Tail";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.@value = 700f;
				this.dontCountMe = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 508)
			{
				this.name = "Antlion Charger";
				this.width = 33;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 31;
				this.soundKilled = 34;
				this.knockBackResist = 0.2f;
				this.@value = 80f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type == 509)
			{
				this.name = "Antlion Swarmer";
				this.width = 40;
				this.height = 31;
				this.aiStyle = 44;
				this.damage = 30;
				this.defense = 12;
				this.lifeMax = 50;
				this.knockBackResist = 0.6f;
				this.soundHit = 32;
				this.soundKilled = 35;
				this.@value = 90f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.8f;
			}
			else if (this.type >= 524 && this.type <= 527)
			{
				this.name = "Ghoul";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 26;
				this.lifeMax = 180;
				this.soundHit = 37;
				this.soundKilled = 40;
				this.knockBackResist = 0.6f;
				this.@value = 500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				switch (this.type - 524)
				{
					case 1:
					{
						NPC nPC = this;
						nPC.lifeMax = nPC.lifeMax + 70;
						NPC nPC1 = this;
						nPC1.defense = nPC1.defense + 4;
						NPC nPC2 = this;
						nPC2.damage = nPC2.damage + 10;
						NPC nPC3 = this;
						nPC3.knockBackResist = nPC3.knockBackResist - 0.1f;
						NPC nPC4 = this;
						nPC4.@value = nPC4.@value + 150f;
						break;
					}
					case 2:
					{
						NPC nPC5 = this;
						nPC5.lifeMax = nPC5.lifeMax + 40;
						NPC nPC6 = this;
						nPC6.defense = nPC6.defense + 6;
						NPC nPC7 = this;
						nPC7.damage = nPC7.damage + 14;
						NPC nPC8 = this;
						nPC8.knockBackResist = nPC8.knockBackResist - 0.1f;
						NPC nPC9 = this;
						nPC9.@value = nPC9.@value + 150f;
						break;
					}
					case 3:
					{
						NPC nPC10 = this;
						nPC10.lifeMax = nPC10.lifeMax + 120;
						NPC nPC11 = this;
						nPC11.defense = nPC11.defense + 6;
						NPC nPC12 = this;
						nPC12.damage = nPC12.damage + 4;
						NPC nPC13 = this;
						nPC13.knockBackResist = nPC13.knockBackResist - 0.2f;
						NPC nPC14 = this;
						nPC14.@value = nPC14.@value + 250f;
						break;
					}
				}
			}
			else if (this.type >= 528 && this.type <= 529)
			{
				this.name = "Lamia";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 52;
				this.defense = 28;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.@value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 530)
			{
				this.name = "Ravager Scorpion";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.@value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 531)
			{
				this.noGravity = true;
				this.name = "Ravager Scorpion";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 66;
				this.defense = 24;
				this.lifeMax = 320;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.@value = 600f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
				this.buffImmune[70] = true;
			}
			else if (this.type == 532)
			{
				this.name = "Basilisk";
				this.width = 32;
				this.height = 31;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 270;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 800f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.75f;
			}
			else if (this.type == 533)
			{
				this.name = "Desert Spirit";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.@value = 1200f;
				this.npcSlots = 2f;
				flag = true;
			}
			else if (this.type == 493)
			{
				this.name = "Stardust Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 402)
			{
				this.displayName = "Milkyway Weaver";
				this.noTileCollide = true;
				this.npcSlots = 1f;
				this.name = "Milkyway Weaver";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.@value = 0f;
				this.scale = 1f;
				flag = true;
			}
			else if (this.type == 405)
			{
				this.name = "Star Cell";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 120;
				this.defense = 50;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 406)
			{
				this.name = "Star Cell";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 95;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 411)
			{
				this.name = "Stardust Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 409)
			{
				this.name = "Twinkle Popper";
				this.width = 34;
				this.height = 42;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 800;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
				this.npcSlots = 3f;
			}
			else if (this.type == 410)
			{
				this.name = "Twinkle";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 407)
			{
				this.name = "Flow Invader";
				this.width = 40;
				this.height = 60;
				this.aiStyle = 96;
				this.damage = 70;
				this.defense = 38;
				this.lifeMax = 1500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.03f;
				this.buffImmune[31] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 507)
			{
				this.name = "Nebula Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 423)
			{
				this.name = "Nebula Beast";
				this.width = 50;
				this.height = 44;
				this.aiStyle = 26;
				this.damage = 90;
				this.defense = 46;
				this.lifeMax = 850;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				flag = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 421)
			{
				this.name = "Nebula Headcrab";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 85;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 330;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noGravity = true;
				this.buffImmune[31] = true;
				this.npcSlots = 1f;
			}
			else if (this.type == 424)
			{
				this.name = "Nebula Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 420)
			{
				this.name = "Nebula Floater";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 97;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 1300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 422)
			{
				this.name = "Vortex Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 425)
			{
				this.name = "Vortex Rifleman";
				this.width = 30;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 800;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 429)
			{
				this.name = "Vortex Soldier";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.6f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 428)
			{
				this.name = "Alien Larva";
				this.width = 24;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 6;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
			}
			else if (this.type == 427)
			{
				this.name = "Alien Hornet";
				this.width = 40;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 426)
			{
				this.name = "Alien Queen";
				this.width = 50;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 44;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 517)
			{
				this.name = "Solar Tower";
				this.lifeMax = 20000;
				this.defense = 20;
				this.damage = 0;
				this.width = 130;
				this.height = 270;
				this.aiStyle = 94;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 0f;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 412)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 150;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.soundHit = 11;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.npcSlots = 2f;
			}
			else if (this.type == 413)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 100;
				this.defense = 1000;
				this.lifeMax = 10000;
				this.soundHit = 11;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 414)
			{
				this.name = "Crawltipede";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 10000;
				this.soundHit = 8;
				this.soundKilled = 22;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.dontCountMe = true;
				this.takenDamageMultiplier = 10f;
				this.npcSlots = 0f;
			}
			else if (this.type == 415)
			{
				this.name = "Drakomire";
				this.lifeMax = 800;
				this.defense = 32;
				this.damage = 55;
				this.width = 60;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 416)
			{
				this.name = "Drakomire Rider";
				this.damage = 80;
				this.defense = 28;
				this.lifeMax = 800;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 75;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
			}
			else if (this.type == 518)
			{
				this.name = "Solar Spearman";
				this.lifeMax = 1000;
				this.defense = 28;
				this.damage = 80;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 417)
			{
				this.npcSlots = 2f;
				this.name = "Sroller";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 34;
				this.lifeMax = 700;
				this.soundHit = 7;
				this.knockBackResist = 0f;
				this.soundKilled = 5;
			}
			else if (this.type == 418)
			{
				this.name = "Corite";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 74;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 600;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 419)
			{
				this.name = "Solar Solenian";
				this.lifeMax = 800;
				this.defense = 30;
				this.damage = 90;
				this.width = 22;
				this.height = 56;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 516)
			{
				this.name = "Solar Flare";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 9;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 519)
			{
				this.name = "Solar Goop";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 99;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = false;
				this.alpha = 0;
				this.knockBackResist = 0f;
			}
			else if (this.type == 162)
			{
				this.name = "Frankenstein";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.@value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 166)
			{
				this.name = "Swamp Thing";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 26;
				this.lifeMax = 450;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 253)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Reaper";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 700;
				this.soundHit = 49;
				this.soundKilled = 51;
				this.alpha = 100;
				this.@value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.6f;
			}
			else if (this.type == 158)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 750;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.@value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 159)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 750;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.@value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 460)
			{
				this.name = "Butcher";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 700;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.25f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 461)
			{
				this.name = "Creature from the Deep";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 1000f;
			}
			else if (this.type == 462)
			{
				this.name = "Fritz";
				this.width = 20;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 14;
				this.lifeMax = 270;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.@value = 600f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
			}
			else if (this.type == 463)
			{
				this.name = "Nailhead";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 34;
				this.lifeMax = 4000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.@value = 3000f;
			}
			else if (this.type == 466)
			{
				this.name = "Psycho";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 550;
				this.soundHit = 48;
				this.soundKilled = 50;
				this.knockBackResist = 0.5f;
				this.@value = 1500f;
			}
			else if (this.type == 467)
			{
				this.name = "Deadly Sphere";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 85;
				this.damage = 100;
				this.defense = 80;
				this.lifeMax = 350;
				this.soundHit = 34;
				this.soundKilled = 37;
				this.@value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
				this.noGravity = true;
			}
			else if (this.type == 469)
			{
				this.name = "The Possessed";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 3;
				this.damage = 68;
				this.defense = 28;
				this.lifeMax = 600;
				this.soundHit = 47;
				this.soundKilled = 49;
				this.knockBackResist = 0.35f;
				this.@value = 1300f;
			}
			else if (this.type == 468)
			{
				this.name = "Dr. Man Fly";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 24;
				this.lifeMax = 500;
				this.soundHit = 35;
				this.soundKilled = 38;
				this.knockBackResist = 0.6f;
				this.@value = 1300f;
			}
			else if (this.type == 477)
			{
				this.noGravity = true;
				this.name = "Mothron";
				this.width = 80;
				this.height = 50;
				this.aiStyle = 88;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 6000;
				this.soundHit = 44;
				this.soundKilled = 46;
				this.@value = 50000f;
				this.knockBackResist = 0.2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 478)
			{
				this.name = "Mothron Egg";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 89;
				this.damage = 0;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.@value = 0f;
				this.knockBackResist = 0.7f;
				flag = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 479)
			{
				this.name = "Mothron Spawn";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 90;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 700;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 0f;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 26)
			{
				this.name = "Goblin Peon";
				this.scale = 0.9f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.8f;
				this.@value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 27)
			{
				this.name = "Goblin Thief";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.@value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 28)
			{
				this.name = "Goblin Warrior";
				this.scale = 1.1f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.@value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 29)
			{
				this.name = "Goblin Sorcerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.6f;
				this.@value = 200f;
			}
			else if (this.type == 30)
			{
				this.name = "Chaos Ball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 100;
				this.knockBackResist = 0f;
			}
			else if (this.type == 111)
			{
				this.name = "Goblin Archer";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.@value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 471)
			{
				this.name = "Goblin Summoner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 2000;
				this.soundHit = 40;
				this.soundKilled = 42;
				this.knockBackResist = 0.15f;
				this.@value = 5000f;
				flag = true;
			}
			else if (this.type == 472)
			{
				this.name = "Shadowflame Apparition";
				this.width = 40;
				this.height = 24;
				this.aiStyle = 86;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 52;
				this.soundKilled = 55;
				this.knockBackResist = 0f;
				this.@value = 0f;
				flag = true;
				this.npcSlots = 0.1f;
			}
			else if (this.type == 520)
			{
				this.name = "Martian Walker";
				this.width = 34;
				this.height = 110;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 40;
				this.lifeMax = 2000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 521)
			{
				this.name = "Ancient Vision";
				this.width = 60;
				this.height = 60;
				this.aiStyle = 86;
				this.damage = 90;
				this.defense = 30;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 522)
			{
				this.name = "Ancient Light";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 100;
				this.damage = 120;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 0;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
			}
			else if (this.type == 523)
			{
				this.name = "Ending's Prophecy";
				this.width = 42;
				this.height = 42;
				this.aiStyle = 101;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 0;
				this.knockBackResist = 0f;
				this.chaseable = false;
				this.alpha = 255;
				this.canGhostHeal = false;
			}
			else if (this.type == 534)
			{
				this.name = "Tortured Soul";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.@value = 0f;
				this.buffImmune[31] = false;
				this.lavaImmune = true;
				this.rarity = 1;
			}
			else if (this.type == 535)
			{
				this.name = "Spiked Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 14;
				this.defense = 5;
				this.lifeMax = 50;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 0;
				this.@value = 40f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 536)
			{
				this.name = "The Bride";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.@value = 1000f;
				this.buffImmune[31] = false;
				this.rarity = 2;
			}
			else if (this.type == 537)
			{
				this.npcSlots = 2f;
				this.name = "Sand Slime";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 18;
				this.defense = 5;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.color = new Color(255, 250, 0, 0) * 0.2f;
				this.@value = 75f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 538)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 3563;
			}
			else if (this.type == 539)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 3564;
				this.rarity = 3;
			}
			if (flag)
			{
				for (int o = 0; o < 191; o++)
				{
					this.buffImmune[o] = true;
				}
			}
			if (Main.dedServ)
			{
				this.frame = new Rectangle();
			}
			else if (!Main.NPCLoaded[this.type])
			{
				this.setFrameSize = true;
			}
			else
			{
				this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
			}
			if (scaleOverride <= 0f)
			{
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
			}
			else
			{
				int num3 = (int)((float)this.width * this.scale);
				int num4 = (int)((float)this.height * this.scale);
				this.position.X = this.position.X + (float)(num3 / 2);
				this.position.Y = this.position.Y + (float)num4;
				this.scale = scaleOverride;
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
				if (this.height == 16 || this.height == 32)
				{
					NPC nPC15 = this;
					nPC15.height = nPC15.height + 1;
				}
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)this.height;
			}
			if (this.buffImmune[20])
			{
				this.buffImmune[70] = true;
			}
			if (this.buffImmune[39])
			{
				this.buffImmune[153] = true;
			}
			this.life = this.lifeMax;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			this.netID = this.type;
			this.displayName = Lang.npcName(this.netID, false);
			if (Main.expertMode)
			{
				this.scaleStats();
			}
		}

		public void SetDefaultsKeepPlayerInteraction(int Type)
		{
			bool[] flagArray = new bool[(int)this.playerInteraction.Length];
			for (int i = 0; i < (int)this.playerInteraction.Length; i++)
			{
				flagArray[i] = this.playerInteraction[i];
			}
			this.SetDefaults(Type, -1f);
			for (int j = 0; j < (int)this.playerInteraction.Length; j++)
			{
				this.playerInteraction[j] = flagArray[j];
			}
		}

		public static void setFireFlyChance()
		{
			if (Main.rand == null)
			{
				Main.rand = new Random((int)DateTime.Now.Ticks);
			}
			if (WorldGen.genRand.Next(9) == 0)
			{
				NPC.fireFlyChance = Main.rand.Next(5, 10);
				NPC.fireFlyFriendly = Main.rand.Next(1, 4);
				NPC.fireFlyMultiple = Main.rand.Next(3, 8);
			}
			else if (WorldGen.genRand.Next(3) != 0)
			{
				NPC.fireFlyChance = Main.rand.Next(10, 60);
				NPC.fireFlyFriendly = Main.rand.Next(2, 15);
				NPC.fireFlyMultiple = Main.rand.Next(6, 30);
			}
			else
			{
				NPC.fireFlyChance = 999999;
				NPC.fireFlyFriendly = 999999;
				NPC.fireFlyMultiple = 999999;
			}
			NPC.butterflyChance = Main.rand.Next(1, 25);
			if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.butterflyChance = 999999;
			}
		}

		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
		{
			bool flag = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					if (!flag)
					{
						Main.npc[i].displayName = newName;
						if (!resetExtras)
						{
							return;
						}
						flag = true;
					}
					else
					{
						Main.npc[i].displayName = NPC.getNewNPCName(npcType);
					}
				}
			}
		}

		public static void setWorldMonsters()
		{
			Random random = new Random(Main.worldID);
			int num = random.Next(3);
			int num1 = random.Next(3);
			while (num == num1)
			{
				num = random.Next(3);
			}
			for (int i = 0; i < 2; i++)
			{
				int num2 = num;
				if (i == 1)
				{
					num2 = num1;
				}
				for (int j = 0; j < 3; j++)
				{
					if (num2 == 0)
					{
						NPC.cavernMonsterType[i, j] = random.Next(494, 496);
					}
					else if (num2 != 1)
					{
						NPC.cavernMonsterType[i, j] = random.Next(498, 507);
					}
					else
					{
						NPC.cavernMonsterType[i, j] = random.Next(496, 498);
					}
				}
			}
		}

		public void SimpleFlyMovement(Vector2 desiredVelocity, float moveSpeed)
		{
			if (this.velocity.X < desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X + moveSpeed;
				if (this.velocity.X < 0f && desiredVelocity.X > 0f)
				{
					this.velocity.X = this.velocity.X + moveSpeed;
				}
			}
			else if (this.velocity.X > desiredVelocity.X)
			{
				this.velocity.X = this.velocity.X - moveSpeed;
				if (this.velocity.X > 0f && desiredVelocity.X < 0f)
				{
					this.velocity.X = this.velocity.X - moveSpeed;
				}
			}
			if (this.velocity.Y < desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y + moveSpeed;
				if (this.velocity.Y < 0f && desiredVelocity.Y > 0f)
				{
					this.velocity.Y = this.velocity.Y + moveSpeed;
					return;
				}
			}
			else if (this.velocity.Y > desiredVelocity.Y)
			{
				this.velocity.Y = this.velocity.Y - moveSpeed;
				if (this.velocity.Y > 0f && desiredVelocity.Y < 0f)
				{
					this.velocity.Y = this.velocity.Y - moveSpeed;
				}
			}
		}

		public static void SlimeRainSpawns(int plr)
		{
			float single = 15f;
			Player player = Main.player[plr];
			if ((double)player.position.Y > Main.worldSurface * 16 + (double)(Main.maxScreenH / 2))
			{
				return;
			}
			if (player.activeNPCs > single)
			{
				return;
			}
			float single1 = player.activeNPCs / single;
			int num = 45 + (int)(450f * single1);
			if (Main.expertMode)
			{
				num = (int)((double)num * 0.85);
			}
			if (Main.rand.Next(num) != 0)
			{
				return;
			}
			int x = (int)(player.Center.X - (float)Main.maxScreenW);
			int num1 = x + Main.maxScreenW * 2;
			int y = (int)((double)player.Center.Y - (double)Main.maxScreenH * 1.5);
			int y1 = (int)((double)player.Center.Y - (double)Main.maxScreenH * 0.75);
			int num2 = Main.rand.Next(x, num1);
			int num3 = Main.rand.Next(y, y1);
			num2 = num2 / 16;
			num3 = num3 / 16;
			if (num2 < 10 || num2 > Main.maxTilesX + 10)
			{
				return;
			}
			if ((double)num3 < Main.worldSurface * 0.3 || (double)num3 > Main.worldSurface)
			{
				return;
			}
			if (Collision.SolidTiles(num2 - 3, num2 + 3, num3 - 5, num3 + 2))
			{
				return;
			}
			if (Main.wallHouse[Main.tile[num2, num3].wall])
			{
				return;
			}
			int num4 = NPC.NewNPC(num2 * 16 + 8, num3 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
			if (Main.rand.Next(200) == 0)
			{
				Main.npc[num4].netDefaults(-4);
				return;
			}
			if (!Main.expertMode)
			{
				if (Main.rand.Next(10) == 0)
				{
					Main.npc[num4].netDefaults(-7);
					return;
				}
				if (Main.rand.Next(5) < 2)
				{
					Main.npc[num4].netDefaults(-3);
				}
			}
			else
			{
				if (Main.rand.Next(7) == 0)
				{
					Main.npc[num4].netDefaults(-7);
					return;
				}
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[num4].netDefaults(-3);
					return;
				}
			}
		}

		public static void SpawnNPC()
		{
			int[] numArray;
			short[] numArray1;
			if (NPC.noSpawnCycle)
			{
				NPC.noSpawnCycle = false;
				return;
			}
			bool flag = false;
			bool flag1 = false;
			int num = 0;
			int num1 = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					num3++;
				}
			}
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active && !Main.player[j].dead)
				{
					if (Main.slimeRain)
					{
						NPC.SlimeRainSpawns(j);
					}
					bool flag2 = false;
					bool flag3 = false;
					bool flag4 = false;
					bool flag5 = false;
					bool flag6 = false;
					bool flag7 = false;
					bool flag8 = false;
					bool flag9 = false;
					bool flag10 = false;
					bool flag11 = false;
					bool flag12 = (!NPC.downedPlantBoss ? false : Main.hardMode);
					if (Main.player[j].active && Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0 && (double)Main.player[j].position.Y < Main.worldSurface * 16 + (double)NPC.sHeight)
					{
						int num4 = 3000;
						if ((double)Main.player[j].position.X > Main.invasionX * 16 - (double)num4 && (double)Main.player[j].position.X < Main.invasionX * 16 + (double)num4)
						{
							flag4 = true;
						}
						else if (Main.invasionX >= (double)(Main.maxTilesX / 2 - 5) && Main.invasionX <= (double)(Main.maxTilesX / 2 + 5))
						{
							int num5 = 0;
							while (num5 < 200)
							{
								if (!Main.npc[num5].townNPC || Math.Abs(Main.player[j].position.X - Main.npc[num5].Center.X) >= (float)num4)
								{
									num5++;
								}
								else
								{
									if (Main.rand.Next(3) != 0)
									{
										break;
									}
									flag4 = true;
									break;
								}
							}
						}
					}
					if (Main.player[j].ZoneTowerSolar || Main.player[j].ZoneTowerNebula || Main.player[j].ZoneTowerVortex || Main.player[j].ZoneTowerStardust)
					{
						flag4 = true;
					}
					flag = false;
					NPC.spawnRate = NPC.defaultSpawnRate;
					NPC.maxSpawns = NPC.defaultMaxSpawns;
					if (Main.hardMode)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.9);
						NPC.maxSpawns = NPC.defaultMaxSpawns + 1;
					}
					if (Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					else if ((double)Main.player[j].position.Y > Main.rockLayer * 16 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					else if ((double)Main.player[j].position.Y > Main.worldSurface * 16 + (double)NPC.sHeight)
					{
						if (!Main.hardMode)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
						}
						else
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.45);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
					}
					else if (!Main.dayTime)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.6);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
						if (Main.bloodMoon)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
							NPC.maxSpawns = NPC.maxSpawns * 2;
						}
					}
					else if (Main.dayTime && Main.eclipse)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					if (Main.player[j].ZoneSnow && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface)
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns + (float)NPC.maxSpawns * Main.cloudAlpha);
						NPC.spawnRate = (int)((float)NPC.spawnRate * (1f - Main.cloudAlpha + 1f) / 2f);
					}
					if (Main.player[j].ZoneDungeon)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
					}
					else if (Main.player[j].ZoneUndergroundDesert)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].ZoneJungle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					else if (Main.player[j].ZoneMeteor)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.1f);
					}
					if (Main.player[j].ZoneHoly && (double)Main.player[j].position.Y > Main.rockLayer * 16 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					if (Main.wof >= 0 && Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.3f);
						NPC.spawnRate = NPC.spawnRate * 3;
					}
					if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.6f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.6)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.8f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.8)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
					}
					if ((double)(Main.player[j].position.Y / 16f) > (Main.worldSurface + Main.rockLayer) / 2 || Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
					{
						if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
						}
						else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
						}
					}
					if (Main.player[j].calmed)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.3f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.7f);
					}
					if (Main.player[j].sunflower)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.2f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.8f);
					}
					if (Main.player[j].enemySpawns)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					if (!Main.player[j].ZoneWaterCandle && Main.player[j].inventory[Main.player[j].selectedItem].type != 148)
					{
						if (Main.player[j].ZonePeaceCandle || Main.player[j].inventory[Main.player[j].selectedItem].type == 3117)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 1.3);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.7f);
						}
					}
					else if (!Main.player[j].ZonePeaceCandle && Main.player[j].inventory[Main.player[j].selectedItem].type != 3117)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					if (Main.player[j].ZoneWaterCandle && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface * 0.349999994039536)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
					}
					if ((double)NPC.spawnRate < (double)NPC.defaultSpawnRate * 0.1)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.1);
					}
					if (NPC.maxSpawns > NPC.defaultMaxSpawns * 3)
					{
						NPC.maxSpawns = NPC.defaultMaxSpawns * 3;
					}
					if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2 + 0.3 * (double)num3));
						NPC.spawnRate = 20;
					}
					if (flag4)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2 + 0.3 * (double)num3));
						NPC.spawnRate = 20;
					}
					if (Main.player[j].ZoneDungeon && !NPC.downedBoss3)
					{
						NPC.spawnRate = 10;
					}
					if (!flag4 && (!Main.bloodMoon && !Main.pumpkinMoon && !Main.snowMoon || Main.dayTime) && (!Main.eclipse || !Main.dayTime) && !Main.player[j].ZoneDungeon && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneMeteor)
					{
						if (Main.player[j].Center.Y / 16f > (float)(Main.maxTilesY - 200))
						{
							if (Main.player[j].townNPCs == 1f)
							{
								if (Main.rand.Next(2) == 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(10) != 0)
								{
									NPC.spawnRate = (int)((double)((float)NPC.spawnRate) * 1.25);
								}
								else
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
							}
							else if (Main.player[j].townNPCs == 2f)
							{
								if (Main.rand.Next(4) != 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(5) != 0)
								{
									NPC.spawnRate = (int)((double)((float)NPC.spawnRate) * 1.5);
								}
								else
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
							}
							else if (Main.player[j].townNPCs >= 3f)
							{
								if (Main.rand.Next(10) != 0)
								{
									flag3 = true;
								}
								if (Main.rand.Next(3) != 0)
								{
									NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
								}
								else
								{
									flag10 = true;
									NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.5);
								}
							}
						}
						else if (Main.player[j].townNPCs == 1f)
						{
							flag3 = true;
							if (Main.rand.Next(3) != 1)
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
							}
							else
							{
								flag10 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
						}
						else if (Main.player[j].townNPCs == 2f)
						{
							flag3 = true;
							if (Main.rand.Next(3) == 0)
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 3f);
							}
							else
							{
								flag10 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
						}
						else if (Main.player[j].townNPCs >= 3f)
						{
							flag3 = true;
							if (!Main.expertMode || Main.rand.Next(30) != 0)
							{
								flag10 = true;
							}
							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
						}
					}
					int x = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
					int y = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
					if (Main.wallHouse[Main.tile[x, y].wall])
					{
						flag3 = true;
					}
					if (Main.tile[x, y].wall == 87)
					{
						flag2 = true;
					}
					bool flag13 = false;
					if (Main.player[j].active && !Main.player[j].dead && Main.player[j].activeNPCs < (float)NPC.maxSpawns && Main.rand.Next(NPC.spawnRate) == 0)
					{
						NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
						NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
						NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
						NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
						if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 || Main.player[j].inventory[Main.player[j].selectedItem].type == 1299 || Main.player[j].scope)
						{
							float single = 1.5f;
							if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 && Main.player[j].scope)
							{
								single = 1.25f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254)
							{
								single = 1.5f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1299)
							{
								single = 1.5f;
							}
							else if (Main.player[j].scope)
							{
								single = 2f;
							}
							NPC.spawnRangeX = NPC.spawnRangeX + (int)((double)(NPC.sWidth / 16) * 0.5 / (double)single);
							NPC.spawnRangeY = NPC.spawnRangeY + (int)((double)(NPC.sHeight / 16) * 0.5 / (double)single);
							NPC.safeRangeX = NPC.safeRangeX + (int)((double)(NPC.sWidth / 16) * 0.5 / (double)single);
							NPC.safeRangeY = NPC.safeRangeY + (int)((double)(NPC.sHeight / 16) * 0.5 / (double)single);
						}
						int x1 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
						int x2 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
						int y1 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
						int y2 = (int)(Main.player[j].position.Y / 16f) + NPC.spawnRangeY;
						int x3 = (int)(Main.player[j].position.X / 16f) - NPC.safeRangeX;
						int x4 = (int)(Main.player[j].position.X / 16f) + NPC.safeRangeX;
						int y3 = (int)(Main.player[j].position.Y / 16f) - NPC.safeRangeY;
						int y4 = (int)(Main.player[j].position.Y / 16f) + NPC.safeRangeY;
						if (x1 < 0)
						{
							x1 = 0;
						}
						if (x2 > Main.maxTilesX)
						{
							x2 = Main.maxTilesX;
						}
						if (y1 < 0)
						{
							y1 = 0;
						}
						if (y2 > Main.maxTilesY)
						{
							y2 = Main.maxTilesY;
						}
						for (int k = 0; k < 50; k++)
						{
							int num6 = Main.rand.Next(x1, x2);
							int num7 = Main.rand.Next(y1, y2);
							if (!Main.tile[num6, num7].nactive() || !Main.tileSolid[Main.tile[num6, num7].type])
							{
								if (Main.wallHouse[Main.tile[num6, num7].wall])
								{
									goto Label0;
								}
								if (!flag4 && (double)num7 < Main.worldSurface * 0.349999994039536 && !flag10 && ((double)num6 < (double)Main.maxTilesX * 0.45 || (double)num6 > (double)Main.maxTilesX * 0.55 || Main.hardMode))
								{
									num2 = Main.tile[num6, num7].type;
									num = num6;
									num1 = num7;
									flag = true;
									flag1 = true;
								}
								else if (flag4 || (double)num7 >= Main.worldSurface * 0.449999988079071 || flag10 || !Main.hardMode || Main.rand.Next(10) != 0)
								{
									int num8 = num7;
									while (num8 < Main.maxTilesY)
									{
										if (!Main.tile[num6, num8].nactive() || !Main.tileSolid[Main.tile[num6, num8].type])
										{
											num8++;
										}
										else
										{
											if (num6 >= x3 && num6 <= x4 && num8 >= y3 && num8 <= y4)
											{
												break;
											}
											num2 = Main.tile[num6, num8].type;
											num = num6;
											num1 = num8;
											flag = true;
											break;
										}
									}
								}
								else
								{
									num2 = Main.tile[num6, num7].type;
									num = num6;
									num1 = num7;
									flag = true;
									flag1 = true;
								}
								if (flag)
								{
									int num9 = num - NPC.spawnSpaceX / 2;
									int num10 = num + NPC.spawnSpaceX / 2;
									int num11 = num1 - NPC.spawnSpaceY;
									int num12 = num1;
									if (num9 < 0)
									{
										flag = false;
									}
									if (num10 > Main.maxTilesX)
									{
										flag = false;
									}
									if (num11 < 0)
									{
										flag = false;
									}
									if (num12 > Main.maxTilesY)
									{
										flag = false;
									}
									if (flag)
									{
										for (int l = num9; l < num10; l++)
										{
											int num13 = num11;
											while (num13 < num12)
											{
												if (Main.tile[l, num13].nactive() && Main.tileSolid[Main.tile[l, num13].type])
												{
													flag = false;
													break;
												}
												else if (!Main.tile[l, num13].lava())
												{
													num13++;
												}
												else
												{
													flag = false;
													break;
												}
											}
										}
									}
									if (num >= x3 && num <= x4)
									{
										flag13 = true;
									}
								}
							}
							if (flag || flag)
							{
								break;
							}
						Label0:
							continue;
						}
					}
					if (flag)
					{
						Rectangle rectangle = new Rectangle(num * 16, num1 * 16, 16, 16);
						for (int m = 0; m < 255; m++)
						{
							if (Main.player[m].active)
							{
								Rectangle rectangle1 = new Rectangle((int)(Main.player[m].position.X + (float)(Main.player[m].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[m].position.Y + (float)(Main.player[m].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
								if (rectangle.Intersects(rectangle1))
								{
									flag = false;
								}
							}
						}
					}
					if (flag)
					{
						if (Main.player[j].ZoneDungeon && (!Main.tileDungeon[Main.tile[num, num1].type] || Main.tile[num, num1 - 1].wall == 0))
						{
							flag = false;
						}
						if (Main.tile[num, num1 - 1].liquid > 0 && Main.tile[num, num1 - 2].liquid > 0 && !Main.tile[num, num1 - 1].lava())
						{
							if (!Main.tile[num, num1 - 1].honey())
							{
								flag5 = true;
							}
							else
							{
								flag6 = true;
							}
						}
						int x5 = (int)Main.player[j].Center.X / 16;
						int y5 = (int)(Main.player[j].Bottom.Y + 8f) / 16;
						if (Main.tile[num, num1].type == 367)
						{
							flag8 = true;
						}
						else if (Main.tile[num, num1].type == 368)
						{
							flag7 = true;
						}
						else if (Main.tile[x5, y5].type == 367)
						{
							flag8 = true;
						}
						else if (Main.tile[x5, y5].type != 368)
						{
							int num14 = Main.rand.Next(20, 31);
							int num15 = Main.rand.Next(1, 4);
							if (num - num14 < 0)
							{
								num14 = num;
							}
							if (num1 - num14 < 0)
							{
								num14 = num1;
							}
							if (num + num14 >= Main.maxTilesX)
							{
								num14 = Main.maxTilesX - num - 1;
							}
							if (num1 + num14 >= Main.maxTilesY)
							{
								num14 = Main.maxTilesY - num1 - 1;
							}
							for (int n = num - num14; n <= num + num14; n = n + num15)
							{
								int num16 = Main.rand.Next(1, 4);
								for (int o = num1 - num14; o <= num1 + num14; o = o + num16)
								{
									if (Main.tile[n, o].type == 367)
									{
										flag8 = true;
									}
									if (Main.tile[n, o].type == 368)
									{
										flag7 = true;
									}
								}
							}
							num14 = Main.rand.Next(30, 61);
							num15 = Main.rand.Next(3, 7);
							if (x5 - num14 < 0)
							{
								num14 = x5;
							}
							if (y5 - num14 < 0)
							{
								num14 = y5;
							}
							if (x5 + num14 >= Main.maxTilesX)
							{
								num14 = Main.maxTilesX - x5 - 2;
							}
							if (y5 + num14 >= Main.maxTilesY)
							{
								num14 = Main.maxTilesY - y5 - 2;
							}
							for (int p = x5 - num14; p <= x5 + num14; p = p + num15)
							{
								int num17 = Main.rand.Next(3, 7);
								for (int q = y5 - num14; q <= y5 + num14; q = q + num17)
								{
									if (Main.tile[p, q].type == 367)
									{
										flag8 = true;
									}
									if (Main.tile[p, q].type == 368)
									{
										flag7 = true;
									}
								}
							}
						}
						else
						{
							flag7 = true;
						}
					}
					if (flag6)
					{
						flag = false;
					}
					if (flag)
					{
						if ((double)num1 > Main.rockLayer && num1 < Main.maxTilesY - 200 && !Main.player[j].ZoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) != 0)
							{
								int x6 = (int)Main.player[j].position.X / 16;
								int y6 = (int)Main.player[j].position.Y / 16;
								if (Main.tile[x6, y6].wall == 62)
								{
									flag9 = true;
								}
							}
							else
							{
								int num18 = Main.rand.Next(5, 15);
								if (num - num18 >= 0 && num + num18 < Main.maxTilesX)
								{
									for (int r = num - num18; r < num + num18; r++)
									{
										for (int s = num1 - num18; s < num1 + num18; s++)
										{
											if (Main.tile[r, s].wall == 62)
											{
												flag9 = true;
											}
										}
									}
								}
							}
						}
						if ((double)num1 < Main.rockLayer && num1 > 200 && !Main.player[j].ZoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) != 0)
							{
								int x7 = (int)Main.player[j].position.X / 16;
								int y7 = (int)Main.player[j].position.Y / 16;
								if (WallID.Sets.Conversion.Sandstone[Main.tile[x7, y7].wall] || WallID.Sets.Conversion.HardenedSand[Main.tile[x7, y7].wall])
								{
									flag11 = true;
								}
							}
							else
							{
								int num19 = Main.rand.Next(5, 15);
								if (num - num19 >= 0 && num + num19 < Main.maxTilesX)
								{
									for (int t = num - num19; t < num + num19; t++)
									{
										for (int u = num1 - num19; u < num1 + num19; u++)
										{
											if (WallID.Sets.Conversion.Sandstone[Main.tile[t, u].wall] || WallID.Sets.Conversion.HardenedSand[Main.tile[t, u].wall])
											{
												flag11 = true;
											}
										}
									}
								}
							}
						}
						flag = false;
						int num20 = Main.tile[num, num1].type;
						int num21 = 200;
						if (Main.player[j].ZoneTowerNebula)
						{
							bool flag14 = true;
							int num22 = 0;
							while (flag14)
							{
								Random random = Main.rand;
								numArray = new int[] { 424, 424, 424, 423, 423, 423, 421, 421, 421, 421, 421, 420 };
								num22 = Utils.SelectRandom<int>(random, numArray);
								flag14 = false;
								if (num22 == 424 && NPC.CountNPCS(num22) >= 2)
								{
									flag14 = true;
								}
								if (num22 == 423 && NPC.CountNPCS(num22) >= 3)
								{
									flag14 = true;
								}
								if (num22 != 420 || NPC.CountNPCS(num22) < 2)
								{
									continue;
								}
								flag14 = true;
							}
							if (num22 != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num22, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerVortex)
						{
							bool flag15 = true;
							int num23 = 0;
							while (flag15)
							{
								Random random1 = Main.rand;
								numArray = new int[] { 429, 429, 429, 429, 427, 427, 425, 425, 426 };
								num23 = Utils.SelectRandom<int>(random1, numArray);
								flag15 = false;
								if (num23 == 425 && NPC.CountNPCS(num23) >= 3)
								{
									flag15 = true;
								}
								if (num23 == 426 && NPC.CountNPCS(num23) >= 3)
								{
									flag15 = true;
								}
								if (num23 != 429 || NPC.CountNPCS(num23) < 4)
								{
									continue;
								}
								flag15 = true;
							}
							if (num23 != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num23, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerStardust)
						{
							Random random2 = Main.rand;
							numArray = new int[] { 411, 411, 411, 409, 409, 407, 402, 405 };
							int num24 = Utils.SelectRandom<int>(random2, numArray);
							if (num24 != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num24, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneTowerSolar)
						{
							bool flag16 = true;
							int num25 = 0;
							while (flag16)
							{
								Random random3 = Main.rand;
								numArray = new int[] { 518, 419, 418, 412, 417, 416, 415 };
								num25 = Utils.SelectRandom<int>(random3, numArray);
								flag16 = false;
								if (num25 == 415 && NPC.CountNPCS(num25) >= 2)
								{
									flag16 = true;
								}
								if (num25 == 416 && NPC.CountNPCS(num25) >= 1)
								{
									flag16 = true;
								}
								if (num25 == 518 && NPC.CountNPCS(num25) >= 2)
								{
									flag16 = true;
								}
								if (num25 != 412 || NPC.CountNPCS(num25) < 1)
								{
									continue;
								}
								flag16 = true;
							}
							if (num25 != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num25, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag1)
						{
							int num26 = 5;
							int num27 = 15;
							if (Main.player[j].ZoneWaterCandle)
							{
								num26 = 3;
								num27 = 10;
							}
							if (flag4 && Main.invasionType == 4)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 388, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && NPC.downedGolemBoss && (!NPC.downedMartians && Main.rand.Next(num26) == 0 || Main.rand.Next(num27) == 0) && !NPC.AnyNPCs(399))
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && !NPC.AnyNPCs(87) && !flag3 && Main.rand.Next(10) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 87, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.hardMode || NPC.AnyNPCs(87) || flag3 || Main.rand.Next(10) != 0 || Main.player[j].inventory[Main.player[j].selectedItem].type != 148 && !Main.player[j].ZoneWaterCandle)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 48, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 87, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag4)
						{
							if (Main.invasionType == 1)
							{
								if (Main.hardMode && !NPC.AnyNPCs(471) && Main.rand.Next(30) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 471, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 29, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 26, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 111, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 28, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 27, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType == 2)
							{
								if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 145, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 144, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 143, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.invasionType != 3)
							{
								if (Main.invasionType == 4)
								{
									int num28 = 0;
									int num29 = Main.rand.Next(7);
									if (Main.invasionSize <= 100 && Main.rand.Next(10) == 0 && !NPC.AnyNPCs(395))
									{
										num28 = 395;
									}
									else if (num29 >= 6)
									{
										if (Main.rand.Next(10) != 0 || NPC.AnyNPCs(395))
										{
											int num30 = Main.rand.Next(2);
											if (num30 == 0)
											{
												num28 = 390;
											}
											if (num30 == 1)
											{
												num28 = 386;
											}
										}
										else
										{
											num28 = 395;
										}
									}
									else if (num29 < 4)
									{
										int num31 = Main.rand.Next(4);
										if (num31 == 3)
										{
											if (NPC.AnyNPCs(520))
											{
												num31 = Main.rand.Next(3);
											}
											else
											{
												num28 = 520;
											}
										}
										if (num31 == 0)
										{
											num28 = 385;
										}
										if (num31 == 1)
										{
											num28 = 389;
										}
										if (num31 == 2)
										{
											num28 = 383;
										}
									}
									else
									{
										int num32 = Main.rand.Next(5);
										if (num32 >= 2)
										{
											num28 = (num32 >= 4 ? 388 : 381);
										}
										else
										{
											num28 = 382;
										}
									}
									if (num28 != 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num28, 1, 0f, 0f, 0f, 0f, 255);
									}
								}
							}
							else if (Main.invasionSize < Main.invasionSizeStart / 2 && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(491) && !Collision.SolidTiles(num - 20, num + 20, num1 - 40, num1 - 10))
							{
								NPC.NewNPC(num * 16 + 8, (num1 - 10) * 16, 491, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(30) == 0 && !NPC.AnyNPCs(216))
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 216, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(11) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 215, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(9) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 252, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 214, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) != 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 212, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 213, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.tile[num, num1].wall == 62 || flag9)
						{
							if (Main.tile[num, num1].wall == 62 && Main.rand.Next(8) == 0 && !flag5 && (double)num1 >= Main.rockLayer && num1 < Main.maxTilesY - 210 && !NPC.savedStylist && !NPC.AnyNPCs(354))
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 354, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 164, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 163, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((WallID.Sets.Conversion.HardenedSand[Main.tile[num, num1].wall] || WallID.Sets.Conversion.Sandstone[Main.tile[num, num1].wall] || flag11) && WorldGen.checkUnderground(num, num1))
						{
							if (Main.hardMode && Main.rand.Next(33) == 0 && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 510, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(22) == 0 && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 513, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.hardMode || Main.rand.Next(5) == 0)
							{
								Random random4 = Main.rand;
								numArray = new int[] { 69, 508, 508, 508, 509 };
								int num33 = Utils.SelectRandom<int>(random4, numArray);
								NPC.NewNPC(num * 16 + 8, num1 * 16, num33, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								List<int> nums = new List<int>();
								if (Main.player[j].ZoneCorrupt)
								{
									nums.Add(525);
									nums.Add(525);
								}
								if (Main.player[j].ZoneCrimson)
								{
									nums.Add(526);
									nums.Add(526);
								}
								if (Main.player[j].ZoneHoly)
								{
									nums.Add(527);
									nums.Add(527);
								}
								if (nums.Count == 0)
								{
									nums.Add(524);
									nums.Add(524);
								}
								if (Main.player[j].ZoneCorrupt || Main.player[j].ZoneCrimson)
								{
									nums.Add(533);
									nums.Add(529);
								}
								else
								{
									nums.Add(530);
									nums.Add(528);
								}
								nums.Add(532);
								int num34 = Utils.SelectRandom<int>(Main.rand, nums.ToArray());
								NPC.NewNPC(num * 16 + 8, num1 * 16, num34, 0, 0f, 0f, 0f, 0f, 255);
								nums.Clear();
							}
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneJungle && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num1 * 16, 157, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneCrimson && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num1 * 16, 242, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && flag5 && Main.player[j].ZoneCrimson && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num1 * 16, 241, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag5 && (num < 250 || num > Main.maxTilesX - 250) && Main.tileSand[num20] && (double)num1 < Main.rockLayer)
						{
							bool flag17 = false;
							if (!NPC.savedAngler && !NPC.AnyNPCs(376))
							{
								int num35 = -1;
								int num36 = num1 - 1;
								while (num36 > num1 - 50)
								{
									if (Main.tile[num, num36].liquid != 0 || WorldGen.SolidTile(num, num36) || WorldGen.SolidTile(num, num36 + 1) || WorldGen.SolidTile(num, num36 + 2))
									{
										num36--;
									}
									else
									{
										num35 = num36 + 2;
										break;
									}
								}
								if (num35 > num1)
								{
									num35 = num1;
								}
								if (num35 > 0 && !flag13)
								{
									NPC.NewNPC(num * 16 + 8, num35 * 16, 376, 0, 0f, 0f, 0f, 0f, 255);
									flag17 = true;
								}
							}
							if (!flag17)
							{
								if (Main.rand.Next(60) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 220, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(25) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 221, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 65, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 64, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 67, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (!flag5 && !NPC.savedAngler && !NPC.AnyNPCs(376) && (num < 340 || num > Main.maxTilesX - 340) && Main.tileSand[num20] && (double)num1 < Main.worldSurface)
						{
							NPC.NewNPC(num * 16 + 8, num1 * 16, 376, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag5 && ((double)num1 > Main.rockLayer && Main.rand.Next(2) == 0 || num20 == 60))
						{
							if (!Main.hardMode || Main.rand.Next(3) <= 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 58, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 102, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag5 && (double)num1 > Main.worldSurface && Main.rand.Next(3) == 0)
						{
							if (!Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 63, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 103, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (flag5 && Main.rand.Next(4) == 0)
						{
							if (Main.player[j].ZoneCorrupt)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 57, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num1 >= Main.worldSurface || num1 <= 50 || Main.rand.Next(3) == 0 || !Main.dayTime)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								int num37 = -1;
								int num38 = num1 - 1;
								while (num38 > num1 - 50)
								{
									if (Main.tile[num, num38].liquid != 0 || WorldGen.SolidTile(num, num38) || WorldGen.SolidTile(num, num38 + 1) || WorldGen.SolidTile(num, num38 + 2))
									{
										num38--;
									}
									else
									{
										num37 = num38 + 2;
										break;
									}
								}
								if (num37 > num1)
								{
									num37 = num1;
								}
								if (num37 <= 0 || flag13)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num37 * 16, 364, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num37 * 16, 362, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
						}
						else if (NPC.downedGoblins && Main.rand.Next(20) == 0 && !flag5 && (double)num1 >= Main.rockLayer && num1 < Main.maxTilesY - 210 && !NPC.savedGoblin && !NPC.AnyNPCs(105))
						{
							NPC.NewNPC(num * 16 + 8, num1 * 16, 105, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.rand.Next(20) == 0 && !flag5 && (double)num1 >= Main.rockLayer && num1 < Main.maxTilesY - 210 && !NPC.savedWizard && !NPC.AnyNPCs(106))
						{
							NPC.NewNPC(num * 16 + 8, num1 * 16, 106, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag10)
						{
							if (flag5)
							{
								if ((double)num1 >= Main.worldSurface || num1 <= 50 || Main.rand.Next(3) == 0 || !Main.dayTime)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									int num39 = -1;
									int num40 = num1 - 1;
									while (num40 > num1 - 50)
									{
										if (Main.tile[num, num40].liquid != 0 || WorldGen.SolidTile(num, num40) || WorldGen.SolidTile(num, num40 + 1) || WorldGen.SolidTile(num, num40 + 2))
										{
											num40--;
										}
										else
										{
											num39 = num40 + 2;
											break;
										}
									}
									if (num39 > num1)
									{
										num39 = num1;
									}
									if (num39 <= 0 || flag13)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 55, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(2) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num39 * 16, 364, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num39 * 16, 362, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
							}
							else if (num20 == 147 || num20 == 161)
							{
								if (Main.rand.Next(2) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 149, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 148, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (num20 != 60)
							{
								if (num20 != 2 && num20 != 109 && (double)num1 <= Main.worldSurface)
								{
									return;
								}
								if (Main.raining)
								{
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 448, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(3) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 230, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 357, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (!Main.dayTime && Main.rand.Next(NPC.fireFlyFriendly) == 0 && (double)num1 <= Main.worldSurface)
								{
									int num41 = 355;
									if (num20 == 109)
									{
										num41 = 358;
									}
									NPC.NewNPC(num * 16 + 8, num1 * 16, num41, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num1 * 16, num41, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num1 * 16, num41, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16 - 16, num41, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16 + 16, num41, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.dayTime && Main.time < 18000 && Main.rand.Next(3) != 0 && (double)num1 <= Main.worldSurface)
								{
									int num42 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num42 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num42 != 1)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num1 <= Main.worldSurface)
								{
									if (Main.rand.Next(NPC.goldCritterChance) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 444, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num1 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num1 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (Main.rand.Next(2) == 0 && (double)num1 <= Main.worldSurface)
								{
									int num43 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num43 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num43 != 1)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num20 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(366, 368), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(NPC.goldCritterChance) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 443, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)num1 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 539, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.halloween && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 303, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.xMas && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 337, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0 || (double)num1 > Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, 46, 0, 0f, 0f, 0f, 0f, 255);
								}
								else
								{
									Random random5 = Main.rand;
									numArray1 = new short[] { 299, 538 };
									NPC.NewNPC(num * 16 + 8, num1 * 16, Utils.SelectRandom<short>(random5, numArray1), 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(NPC.goldCritterChance) != 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 361, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 445, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneDungeon)
						{
							int num44 = 0;
							if (Main.tile[num, num1].wall == 94 || Main.tile[num, num1].wall == 96 || Main.tile[num, num1].wall == 98)
							{
								num44 = 1;
							}
							if (Main.tile[num, num1].wall == 95 || Main.tile[num, num1].wall == 97 || Main.tile[num, num1].wall == 99)
							{
								num44 = 2;
							}
							if (Main.rand.Next(7) == 0)
							{
								num44 = Main.rand.Next(3);
							}
							if (!NPC.downedBoss3)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 68, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!NPC.savedMech && Main.rand.Next(5) == 0 && !flag5 && !NPC.AnyNPCs(123) && (double)num1 > Main.rockLayer)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 123, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && Main.rand.Next(30) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 287, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num44 == 0 && Main.rand.Next(15) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 293, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num44 == 1 && Main.rand.Next(15) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 291, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && num44 == 2 && Main.rand.Next(15) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 292, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && !NPC.AnyNPCs(290) && num44 == 0 && Main.rand.Next(35) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 290, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && (num44 == 1 || num44 == 2) && Main.rand.Next(30) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 289, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag12 && Main.rand.Next(20) == 0)
							{
								int num45 = 281;
								if (num44 == 0)
								{
									num45 = num45 + 2;
								}
								if (num44 == 2)
								{
									num45 = num45 + 4;
								}
								num45 = num45 + Main.rand.Next(2);
								if (!NPC.AnyNPCs(num45))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num45, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (flag12 && Main.rand.Next(3) != 0)
							{
								int num46 = 269;
								if (num44 == 0)
								{
									num46 = num46 + 4;
								}
								if (num44 == 2)
								{
									num46 = num46 + 8;
								}
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, num46 + Main.rand.Next(4), 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(37) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 71, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num44 == 1 && Main.rand.Next(4) == 0 && !NPC.NearSpikeBall(num, num1))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 70, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num44 == 2 && Main.rand.Next(15) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 72, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num44 == 0 && Main.rand.Next(9) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 34, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) != 0)
							{
								int num47 = Main.rand.Next(5);
								if (num47 == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 294, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num47 == 1)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 295, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num47 != 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 31, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Boned");
									}
									else if (Main.rand.Next(5) == 0)
									{
										Main.npc[num21].SetDefaults("Short Bones");
									}
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 296, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 32, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneMeteor)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 23, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num1 <= Main.worldSurface && !Main.dayTime && Main.snowMoon)
						{
							if (Main.rand.Next(30) == 0 && NPC.CountNPCS(341) < 4)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 341, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.waveCount >= 20)
							{
								int num48 = Main.rand.Next(3);
								if (num48 != 0)
								{
									num21 = (num48 != 1 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 19)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 4)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) != 0 || NPC.CountNPCS(346) >= 5)
								{
									num21 = (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 7 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 18)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 3)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 4)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 6)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 351, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 17)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 3)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 5)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) != 0)
								{
									num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 351, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 16)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 4)
								{
									num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 352, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) != 0 || NPC.CountNPCS(344) >= 3)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 343, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 345, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) != 0)
								{
									num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 352, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 351, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 346, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(3) != 0)
								{
									num21 = (Main.rand.Next(4) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) != 0)
								{
									num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 347, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) != 0)
								{
									num21 = (Main.rand.Next(8) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 344, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(4) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount != 3)
							{
								if (NPC.waveCount != 2)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255));
								}
							}
							else if (Main.rand.Next(8) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 348, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) != 0)
							{
								num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(338, 341), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 342, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 350, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num1 <= Main.worldSurface && !Main.dayTime && Main.pumpkinMoon)
						{
							if (NPC.waveCount >= 15)
							{
								num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(5) != 0 || NPC.CountNPCS(327) >= 3)
								{
									num21 = (Main.rand.Next(5) != 0 || NPC.CountNPCS(325) >= 3 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 315, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) != 0 || NPC.CountNPCS(315) >= 3)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) == 0 && NPC.CountNPCS(315) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) != 0)
								{
									num21 = (Main.rand.Next(5) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(7) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 315, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) != 0)
								{
									num21 = (Main.rand.Next(5) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(327))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) != 0 || NPC.AnyNPCs(325))
								{
									num21 = (Main.rand.Next(10) != 0 || NPC.AnyNPCs(315) ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 315, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 327, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) != 0)
								{
									num21 = (Main.rand.Next(5) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(6) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 330, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(5) != 0)
								{
									num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 325, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(10) != 0)
								{
									num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(6) != 0)
								{
									num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 329, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (NPC.waveCount != 2)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(305, 315), 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 326, 0, 0f, 0f, 0f, 0f, 255));
							}
						}
						else if ((double)num1 <= Main.worldSurface && Main.dayTime && Main.eclipse)
						{
							bool flag18 = false;
							if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3)
							{
								flag18 = true;
							}
							if (flag18 && Main.rand.Next(80) == 0 && !NPC.AnyNPCs(477))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 477, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(50) == 0 && !NPC.AnyNPCs(251))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 251, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(5) == 0 && !NPC.AnyNPCs(466))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 466, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(463))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 463, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(20) == 0 && NPC.CountNPCS(467) < 2)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 467, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(15) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 159, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (flag18 && Main.rand.Next(13) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 253, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(8) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 469, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(7) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 468, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (NPC.downedPlantBoss && Main.rand.Next(5) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 460, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 162, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) != 0)
							{
								num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 166, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 462, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 461, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && num2 == 70 && flag5)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 256, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num2 == 70 && (double)num1 <= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (!Main.hardMode && Main.rand.Next(6) == 0 || Main.rand.Next(12) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 360, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(3) != 0)
							{
								num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 255, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 254, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (Main.rand.Next(4) != 0)
							{
								num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 258, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 257, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (!Main.hardMode || Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 259, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 260, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
						}
						else if (num2 == 70 && Main.hardMode && (double)num1 >= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (Main.hardMode && Main.rand.Next(5) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 374, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.hardMode && Main.rand.Next(4) == 0 || Main.rand.Next(8) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 360, 0, 0f, 0f, 0f, 0f, 255);
							}
							if (Main.rand.Next(4) != 0)
							{
								num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 258, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 257, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (!Main.hardMode || Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 259, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 260, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
						}
						else if (Main.player[j].ZoneCorrupt && Main.rand.Next(65) == 0 && !flag3)
						{
							num21 = (!Main.hardMode || Main.rand.Next(4) == 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 7, 1, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 98, 1, 0f, 0f, 0f, 0f, 255));
						}
						else if (Main.hardMode && (double)num1 > Main.worldSurface && Main.rand.Next(75) == 0)
						{
							if (Main.rand.Next(2) == 0 && Main.player[j].ZoneCorrupt && !NPC.AnyNPCs(473))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 473, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) != 0 || !Main.player[j].ZoneCrimson || NPC.AnyNPCs(474))
							{
								num21 = (Main.rand.Next(2) != 0 || !Main.player[j].ZoneHoly || NPC.AnyNPCs(475) ? NPC.NewNPC(num * 16 + 8, num1 * 16, 85, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 475, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 474, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.hardMode && Main.tile[num, num1 - 1].wall == 2 && Main.rand.Next(20) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 85, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (double)num1 <= Main.worldSurface && !Main.dayTime && (Main.rand.Next(20) == 0 || Main.rand.Next(5) == 0 && Main.moonPhase == 4))
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 82, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.halloween && (double)num1 <= Main.worldSurface && !Main.dayTime && Main.rand.Next(10) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 304, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num20 == 60 && Main.rand.Next(500) == 0 && !Main.dayTime)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 52, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num20 == 60 && (double)num1 > Main.worldSurface && Main.rand.Next(60) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 219, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num1 > Main.worldSurface && num1 < Main.maxTilesY - 210 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneJungle && !Main.player[j].ZoneHoly && Main.rand.Next(8) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 357, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 448, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num1 > Main.worldSurface && num1 < Main.maxTilesY - 210 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneJungle && !Main.player[j].ZoneHoly && Main.rand.Next(13) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 300, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 447, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num1 > Main.worldSurface && (double)num1 < (Main.rockLayer + (double)Main.maxTilesY) / 2 && !Main.player[j].ZoneSnow && !Main.player[j].ZoneCrimson && !Main.player[j].ZoneCorrupt && !Main.player[j].ZoneHoly && Main.rand.Next(13) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 359, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num1 < Main.worldSurface && Main.player[j].ZoneJungle && Main.rand.Next(9) == 0)
						{
							if (Main.rand.Next(NPC.goldCritterChance) != 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 361, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 445, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num20 == 60 && Main.hardMode && Main.rand.Next(3) != 0)
						{
							if ((double)num1 < Main.worldSurface && !Main.dayTime && Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 152, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num1 < Main.worldSurface && Main.dayTime && Main.rand.Next(4) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 177, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num1 > Main.worldSurface && Main.rand.Next(100) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 205, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num1 > Main.worldSurface && Main.rand.Next(5) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 236, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if ((double)num1 > Main.worldSurface && Main.rand.Next(4) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 176, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num21].SetDefaults("Tiny Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num21].SetDefaults("Little Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num21].SetDefaults("Big Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num21].SetDefaults("Giant Moss Hornet");
								}
							}
							else if (Main.rand.Next(3) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 153, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 175, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
						}
						else if (num20 == 226 && flag2)
						{
							num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 198, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 226, 0, 0f, 0f, 0f, 0f, 255));
						}
						else if (num20 == 60 && (double)num1 > (Main.worldSurface + Main.rockLayer) / 2)
						{
							if (Main.rand.Next(4) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 204, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(4) != 0)
							{
								int num49 = Main.rand.Next(8);
								if (num49 == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 231, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Little Hornet Fatty");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Hornet Fatty");
									}
								}
								else if (num49 == 1)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 232, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Little Hornet Honey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Hornet Honey");
									}
								}
								else if (num49 == 2)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 233, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Little Hornet Leafy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Hornet Leafy");
									}
								}
								else if (num49 == 3)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 234, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Little Hornet Spikey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Hornet Spikey");
									}
								}
								else if (num49 != 4)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 42, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Little Stinger");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Stinger");
									}
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 235, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Little Hornet Stingy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Big Hornet Stingy");
									}
								}
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 43, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
						}
						else if (num20 == 60 && Main.rand.Next(4) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 51, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num20 == 60 && Main.rand.Next(8) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 56, 0, 0f, 0f, 0f, 0f, 255);
							Main.npc[num21].ai[0] = (float)num;
							Main.npc[num21].ai[1] = (float)num1;
							Main.npc[num21].netUpdate = true;
						}
						else if (Main.hardMode && num20 == 53 && Main.rand.Next(3) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 78, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (num20 == 112 || num20 == 234) && Main.rand.Next(2) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 79, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && num20 == 116 && Main.rand.Next(2) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 80, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && !flag5 && (double)num1 < Main.rockLayer && (num20 == 116 || num20 == 117 || num20 == 109 || num20 == 164))
						{
							if (Main.dayTime || Main.rand.Next(2) != 0)
							{
								num21 = (Main.rand.Next(10) == 0 || Main.player[j].ZoneWaterCandle && Main.rand.Next(10) == 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 86, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 75, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 122, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (!flag3 && Main.hardMode && Main.rand.Next(50) == 0 && !flag5 && (double)num1 >= Main.rockLayer && (num20 == 116 || num20 == 117 || num20 == 109 || num20 == 164))
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 84, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num20 == 204 && Main.player[j].ZoneCrimson || num20 == 199 || num20 == 200 || num20 == 203 || num20 == 234)
						{
							if (Main.hardMode && (double)num1 >= Main.rockLayer && Main.rand.Next(5) == 0 && !flag3)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 182, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (double)num1 >= Main.rockLayer && Main.rand.Next(2) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 268, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 183, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num21].SetDefaults("Little Crimslime");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num21].SetDefaults("Big Crimslime");
								}
							}
							else if (Main.hardMode && (double)num1 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 179, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num1 > Main.worldSurface))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 174, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.tile[num, num1].wall > 0 && Main.rand.Next(4) != 0 || Main.rand.Next(8) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 239, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(2) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 173, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num21].SetDefaults("Little Crimera");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num21].SetDefaults("Big Crimera");
								}
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 181, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (num20 == 22 && Main.player[j].ZoneCorrupt || num20 == 23 || num20 == 25 || num20 == 112 || num20 == 163)
						{
							if (Main.hardMode && (double)num1 >= Main.rockLayer && Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 101, 0, 0f, 0f, 0f, 0f, 255);
								Main.npc[num21].ai[0] = (float)num;
								Main.npc[num21].ai[1] = (float)num1;
								Main.npc[num21].netUpdate = true;
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num21 = (Main.rand.Next(3) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 81, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 121, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (Main.hardMode && (double)num1 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 83, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.hardMode || Main.rand.Next(2) != 0 && (double)num1 <= Main.rockLayer)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 6, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num21].SetDefaults("Little Eater");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num21].SetDefaults("Big Eater");
								}
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 94, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num1 <= Main.worldSurface)
						{
							if (Main.player[j].ZoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(243) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 243, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneHoly && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(244) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 244, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.player[j].ZoneSnow && Main.hardMode && Main.cloudAlpha > 0f && NPC.CountNPCS(250) < 2 && Main.rand.Next(10) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 250, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && NPC.downedGolemBoss && (!NPC.downedMartians && Main.rand.Next(100) == 0 || Main.rand.Next(400) == 0) && !NPC.AnyNPCs(399))
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 399, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.dayTime)
							{
								int num50 = Math.Abs(num - Main.spawnTileX);
								if (num50 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num20 == 2 || num20 == 109 || num20 == 147 || num20 == 161))
								{
									if (num20 == 147 || num20 == 161)
									{
										if (Main.rand.Next(2) != 0)
										{
											NPC.NewNPC(num * 16 + 8, num1 * 16, 149, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num1 * 16, 148, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num1 <= Main.worldSurface)
									{
										if (Main.rand.Next(NPC.goldCritterChance) != 0)
										{
											NPC.NewNPC(num * 16 + 8, num1 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num1 * 16, 444, 0, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 - 16, num1 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 + 16, num1 * 16, 356, 0, 0f, 0f, 0f, 0f, 255);
										}
									}
									else if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 443, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(NPC.goldCritterChance) == 0 && (double)num1 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 539, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 303, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 337, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.rand.Next(3) != 0 || (double)num1 > Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 46, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										Random random6 = Main.rand;
										numArray1 = new short[] { 299, 538 };
										NPC.NewNPC(num * 16 + 8, num1 * 16, Utils.SelectRandom<short>(random6, numArray1), 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num50 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && num20 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(366, 368), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num50 < Main.maxTilesX / 3 && Main.dayTime && Main.time < 18000 && (num20 == 2 || num20 == 109) && Main.rand.Next(4) == 0 && (double)num1 <= Main.worldSurface && NPC.CountNPCS(74) + NPC.CountNPCS(297) + NPC.CountNPCS(298) < 6)
								{
									int num51 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num51 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num51 != 1)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num50 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num20 == 2 || num20 == 109 || num20 == 147))
								{
									int num52 = Main.rand.Next(4);
									if (Main.rand.Next(NPC.goldCritterChance) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 442, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num52 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 297, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num52 != 1)
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 74, 0, 0f, 0f, 0f, 0f, 255);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num1 * 16, 298, 0, 0f, 0f, 0f, 0f, 255);
									}
								}
								else if (num50 > Main.maxTilesX / 3 && num20 == 2 && Main.rand.Next(300) == 0 && !NPC.AnyNPCs(50))
								{
									NPC.SpawnOnPlayer(j, 50);
								}
								else if (num20 == 53 && Main.rand.Next(5) == 0 && !flag5)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 69, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num20 == 53 && Main.rand.Next(3) == 0 && !flag5)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 537, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (NPC.downedBoss1 && num20 == 53 && Main.rand.Next(5) == 0 && !flag5)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 509, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num20 == 53 && !flag5)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 61, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (num50 > Main.maxTilesX / 3 && (Main.rand.Next(15) == 0 || !NPC.downedGoblins && WorldGen.shadowOrbSmashed && Main.rand.Next(7) == 0))
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 73, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.raining && Main.rand.Next(3) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 224, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (!Main.raining || Main.rand.Next(2) != 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
									if (num20 == 60)
									{
										Main.npc[num21].SetDefaults("Jungle Slime");
									}
									else if (num20 == 161 || num20 == 147)
									{
										Main.npc[num21].SetDefaults("Ice Slime");
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										Main.npc[num21].SetDefaults(302, -1f);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										Main.npc[num21].SetDefaults(Main.rand.Next(333, 337), -1f);
									}
									else if (Main.rand.Next(3) == 0 || num50 < 200 && !Main.expertMode)
									{
										Main.npc[num21].SetDefaults("Green Slime");
									}
									else if (Main.rand.Next(10) == 0 && (num50 > 400 || Main.expertMode))
									{
										Main.npc[num21].SetDefaults("Purple Slime");
									}
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 225, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if ((num2 == 2 || num2 == 109) && Main.rand.Next(NPC.fireFlyChance) == 0 && (double)num1 <= Main.worldSurface)
							{
								int num53 = 355;
								if (num20 == 109)
								{
									num53 = 358;
								}
								NPC.NewNPC(num * 16 + 8, num1 * 16, num53, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 - 16, num1 * 16, num53, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 + 16, num1 * 16, num53, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16 - 16, num53, 0, 0f, 0f, 0f, 0f, 255);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num1 * 16 + 16, num53, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(10) == 0 && Main.halloween)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 301, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(6) == 0 || Main.moonPhase == 4 && Main.rand.Next(2) == 0)
							{
								if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 133, 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(317, 319), 0, 0f, 0f, 0f, 0f, 255);
								}
								else if (Main.rand.Next(2) != 0)
								{
									int num54 = Main.rand.Next(5);
									if (num54 == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 190, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num21].SetDefaults("Cataract Eye 2");
										}
									}
									else if (num54 == 1)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 191, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num21].SetDefaults("Sleepy Eye 2");
										}
									}
									else if (num54 == 2)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 192, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num21].SetDefaults("Dialated Eye 2");
										}
									}
									else if (num54 == 3)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 193, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num21].SetDefaults("Green Eye 2");
										}
									}
									else if (num54 == 4)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 194, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num21].SetDefaults("Purple Eye 2");
										}
									}
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 2, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num21].SetDefaults("Demon Eye 2");
									}
								}
							}
							else if (Main.hardMode && Main.rand.Next(50) == 0 && Main.bloodMoon && !NPC.AnyNPCs(109))
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 109, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 53, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num1 * 16, 536, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.moonPhase == 0 && Main.hardMode && Main.rand.Next(3) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 104, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 140, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.bloodMoon && Main.rand.Next(5) < 2)
							{
								num21 = (Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 490, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 489, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (num2 != 147 && num2 != 161 && num2 != 163 && num2 != 164 && num2 != 162)
							{
								if (!Main.raining || Main.rand.Next(2) != 0)
								{
									int num55 = Main.rand.Next(7);
									if (Main.halloween && Main.rand.Next(2) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(319, 322), 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (Main.xMas && Main.rand.Next(2) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(331, 333), 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 0 && Main.expertMode && Main.rand.Next(3) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 430, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 2 && Main.expertMode && Main.rand.Next(3) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 432, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 3 && Main.expertMode && Main.rand.Next(3) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 433, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 4 && Main.expertMode && Main.rand.Next(3) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 434, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 5 && Main.expertMode && Main.rand.Next(3) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 435, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 6 && Main.expertMode && Main.rand.Next(3) == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 436, 0, 0f, 0f, 0f, 0f, 255);
									}
									else if (num55 == 0)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 3, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Zombie");
											}
										}
									}
									else if (num55 == 1)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 132, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Bald Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Bald Zombie");
											}
										}
									}
									else if (num55 == 2)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 186, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Pincushion Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Pincushion Zombie");
											}
										}
									}
									else if (num55 == 3)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 187, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Slimed Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Slimed Zombie");
											}
										}
									}
									else if (num55 == 4)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 188, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Swamp Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Swamp Zombie");
											}
										}
									}
									else if (num55 == 5)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 189, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Twiggy Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Twiggy Zombie");
											}
										}
									}
									else if (num55 == 6)
									{
										num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 200, 0, 0f, 0f, 0f, 0f, 255);
										if (Main.rand.Next(3) == 0)
										{
											if (Main.rand.Next(2) != 0)
											{
												Main.npc[num21].SetDefaults("Big Female Zombie");
											}
											else
											{
												Main.npc[num21].SetDefaults("Small Female Zombie");
											}
										}
									}
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 223, 0, 0f, 0f, 0f, 0f, 255);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) != 0)
										{
											Main.npc[num21].SetDefaults("Big Rain Zombie");
										}
										else
										{
											Main.npc[num21].SetDefaults("Small Rain Zombie");
										}
									}
								}
							}
							else if (Main.hardMode && Main.rand.Next(4) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 169, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.hardMode || Main.rand.Next(3) != 0)
							{
								num21 = (!Main.expertMode || Main.rand.Next(2) != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 161, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 431, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 155, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if ((double)num1 <= Main.rockLayer)
						{
							if (!flag3 && Main.rand.Next(50) == 0 && !Main.player[j].ZoneSnow)
							{
								if (!Main.hardMode)
								{
									num21 = (!Main.player[j].ZoneSnow ? NPC.NewNPC(num * 16 + 8, num1 * 16, 10, 1, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 185, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 95, 1, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 140, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 141, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num20 == 147 || num20 == 161 || Main.player[j].ZoneSnow)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 147, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(5) == 0)
								{
									Main.npc[num21].SetDefaults("Yellow Slime");
								}
								else if (Main.rand.Next(2) != 0)
								{
									Main.npc[num21].SetDefaults("Red Slime");
								}
								else
								{
									Main.npc[num21].SetDefaults("Blue Slime");
								}
							}
						}
						else if (num1 > Main.maxTilesY - 190)
						{
							if (Main.hardMode && !NPC.savedTaxCollector && Main.rand.Next(20) == 0 && !NPC.AnyNPCs(534))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 534, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(40) == 0 && !NPC.AnyNPCs(39))
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 39, 1, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(14) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 24, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.rand.Next(7) == 0)
							{
								if (Main.rand.Next(7) != 0)
								{
									num21 = (!Main.hardMode || !NPC.downedMechBossAny || Main.rand.Next(5) == 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 62, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 156, 0, 0f, 0f, 0f, 0f, 255));
								}
								else
								{
									num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 66, 0, 0f, 0f, 0f, 0f, 255);
								}
							}
							else if (Main.rand.Next(3) != 0)
							{
								num21 = (!Main.hardMode || !NPC.downedMechBossAny || Main.rand.Next(5) == 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 60, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 151, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 59, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.rand.Next(60) == 0)
						{
							num21 = (!Main.player[j].ZoneSnow ? NPC.NewNPC(num * 16 + 8, num1 * 16, 217, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 218, 0, 0f, 0f, 0f, 0f, 255));
						}
						else if ((num20 == 116 || num20 == 117 || num20 == 164) && Main.hardMode && !flag3 && Main.rand.Next(8) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 120, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num2 == 147 || num2 == 161 || num2 == 162 || num2 == 163 || num2 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneCorrupt && Main.rand.Next(30) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 170, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num2 == 147 || num2 == 161 || num2 == 162 || num2 == 163 || num2 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneHoly && Main.rand.Next(30) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 171, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((num2 == 147 || num2 == 161 || num2 == 162 || num2 == 163 || num2 == 164) && !flag3 && Main.hardMode && Main.player[j].ZoneCrimson && Main.rand.Next(30) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 180, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && Main.player[j].ZoneSnow && Main.rand.Next(10) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 154, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!flag3 && Main.rand.Next(100) == 0 && !Main.player[j].ZoneHoly)
						{
							if (!Main.hardMode)
							{
								num21 = (!Main.player[j].ZoneSnow ? NPC.NewNPC(num * 16 + 8, num1 * 16, 10, 1, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 185, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 95, 1, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.player[j].ZoneSnow && Main.rand.Next(20) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!Main.hardMode && Main.rand.Next(10) == 0)
						{
							if (!Main.player[j].ZoneSnow)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 16, 0, 0f, 0f, 0f, 0f, 255);
							}
							else
							{
								Main.npc[num21].SetDefaults(184, -1f);
							}
						}
						else if (!Main.hardMode && Main.rand.Next(4) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 1, 0, 0f, 0f, 0f, 0f, 255);
							if (Main.player[j].ZoneJungle)
							{
								Main.npc[num21].SetDefaults("Jungle Slime");
							}
							else if (!Main.player[j].ZoneSnow)
							{
								Main.npc[num21].SetDefaults("Black Slime");
							}
							else
							{
								Main.npc[num21].SetDefaults(184, -1f);
							}
						}
						else if (Main.rand.Next(2) != 0)
						{
							if (Main.hardMode && Main.player[j].ZoneHoly & Main.rand.Next(2) == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 138, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.player[j].ZoneJungle)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 51, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.player[j].ZoneHoly)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 137, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (Main.hardMode && Main.rand.Next(6) > 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 93, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num2 == 147 || num2 == 161 || num2 == 162)
							{
								num21 = (!Main.hardMode ? NPC.NewNPC(num * 16 + 8, num1 * 16, 150, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 169, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 49, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.rand.Next(35) == 0 && NPC.CountNPCS(453) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 453, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!Main.hardMode && Main.rand.Next(80) == 0 || Main.rand.Next(200) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 195, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.hardMode && (double)num1 > (Main.rockLayer + (double)Main.maxTilesY) / 2 && Main.rand.Next(300) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 172, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if ((double)num1 > (Main.rockLayer + (double)Main.maxTilesY) / 2 && (Main.rand.Next(200) == 0 || Main.rand.Next(50) == 0 && Main.player[j].armor[1].type >= 1282 && Main.player[j].armor[1].type <= 1287 && Main.player[j].armor[0].type != 238))
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 45, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (flag8 && Main.rand.Next(5) != 0)
						{
							num21 = (Main.rand.Next(6) == 0 || NPC.AnyNPCs(480) ? NPC.NewNPC(num * 16 + 8, num1 * 16, 481, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 480, 0, 0f, 0f, 0f, 0f, 255));
						}
						else if (flag7 && Main.rand.Next(5) != 0)
						{
							num21 = (Main.rand.Next(6) == 0 || NPC.AnyNPCs(483) ? NPC.NewNPC(num * 16 + 8, num1 * 16, 482, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 483, 0, 0f, 0f, 0f, 0f, 255));
						}
						else if (Main.hardMode && Main.rand.Next(10) != 0)
						{
							if (Main.rand.Next(2) != 0)
							{
								num21 = (!Main.player[j].ZoneSnow ? NPC.NewNPC(num * 16 + 8, num1 * 16, 110, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 206, 0, 0f, 0f, 0f, 0f, 255));
							}
							else if (Main.player[j].ZoneSnow)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 197, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (!Main.halloween || Main.rand.Next(5) != 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 77, 0, 0f, 0f, 0f, 0f, 255);
								if ((double)num1 > (Main.rockLayer + (double)Main.maxTilesY) / 2 && Main.rand.Next(5) == 0)
								{
									Main.npc[num21].SetDefaults("Heavy Skeleton");
								}
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 316, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						else if (Main.rand.Next(20) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 44, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (num2 == 147 || num2 == 161 || num2 == 162)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 167, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.player[j].ZoneSnow)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 185, 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.rand.Next(3) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, NPC.cavernMonsterType[Main.rand.Next(2), Main.rand.Next(3)], 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (Main.halloween && Main.rand.Next(2) == 0)
						{
							num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, Main.rand.Next(322, 325), 0, 0f, 0f, 0f, 0f, 255);
						}
						else if (!Main.expertMode || Main.rand.Next(3) != 0)
						{
							int num56 = Main.rand.Next(4);
							if (num56 == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 21, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) != 0)
									{
										Main.npc[num21].SetDefaults("Small Skeleton");
									}
									else
									{
										Main.npc[num21].SetDefaults("Big Skeleton");
									}
								}
							}
							else if (num56 == 1)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 201, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) != 0)
									{
										Main.npc[num21].SetDefaults("Small Headache Skeleton");
									}
									else
									{
										Main.npc[num21].SetDefaults("Big Headache Skeleton");
									}
								}
							}
							else if (num56 == 2)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 202, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) != 0)
									{
										Main.npc[num21].SetDefaults("Small Misassembled Skeleton");
									}
									else
									{
										Main.npc[num21].SetDefaults("Big Misassembled Skeleton");
									}
								}
							}
							else if (num56 == 3)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 203, 0, 0f, 0f, 0f, 0f, 255);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) != 0)
									{
										Main.npc[num21].SetDefaults("Small Pantless Skeleton");
									}
									else
									{
										Main.npc[num21].SetDefaults("Big Pantless Skeleton");
									}
								}
							}
						}
						else
						{
							int num57 = Main.rand.Next(4);
							if (num57 == 0)
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 449, 0, 0f, 0f, 0f, 0f, 255);
							}
							else if (num57 != 0)
							{
								num21 = (num57 != 0 ? NPC.NewNPC(num * 16 + 8, num1 * 16, 452, 0, 0f, 0f, 0f, 0f, 255) : NPC.NewNPC(num * 16 + 8, num1 * 16, 451, 0, 0f, 0f, 0f, 0f, 255));
							}
							else
							{
								num21 = NPC.NewNPC(num * 16 + 8, num1 * 16, 450, 0, 0f, 0f, 0f, 0f, 255);
							}
						}
						if (Main.npc[num21].type == 1 && Main.rand.Next(180) == 0)
						{
							Main.npc[num21].SetDefaults("Pinky");
						}
						if (Main.netMode != 2 || num21 >= 200)
						{
							break;
						}
						NetMessage.SendData(23, -1, -1, "", num21, 0f, 0f, 0f, 0, 0, 0);
						return;
					}
				}
			}
		}

		public static void SpawnOnPlayer(int plr, int Type)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (Type == 262 && NPC.AnyNPCs(262))
			{
				return;
			}
			if (Type == 245)
			{
				if (NPC.AnyNPCs(245))
				{
					return;
				}
				try
				{
					int x = (int)Main.player[plr].Center.X / 16;
					int y = (int)Main.player[plr].Center.Y / 16;
					int num = 0;
					int num1 = 0;
					for (int i = x - 20; i < x + 20; i++)
					{
						for (int j = y - 20; j < y + 20; j++)
						{
							if (Main.tile[i, j].active() && Main.tile[i, j].type == 237 && Main.tile[i, j].frameX == 18 && Main.tile[i, j].frameY == 0)
							{
								num = i;
								num1 = j;
							}
						}
					}
					if (num > 0 && num1 > 0)
					{
						int num2 = num1 - 15;
						int num3 = num1 - 15;
						int num4 = num1;
						while (num4 > num1 - 100)
						{
							if (!WorldGen.SolidTile(num, num4))
							{
								num4--;
							}
							else
							{
								num2 = num4;
								break;
							}
						}
						int num5 = num1;
						while (num5 < num1 + 100)
						{
							if (!WorldGen.SolidTile(num, num5))
							{
								num5++;
							}
							else
							{
								num3 = num5;
								break;
							}
						}
						num1 = (num2 + num2 + num3) / 3;
						int num6 = NPC.NewNPC(num * 16 + 8, num1 * 16, 245, 100, 0f, 0f, 0f, 0f, 255);
						Main.npc[num6].target = plr;
						string str = Main.npc[num6].name;
						if (Main.netMode == 0)
						{
							Main.NewText(string.Concat(str, " ", Lang.misc[16]), 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, string.Concat(str, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
						}
					}
				}
				catch (Exception ex)
				{
#if DEBUG
					Console.WriteLine(ex);
					System.Diagnostics.Debugger.Break();

#endif
				}
				return;
			}
			if (Type == 370)
			{
				Player player = Main.player[plr];
				if (!player.active || player.dead)
				{
					return;
				}
				int num7 = 0;
				while (num7 < 1000)
				{
					Projectile projectile = Main.projectile[num7];
					if (!projectile.active || !projectile.bobber || projectile.owner != plr)
					{
						num7++;
					}
					else
					{
						int num8 = NPC.NewNPC((int)projectile.Center.X, (int)projectile.Center.Y + 100, 370, 0, 0f, 0f, 0f, 0f, 255);
						string str1 = Main.npc[num8].name;
						if (Main.netMode == 0)
						{
							Main.NewText(string.Concat(str1, " ", Lang.misc[16]), 175, 75, 255, false);
							return;
						}
						if (Main.netMode != 2)
						{
							break;
						}
						NetMessage.SendData(25, -1, -1, string.Concat(str1, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
						return;
					}
				}
				return;
			}
			if (Type == 398)
			{
				if (NPC.AnyNPCs(Type))
				{
					return;
				}
				Player player1 = Main.player[plr];
				NPC.NewNPC((int)player1.Center.X, (int)player1.Center.Y - 150, Type, 0, 0f, 0f, 0f, 0f, 255);
				if (Main.netMode == 0)
				{
					Main.NewText(string.Concat("Moon Lord ", Lang.misc[16]), 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, string.Concat("Moon Lord ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
				}
				return;
			}
			bool flag = false;
			int num9 = 0;
			int num10 = 0;
			int x1 = (int)(Main.player[plr].position.X / 16f) - NPC.spawnRangeX * 2;
			int x2 = (int)(Main.player[plr].position.X / 16f) + NPC.spawnRangeX * 2;
			int y1 = (int)(Main.player[plr].position.Y / 16f) - NPC.spawnRangeY * 2;
			int y2 = (int)(Main.player[plr].position.Y / 16f) + NPC.spawnRangeY * 2;
			int x3 = (int)(Main.player[plr].position.X / 16f) - NPC.safeRangeX;
			int x4 = (int)(Main.player[plr].position.X / 16f) + NPC.safeRangeX;
			int y3 = (int)(Main.player[plr].position.Y / 16f) - NPC.safeRangeY;
			int y4 = (int)(Main.player[plr].position.Y / 16f) + NPC.safeRangeY;
			if (x1 < 0)
			{
				x1 = 0;
			}
			if (x2 > Main.maxTilesX)
			{
				x2 = Main.maxTilesX;
			}
			if (y1 < 0)
			{
				y1 = 0;
			}
			if (y2 > Main.maxTilesY)
			{
				y2 = Main.maxTilesY;
			}
			for (int k = 0; k < 1000; k++)
			{
				for (int l = 0; l < 100; l++)
				{
					int num11 = Main.rand.Next(x1, x2);
					int num12 = Main.rand.Next(y1, y2);
					if (!Main.tile[num11, num12].nactive() || !Main.tileSolid[Main.tile[num11, num12].type])
					{
						if (Main.wallHouse[Main.tile[num11, num12].wall] && k < 999 || Type == 50 && k < 500 && Main.tile[num12, num12].wall > 0)
						{
							goto Label0;
						}
						int num13 = num12;
						while (num13 < Main.maxTilesY)
						{
							if (!Main.tile[num11, num13].nactive() || !Main.tileSolid[Main.tile[num11, num13].type])
							{
								num13++;
							}
							else
							{
								if (num11 >= x3 && num11 <= x4 && num13 >= y3 && num13 <= y4 && k != 999)
								{
									break;
								}
								ushort num14 = Main.tile[num11, num13].type;
								num9 = num11;
								num10 = num13;
								flag = true;
								break;
							}
						}
						if (flag && Type == 50 && k < 900)
						{
							int num15 = 20;
							if (!Collision.CanHit(new Vector2((float)num9, (float)(num10 - 1)) * 16f, 16, 16, new Vector2((float)num9, (float)(num10 - 1 - num15)) * 16f, 16, 16) || !Collision.CanHit(new Vector2((float)num9, (float)(num10 - 1 - num15)) * 16f, 16, 16, Main.player[plr].Center, 0, 0))
							{
								num9 = 0;
								num10 = 0;
								flag = false;
							}
						}
						if (flag && k < 999)
						{
							int num16 = num9 - NPC.spawnSpaceX / 2;
							int num17 = num9 + NPC.spawnSpaceX / 2;
							int num18 = num10 - NPC.spawnSpaceY;
							int num19 = num10;
							if (num16 < 0)
							{
								flag = false;
							}
							if (num17 > Main.maxTilesX)
							{
								flag = false;
							}
							if (num18 < 0)
							{
								flag = false;
							}
							if (num19 > Main.maxTilesY)
							{
								flag = false;
							}
							if (flag)
							{
								for (int m = num16; m < num17; m++)
								{
									int num20 = num18;
									while (num20 < num19)
									{
										if (!Main.tile[m, num20].nactive() || !Main.tileSolid[Main.tile[m, num20].type])
										{
											num20++;
										}
										else
										{
											flag = false;
											break;
										}
									}
								}
							}
						}
					}
					if (flag)
					{
						break;
					}
				Label0:
					continue;
				}
				if (flag && k < 999)
				{
					Rectangle rectangle = new Rectangle(num9 * 16, num10 * 16, 16, 16);
					for (int n = 0; n < 255; n++)
					{
						if (Main.player[n].active)
						{
							Rectangle rectangle1 = new Rectangle((int)(Main.player[n].position.X + (float)(Main.player[n].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[n].position.Y + (float)(Main.player[n].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
							if (rectangle.Intersects(rectangle1))
							{
								flag = false;
							}
						}
					}
				}
				if (flag)
				{
					break;
				}
			}
			if (flag)
			{
				int num21 = 200;
				num21 = NPC.NewNPC(num9 * 16 + 8, num10 * 16, Type, 1, 0f, 0f, 0f, 0f, 255);
				if (num21 == 200)
				{
					return;
				}
				Main.npc[num21].target = plr;
				NPC nPC = Main.npc[num21];
				nPC.timeLeft = nPC.timeLeft * 20;
				string str2 = Main.npc[num21].name;
				if (Main.npc[num21].displayName != "")
				{
					str2 = Main.npc[num21].displayName;
				}
				if (Main.netMode == 2 && num21 < 200)
				{
					NetMessage.SendData(23, -1, -1, "", num21, 0f, 0f, 0f, 0, 0, 0);
				}
				if (Type == 134 || Type == 127 || Type == 126 || Type == 125)
				{
					AchievementsHelper.CheckMechaMayhem(-1);
				}
				if (Type == 125)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Lang.misc[48], 175, 75, 255, false);
						return;
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Lang.misc[48], 255, 175f, 75f, 255f, 0, 0, 0);
						return;
					}
				}
				else if (Type != 82 && Type != 126 && Type != 50 && Type != 398)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(string.Concat(str2, " ", Lang.misc[16]), 175, 75, 255, false);
						return;
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, string.Concat(str2, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
					}
				}
			}
		}

		public static void SpawnSkeletron()
		{
			bool flag = true;
			bool flag1 = false;
			Vector2 zero = Vector2.Zero;
			int num = 0;
			int num1 = 0;
			int num2 = 0;
			while (num2 < 200)
			{
				if (!Main.npc[num2].active || Main.npc[num2].type != 35)
				{
					num2++;
				}
				else
				{
					flag = false;
					break;
				}
			}
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 37)
					{
						flag1 = true;
						Main.npc[i].ai[3] = 1f;
						zero = Main.npc[i].position;
						num = Main.npc[i].width;
						num1 = Main.npc[i].height;
						if (Main.netMode == 2)
						{
							NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
						}
					}
					else if (Main.npc[i].type == 54)
					{
						flag1 = true;
						zero = Main.npc[i].position;
						num = Main.npc[i].width;
						num1 = Main.npc[i].height;
					}
				}
			}
			if (flag && flag1)
			{
				int num3 = NPC.NewNPC((int)zero.X + num / 2, (int)zero.Y + num1 / 2, 35, 0, 0f, 0f, 0f, 0f, 255);
				Main.npc[num3].netUpdate = true;
				string str = "Skeletron";
				if (Main.netMode == 0)
				{
					Main.NewText(string.Concat(str, " ", Lang.misc[16]), 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, string.Concat(str, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
				}
			}
		}

		public static void SpawnWOF(Vector2 pos)
		{
			int num;
			if (pos.Y / 16f < (float)(Main.maxTilesY - 205))
			{
				return;
			}
			if (Main.wof >= 0)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			Player.FindClosest(pos, 16, 16);
			int num1 = 1;
			if (pos.X / 16f > (float)(Main.maxTilesX / 2))
			{
				num1 = -1;
			}
			bool flag = false;
			int x = (int)pos.X;
			while (!flag)
			{
				flag = true;
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].position.X > (float)(x - 1200) && Main.player[i].position.X < (float)(x + 1200))
					{
						x = x - num1 * 16;
						flag = false;
					}
				}
				if (x / 16 >= 20 && x / 16 <= Main.maxTilesX - 20)
				{
					continue;
				}
				flag = true;
			}
			int y = (int)pos.Y;
			int num2 = x / 16;
			int num3 = y / 16;
			int num4 = 0;
			try
			{
				while (WorldGen.SolidTile(num2, num3 - num4) || Main.tile[num2, num3 - num4].liquid >= 100)
				{
					if (WorldGen.SolidTile(num2, num3 + num4) || Main.tile[num2, num3 + num4].liquid >= 100)
					{
						num4++;
					}
					else
					{
						num3 = num3 + num4;
						y = num3 * 16;
						num = NPC.NewNPC(x, y, 113, 0, 0f, 0f, 0f, 0f, 255);
						if (Main.npc[num].displayName == "")
						{
							Main.npc[num].displayName = Main.npc[num].name;
						}
						if (Main.netMode == 0)
						{
							Main.NewText(string.Concat(Main.npc[num].displayName, " ", Lang.misc[16]), 175, 75, 255, false);
							return;
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, string.Concat(Main.npc[num].displayName, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
						}
						return;
					}
				}
				num3 = num3 - num4;
			}
			catch (Exception ex)
			{
#if DEBUG
				Console.WriteLine(ex);
				System.Diagnostics.Debugger.Break();

#endif
			}
			y = num3 * 16;
			num = NPC.NewNPC(x, y, 113, 0, 0f, 0f, 0f, 0f, 255);
			if (Main.npc[num].displayName == "")
			{
				Main.npc[num].displayName = Main.npc[num].name;
			}
			if (Main.netMode == 0)
			{
				Main.NewText(string.Concat(Main.npc[num].displayName, " ", Lang.misc[16]), 175, 75, 255, false);
				return;
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, string.Concat(Main.npc[num].displayName, " ", Lang.misc[16]), 255, 175f, 75f, 255f, 0, 0, 0);
			}
		}

		public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
			bool flag;
			bool flag1 = Main.netMode == 0;
			if (flag1 && NPC.ignorePlayerInteractions > 0)
			{
				NPC.ignorePlayerInteractions = NPC.ignorePlayerInteractions - 1;
				flag1 = false;
			}
			if (!this.active || this.life <= 0)
			{
				return 0;
			}
			double damage = (double)Damage;
			int num = this.defense;
			if (this.ichor)
			{
				num = num - 20;
			}
			if (num < 0)
			{
				num = 0;
			}
			damage = Main.CalculateDamage((int)damage, num);
			if (crit)
			{
				damage = damage * 2;
			}
			if (this.takenDamageMultiplier > 1f)
			{
				damage = damage * (double)this.takenDamageMultiplier;
			}
			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
			{
				if (!this.friendly)
				{
					Color color = (crit ? CombatText.DamagedHostileCrit : CombatText.DamagedHostile);
					if (fromNet)
					{
						color = (crit ? CombatText.OthersDamagedHostileCrit : CombatText.OthersDamagedHostile);
					}
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color, string.Concat((int)damage), crit, false);
				}
				else
				{
					Color color1 = (crit ? CombatText.DamagedFriendlyCrit : CombatText.DamagedFriendly);
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), color1, string.Concat((int)damage), crit, false);
				}
			}
			if (damage < 1)
			{
				return 0;
			}
			if (flag1)
			{
				this.PlayerInteraction(Main.myPlayer);
			}
			this.justHit = true;
			if (this.townNPC)
			{
				if (this.aiStyle != 7)
				{
					flag = false;
				}
				else
				{
					flag = (this.ai[0] == 3f || this.ai[0] == 4f || this.ai[0] == 16f ? true : this.ai[0] == 17f);
				}
				if (flag)
				{
					NPC nPC = Main.npc[(int)this.ai[2]];
					if (nPC.active)
					{
						nPC.ai[0] = 1f;
						nPC.ai[1] = (float)(300 + Main.rand.Next(300));
						nPC.ai[2] = 0f;
						nPC.localAI[3] = 0f;
						nPC.direction = hitDirection;
						nPC.netUpdate = true;
					}
				}
				this.ai[0] = 1f;
				this.ai[1] = (float)(300 + Main.rand.Next(300));
				this.ai[2] = 0f;
				this.localAI[3] = 0f;
				this.direction = hitDirection;
				this.netUpdate = true;
			}
			if (this.aiStyle == 8 && Main.netMode != 1)
			{
				if (this.type == 172)
				{
					this.ai[0] = 450f;
				}
				else if (this.type == 283 || this.type == 284)
				{
					if (Main.rand.Next(2) == 0)
					{
						this.ai[0] = 390f;
						this.netUpdate = true;
					}
				}
				else if (this.type != 533)
				{
					this.ai[0] = 400f;
				}
				else if (Main.rand.Next(3) != 0)
				{
					this.ai[0] = 181f;
					this.netUpdate = true;
				}
				this.TargetClosest(true);
			}
			if (this.aiStyle == 97 && Main.netMode != 1)
			{
				this.localAI[1] = 1f;
				this.TargetClosest(true);
			}
			if (this.type == 371)
			{
				damage = 0;
				this.ai[0] = 1f;
				this.ai[1] = 4f;
				this.dontTakeDamage = true;
			}
			if (this.type == 346 && (double)this.life >= (double)this.lifeMax * 0.5 && (double)this.life - damage < (double)this.lifeMax * 0.5)
			{
				Gore.NewGore(this.position, this.velocity, 517, 1f);
			}
			if (this.type == 184)
			{
				this.localAI[0] = 60f;
			}
			if (this.type == 535)
			{
				this.localAI[0] = 60f;
			}
			if (this.type == 185)
			{
				this.localAI[0] = 1f;
			}
			if (!this.immortal)
			{
				if (this.realLife < 0)
				{
					NPC nPC1 = this;
					nPC1.life = nPC1.life - (int)damage;
				}
				else
				{
					NPC nPC2 = Main.npc[this.realLife];
					nPC2.life = nPC2.life - (int)damage;
					this.life = Main.npc[this.realLife].life;
					this.lifeMax = Main.npc[this.realLife].lifeMax;
				}
			}
			if (knockBack > 0f && this.knockBackResist > 0f)
			{
				float single = knockBack * this.knockBackResist;
				if (single > 8f)
				{
					single = 8f + (single - 8f) * 0.9f;
				}
				if (single > 10f)
				{
					single = 10f + (single - 10f) * 0.8f;
				}
				if (single > 12f)
				{
					single = 12f + (single - 12f) * 0.7f;
				}
				if (single > 14f)
				{
					single = 14f + (single - 14f) * 0.6f;
				}
				if (single > 16f)
				{
					single = 16f;
				}
				if (crit)
				{
					single = single * 1.4f;
				}
				int num1 = (int)damage * 10;
				if (Main.expertMode)
				{
					num1 = (int)damage * 15;
				}
				if (num1 <= this.lifeMax)
				{
					if (this.noGravity)
					{
						this.velocity.Y = -single * 0.5f * this.knockBackResist;
					}
					else
					{
						this.velocity.Y = -single * 0.75f * this.knockBackResist;
					}
					this.velocity.X = single * (float)hitDirection * this.knockBackResist;
				}
				else
				{
					if (hitDirection < 0 && this.velocity.X > -single)
					{
						if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - single;
						}
						this.velocity.X = this.velocity.X - single;
						if (this.velocity.X < -single)
						{
							this.velocity.X = -single;
						}
					}
					else if (hitDirection > 0 && this.velocity.X < single)
					{
						if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + single;
						}
						this.velocity.X = this.velocity.X + single;
						if (this.velocity.X > single)
						{
							this.velocity.X = single;
						}
					}
					if (this.type == 185)
					{
						single = single * 1.5f;
					}
					single = (this.noGravity ? single * -0.5f : single * -0.75f);
					if (this.velocity.Y > single)
					{
						this.velocity.Y = this.velocity.Y + single;
						if (this.velocity.Y < single)
						{
							this.velocity.Y = single;
						}
					}
				}
			}
			if ((this.type == 113 || this.type == 114) && this.life <= 0)
			{
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && (Main.npc[i].type == 113 || Main.npc[i].type == 114))
					{
						Main.npc[i].HitEffect(hitDirection, damage);
					}
				}
			}
			else
			{
				this.HitEffect(hitDirection, damage);
			}
			if (this.soundHit > 0)
			{
				Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, this.soundHit);
			}
			if (this.realLife < 0)
			{
				this.checkDead();
			}
			else
			{
				Main.npc[this.realLife].checkDead();
			}
			return damage;
		}

		public double StrikeNPCNoInteraction(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false, bool fromNet = false)
		{
			if (Main.netMode == 0)
			{
				NPC.ignorePlayerInteractions = NPC.ignorePlayerInteractions + 1;
			}
			return this.StrikeNPC(Damage, knockBack, hitDirection, crit, noEffect, fromNet);
		}

		public void TargetClosest(bool faceTarget = true)
		{
			float single = 0f;
			float single1 = 0f;
			bool flag = false;
			int num = -1;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead)
				{
					float single2 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					single2 = single2 - (float)Main.player[i].aggro;
					if (Main.player[i].npcTypeNoAggro[this.type] && this.direction != 0)
					{
						single2 = single2 + 1000f;
					}
					if (!flag || single2 < single)
					{
						flag = true;
						num = -1;
						single1 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
						single = single2;
						this.target = i;
					}
					if (Main.player[i].tankPet >= 0 && !Main.player[i].npcTypeNoAggro[this.type])
					{
						int num1 = Main.player[i].tankPet;
						float single3 = Math.Abs(Main.projectile[num1].position.X + (float)(Main.projectile[num1].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.projectile[num1].position.Y + (float)(Main.projectile[num1].height / 2) - this.position.Y + (float)(this.height / 2));
						single3 = single3 - 200f;
						if (single3 < single && single3 < 200f && Collision.CanHit(base.Center, 1, 1, Main.projectile[num1].Center, 1, 1))
						{
							num = num1;
						}
					}
				}
			}
			if (num < 0)
			{
				if (this.target < 0 || this.target >= 255)
				{
					this.target = 0;
				}
				this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
				if (Main.player[this.target].dead)
				{
					faceTarget = false;
				}
				if (Main.player[this.target].npcTypeNoAggro[this.type] && this.direction != 0)
				{
					faceTarget = false;
				}
				if (faceTarget)
				{
					float single4 = single1 - (float)Main.player[this.target].aggro;
					float single5 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 750 + 50);
					if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || single4 <= single5 || this.oldTarget < 0 || this.oldTarget > 254)
					{
						this.direction = 1;
						if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						this.directionY = 1;
						if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
						{
							this.directionY = -1;
						}
					}
				}
			}
			else
			{
				int num2 = num;
				this.targetRect = new Rectangle((int)Main.projectile[num2].position.X, (int)Main.projectile[num2].position.Y, Main.projectile[num2].width, Main.projectile[num2].height);
				this.direction = 1;
				if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
				{
					this.direction = -1;
				}
				this.directionY = 1;
				if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
				{
					this.directionY = -1;
				}
			}
			if (this.confused)
			{
				NPC nPC = this;
				nPC.direction = nPC.direction * -1;
			}
			if ((this.direction != this.oldDirection || this.directionY != this.oldDirectionY || this.target != this.oldTarget) && !this.collideX && !this.collideY)
			{
				this.netUpdate = true;
			}
		}

		public void Teleport(Vector2 newPos, int Style = 0, int extraInfo = 0)
		{
			int num = 0;
			if (Style == 4)
			{
				num = this.lastPortalColorIndex;
			}
			Main.TeleportEffect(this.getRect(), Style, num);
			this.position = newPos;
			if (Style == 4)
			{
				this.lastPortalColorIndex = extraInfo;
				num = this.lastPortalColorIndex;
			}
			Main.TeleportEffect(this.getRect(), Style, num);
			this.teleportTime = 1f;
			this.teleportStyle = Style;
			if (Main.netMode == 2 && Style != 4)
			{
				NetMessage.SendData(65, -1, -1, "", 1, (float)this.whoAmI, newPos.X, newPos.Y, Style, 0, 0);
			}
		}

		public override string ToString()
		{
			object[] objArray = new object[] { "name:", this.name, ", active:", this.active, ", whoAmI:", this.whoAmI };
			return string.Concat(objArray);
		}

		public void Transform(int newType)
		{
			if (Main.netMode != 1)
			{
				bool flag = false;
				if (this.@value == 0f)
				{
					flag = true;
				}
				int[] numArray = new int[5];
				int[] numArray1 = new int[5];
				for (int i = 0; i < 5; i++)
				{
					numArray[i] = this.buffType[i];
					numArray1[i] = this.buffTime[i];
				}
				int num = this.height;
				int num1 = this.type;
				int num2 = this.life;
				int num3 = this.lifeMax;
				Vector2 vector2 = this.velocity;
				this.position.Y = this.position.Y + (float)this.height;
				int num4 = this.spriteDirection;
				this.SetDefaults(newType, -1f);
				this.spriteDirection = num4;
				this.TargetClosest(true);
				this.velocity = vector2;
				this.position.Y = this.position.Y - (float)this.height;
				if (flag)
				{
					this.@value = 0f;
				}
				if (this.lifeMax == num3)
				{
					this.life = num2;
				}
				if (newType == 107 || newType == 108)
				{
					this.homeTileX = (int)(this.position.X + (float)(this.width / 2)) / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height) / 16;
					this.homeless = true;
				}
				for (int j = 0; j < 5; j++)
				{
					this.buffType[j] = numArray[j];
					this.buffTime[j] = numArray1[j];
				}
				if (Main.netMode == 2)
				{
					this.netUpdate = true;
					NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
				this.TransformVisuals(num1, newType);
				if (NPC.TypeToNum(this.type) != -1)
				{
					Main.npc[this.whoAmI].displayName = NPC.getNewNPCName(this.type);
				}
				this.npcNameLookup = 0;
				if (this.townNPC)
				{
					this.homeless = true;
				}
			}
		}

		public void TransformVisuals(int oldType, int newType)
		{
			if (oldType == 158 && newType == 159 || oldType == 159 && newType == 158)
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
				int num = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 99, this.scale);
				Gore gore = Main.gore[num];
				gore.velocity = gore.velocity * 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), this.velocity, 99, this.scale);
				Gore gore1 = Main.gore[num];
				gore1.velocity = gore1.velocity * 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), this.velocity, 99, this.scale);
				Gore gore2 = Main.gore[num];
				gore2.velocity = gore2.velocity * 0.3f;
			}
			else if (oldType == 478 && newType == 479)
			{
				for (int i = 0; i < 30; i++)
				{
					Vector2 vector2 = this.position;
					int num1 = this.width;
					int num2 = this.height;
					Color color = new Color();
					int num3 = Dust.NewDust(vector2, num1, num2, 238, 0f, -2f, 0, color, 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num3].noGravity = true;
					}
				}
				Gore.NewGore(this.position, this.velocity, 684, this.scale);
				Gore.NewGore(this.position, this.velocity, 685, this.scale);
				Gore.NewGore(this.position, this.velocity, 686, this.scale);
				Gore.NewGore(this.position, this.velocity, 684 + Main.rand.Next(3), this.scale);
			}
			else if (oldType == 406 && newType == 405)
			{
				float single = (float)Main.rand.Next(10, 21);
				float single1 = 6.28318548f * Main.rand.NextFloat();
				Vector2 vector21 = new Vector2(22f, 22f);
				for (float j = 0f; j < single; j = j + 1f)
				{
					Dust[] dustArray = Main.dust;
					Vector2 center = base.Center;
					Color color1 = new Color();
					Dust dust = dustArray[Dust.NewDust(center, 0, 0, 229, 0f, 0f, 0, color1, 1f)];
					Vector2 vector22 = Vector2.UnitY.RotatedBy((double)(j * 6.28318548f / single + single1), new Vector2());
					dust.position = base.Center + ((vector22 * vector21) / 2f);
					dust.velocity = vector22;
					dust.noGravity = true;
					dust.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					Dust dust1 = dust;
					dust1.velocity = dust1.velocity * dust.scale;
					dust.fadeIn = Main.rand.NextFloat() * 2f;
				}
			}
			if (oldType == 428 && newType == 427)
			{
				for (int k = 0; k < 20; k++)
				{
					Random random = Main.rand;
					int[] numArray = new int[] { 229, 240 };
					int num4 = Utils.SelectRandom<int>(random, numArray);
					Dust[] dustArray1 = Main.dust;
					Vector2 vector23 = this.position;
					int num5 = this.width;
					int num6 = this.height;
					Color color2 = new Color();
					Dust dust2 = dustArray1[Dust.NewDust(vector23, num5, num6, num4, 0f, 0f, 0, color2, 1f)];
					dust2.noGravity = true;
					dust2.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust2.fadeIn = 0.25f;
					Dust dust3 = dust2;
					dust3.velocity = dust3.velocity * (dust2.scale / 2f);
				}
			}
			if (oldType == 427 && newType == 426)
			{
				for (int l = 0; l < 30; l++)
				{
					Random random1 = Main.rand;
					int[] numArray1 = new int[] { 229, 240, 240 };
					int num7 = Utils.SelectRandom<int>(random1, numArray1);
					Dust[] dustArray2 = Main.dust;
					Vector2 vector24 = this.position;
					int num8 = this.width;
					int num9 = this.height;
					Color color3 = new Color();
					Dust dust4 = dustArray2[Dust.NewDust(vector24, num8, num9, num7, 0f, 0f, 0, color3, 1f)];
					dust4.noGravity = true;
					dust4.scale = 0.6f + Main.rand.NextFloat() * 1.8f;
					dust4.fadeIn = 0.25f;
					Dust dust5 = dust4;
					dust5.velocity = dust5.velocity * (dust4.scale * 0.75f);
				}
			}
		}

		public void TryPortalJumping()
		{
			if (!this.townNPC || Main.netMode == 1)
			{
				return;
			}
			PortalHelper.TryGoingThroughPortals(this);
		}

		public void TweakSwingStats(int swingMax, int swingCurrent, int aimDir, ref Rectangle itemRectangle)
		{
			if ((double)swingCurrent < (double)swingMax * 0.333)
			{
				if (aimDir == -1)
				{
					itemRectangle.X = itemRectangle.X - (int)((double)itemRectangle.Width * 1.4 - (double)itemRectangle.Width);
				}
				itemRectangle.Width = (int)((double)itemRectangle.Width * 1.4);
				itemRectangle.Y = itemRectangle.Y + (int)((double)itemRectangle.Height * 0.5);
				itemRectangle.Height = (int)((double)itemRectangle.Height * 1.1);
				return;
			}
			if ((double)swingCurrent < (double)swingMax * 0.666)
			{
				return;
			}
			if (aimDir == 1)
			{
				itemRectangle.X = itemRectangle.X - (int)((double)itemRectangle.Width * 1.2);
			}
			itemRectangle.Width = itemRectangle.Width * 2;
			itemRectangle.Y = itemRectangle.Y - (int)((double)itemRectangle.Height * 1.4 - (double)itemRectangle.Height);
			itemRectangle.Height = (int)((double)itemRectangle.Height * 1.4);
		}

		public static int TypeToNum(int type)
		{
			if (type == 17)
			{
				return 2;
			}
			if (type == 18)
			{
				return 3;
			}
			if (type == 19)
			{
				return 6;
			}
			if (type == 20)
			{
				return 5;
			}
			if (type == 22)
			{
				return 1;
			}
			if (type == 38)
			{
				return 4;
			}
			if (type == 54)
			{
				return 7;
			}
			if (type == 107)
			{
				return 9;
			}
			if (type == 108)
			{
				return 10;
			}
			if (type == 124)
			{
				return 8;
			}
			if (type == 142)
			{
				return 11;
			}
			if (type == 160)
			{
				return 12;
			}
			if (type == 178)
			{
				return 13;
			}
			if (type == 207)
			{
				return 14;
			}
			if (type == 208)
			{
				return 15;
			}
			if (type == 209)
			{
				return 16;
			}
			if (type == 227)
			{
				return 17;
			}
			if (type == 228)
			{
				return 18;
			}
			if (type == 229)
			{
				return 19;
			}
			if (type == 353)
			{
				return 20;
			}
			if (type == 368)
			{
				return 21;
			}
			if (type == 369)
			{
				return 22;
			}
			if (type == 441)
			{
				return 23;
			}
			return -1;
		}

		public void UpdateNPC(int i)
		{
			Color color;
			this.whoAmI = i;
			if (this.active)
			{
				if (this.type == 368)
				{
					NPC.travelNPC = true;
				}
				if (this.type >= 442 && this.type <= 448 || this.type == 539)
				{
					Color color1 = Lighting.GetColor((int)base.Center.X / 16, (int)base.Center.Y / 16);
					if (color1.R > 20 || color1.B > 20 || color1.G > 20)
					{
						int r = color1.R;
						if (color1.G > r)
						{
							r = color1.G;
						}
						if (color1.B > r)
						{
							r = color1.B;
						}
						r = r / 30;
						if (Main.rand.Next(300) < r)
						{
							int num = Dust.NewDust(this.position, this.width, this.height, 43, 0f, 0f, 254, new Color(255, 255, 0), 0.5f);
							Dust dust = Main.dust[num];
							dust.velocity = dust.velocity * 0f;
						}
					}
				}
				if (this.type >= 254 && this.type <= 261 || this.type == 160)
				{
					float single = (float)Main.rand.Next(28, 42) * 0.005f;
					single = single + (float)(270 - Main.mouseTextColor) / 500f;
					float single1 = 0.1f;
					float single2 = 0.3f + single / 2f;
					float single3 = 0.6f + single;
					float single4 = 0.35f;
					single1 = single1 * single4;
					single2 = single2 * single4;
					single3 = single3 * single4;
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, single1, single2, single3);
				}
				if (this.type == 209)
				{
					float single5 = (float)Main.rand.Next(28, 42) * 0.005f;
					single5 = single5 + (float)(270 - Main.mouseTextColor) / 500f;
					float single6 = 0.1f;
					float single7 = 0.3f + single5 / 2f;
					float single8 = 0.4f + single5 / 2f;
					float single9 = 0.35f;
					single6 = single6 * single9;
					single7 = single7 * single9;
					single8 = single8 * single9;
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, single6, single7, single8);
					if (this.ai[0] == 12f)
					{
						Lighting.AddLight(base.Top, 0.3f, 0.1f, 0.1f);
					}
				}
				if (this.type == 44)
				{
					Lighting.AddLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + 4f) / 16, 0.9f, 0.75f, 0.5f);
				}
				if (this.teleportTime > 0f)
				{
					if (this.teleportStyle == 0)
					{
						if ((float)Main.rand.Next(100) <= 100f * this.teleportTime * 2f)
						{
							Vector2 vector2 = new Vector2((float)this.getRect().X, (float)this.getRect().Y);
							int width = this.getRect().Width;
							int height = this.getRect().Height;
							color = new Color();
							int num1 = Dust.NewDust(vector2, width, height, 159, 0f, 0f, 0, color, 1f);
							Main.dust[num1].scale = this.teleportTime * 1.5f;
							Main.dust[num1].noGravity = true;
							Dust dust1 = Main.dust[num1];
							dust1.velocity = dust1.velocity * 1.1f;
						}
					}
					else if (this.teleportStyle == 4)
					{
						NPC nPC = this;
						nPC.teleportTime = nPC.teleportTime - 0.02f;
						if ((float)Main.rand.Next(100) <= 100f * this.teleportTime)
						{
							Dust[] dustArray = Main.dust;
							Vector2 vector21 = this.position;
							int num2 = this.width;
							int num3 = this.height;
							color = new Color();
							Dust portalColor = dustArray[Dust.NewDust(vector21, num2, num3, 263, 0f, 0f, 0, color, 1f)];
							portalColor.color = PortalHelper.GetPortalColor(this.lastPortalColorIndex);
							portalColor.noLight = true;
							portalColor.noGravity = true;
							portalColor.scale = 1.2f;
							portalColor.fadeIn = 0.4f;
						}
					}
					NPC nPC1 = this;
					nPC1.teleportTime = nPC1.teleportTime - 0.005f;
				}
				if (Main.netMode != 2)
				{
					if (this.type >= 362 && this.type <= 365)
					{
						if (Main.dayTime && Main.rand.Next(200) == 0)
						{
							Main.PlaySound(30, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type == 361 || this.type == 445)
					{
						if ((double)Math.Abs(this.velocity.X) < 0.5 && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16) && Main.rand.Next(200) == 0)
						{
							Main.PlaySound(31, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type != 74 && this.type != 297 && this.type != 298 && this.type != 442)
					{
						if ((this.type == 300 || this.type == 447) && Main.rand.Next(1800) == 0)
						{
							Main.PlaySound(33, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (Main.dayTime && Main.time < 18000 && Main.rand.Next(400) == 0)
					{
						if (this.type == 74)
						{
							if (Main.rand.Next(3) == 0)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
							}
							else
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
							}
						}
						if (this.type == 297)
						{
							Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
						}
						if (this.type == 298)
						{
							if (Main.rand.Next(3) == 0)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
							}
							else
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
							}
						}
						if (this.type == 442)
						{
							int num4 = Main.rand.Next(5);
							if (num4 == 0)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
							}
							else if (num4 == 1)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
							}
							else if (num4 == 2)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
							}
							else if (num4 != 3)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
							}
							else
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
							}
						}
					}
				}
				if (Main.netMode == 1 && (this.townNPC || this.type == 453) && this.type != 37 && this.npcNameLookup == 0)
				{
					this.npcNameLookup = 1;
					int num5 = -1;
					int num6 = 0;
					while (num6 < 200)
					{
						if (Main.npc[num6] != this)
						{
							num6++;
						}
						else
						{
							num5 = num6;
							break;
						}
					}
					NetMessage.SendData(56, -1, -1, "", num5, 0f, 0f, 0f, 0, 0, 0);
				}
				if (this.displayName == "" && Main.netMode != 1)
				{
					this.displayName = this.name;
				}
				if (Main.netMode == 1)
				{
					bool flag = false;
					int x = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int y = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					try
					{
						if (x >= 4 && x <= Main.maxTilesX - 4 && y >= 4 && y <= Main.maxTilesY - 4)
						{
							if (Main.tile[x, y] == null)
							{
								flag = true;
							}
							else if (Main.tile[x - 3, y] == null)
							{
								flag = true;
							}
							else if (Main.tile[x + 3, y] == null)
							{
								flag = true;
							}
							else if (Main.tile[x, y - 3] == null)
							{
								flag = true;
							}
							else if (Main.tile[x, y + 3] == null)
							{
								flag = true;
							}
						}
					}
					catch
					{
						flag = true;
					}
					if (flag)
					{
						return;
					}
				}
				this.lifeRegen = 0;
				this.soulDrain = false;
				this.poisoned = false;
				this.venom = false;
				this.shadowFlame = false;
				this.onFire = false;
				this.midas = false;
				this.ichor = false;
				this.onFrostBurn = false;
				this.onFire2 = false;
				this.confused = false;
				this.loveStruck = false;
				this.dryadWard = false;
				this.stinky = false;
				this.dripping = false;
				this.drippingSlime = false;
				this.daybreak = false;
				this.javelined = false;
				this.celled = false;
				this.dryadBane = false;
				for (int i1 = 0; i1 < 5; i1++)
				{
					if (this.buffType[i1] > 0 && this.buffTime[i1] > 0)
					{
						this.buffTime[i1] = this.buffTime[i1] - 1;
						if (this.buffType[i1] == 20)
						{
							this.poisoned = true;
						}
						if (this.buffType[i1] == 70)
						{
							this.venom = true;
						}
						if (this.buffType[i1] == 24)
						{
							this.onFire = true;
						}
						if (this.buffType[i1] == 72)
						{
							this.midas = true;
						}
						if (this.buffType[i1] == 69)
						{
							this.ichor = true;
						}
						if (this.buffType[i1] == 31)
						{
							this.confused = true;
						}
						if (this.buffType[i1] == 39)
						{
							this.onFire2 = true;
						}
						if (this.buffType[i1] == 44)
						{
							this.onFrostBurn = true;
						}
						if (this.buffType[i1] == 103)
						{
							this.dripping = true;
						}
						if (this.buffType[i1] == 137)
						{
							this.drippingSlime = true;
						}
						if (this.buffType[i1] == 119)
						{
							this.loveStruck = true;
						}
						if (this.buffType[i1] == 120)
						{
							this.stinky = true;
						}
						if (this.buffType[i1] == 151)
						{
							this.soulDrain = true;
						}
						if (this.buffType[i1] == 153)
						{
							this.shadowFlame = true;
						}
						if (this.buffType[i1] == 165)
						{
							this.dryadWard = true;
						}
						if (this.buffType[i1] == 169)
						{
							this.javelined = true;
						}
						if (this.buffType[i1] == 183)
						{
							this.celled = true;
						}
						if (this.buffType[i1] == 186)
						{
							this.dryadBane = true;
						}
						if (this.buffType[i1] == 189)
						{
							this.daybreak = true;
						}
					}
				}
				if (this.soulDrain)
				{
					int num7 = 1100;
					for (int j = 0; j < 255; j++)
					{
						if (Main.player[j].active && !Main.player[j].dead && (base.Center - Main.player[j].position).Length() < (float)num7 && Main.player[j].inventory[Main.player[j].selectedItem].type == 3006 && Main.player[j].itemAnimation > 0)
						{
							if (j == Main.myPlayer)
							{
								Player player = Main.player[j];
								player.soulDrain = player.soulDrain + 1;
							}
							if (Main.rand.Next(3) != 0)
							{
								Vector2 center = base.Center;
								center.X = center.X + (float)Main.rand.Next(-100, 100) * 0.05f;
								center.Y = center.Y + (float)Main.rand.Next(-100, 100) * 0.05f;
								center = center + this.velocity;
								color = new Color();
								int num8 = Dust.NewDust(center, 1, 1, 235, 0f, 0f, 0, color, 1f);
								Dust dust2 = Main.dust[num8];
								dust2.velocity = dust2.velocity * 0f;
								Main.dust[num8].scale = (float)Main.rand.Next(70, 85) * 0.01f;
								Main.dust[num8].fadeIn = (float)(j + 1);
							}
						}
					}
				}
				if (Main.netMode != 1)
				{
					for (int k = 0; k < 5; k++)
					{
						if (this.buffType[k] > 0 && this.buffTime[k] <= 0)
						{
							this.DelBuff(k);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
							}
						}
					}
				}
				if (!this.dontTakeDamage)
				{
					int num9 = -1;
					if (this.poisoned)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC2 = this;
						nPC2.lifeRegen = nPC2.lifeRegen - 4;
					}
					if (this.onFire)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC3 = this;
						nPC3.lifeRegen = nPC3.lifeRegen - 8;
					}
					if (this.onFrostBurn)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC4 = this;
						nPC4.lifeRegen = nPC4.lifeRegen - 16;
						if (num9 < 2)
						{
							num9 = 2;
						}
					}
					if (this.onFire2)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC5 = this;
						nPC5.lifeRegen = nPC5.lifeRegen - 12;
					}
					if (this.venom)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC6 = this;
						nPC6.lifeRegen = nPC6.lifeRegen - 12;
						if (num9 < 2)
						{
							num9 = 2;
						}
					}
					if (this.shadowFlame)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC7 = this;
						nPC7.lifeRegen = nPC7.lifeRegen - 30;
						if (num9 < 5)
						{
							num9 = 5;
						}
					}
					if (this.javelined)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num10 = 0;
						int num11 = 1;
						for (int l = 0; l < 1000; l++)
						{
							if (Main.projectile[l].active && Main.projectile[l].type == 598 && Main.projectile[l].ai[0] == 1f && Main.projectile[l].ai[1] == (float)this.whoAmI)
							{
								num10++;
							}
						}
						NPC nPC8 = this;
						nPC8.lifeRegen = nPC8.lifeRegen - num10 * 2 * 3;
						if (num9 < num10 * 3 / num11)
						{
							num9 = num10 * 3 / num11;
						}
					}
					if (this.daybreak)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num12 = 0;
						int num13 = 4;
						for (int m = 0; m < 1000; m++)
						{
							if (Main.projectile[m].active && Main.projectile[m].type == 636 && Main.projectile[m].ai[0] == 1f && Main.projectile[m].ai[1] == (float)this.whoAmI)
							{
								num12++;
							}
						}
						if (num12 == 0)
						{
							num12 = 1;
						}
						NPC nPC9 = this;
						nPC9.lifeRegen = nPC9.lifeRegen - num12 * 2 * 100;
						if (num9 < num12 * 100 / num13)
						{
							num9 = num12 * 100 / num13;
						}
					}
					if (this.celled)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						int num14 = 0;
						for (int n = 0; n < 1000; n++)
						{
							if (Main.projectile[n].active && Main.projectile[n].type == 614 && Main.projectile[n].ai[0] == 1f && Main.projectile[n].ai[1] == (float)this.whoAmI)
							{
								num14++;
							}
						}
						NPC nPC10 = this;
						nPC10.lifeRegen = nPC10.lifeRegen - num14 * 2 * 20;
						if (num9 < num14 * 20)
						{
							num9 = num14 * 20 / 2;
						}
					}
					if (this.dryadBane)
					{
						int num15 = 4;
						float single10 = 1f;
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						if (NPC.downedBoss1)
						{
							single10 = single10 + 0.1f;
						}
						if (NPC.downedBoss2)
						{
							single10 = single10 + 0.1f;
						}
						if (NPC.downedBoss3)
						{
							single10 = single10 + 0.1f;
						}
						if (NPC.downedQueenBee)
						{
							single10 = single10 + 0.1f;
						}
						if (Main.hardMode)
						{
							single10 = single10 + 0.4f;
						}
						if (NPC.downedMechBoss1)
						{
							single10 = single10 + 0.15f;
						}
						if (NPC.downedMechBoss2)
						{
							single10 = single10 + 0.15f;
						}
						if (NPC.downedMechBoss3)
						{
							single10 = single10 + 0.15f;
						}
						if (NPC.downedPlantBoss)
						{
							single10 = single10 + 0.15f;
						}
						if (NPC.downedGolemBoss)
						{
							single10 = single10 + 0.15f;
						}
						if (NPC.downedAncientCultist)
						{
							single10 = single10 + 0.15f;
						}
						if (Main.expertMode)
						{
							single10 = single10 * Main.expertNPCDamage;
						}
						num15 = (int)((float)num15 * single10);
						NPC nPC11 = this;
						nPC11.lifeRegen = nPC11.lifeRegen - 2 * num15;
						if (num9 < num15)
						{
							num9 = num15 / 3;
						}
					}
					if (this.soulDrain && this.realLife == -1)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						NPC nPC12 = this;
						nPC12.lifeRegen = nPC12.lifeRegen - 50;
						if (num9 < 5)
						{
							num9 = 5;
						}
					}
					if (this.lifeRegen <= -240 && num9 < 2)
					{
						num9 = 2;
					}
					NPC nPC13 = this;
					nPC13.lifeRegenCount = nPC13.lifeRegenCount + this.lifeRegen;
					while (this.lifeRegenCount >= 120)
					{
						NPC nPC14 = this;
						nPC14.lifeRegenCount = nPC14.lifeRegenCount - 120;
						if (this.immortal)
						{
							continue;
						}
						if (this.life < this.lifeMax)
						{
							NPC nPC15 = this;
							nPC15.life = nPC15.life + 1;
						}
						if (this.life <= this.lifeMax)
						{
							continue;
						}
						this.life = this.lifeMax;
					}
					if (num9 <= 0)
					{
						while (this.lifeRegenCount <= -120)
						{
							NPC nPC16 = this;
							nPC16.lifeRegenCount = nPC16.lifeRegenCount + 120;
							int num16 = this.whoAmI;
							if (this.realLife >= 0)
							{
								num16 = this.realLife;
							}
							if (!Main.npc[num16].immortal)
							{
								NPC nPC17 = Main.npc[num16];
								nPC17.life = nPC17.life - 1;
							}
							CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat(1), false, true);
							if (Main.npc[num16].life > 0 || Main.npc[num16].immortal)
							{
								continue;
							}
							Main.npc[num16].life = 1;
							if (Main.netMode == 1)
							{
								continue;
							}
							Main.npc[num16].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							if (Main.netMode != 2)
							{
								continue;
							}
							NetMessage.SendData(28, -1, -1, "", num16, 9999f, 0f, 0f, 0, 0, 0);
						}
					}
					else
					{
						while (this.lifeRegenCount <= -120 * num9)
						{
							NPC nPC18 = this;
							nPC18.lifeRegenCount = nPC18.lifeRegenCount + 120 * num9;
							int num17 = this.whoAmI;
							if (this.realLife >= 0)
							{
								num17 = this.realLife;
							}
							if (!Main.npc[num17].immortal)
							{
								NPC nPC19 = Main.npc[num17];
								nPC19.life = nPC19.life - num9;
							}
							CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), CombatText.LifeRegenNegative, string.Concat(num9), false, true);
							if (Main.npc[num17].life > 0 || Main.npc[num17].immortal)
							{
								continue;
							}
							Main.npc[num17].life = 1;
							if (Main.netMode == 1)
							{
								continue;
							}
							Main.npc[num17].StrikeNPCNoInteraction(9999, 0f, 0, false, false, false);
							if (Main.netMode != 2)
							{
								continue;
							}
							NetMessage.SendData(28, -1, -1, "", num17, 9999f, 0f, 0f, 0, 0, 0);
						}
					}
				}
				if (Main.netMode != 1 && Main.bloodMoon)
				{
					bool flag1 = false;
					if (this.@value == 0f)
					{
						flag1 = true;
					}
					if (this.type == 46 || this.type == 303 || this.type == 337 || this.type == 443)
					{
						if (!WorldGen.crimson)
						{
							this.Transform(47);
						}
						else
						{
							this.Transform(464);
						}
					}
					else if (this.type != 55 && this.type != 230)
					{
						if (this.type == 148 || this.type == 149)
						{
							if (!WorldGen.crimson)
							{
								this.Transform(168);
							}
							else
							{
								this.Transform(470);
							}
						}
					}
					else if (!WorldGen.crimson)
					{
						this.Transform(57);
					}
					else
					{
						this.Transform(465);
					}
					if (flag1)
					{
						this.@value = 0f;
					}
				}
				float single11 = 10f;
				NPC.gravity = 0.3f;
				if (this.type == 258)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				else if (this.type == 425 && this.ai[2] == 1f)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 2f)
					{
						this.velocity.Y = 2f;
					}
				}
				else if (this.type == 427 && this.ai[2] == 1f)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 4f)
					{
						this.velocity.Y = 4f;
					}
				}
				else if (this.type == 426)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				float single12 = (float)(Main.maxTilesX / 4200);
				single12 = single12 * single12;
				float y1 = (float)((double)(this.position.Y / 16f - (60f + 10f * single12)) / (Main.worldSurface / 6));
				if ((double)y1 < 0.25)
				{
					y1 = 0.25f;
				}
				if (y1 > 1f)
				{
					y1 = 1f;
				}
				NPC.gravity = NPC.gravity * y1;
				if (this.wet)
				{
					if (!this.honeyWet)
					{
						NPC.gravity = 0.2f;
						single11 = 7f;
					}
					else
					{
						NPC.gravity = 0.1f;
						single11 = 4f;
					}
				}
				if (this.soundDelay > 0)
				{
					NPC nPC20 = this;
					nPC20.soundDelay = nPC20.soundDelay - 1;
				}
				if (this.life <= 0)
				{
					this.active = false;
				}
				this.oldTarget = this.target;
				this.oldDirection = this.direction;
				this.oldDirectionY = this.directionY;
				float single13 = 1f + Math.Abs(this.velocity.X) / 3f;
				if (this.gfxOffY > 0f)
				{
					NPC nPC21 = this;
					nPC21.gfxOffY = nPC21.gfxOffY - single13 * this.stepSpeed;
					if (this.gfxOffY < 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				else if (this.gfxOffY < 0f)
				{
					NPC nPC22 = this;
					nPC22.gfxOffY = nPC22.gfxOffY + single13 * this.stepSpeed;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				if (this.gfxOffY > 16f)
				{
					this.gfxOffY = 16f;
				}
				if (this.gfxOffY < -16f)
				{
					this.gfxOffY = -16f;
				}
				this.TryPortalJumping();
				this.IdleSounds();
				this.AI();
				if (Main.netMode != 2 && this.extraValue > 0f)
				{
					int num18 = 244;
					float single14 = 30f;
					if (this.extraValue >= 1000000f)
					{
						num18 = 247;
						single14 = single14 * 0.25f;
					}
					else if (this.extraValue >= 10000f)
					{
						num18 = 246;
						single14 = single14 * 0.5f;
					}
					else if (this.extraValue >= 100f)
					{
						num18 = 245;
						single14 = single14 * 0.75f;
					}
					if (Main.rand.Next((int)single14) == 0)
					{
						Vector2 vector22 = this.position;
						int num19 = this.width;
						int num20 = this.height;
						color = new Color();
						int num21 = Dust.NewDust(vector22, num19, num20, num18, 0f, 0f, 254, color, 0.25f);
						Dust dust3 = Main.dust[num21];
						dust3.velocity = dust3.velocity * 0.1f;
					}
				}
				for (int o = 0; o < 256; o++)
				{
					if (this.immune[o] > 0)
					{
						this.immune[o] = this.immune[o] - 1;
					}
				}
				if (!this.noGravity && !this.noTileCollide)
				{
					int x1 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int y2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (x1 > 0 && y2 > 0 && Main.tile[x1, y2] == null)
					{
						NPC.gravity = 0f;
						this.velocity.X = 0f;
						this.velocity.Y = 0f;
					}
				}
				if (!this.noGravity)
				{
					this.velocity.Y = this.velocity.Y + NPC.gravity;
					if (this.velocity.Y > single11)
					{
						this.velocity.Y = single11;
					}
				}
				if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
				{
					this.velocity.X = 0f;
				}
				if (Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || this.type == 55 || this.type == 74 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 303 || this.type == 355 || this.type == 356 || this.type == 358 || this.type == 359 || this.type == 360 || this.type == 361 || this.type == 362 || this.type == 363 || this.type == 364 || this.type == 365 || this.type == 366 || this.type == 367 || this.type == 377 || this.type == 357 || this.type == 374 || this.type >= 442 && this.type <= 448 && this.type != 447) || this.type == 538 || this.type == 539 || this.type == 337 || this.type >= 484 && this.type <= 487)
				{
					if (this.townNPC)
					{
						this.CheckDrowning();
					}
					if (this.life < this.lifeMax)
					{
						NPC nPC23 = this;
						nPC23.friendlyRegen = nPC23.friendlyRegen + 1;
						if (this.dryadWard)
						{
							NPC nPC24 = this;
							nPC24.friendlyRegen = nPC24.friendlyRegen + 10;
						}
						if (this.friendlyRegen > 180)
						{
							this.friendlyRegen = 0;
							NPC nPC25 = this;
							nPC25.life = nPC25.life + 1;
							this.netUpdate = true;
						}
					}
					if (this.immune[255] == 0)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						for (int p = 0; p < 200; p++)
						{
							if (Main.npc[p].active && !Main.npc[p].friendly && Main.npc[p].damage > 0)
							{
								Rectangle rectangle1 = new Rectangle((int)Main.npc[p].position.X, (int)Main.npc[p].position.Y, Main.npc[p].width, Main.npc[p].height);
								if (rectangle.Intersects(rectangle1) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[p].netID)))
								{
									double num22 = 0;
									int num23 = Main.npc[p].damage;
									int num24 = 6;
									int num25 = 1;
									if (Main.npc[p].position.X + (float)(Main.npc[p].width / 2) > this.position.X + (float)(this.width / 2))
									{
										num25 = -1;
									}
									num22 = Main.npc[i].StrikeNPCNoInteraction(num23, (float)num24, num25, false, false, false);
									if (Main.netMode != 0)
									{
										NetMessage.SendData(28, -1, -1, "", i, (float)num23, (float)num24, (float)num25, 0, 0, 0);
									}
									this.netUpdate = true;
									this.immune[255] = 30;
									if (this.dryadWard)
									{
										num23 = (int)num22 / 3;
										num24 = 6;
										num25 = num25 * -1;
										Main.npc[p].StrikeNPCNoInteraction(num23, (float)num24, num25, false, false, false);
										if (Main.netMode != 0)
										{
											NetMessage.SendData(28, -1, -1, "", p, (float)num23, (float)num24, (float)num25, 0, 0, 0);
										}
										Main.npc[p].netUpdate = true;
										Main.npc[p].immune[255] = 30;
									}
								}
							}
						}
					}
				}
				if (this.noTileCollide)
				{
					this.oldPosition = this.position;
					this.oldDirection = this.direction;
					NPC nPC26 = this;
					nPC26.position = nPC26.position + this.velocity;
				}
				else
				{
					float y3 = this.velocity.Y;
					Vector4 vector4 = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
					this.position.X = vector4.X;
					this.position.Y = vector4.Y;
					this.velocity.X = vector4.Z;
					this.velocity.Y = vector4.W;
					bool flag2 = Collision.LavaCollision(this.position, this.width, this.height);
					if (flag2)
					{
						this.lavaWet = true;
						if (!this.lavaImmune && !this.dontTakeDamage && Main.netMode != 1 && this.immune[255] == 0)
						{
							this.AddBuff(24, 420, false);
							this.immune[255] = 30;
							this.StrikeNPCNoInteraction(50, 0f, 0, false, false, false);
							if (Main.netMode == 2 && Main.netMode != 0)
							{
								NetMessage.SendData(28, -1, -1, "", this.whoAmI, 50f, 0f, 0f, 0, 0, 0);
							}
						}
					}
					bool flag3 = false;
					if (this.type == 72 || this.aiStyle == 21 || this.aiStyle == 67 || this.type == 376)
					{
						flag3 = false;
						this.wetCount = 0;
						flag2 = false;
					}
					else
					{
						flag3 = Collision.WetCollision(this.position, this.width, this.height);
						if (Collision.honey)
						{
							this.honeyWet = true;
						}
					}
					if (flag3)
					{
						if (this.onFire && !this.lavaWet && Main.netMode != 1)
						{
							for (int q = 0; q < 5; q++)
							{
								if (this.buffType[q] == 24)
								{
									this.DelBuff(q);
								}
							}
						}
						if (!this.wet && this.wetCount == 0)
						{
							this.wetCount = 10;
							if (flag2)
							{
								for (int r1 = 0; r1 < 10; r1++)
								{
									Vector2 vector23 = new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f);
									color = new Color();
									int num26 = Dust.NewDust(vector23, this.width + 12, 24, 35, 0f, 0f, 0, color, 1f);
									Main.dust[num26].velocity.Y = Main.dust[num26].velocity.Y - 1.5f;
									Main.dust[num26].velocity.X = Main.dust[num26].velocity.X * 2.5f;
									Main.dust[num26].scale = 1.3f;
									Main.dust[num26].alpha = 100;
									Main.dust[num26].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
							else if (!this.honeyWet)
							{
								for (int s = 0; s < 30; s++)
								{
									Vector2 vector24 = new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f);
									int num27 = Dust.dustWater();
									color = new Color();
									int num28 = Dust.NewDust(vector24, this.width + 12, 24, num27, 0f, 0f, 0, color, 1f);
									Main.dust[num28].velocity.Y = Main.dust[num28].velocity.Y - 4f;
									Main.dust[num28].velocity.X = Main.dust[num28].velocity.X * 2.5f;
									Dust dust4 = Main.dust[num28];
									dust4.scale = dust4.scale * 0.8f;
									Main.dust[num28].alpha = 100;
									Main.dust[num28].noGravity = true;
								}
								if (this.type != 376 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && this.type != 445 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
								}
							}
							else
							{
								for (int t = 0; t < 10; t++)
								{
									Vector2 vector25 = new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f);
									color = new Color();
									int num29 = Dust.NewDust(vector25, this.width + 12, 24, 152, 0f, 0f, 0, color, 1f);
									Main.dust[num29].velocity.Y = Main.dust[num29].velocity.Y - 1f;
									Main.dust[num29].velocity.X = Main.dust[num29].velocity.X * 2.5f;
									Main.dust[num29].scale = 1.3f;
									Main.dust[num29].alpha = 100;
									Main.dust[num29].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
						this.wet = true;
					}
					else if (this.wet)
					{
						this.velocity.X = this.velocity.X * 0.5f;
						this.wet = false;
						if (this.wetCount == 0)
						{
							this.wetCount = 10;
							if (this.lavaWet)
							{
								for (int u = 0; u < 10; u++)
								{
									Vector2 vector26 = new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f);
									color = new Color();
									int num30 = Dust.NewDust(vector26, this.width + 12, 24, 35, 0f, 0f, 0, color, 1f);
									Main.dust[num30].velocity.Y = Main.dust[num30].velocity.Y - 1.5f;
									Main.dust[num30].velocity.X = Main.dust[num30].velocity.X * 2.5f;
									Main.dust[num30].scale = 1.3f;
									Main.dust[num30].alpha = 100;
									Main.dust[num30].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
							else if (!this.honeyWet)
							{
								for (int v = 0; v < 30; v++)
								{
									Vector2 vector27 = new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f);
									int num31 = Dust.dustWater();
									color = new Color();
									int num32 = Dust.NewDust(vector27, this.width + 12, 24, num31, 0f, 0f, 0, color, 1f);
									Main.dust[num32].velocity.Y = Main.dust[num32].velocity.Y - 4f;
									Main.dust[num32].velocity.X = Main.dust[num32].velocity.X * 2.5f;
									Dust dust5 = Main.dust[num32];
									dust5.scale = dust5.scale * 0.8f;
									Main.dust[num32].alpha = 100;
									Main.dust[num32].noGravity = true;
								}
								if (this.type != 376 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && this.type != 445 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
								}
							}
							else
							{
								for (int w = 0; w < 10; w++)
								{
									Vector2 vector28 = new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f);
									color = new Color();
									int num33 = Dust.NewDust(vector28, this.width + 12, 24, 152, 0f, 0f, 0, color, 1f);
									Main.dust[num33].velocity.Y = Main.dust[num33].velocity.Y - 1f;
									Main.dust[num33].velocity.X = Main.dust[num33].velocity.X * 2.5f;
									Main.dust[num33].scale = 1.3f;
									Main.dust[num33].alpha = 100;
									Main.dust[num33].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 300 && this.type != 59 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
					}
					if (!this.wet)
					{
						this.lavaWet = false;
						this.honeyWet = false;
					}
					if (this.wetCount > 0)
					{
						NPC nPC27 = this;
						nPC27.wetCount = (byte)(nPC27.wetCount - 1);
					}
					bool flag4 = false;
					if (this.type == 2 || this.type == -43 || this.type == 317 || this.type == 318 || this.type == 133)
					{
						flag4 = true;
					}
					if (this.aiStyle == 10)
					{
						flag4 = true;
					}
					if (this.aiStyle == 40)
					{
						flag4 = true;
					}
					if (this.type == 467)
					{
						flag4 = true;
					}
					if (this.type == 477)
					{
						flag4 = true;
					}
					if (this.aiStyle == 14)
					{
						flag4 = true;
					}
					if (this.type == 173)
					{
						flag4 = true;
					}
					if (this.type == 469 && this.ai[2] == 1f)
					{
						flag4 = true;
					}
					if (this.aiStyle == 3 && this.directionY == 1)
					{
						flag4 = true;
					}
					if (this.type == 210 || this.type == 211)
					{
						flag4 = true;
					}
					if (this.type == 50 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag4 = true;
					}
					if (this.type == 247 || this.type == 248)
					{
						flag4 = true;
					}
					if (this.type == 245 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag4 = true;
					}
					if (this.type == 418)
					{
						flag4 = true;
					}
					if (this.aiStyle == 87 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag4 = true;
					}
					this.oldVelocity = this.velocity;
					this.collideX = false;
					this.collideY = false;
					int num34 = 16;
					if (this.aiStyle == 7)
					{
						bool flag5 = false;
						if (!Main.dayTime || Main.invasionType > 0 || Main.eclipse)
						{
							flag5 = true;
						}
						else
						{
							int y4 = (int)(this.position.Y + (float)this.height) / 16;
							if (this.homeTileY - y4 > num34)
							{
								flag4 = true;
							}
						}
						if (flag5 && (this.position.Y + (float)this.height - 8f) / 16f < (float)(this.homeTileY - 1))
						{
							flag4 = true;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 230 && this.wet)
						{
							int num35 = this.direction;
							Vector2 vector29 = this.velocity;
							this.Transform(55);
							this.direction = num35;
							this.velocity = vector29;
							this.wet = true;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = 0f;
							}
						}
						else if (this.type == 55 && !this.wet && Main.raining)
						{
							int num36 = this.direction;
							Vector2 vector210 = this.velocity;
							this.Transform(230);
							this.direction = num36;
							this.velocity = vector210;
							this.homeTileX = (int)(this.position.X / 16f) + 10 * this.direction;
						}
					}
					Vector2 y5 = this.position;
					int num37 = this.width;
					int num38 = this.height;
					if (this.type == 243)
					{
						num38 = 90;
					}
					if (this.type == 290)
					{
						num38 = 40;
					}
					if (this.type == 351)
					{
						num38 = 40;
					}
					if (this.type == 482)
					{
						num38 = 40;
					}
					if (this.type == 351 || this.type == 343 || this.type == 348 || this.type == 349)
					{
						num38 = 40;
					}
					if (this.type == 391)
					{
						int num39 = 0;
						while (num39 < 200)
						{
							if (!Main.npc[num39].active || Main.npc[num39].type != 390 || Main.npc[num39].ai[0] != (float)this.whoAmI)
							{
								num39++;
							}
							else
							{
								num38 = 62;
								break;
							}
						}
					}
					if (this.type == 415)
					{
						int num40 = 0;
						while (num40 < 200)
						{
							if (!Main.npc[num40].active || Main.npc[num40].type != 416 || Main.npc[num40].ai[0] != (float)this.whoAmI)
							{
								num40++;
							}
							else
							{
								num38 = 62;
								break;
							}
						}
					}
					if (num38 != this.height)
					{
						y5.Y = y5.Y + (float)(this.height - num38);
					}
					if (!this.wet)
					{
						if (this.type == 72)
						{
							Vector2 x2 = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
							int num41 = 12;
							int num42 = 12;
							x2.X = x2.X - (float)(num41 / 2);
							x2.Y = x2.Y - (float)(num42 / 2);
							this.velocity = Collision.noSlopeCollision(x2, this.velocity, num41, num42, true, true);
						}
						else if (this.type == 405 || this.type == 406)
						{
							this.velocity = Collision.TileCollision(y5, this.velocity, num37, num38, flag4, flag4, 1);
							if (this.velocity != this.oldVelocity)
							{
								if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
								{
									this.velocity.X = -this.oldVelocity.X * 0.8f;
								}
								if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
								{
									this.velocity.Y = -this.oldVelocity.Y * 0.8f;
								}
							}
						}
						else if (this.type != 417)
						{
							this.velocity = Collision.TileCollision(y5, this.velocity, num37, num38, flag4, flag4, 1);
						}
						else
						{
							this.velocity = Collision.TileCollision(y5, this.velocity, num37, num38, flag4, flag4, 1);
							if (this.ai[0] == 6f && this.velocity != this.oldVelocity)
							{
								this.ai[2] = this.ai[2] - 1f;
								this.ai[3] = 1f;
								if (this.ai[2] > 0f)
								{
									if (this.velocity.X != 0f && this.velocity.X != this.oldVelocity.X)
									{
										this.velocity.X = -this.oldVelocity.X * 0.9f;
										NPC nPC28 = this;
										nPC28.direction = nPC28.direction * -1;
									}
									if (this.velocity.Y != 0f && this.velocity.Y != this.oldVelocity.Y)
									{
										this.velocity.Y = -this.oldVelocity.Y * 0.9f;
									}
								}
							}
						}
						if (Collision.up)
						{
							this.velocity.Y = 0.01f;
						}
						if (this.oldVelocity.X != this.velocity.X)
						{
							this.collideX = true;
						}
						if (this.oldVelocity.Y != this.velocity.Y)
						{
							this.collideY = true;
						}
						this.oldPosition = this.position;
						this.oldDirection = this.direction;
						NPC nPC29 = this;
						nPC29.position = nPC29.position + this.velocity;
					}
					else if (!this.honeyWet)
					{
						Vector2 vector211 = this.velocity;
						this.velocity = Collision.TileCollision(y5, this.velocity, num37, num38, flag4, flag4, 1);
						if (Collision.up)
						{
							this.velocity.Y = 0.01f;
						}
						Vector2 x3 = this.velocity * 0.5f;
						if (this.velocity.X != vector211.X)
						{
							x3.X = this.velocity.X;
							this.collideX = true;
						}
						if (this.velocity.Y != vector211.Y)
						{
							x3.Y = this.velocity.Y;
							this.collideY = true;
						}
						this.oldPosition = this.position;
						this.oldDirection = this.direction;
						NPC nPC30 = this;
						nPC30.position = nPC30.position + x3;
					}
					else
					{
						Vector2 vector212 = this.velocity;
						this.velocity = Collision.TileCollision(y5, this.velocity, num37, num38, flag4, flag4, 1);
						if (Collision.up)
						{
							this.velocity.Y = 0.01f;
						}
						Vector2 x4 = this.velocity * 0.25f;
						if (this.velocity.X != vector212.X)
						{
							x4.X = this.velocity.X;
							this.collideX = true;
						}
						if (this.velocity.Y != vector212.Y)
						{
							x4.Y = this.velocity.Y;
							this.collideY = true;
						}
						this.oldPosition = this.position;
						this.oldDirection = this.direction;
						NPC nPC31 = this;
						nPC31.position = nPC31.position + x4;
					}
					if (this.aiStyle == 67)
					{
						Vector4 vector41 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, false);
						if (this.position.X != vector41.X || this.position.Y != vector41.Y)
						{
							if (this.ai[2] == 0f && this.velocity.Y > 0f && (this.direction < 0 && this.rotation == 1.57f && this.spriteDirection == 1 || this.direction > 0 && this.rotation == 4.71f && this.spriteDirection == -1))
							{
								NPC nPC32 = this;
								nPC32.direction = nPC32.direction * -this.direction;
							}
							this.ai[2] = 2f;
							this.directionY = 1;
							this.rotation = 0f;
						}
						this.position.X = vector41.X;
						this.position.Y = vector41.Y;
						this.velocity.X = vector41.Z;
						this.velocity.Y = vector41.W;
					}
					else if (this.type != 72 && this.type != 247 && this.type != 248)
					{
						if (flag4)
						{
							this.stairFall = true;
						}
						if (this.aiStyle == 7)
						{
							int x5 = (int)base.Center.X / 16;
							int y6 = (int)this.position.Y / 16;
							if (WorldGen.InWorld(x5, y6, 0))
							{
								bool flag6 = false;
								if (Main.tile[x5, y6] != null && Main.tile[x5, y6].active() && Main.tileSolid[Main.tile[x5, y6].type])
								{
									flag6 = true;
								}
								if (!Main.dayTime || Main.eclipse)
								{
									flag6 = true;
								}
								else
								{
									int y7 = (int)(this.position.Y + (float)this.height) / 16;
									if (this.homeTileY - y7 > num34)
									{
										flag6 = true;
									}
								}
								if (flag6)
								{
									if ((this.position.Y + (float)this.height - 8f) / 16f >= (float)this.homeTileY)
									{
										this.stairFall = false;
									}
									else
									{
										this.stairFall = true;
									}
								}
							}
						}
						Vector4 vector42 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, this.stairFall);
						if (Collision.stairFall)
						{
							this.stairFall = true;
						}
						else if (!flag4)
						{
							this.stairFall = false;
						}
						if (Collision.stair && Math.Abs(vector42.Y - this.position.Y) > 8f)
						{
							NPC y8 = this;
							y8.gfxOffY = y8.gfxOffY - (vector42.Y - this.position.Y);
							this.stepSpeed = 2f;
						}
						this.position.X = vector42.X;
						this.position.Y = vector42.Y;
						this.velocity.X = vector42.Z;
						this.velocity.Y = vector42.W;
					}
				}
				if (Main.netMode != 1 && !this.noTileCollide && this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2) && (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 303 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367 || this.type >= 442 && this.type <= 448))
				{
					this.ai[0] = 1f;
					this.ai[1] = 400f;
					this.ai[2] = 0f;
				}
				this.FindFrame();
				if (this.type == 439 || this.type == 440)
				{
					if (this.localAI[3] <= 0f)
					{
						this.localAI[3] = 2f;
						for (int x6 = (int)this.oldPos.Length - 1; x6 > 0; x6--)
						{
							this.oldPos[x6] = this.oldPos[x6 - 1];
						}
						this.oldPos[0] = this.position;
					}
					this.localAI[3] = this.localAI[3] - 1f;
				}
				if (this.type == 370 || this.type == 372 || this.type == 373 || this.type == 396 || this.type == 400 || this.type == 401)
				{
					for (int y9 = (int)this.oldPos.Length - 1; y9 > 0; y9--)
					{
						this.oldPos[y9] = this.oldPos[y9 - 1];
					}
					this.oldPos[0] = this.position;
				}
				if (this.aiStyle == 87)
				{
					if ((int)this.ai[0] == 4 || this.ai[0] == 5f || this.ai[0] == 6f)
					{
						for (int a = (int)this.oldPos.Length - 1; a > 0; a--)
						{
							this.oldPos[a] = this.oldPos[a - 1];
							this.oldRot[a] = this.oldRot[a - 1];
						}
						this.oldPos[0] = this.position;
						this.oldRot[0] = this.rotation;
					}
					else
					{
						for (int b = (int)this.oldPos.Length - 1; b >= 0; b--)
						{
							this.oldPos[b] = this.position;
							this.oldRot[b] = this.rotation;
						}
					}
				}
				if (this.type == 4 || this.type == 471 || this.type == 477 || this.type == 479)
				{
					for (int c = (int)this.oldPos.Length - 1; c > 0; c--)
					{
						this.oldPos[c] = this.oldPos[c - 1];
						this.oldRot[c] = this.oldRot[c - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				if (this.type == 120 || this.type == 137 || this.type == 138)
				{
					for (int d = (int)this.oldPos.Length - 1; d > 0; d--)
					{
						this.oldPos[d] = this.oldPos[d - 1];
						Lighting.AddLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.3f, 0f, 0.2f);
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 94)
				{
					for (int e = (int)this.oldPos.Length - 1; e > 0; e--)
					{
						this.oldPos[e] = this.oldPos[e - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 125 || this.type == 126 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131 || this.type == 139 || this.type == 140 || this.type == 407 || this.type == 420 || this.type == 425 || this.type == 427 || this.type == 426 || this.type == 509 || this.type == 516)
				{
					for (int f = (int)this.oldPos.Length - 1; f > 0; f--)
					{
						this.oldPos[f] = this.oldPos[f - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 402 || this.type == 417 || this.type == 419 || this.type == 418 || this.type == 519 || this.type == 521 || this.type == 522)
				{
					for (int g = (int)this.oldPos.Length - 1; g > 0; g--)
					{
						this.oldPos[g] = this.oldPos[g - 1];
						this.oldRot[g] = this.oldRot[g - 1];
					}
					this.oldPos[0] = this.position;
					this.oldRot[0] = this.rotation;
				}
				if (!this.active)
				{
					this.netUpdate = true;
				}
				if (Main.netMode == 2)
				{
					if (Main.npcStreamSpeed > 0 && !this.townNPC && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 1f)
					{
						NPC nPC33 = this;
						nPC33.netStream = (byte)(nPC33.netStream + 1);
						if (this.netStream > Main.npcStreamSpeed)
						{
							for (int h = 0; h < 255; h++)
							{
								if (Main.player[h].active)
								{
									float single15 = Math.Abs(base.Center.X - Main.player[h].Center.X) + Math.Abs(base.Center.Y - Main.player[h].Center.Y);
									if (single15 < 250f)
									{
										this.streamPlayer[h] = (byte)(this.streamPlayer[h] - 8);
									}
									else if (single15 < 500f)
									{
										this.streamPlayer[h] = (byte)(this.streamPlayer[h] - 4);
									}
									else if (single15 < 1000f)
									{
										this.streamPlayer[h] = (byte)(this.streamPlayer[h] - 2);
									}
									else if (single15 < 1500f)
									{
										this.streamPlayer[h] = (byte)(this.streamPlayer[h] - 1);
									}
									if (this.streamPlayer[h] <= 0)
									{
										this.streamPlayer[h] = 8;
										NetMessage.SendData(23, h, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
									}
								}
							}
						}
					}
					if (this.townNPC)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate2)
					{
						this.netUpdate = true;
					}
					if (!this.active)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate)
					{
						if (this.boss)
						{
							Vector2 vector213 = this.oldPosition - this.position;
							if (this.netSpam > 15)
							{
								this.netUpdate2 = true;
							}
							else
							{
								NPC nPC34 = this;
								nPC34.netSpam = nPC34.netSpam + 5;
								NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
								this.netUpdate2 = false;
							}
						}
						else if (this.netSpam > 90)
						{
							this.netUpdate2 = true;
						}
						else
						{
							NPC nPC35 = this;
							nPC35.netSpam = nPC35.netSpam + 30;
							NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
							this.netUpdate2 = false;
						}
					}
					if (this.netSpam > 0)
					{
						NPC nPC36 = this;
						nPC36.netSpam = nPC36.netSpam - 1;
					}
					if (this.active && this.townNPC && NPC.TypeToNum(this.type) != -1)
					{
						if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
						{
							int num43 = 0;
							if (this.homeless)
							{
								num43 = 1;
							}
							NetMessage.SendData(60, -1, -1, "", i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)num43, 0, 0, 0);
						}
						this.oldHomeless = this.homeless;
						this.oldHomeTileX = this.homeTileX;
						this.oldHomeTileY = this.homeTileY;
					}
				}
				this.CheckActive();
				this.netUpdate = false;
				this.justHit = false;
			}
		}
	}
}